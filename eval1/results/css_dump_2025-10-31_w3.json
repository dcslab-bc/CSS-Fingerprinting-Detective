{
  "page": "https://www.w3.org/",
  "timestamp": 1761886478968,
  "sheets": [
    {
      "href": "https://www.w3.org/assets/website-2021/styles/core.css?ver=1.5",
      "rules": 927,
      "rulesList": [
        {
          "type": "CSSFontFaceRule",
          "selector": "",
          "cssText": "@font-face { font-display: fallback; font-family: \"Noto Sans\"; font-style: normal; font-weight: 400; src: url(\"../fonts/notosans/notosans-regular.woff2\") format(\"woff2\"), url(\"../fonts/notosans/notosans-regular.woff\") format(\"woff\"); }",
          "urls": [
            "../fonts/notosans/notosans-regular.woff2",
            "../fonts/notosans/notosans-regular.woff"
          ],
          "group": "",
          "sources": [],
          "sinks": [
            {
              "reason": "url_sink",
              "urls": [
                "../fonts/notosans/notosans-regular.woff2",
                "../fonts/notosans/notosans-regular.woff"
              ]
            }
          ],
          "inheritedSources": []
        },
        {
          "type": "CSSFontFaceRule",
          "selector": "",
          "cssText": "@font-face { font-display: fallback; font-family: \"Noto Sans\"; font-style: italic; font-weight: 400; src: url(\"../fonts/notosans/notosans-italic.woff2\") format(\"woff2\"), url(\"../fonts/notosans/notosans-italic.woff\") format(\"woff\"); }",
          "urls": [
            "../fonts/notosans/notosans-italic.woff2",
            "../fonts/notosans/notosans-italic.woff"
          ],
          "group": "",
          "sources": [],
          "sinks": [
            {
              "reason": "url_sink",
              "urls": [
                "../fonts/notosans/notosans-italic.woff2",
                "../fonts/notosans/notosans-italic.woff"
              ]
            }
          ],
          "inheritedSources": []
        },
        {
          "type": "CSSFontFaceRule",
          "selector": "",
          "cssText": "@font-face { font-display: fallback; font-family: \"Noto Sans\"; font-style: normal; font-weight: 600; src: url(\"../fonts/notosans/notosans-bold.woff2\") format(\"woff2\"), url(\"../fonts/notosans/notosans-bold.woff\") format(\"woff\"); }",
          "urls": [
            "../fonts/notosans/notosans-bold.woff2",
            "../fonts/notosans/notosans-bold.woff"
          ],
          "group": "",
          "sources": [],
          "sinks": [
            {
              "reason": "url_sink",
              "urls": [
                "../fonts/notosans/notosans-bold.woff2",
                "../fonts/notosans/notosans-bold.woff"
              ]
            }
          ],
          "inheritedSources": []
        },
        {
          "type": "CSSFontFaceRule",
          "selector": "",
          "cssText": "@font-face { font-display: fallback; font-family: \"Noto Sans\"; font-style: italic; font-weight: 600; src: url(\"../fonts/notosans/notosans-bolditalic.woff2\") format(\"woff2\"), url(\"../fonts/notosans/notosans-bolditalic.woff\") format(\"woff\"); }",
          "urls": [
            "../fonts/notosans/notosans-bolditalic.woff2",
            "../fonts/notosans/notosans-bolditalic.woff"
          ],
          "group": "",
          "sources": [],
          "sinks": [
            {
              "reason": "url_sink",
              "urls": [
                "../fonts/notosans/notosans-bolditalic.woff2",
                "../fonts/notosans/notosans-bolditalic.woff"
              ]
            }
          ],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "html",
          "cssText": "html { line-height: 1.15; text-size-adjust: 100%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "body",
          "cssText": "body { margin: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "main",
          "cssText": "main { display: block; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "h1",
          "cssText": "h1 { font-size: 2em; margin: 0.67em 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "hr",
          "cssText": "hr { box-sizing: content-box; height: 0px; overflow: visible; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "pre",
          "cssText": "pre { font-family: monospace, monospace; font-size: 1em; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "a, .heading-anchor",
          "cssText": "a, .heading-anchor { background-color: transparent; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "abbr[title]",
          "cssText": "abbr[title] { border-bottom: none; text-decoration: underline dotted; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "b, strong",
          "cssText": "b, strong { font-weight: bolder; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "code, kbd, samp",
          "cssText": "code, kbd, samp { font-family: monospace, monospace; font-size: 1em; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "small",
          "cssText": "small { font-size: 80%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "sub, sup",
          "cssText": "sub, sup { font-size: 75%; line-height: 0; position: relative; vertical-align: baseline; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "sub",
          "cssText": "sub { bottom: -0.25em; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "sup",
          "cssText": "sup { top: -0.5em; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "img",
          "cssText": "img { border-style: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "button, input, optgroup, select, textarea",
          "cssText": "button, input, optgroup, select, textarea { font-family: inherit; font-size: 100%; line-height: 1.15; margin: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "button, input",
          "cssText": "button, input { overflow: visible; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "button, select",
          "cssText": "button, select { text-transform: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "button, [type=\"button\"], [type=\"reset\"], [type=\"submit\"]",
          "cssText": "button, [type=\"button\"], [type=\"reset\"], [type=\"submit\"] { appearance: button; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "fieldset",
          "cssText": "fieldset { padding: 0.35em 0.75em 0.625em; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "legend",
          "cssText": "legend { box-sizing: border-box; color: inherit; display: table; max-width: 100%; padding: 0px; white-space: normal; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "progress",
          "cssText": "progress { vertical-align: baseline; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "textarea",
          "cssText": "textarea { overflow: auto; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[type=\"checkbox\"], [type=\"radio\"]",
          "cssText": "[type=\"checkbox\"], [type=\"radio\"] { box-sizing: border-box; padding: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[type=\"number\"]::-webkit-inner-spin-button, [type=\"number\"]::-webkit-outer-spin-button",
          "cssText": "[type=\"number\"]::-webkit-inner-spin-button, [type=\"number\"]::-webkit-outer-spin-button { height: auto; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[type=\"search\"]",
          "cssText": "[type=\"search\"] { appearance: textfield; outline-offset: -2px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[type=\"search\"]::-webkit-search-decoration",
          "cssText": "[type=\"search\"]::-webkit-search-decoration { appearance: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "::-webkit-file-upload-button",
          "cssText": "::-webkit-file-upload-button { appearance: button; font: inherit; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "details",
          "cssText": "details { display: block; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "summary",
          "cssText": "summary { display: list-item; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "template",
          "cssText": "template { display: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[hidden]",
          "cssText": "[hidden] { display: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (prefers-reduced-motion: reduce), (update: slow) {\n  *, ::before, ::after { animation-delay: -1ms !important; animation-duration: 1ms !important; animation-iteration-count: 1 !important; background-attachment: initial !important; scroll-behavior: auto !important; transition-duration: 0.001ms !important; transition-delay: 0s !important; }\n}",
          "urls": [],
          "group": "screen and (prefers-reduced-motion: reduce), (update: slow)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "prefers-reduced-motion",
              "semanticGroup": "user preference",
              "claim": "reduced motion preference",
              "excerpt": "screen and (prefers-reduced-motion: reduce), (update: slow)",
              "requiresEcho": true,
              "echoTokens": [
                "prefers-reduced-motion",
                "reduce",
                "update",
                "slow"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "*, ::before, ::after",
          "cssText": "*, ::before, ::after { animation-delay: -1ms !important; animation-duration: 1ms !important; animation-iteration-count: 1 !important; background-attachment: initial !important; scroll-behavior: auto !important; transition-duration: 0.001ms !important; transition-delay: 0s !important; }",
          "urls": [],
          "group": "screen and (prefers-reduced-motion: reduce), (update: slow)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "prefers-reduced-motion",
              "semanticGroup": "user preference",
              "claim": "reduced motion preference",
              "excerpt": "screen and (prefers-reduced-motion: reduce), (update: slow)",
              "requiresEcho": true,
              "echoTokens": [
                "prefers-reduced-motion",
                "reduce",
                "update",
                "slow"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": "blockquote",
          "cssText": "blockquote { margin-inline: 1.5625rem; padding: 0.625rem; position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "blockquote::before",
          "cssText": "blockquote::before { background-color: rgb(202, 201, 201); content: \"\"; height: 100%; left: -0.1875rem; position: absolute; top: 0px; width: 0.1875rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "blockquote > * + *",
          "cssText": "blockquote > * + * { margin-top: 1rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "blockquote > :first-child",
          "cssText": "blockquote > :first-child { margin-top: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "blockquote cite",
          "cssText": "blockquote cite { color: rgb(17, 17, 17); font-size: 1rem; font-style: normal; font-weight: bold; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[dir=\"rtl\"] blockquote::before",
          "cssText": "[dir=\"rtl\"] blockquote::before { left: auto; right: -0.1875rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "html",
          "cssText": "html { height: 100%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "body",
          "cssText": "body { background-color: rgb(255, 255, 255); color: rgb(17, 17, 17); min-height: 100%; overflow-x: hidden; -webkit-font-smoothing: antialiased; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".grid-wrap",
          "cssText": ".grid-wrap { display: grid; grid-template-columns: 100%; grid-template-rows: 1fr auto; min-height: 100vh; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "*, ::before, ::after",
          "cssText": "*, ::before, ::after { box-sizing: border-box; font-family: inherit; margin: 0px; overflow-wrap: break-word; padding: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "button, .button",
          "cssText": "button, .button { background-color: rgb(0, 90, 156); border: 2px solid rgb(0, 90, 156); border-radius: 1.5rem; color: rgb(255, 255, 255); display: inline-block; font-size: 0.875rem; font-weight: 600; line-height: 1.5; outline: transparent solid 2px; outline-offset: -2px; padding: 0.6875rem 1.5rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "button:hover, .button:hover",
          "cssText": "button:hover, .button:hover { background-color: rgb(0, 42, 86); border-color: rgb(0, 42, 86); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "button:focus, button:active, .button:focus, .button:active",
          "cssText": "button:focus, button:active, .button:focus, .button:active { color: rgb(0, 0, 0); background-color: rgb(249, 220, 74); border-color: rgb(0, 0, 0); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "button:not([type=\"submit\"])",
          "cssText": "button:not([type=\"submit\"]) { text-align: start; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".button",
          "cssText": ".button { text-decoration: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "button.button, input[type=\"submit\"].button",
          "cssText": "button.button, input[type=\"submit\"].button { text-decoration: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".button--wide",
          "cssText": ".button--wide { text-align: center; width: 100%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".button--alt",
          "cssText": ".button--alt { background-color: transparent; color: rgb(0, 90, 156); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".button--alt:hover",
          "cssText": ".button--alt:hover { background-color: rgb(203, 224, 251); color: rgb(0, 42, 86); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".button--alt:focus, .button--alt:active",
          "cssText": ".button--alt:focus, .button--alt:active { background-color: rgb(249, 220, 74); border-width: 3px; color: rgb(0, 0, 0); padding: 0.625rem 1.4375rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".button--ghost",
          "cssText": ".button--ghost { background-color: transparent; border-color: transparent; border-radius: 0px; color: rgb(0, 0, 0); font-weight: normal; padding-left: 0px; padding-right: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".button--ghost:hover",
          "cssText": ".button--ghost:hover { background-color: transparent; border-color: transparent; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".button[disabled], .button.js-disabled",
          "cssText": ".button[disabled], .button.js-disabled { background-color: rgb(202, 201, 201); border-color: rgb(202, 201, 201); box-shadow: none; color: rgb(48, 48, 48); cursor: not-allowed; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".button[disabled]:hover, .button[disabled]:focus, .button[disabled]:active, .button.js-disabled:hover, .button.js-disabled:focus, .button.js-disabled:active",
          "cssText": ".button[disabled]:hover, .button[disabled]:focus, .button[disabled]:active, .button.js-disabled:hover, .button.js-disabled:focus, .button.js-disabled:active { background-color: rgb(202, 201, 201); color: rgb(48, 48, 48); outline: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ":focus",
          "cssText": ":focus { outline: transparent solid 2px; outline-offset: -2px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "main:focus, #main:focus, [tabindex=\"-1\"]:focus",
          "cssText": "main:focus, #main:focus, [tabindex=\"-1\"]:focus { outline: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "fieldset",
          "cssText": "fieldset { border: 0px; margin: 0px; min-width: 0px; padding: 0.01em 0px 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".field-group + .field-group",
          "cssText": ".field-group + .field-group { margin-top: 2.5rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "form > * + *, .field-group > * + *",
          "cssText": "form > * + *, .field-group > * + * { margin-top: 1.75rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".input-group",
          "cssText": ".input-group { display: flex; align-items: center; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".input-group > * + *",
          "cssText": ".input-group > * + * { margin-left: 1.875rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[dir=\"rtl\"] .input-group > * + *",
          "cssText": "[dir=\"rtl\"] .input-group > * + * { margin-left: 0px; margin-right: 1.875rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".field-legend",
          "cssText": ".field-legend { font-size: 1.125rem; line-height: 1.5; font-weight: bold; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".field",
          "cssText": ".field { max-width: 41.25rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "label, .field-label, .field-hint, .field-error-msg, .faux-label",
          "cssText": "label, .field-label, .field-hint, .field-error-msg, .faux-label { display: block; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".field-label, .faux-label",
          "cssText": ".field-label, .faux-label { margin-bottom: 0.25rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".field-label, .group-legend",
          "cssText": ".field-label, .group-legend { font-weight: bold; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".field-label + .field-hint, .group-legend + .field-hint",
          "cssText": ".field-label + .field-hint, .group-legend + .field-hint { margin-top: 0.25rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".field-hint",
          "cssText": ".field-hint { font-size: 0.9375rem; line-height: 1.5; color: rgb(84, 84, 84); margin-bottom: 0.25rem; max-width: 41.25rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".required",
          "cssText": ".required { color: rgb(84, 84, 84); font-weight: normal; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "textarea, [type=\"date\"], [type=\"email\"], [type=\"file\"], [type=\"number\"], [type=\"password\"], [type=\"search\"], [type=\"tel\"], [type=\"text\"], [type=\"time\"], [type=\"url\"]",
          "cssText": "textarea, [type=\"date\"], [type=\"email\"], [type=\"file\"], [type=\"number\"], [type=\"password\"], [type=\"search\"], [type=\"tel\"], [type=\"text\"], [type=\"time\"], [type=\"url\"] { appearance: none; border: 2px solid; border-radius: 0px; line-height: 1.25; padding: 0.3125rem; width: 100%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "textarea:focus, [type=\"date\"]:focus, [type=\"email\"]:focus, [type=\"file\"]:focus, [type=\"number\"]:focus, [type=\"password\"]:focus, [type=\"search\"]:focus, [type=\"tel\"]:focus, [type=\"text\"]:focus, [type=\"time\"]:focus, [type=\"url\"]:focus",
          "cssText": "textarea:focus, [type=\"date\"]:focus, [type=\"email\"]:focus, [type=\"file\"]:focus, [type=\"number\"]:focus, [type=\"password\"]:focus, [type=\"search\"]:focus, [type=\"tel\"]:focus, [type=\"text\"]:focus, [type=\"time\"]:focus, [type=\"url\"]:focus { box-shadow: 0px 0px 0px 2px inset; outline: rgb(249, 220, 74) solid 3px; outline-offset: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "select, [type=\"date\"], [type=\"email\"], [type=\"number\"], [type=\"password\"], [type=\"search\"], [type=\"tel\"], [type=\"text\"], [type=\"time\"], [type=\"url\"]",
          "cssText": "select, [type=\"date\"], [type=\"email\"], [type=\"number\"], [type=\"password\"], [type=\"search\"], [type=\"tel\"], [type=\"text\"], [type=\"time\"], [type=\"url\"] { height: 2.9375rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[type=\"file\"]",
          "cssText": "[type=\"file\"] { border-color: transparent; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[type=\"file\"]:focus",
          "cssText": "[type=\"file\"]:focus { border-color: currentcolor; box-shadow: 0px 0px 0px 4px inset; margin-left: -0.3125rem; margin-right: -0.3125rem; outline: rgb(249, 220, 74) solid 3px; padding-left: 0.3125rem; padding-right: 0.3125rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[type=\"search\"]::-webkit-search-decoration, [type=\"search\"]::-webkit-search-cancel-button",
          "cssText": "[type=\"search\"]::-webkit-search-decoration, [type=\"search\"]::-webkit-search-cancel-button { appearance: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "select",
          "cssText": "select { background-color: transparent; border: 2px solid; border-radius: 0px; line-height: 1.25; padding: 0.3125rem; width: 100%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "select:focus",
          "cssText": "select:focus { box-shadow: 0px 0px 0px 2px inset; outline: rgb(249, 220, 74) solid 3px; outline-offset: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSSupportsRule",
          "selector": "",
          "cssText": "@supports (padding-inline-start: 1em) {\n  select { appearance: none; background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 320 512'%3E%3Cpath d='M143 352.3L7 216.3c-9.4-9.4-9.4-24.6 0-33.9l22.6-22.6c9.4-9.4 24.6-9.4 33.9 0l96.4 96.4 96.4-96.4c9.4-9.4 24.6-9.4 33.9 0l22.6 22.6c9.4 9.4 9.4 24.6 0 33.9l-136 136c-9.2 9.4-24.4 9.4-33.8 0z'/%3E%3C/svg%3E\"); background-position: right 0.625rem center; background-repeat: no-repeat; background-size: 0.9375rem; padding-inline-end: 2.125rem; }\n  [dir=\"rtl\"] select { background-position: left 0.625rem center; }\n}",
          "urls": [],
          "group": "(padding-inline-start: 1em)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "(padding-inline-start: 1em)",
              "requiresEcho": true,
              "echoTokens": [
                "padding-inline-start",
                "1em"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "select",
          "cssText": "select { appearance: none; background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 320 512'%3E%3Cpath d='M143 352.3L7 216.3c-9.4-9.4-9.4-24.6 0-33.9l22.6-22.6c9.4-9.4 24.6-9.4 33.9 0l96.4 96.4 96.4-96.4c9.4-9.4 24.6-9.4 33.9 0l22.6 22.6c9.4 9.4 9.4 24.6 0 33.9l-136 136c-9.2 9.4-24.4 9.4-33.8 0z'/%3E%3C/svg%3E\"); background-position: right 0.625rem center; background-repeat: no-repeat; background-size: 0.9375rem; padding-inline-end: 2.125rem; }",
          "urls": [],
          "group": "(padding-inline-start: 1em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "(padding-inline-start: 1em)",
              "requiresEcho": true,
              "echoTokens": [
                "padding-inline-start",
                "1em"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": "[dir=\"rtl\"] select",
          "cssText": "[dir=\"rtl\"] select { background-position: left 0.625rem center; }",
          "urls": [],
          "group": "(padding-inline-start: 1em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "(padding-inline-start: 1em)",
              "requiresEcho": true,
              "echoTokens": [
                "padding-inline-start",
                "1em"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": "textarea",
          "cssText": "textarea { height: 10em; resize: vertical; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".memorable-date",
          "cssText": ".memorable-date { display: inline-block; margin-top: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".memorable-date + .memorable-date",
          "cssText": ".memorable-date + .memorable-date { margin-left: 1rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[dir=\"rtl\"] .memorable-date + .memorable-date",
          "cssText": "[dir=\"rtl\"] .memorable-date + .memorable-date { margin-left: auto; margin-right: 1rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".radio-item, .checkbox-item",
          "cssText": ".radio-item, .checkbox-item { clear: left; float: left; margin-top: 0.25rem; padding-left: 2.125rem; position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".radio-item::after, .checkbox-item::after",
          "cssText": ".radio-item::after, .checkbox-item::after { clear: both; content: \"\"; display: block; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[dir=\"rtl\"] .radio-item, [dir=\"rtl\"] .checkbox-item",
          "cssText": "[dir=\"rtl\"] .radio-item, [dir=\"rtl\"] .checkbox-item { clear: right; float: right; padding-left: 0px; padding-right: 2.125rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".radio-item input, .checkbox-item input",
          "cssText": ".radio-item input, .checkbox-item input { cursor: pointer; height: 2.75rem; left: -0.625rem; margin: 0px; opacity: 0; position: absolute; top: -0.125rem; width: 2.75rem; z-index: 1; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[dir=\"rtl\"] .radio-item input, [dir=\"rtl\"] .checkbox-item input",
          "cssText": "[dir=\"rtl\"] .radio-item input, [dir=\"rtl\"] .checkbox-item input { left: auto; right: -0.625rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".radio-item label, .checkbox-item label",
          "cssText": ".radio-item label, .checkbox-item label { cursor: pointer; display: inline-block; margin-bottom: 0px; margin-top: -0.125rem; padding: 0.6875rem 0.9375rem 0.625rem 0.0625rem; touch-action: manipulation; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".radio-item label::before, .radio-item label::after, .checkbox-item label::before, .checkbox-item label::after",
          "cssText": ".radio-item label::before, .radio-item label::after, .checkbox-item label::before, .checkbox-item label::after { content: \"\"; position: absolute; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".radio-item label::before, .checkbox-item label::before",
          "cssText": ".radio-item label::before, .checkbox-item label::before { background: transparent; border: 2px solid; height: 1.5rem; left: 0px; top: 0.5rem; width: 1.5rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[dir=\"rtl\"] .radio-item label, [dir=\"rtl\"] .checkbox-item label",
          "cssText": "[dir=\"rtl\"] .radio-item label, [dir=\"rtl\"] .checkbox-item label { padding: 0.6875rem 0.0625rem 0.625rem 0.9375rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[dir=\"rtl\"] .radio-item label::before, [dir=\"rtl\"] .checkbox-item label::before",
          "cssText": "[dir=\"rtl\"] .radio-item label::before, [dir=\"rtl\"] .checkbox-item label::before { left: auto; right: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".radio-item label::before, .radio-item label::after",
          "cssText": ".radio-item label::before, .radio-item label::after { border-radius: 50%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".radio-item label::after",
          "cssText": ".radio-item label::after { background: currentcolor; border: 5px solid; height: 0px; left: 0.4375rem; opacity: 0; top: 0.9375rem; width: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[dir=\"rtl\"] .radio-item label::after",
          "cssText": "[dir=\"rtl\"] .radio-item label::after { left: auto; right: 0.4375rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".checkbox-item label::after",
          "cssText": ".checkbox-item label::after { background: transparent; border-style: solid; border-right-color: initial; border-bottom-color: initial; border-left-color: initial; border-image: initial; border-top-color: transparent; border-width: 0px 0px 3px 3px; height: 0.40625rem; left: 0.375rem; opacity: 0; top: 0.9375rem; transform: rotate(-45deg); width: 0.75rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[dir=\"rtl\"] .checkbox-item label::after",
          "cssText": "[dir=\"rtl\"] .checkbox-item label::after { left: auto; right: 0.375rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".checkbox-group--cluster .checkbox-item",
          "cssText": ".checkbox-group--cluster .checkbox-item { clear: none; margin-right: 0.75rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".radio-item:hover input:not(:disabled) + label::before, .checkbox-item:hover input:not(:disabled) + label::before",
          "cssText": ".radio-item:hover input:not(:disabled) + label::before, .checkbox-item:hover input:not(:disabled) + label::before { box-shadow: rgb(0, 115, 216) 0px 0px 0px 4px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".radio-item input:focus + label::before, .checkbox-item input:focus + label::before",
          "cssText": ".radio-item input:focus + label::before, .checkbox-item input:focus + label::before { border-width: 4px; box-shadow: rgb(249, 220, 74) 0px 0px 0px 4px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".radio-item:hover input:focus + label::before, .checkbox-item:hover input:focus + label::before",
          "cssText": ".radio-item:hover input:focus + label::before, .checkbox-item:hover input:focus + label::before { box-shadow: rgb(249, 220, 74) 0px 0px 0px 4px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".radio-item input:checked + label::after, .checkbox-item input:checked + label::after",
          "cssText": ".radio-item input:checked + label::after, .checkbox-item input:checked + label::after { opacity: 1; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[type=\"radio\"]:disabled, [type=\"radio\"]:disabled + label [type=\"checkbox\"]:disabled, [type=\"checkbox\"]:disabled + label",
          "cssText": "[type=\"radio\"]:disabled, [type=\"radio\"]:disabled + label [type=\"checkbox\"]:disabled, [type=\"checkbox\"]:disabled + label { cursor: default; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[type=\"radio\"]:disabled + label, [type=\"checkbox\"]:disabled + label",
          "cssText": "[type=\"radio\"]:disabled + label, [type=\"checkbox\"]:disabled + label { opacity: 0.5; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".segmented-group-wrapper",
          "cssText": ".segmented-group-wrapper { max-width: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".segmented-group.l-switcher",
          "cssText": ".segmented-group.l-switcher { margin-top: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".segmented-group.l-switcher > * > *",
          "cssText": ".segmented-group.l-switcher > * > * { max-width: 100%; min-width: 33.333%; position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".segmented-group.l-switcher label",
          "cssText": ".segmented-group.l-switcher label { border: 2px solid; cursor: pointer; display: block; margin: 0.125rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".segmented-group.l-switcher label::before, .segmented-group.l-switcher label::after",
          "cssText": ".segmented-group.l-switcher label::before, .segmented-group.l-switcher label::after { content: \"\"; position: absolute; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".segmented-group.l-switcher label::before",
          "cssText": ".segmented-group.l-switcher label::before { background: transparent; height: 1.5rem; left: 0.625rem; top: 0.625rem; width: 1.5rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".segmented-group.l-switcher label::after",
          "cssText": ".segmented-group.l-switcher label::after { background: transparent; border-style: solid; border-right-color: initial; border-bottom-color: initial; border-left-color: initial; border-image: initial; border-top-color: transparent; border-width: 0px 0px 3px 3px; height: 0.40625rem; left: 1rem; opacity: 0; top: 1.0625rem; transform: rotate(-45deg); width: 0.75rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".segmented-group.l-switcher input",
          "cssText": ".segmented-group.l-switcher input { cursor: pointer; height: 2.75rem; margin: 0px; opacity: 0; position: absolute; right: 0px; top: 0px; width: 2.75rem; z-index: 1; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".segmented-group.l-switcher .segmented-label",
          "cssText": ".segmented-group.l-switcher .segmented-label { flex-direction: column; justify-content: flex-start; display: block; padding: 0.625rem 0.625rem 0.625rem 2.75rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".segmented-group.l-switcher .segmented-label > * + *",
          "cssText": ".segmented-group.l-switcher .segmented-label > * + * { margin-top: 0.5em; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".segmented-group.l-switcher .segmented-label span",
          "cssText": ".segmented-group.l-switcher .segmented-label span { display: block; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".segmented-group.l-switcher .segmented-label span:first-of-type",
          "cssText": ".segmented-group.l-switcher .segmented-label span:first-of-type { font-weight: bold; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".segmented-group.l-switcher > * > :hover label",
          "cssText": ".segmented-group.l-switcher > * > :hover label { background-color: rgb(203, 224, 251); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".segmented-group.l-switcher input:focus + label",
          "cssText": ".segmented-group.l-switcher input:focus + label { border-color: rgb(249, 220, 74); box-shadow: 0px 0px 0px 4px inset; outline: rgb(249, 220, 74) solid 2px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".segmented-group.l-switcher input:checked + label::after",
          "cssText": ".segmented-group.l-switcher input:checked + label::after { opacity: 1; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[dir=\"rtl\"] .segmented-group label::before",
          "cssText": "[dir=\"rtl\"] .segmented-group label::before { right: 0.625rem; left: auto; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[dir=\"rtl\"] .segmented-group label::after",
          "cssText": "[dir=\"rtl\"] .segmented-group label::after { right: 1rem; left: auto; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[dir=\"rtl\"] .segmented-group input",
          "cssText": "[dir=\"rtl\"] .segmented-group input { left: 0px; right: auto; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[dir=\"rtl\"] .segmented-group .segmented-label",
          "cssText": "[dir=\"rtl\"] .segmented-group .segmented-label { padding: 0.625rem 2.75rem 0.625rem 0.625rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".input-width-30",
          "cssText": ".input-width-30 { max-width: 59ex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".input-width-20",
          "cssText": ".input-width-20 { max-width: 41ex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".input-width-10",
          "cssText": ".input-width-10 { max-width: 23ex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".input-width-5",
          "cssText": ".input-width-5 { max-width: 10.8ex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".input-width-4",
          "cssText": ".input-width-4 { max-width: 9ex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".input-width-3",
          "cssText": ".input-width-3 { max-width: 7.2ex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".input-width-2",
          "cssText": ".input-width-2 { max-width: 5.4ex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[data-component=\"error-summary\"] li a, [data-component=\"error-summary\"] li .heading-anchor",
          "cssText": "[data-component=\"error-summary\"] li a, [data-component=\"error-summary\"] li .heading-anchor { color: rgb(168, 38, 21); display: inline-block; font-weight: bold; padding-bottom: 0.625rem; padding-top: 0.625rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[data-component=\"error-summary\"] li a:hover, [data-component=\"error-summary\"] li .heading-anchor:hover, [data-component=\"error-summary\"] li a:visited, [data-component=\"error-summary\"] li .heading-anchor:visited",
          "cssText": "[data-component=\"error-summary\"] li a:hover, [data-component=\"error-summary\"] li .heading-anchor:hover, [data-component=\"error-summary\"] li a:visited, [data-component=\"error-summary\"] li .heading-anchor:visited { color: rgb(168, 38, 21); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[data-component=\"error-summary\"] li a:focus, [data-component=\"error-summary\"] li .heading-anchor:focus",
          "cssText": "[data-component=\"error-summary\"] li a:focus, [data-component=\"error-summary\"] li .heading-anchor:focus { color: rgb(0, 0, 0); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".field--error",
          "cssText": ".field--error { border-left: 0.3125rem solid rgb(168, 38, 21); padding-left: 0.9375rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".field--error input:not([type=\"file\"]), .field--error textarea:not(:focus)",
          "cssText": ".field--error input:not([type=\"file\"]), .field--error textarea:not(:focus) { border-color: rgb(168, 38, 21); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".field--error input:focus, .field--error textarea:focus",
          "cssText": ".field--error input:focus, .field--error textarea:focus { border-color: inherit; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[dir=\"rtl\"] .field--error",
          "cssText": "[dir=\"rtl\"] .field--error { border-left: none; border-right: 0.3125rem solid rgb(168, 38, 21); padding-left: 0px; padding-right: 0.9375rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".field-error-msg",
          "cssText": ".field-error-msg { color: rgb(168, 38, 21); font-weight: bold; margin-top: 0.9375rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".progress-list",
          "cssText": ".progress-list { margin-bottom: 1.875rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 48em) {\n  .progress-list { display: flex; flex-wrap: wrap; }\n}",
          "urls": [],
          "group": "screen and (min-width: 48em)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 48em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "48em",
                "48",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".progress-list",
          "cssText": ".progress-list { display: flex; flex-wrap: wrap; }",
          "urls": [],
          "group": "screen and (min-width: 48em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 48em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "48em",
                "48",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".progress-list li",
          "cssText": ".progress-list li { position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".progress-list li::after",
          "cssText": ".progress-list li::after { background-color: rgb(84, 84, 84); bottom: -1rem; content: \"\"; height: 0.8125rem; left: 1.1875rem; position: absolute; width: 0.1875rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 48em) {\n  .progress-list li::after { bottom: auto; height: 0.1875rem; left: 50%; top: 2rem; width: 100%; z-index: -1; }\n}",
          "urls": [],
          "group": "screen and (min-width: 48em)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 48em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "48em",
                "48",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".progress-list li::after",
          "cssText": ".progress-list li::after { bottom: auto; height: 0.1875rem; left: 50%; top: 2rem; width: 100%; z-index: -1; }",
          "urls": [],
          "group": "screen and (min-width: 48em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 48em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "48em",
                "48",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".progress-list li + li",
          "cssText": ".progress-list li + li { margin-top: 1.25rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 48em) {\n  .progress-list li + li { margin-top: 0px; }\n}",
          "urls": [],
          "group": "screen and (min-width: 48em)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 48em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "48em",
                "48",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".progress-list li + li",
          "cssText": ".progress-list li + li { margin-top: 0px; }",
          "urls": [],
          "group": "screen and (min-width: 48em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 48em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "48em",
                "48",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": "[dir=\"rtl\"] .progress-list li::after",
          "cssText": "[dir=\"rtl\"] .progress-list li::after { left: auto; right: 1.1875rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 48em) {\n  [dir=\"rtl\"] .progress-list li::after { left: auto; right: 50%; }\n}",
          "urls": [],
          "group": "screen and (min-width: 48em)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 48em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "48em",
                "48",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[dir=\"rtl\"] .progress-list li::after",
          "cssText": "[dir=\"rtl\"] .progress-list li::after { left: auto; right: 50%; }",
          "urls": [],
          "group": "screen and (min-width: 48em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 48em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "48em",
                "48",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".progress-list li.complete::after",
          "cssText": ".progress-list li.complete::after { background-color: rgb(35, 121, 120); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".progress-list li:last-child::after",
          "cssText": ".progress-list li:last-child::after { display: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".progress-step__inner",
          "cssText": ".progress-step__inner { align-items: center; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 48em) {\n  .progress-step__inner { flex-direction: column; padding-top: 0.625rem; text-align: center; }\n}",
          "urls": [],
          "group": "screen and (min-width: 48em)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 48em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "48em",
                "48",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".progress-step__inner",
          "cssText": ".progress-step__inner { flex-direction: column; padding-top: 0.625rem; text-align: center; }",
          "urls": [],
          "group": "screen and (min-width: 48em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 48em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "48em",
                "48",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".progress-step__inner > span",
          "cssText": ".progress-step__inner > span { font-size: 0.9375rem; line-height: 1.5; padding: 0.625rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 48em) {\n  .progress-step__inner > span { width: 9.375rem; }\n}",
          "urls": [],
          "group": "screen and (min-width: 48em)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 48em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "48em",
                "48",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".progress-step__inner > span",
          "cssText": ".progress-step__inner > span { width: 9.375rem; }",
          "urls": [],
          "group": "screen and (min-width: 48em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 48em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "48em",
                "48",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".progress-step__marker",
          "cssText": ".progress-step__marker { align-items: center; background-color: rgb(255, 255, 255); border: 3px solid rgb(84, 84, 84); border-radius: 50%; display: flex; height: 2.75rem; justify-content: center; width: 2.75rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 48em) {\n  .progress-step__marker { box-shadow: rgb(255, 255, 255) 0px 0px 0px 0.625rem; }\n}",
          "urls": [],
          "group": "screen and (min-width: 48em)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 48em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "48em",
                "48",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".progress-step__marker",
          "cssText": ".progress-step__marker { box-shadow: rgb(255, 255, 255) 0px 0px 0px 0.625rem; }",
          "urls": [],
          "group": "screen and (min-width: 48em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 48em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "48em",
                "48",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".progress-step__marker.complete",
          "cssText": ".progress-step__marker.complete { background-color: rgb(35, 121, 120); border-color: rgb(35, 121, 120); color: rgb(255, 255, 255); position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".progress-step__marker.complete::before, .progress-step__marker.complete::after",
          "cssText": ".progress-step__marker.complete::before, .progress-step__marker.complete::after { background-color: rgb(35, 121, 120); content: \"\"; position: absolute; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".progress-step__marker.complete::before",
          "cssText": ".progress-step__marker.complete::before { border-radius: 50%; height: 2.375rem; left: 0px; top: 0px; width: 2.375rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".progress-step__marker.complete::after",
          "cssText": ".progress-step__marker.complete::after { border-style: solid; border-right-color: initial; border-bottom-color: initial; border-left-color: initial; border-image: initial; border-top-color: transparent; border-width: 0px 0px 3px 3px; height: 0.5625rem; left: 0.625rem; top: 0.8125rem; transform: rotate(-45deg); width: 1.125rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".progress-list a, .progress-list .heading-anchor",
          "cssText": ".progress-list a, .progress-list .heading-anchor { color: rgb(84, 84, 84); text-decoration-skip-ink: auto; text-underline-offset: 0.25em; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".progress-list a:visited, .progress-list .heading-anchor:visited",
          "cssText": ".progress-list a:visited, .progress-list .heading-anchor:visited { color: rgb(117, 51, 108); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".progress-list a:hover, .progress-list .heading-anchor:hover",
          "cssText": ".progress-list a:hover, .progress-list .heading-anchor:hover { color: rgb(0, 42, 86); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".progress-list a:focus, .progress-list .heading-anchor:focus",
          "cssText": ".progress-list a:focus, .progress-list .heading-anchor:focus { box-shadow: 0px 0px 0px 2px; color: rgb(0, 0, 0); outline: rgb(249, 220, 74) solid 3px; outline-offset: 2px; text-decoration: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".progress-list a:active, .progress-list .heading-anchor:active",
          "cssText": ".progress-list a:active, .progress-list .heading-anchor:active { color: rgb(0, 0, 0); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[hidden]",
          "cssText": "[hidden] { display: none !important; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-header [role=\"status\"], .visuallyhidden:not(:focus):not(:active), .skip-link:not(:focus):not(:active)",
          "cssText": ".global-header [role=\"status\"], .visuallyhidden:not(:focus):not(:active), .skip-link:not(:focus):not(:active) { border: 0px; clip: rect(0px, 0px, 0px, 0px); clip-path: inset(100%); height: 1px; overflow: hidden; padding: 0px; position: absolute; white-space: nowrap; width: 1px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".visuallyhidden + *, .skip-link + *",
          "cssText": ".visuallyhidden + *, .skip-link + * { margin-top: 0px !important; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "br",
          "cssText": "br { margin-top: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "abbr",
          "cssText": "abbr { text-decoration-skip-ink: auto; text-underline-offset: 0.25em; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "dfn",
          "cssText": "dfn { font-style: normal; font-weight: 600; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "b, strong, .bold",
          "cssText": "b, strong, .bold { font-weight: 600; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "em, i",
          "cssText": "em, i { font-style: italic; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "small, .small, .small-caps",
          "cssText": "small, .small, .small-caps { font-size: 0.875rem; line-height: 1.42857; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".small-caps",
          "cssText": ".small-caps { text-shadow: rgb(17, 17, 17) 0px 0px 0px; text-transform: uppercase; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "code, samp, pre",
          "cssText": "code, samp, pre { font-family: Monaco, \"Lucida Console\", \"Courier New\", monospace; font-size: 0.9em; hyphens: none; orphans: 3; padding-left: 0.1875rem; padding-right: 0.1875rem; break-before: avoid; text-transform: none; widows: 3; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "svg",
          "cssText": "svg { fill: currentcolor; height: auto; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "svg:not([class]), svg.heading-anchor",
          "cssText": "svg:not([class]), svg.heading-anchor { width: 100%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".icon",
          "cssText": ".icon { height: 1em; vertical-align: baseline; width: 1em; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".icon--larger",
          "cssText": ".icon--larger { height: 1.875rem; width: 1.875rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".with-icon--before, .with-icon--after, .with-icon--larger",
          "cssText": ".with-icon--before, .with-icon--after, .with-icon--larger { align-items: baseline; display: inline-flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".with-icon--before .icon, .with-icon--after .icon, .with-icon--larger .icon",
          "cssText": ".with-icon--before .icon, .with-icon--after .icon, .with-icon--larger .icon { flex: 0 0 auto; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".with-icon--larger",
          "cssText": ".with-icon--larger { align-items: center; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".with-icon--before .icon",
          "cssText": ".with-icon--before .icon { margin-right: 0.5rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSSupportsRule",
          "selector": "",
          "cssText": "@supports (margin-inline-end: 1em) {\n  .with-icon--before .icon { margin-right: 0px; margin-inline-end: 0.5rem; }\n}",
          "urls": [],
          "group": "(margin-inline-end: 1em)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "(margin-inline-end: 1em)",
              "requiresEcho": true,
              "echoTokens": [
                "margin-inline-end",
                "1em"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".with-icon--before .icon",
          "cssText": ".with-icon--before .icon { margin-right: 0px; margin-inline-end: 0.5rem; }",
          "urls": [],
          "group": "(margin-inline-end: 1em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "(margin-inline-end: 1em)",
              "requiresEcho": true,
              "echoTokens": [
                "margin-inline-end",
                "1em"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".with-icon--after .icon",
          "cssText": ".with-icon--after .icon { margin-left: 0.5rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSSupportsRule",
          "selector": "",
          "cssText": "@supports (margin-inline-start: 1em) {\n  .with-icon--after .icon { margin-left: 0px; margin-inline-start: 0.5rem; }\n}",
          "urls": [],
          "group": "(margin-inline-start: 1em)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "(margin-inline-start: 1em)",
              "requiresEcho": true,
              "echoTokens": [
                "margin-inline-start",
                "1em"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".with-icon--after .icon",
          "cssText": ".with-icon--after .icon { margin-left: 0px; margin-inline-start: 0.5rem; }",
          "urls": [],
          "group": "(margin-inline-start: 1em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "(margin-inline-start: 1em)",
              "requiresEcho": true,
              "echoTokens": [
                "margin-inline-start",
                "1em"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": "[dir=\"rtl\"] .with-icon--before .icon",
          "cssText": "[dir=\"rtl\"] .with-icon--before .icon { margin-left: 0.5rem; margin-right: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSSupportsRule",
          "selector": "",
          "cssText": "@supports (margin-inline-start: 1em) {\n  [dir=\"rtl\"] .with-icon--before .icon { margin-left: 0px; margin-inline-end: 0.5rem; }\n}",
          "urls": [],
          "group": "(margin-inline-start: 1em)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "(margin-inline-start: 1em)",
              "requiresEcho": true,
              "echoTokens": [
                "margin-inline-start",
                "1em"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[dir=\"rtl\"] .with-icon--before .icon",
          "cssText": "[dir=\"rtl\"] .with-icon--before .icon { margin-left: 0px; margin-inline-end: 0.5rem; }",
          "urls": [],
          "group": "(margin-inline-start: 1em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "(margin-inline-start: 1em)",
              "requiresEcho": true,
              "echoTokens": [
                "margin-inline-start",
                "1em"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": "[dir=\"rtl\"] .with-icon--after .icon",
          "cssText": "[dir=\"rtl\"] .with-icon--after .icon { margin-left: 0px; margin-right: 0.5rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSSupportsRule",
          "selector": "",
          "cssText": "@supports (margin-inline-start: 1em) {\n  [dir=\"rtl\"] .with-icon--after .icon { margin-right: 0px; margin-inline-start: 0.5rem; }\n}",
          "urls": [],
          "group": "(margin-inline-start: 1em)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "(margin-inline-start: 1em)",
              "requiresEcho": true,
              "echoTokens": [
                "margin-inline-start",
                "1em"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[dir=\"rtl\"] .with-icon--after .icon",
          "cssText": "[dir=\"rtl\"] .with-icon--after .icon { margin-right: 0px; margin-inline-start: 0.5rem; }",
          "urls": [],
          "group": "(margin-inline-start: 1em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "(margin-inline-start: 1em)",
              "requiresEcho": true,
              "echoTokens": [
                "margin-inline-start",
                "1em"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": "img",
          "cssText": "img { height: auto; max-width: 100%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".avatar",
          "cssText": ".avatar { background-color: rgb(255, 255, 255); border: 1px solid rgb(0, 90, 156); border-radius: 50%; height: 6.25rem; overflow: hidden; width: 6.25rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".avatar img",
          "cssText": ".avatar img { height: 100%; object-fit: cover; width: 100%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".avatar--med",
          "cssText": ".avatar--med { height: 3.125rem; width: 3.125rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".avatar--med img",
          "cssText": ".avatar--med img { margin-top: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".avatar--small",
          "cssText": ".avatar--small { height: 2rem; width: 2rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".avatar--small img",
          "cssText": ".avatar--small img { margin-top: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "a:not([class]), .heading-anchor, a.with-icon--before, a.with-icon--after",
          "cssText": "a:not([class]), .heading-anchor, a.with-icon--before, a.with-icon--after { border: 0px; color: rgb(0, 90, 156); cursor: pointer; padding-inline: 0.125rem; text-decoration: underline; text-decoration-skip-ink: auto; text-underline-offset: 0.25em; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "a:not([class]) svg, .heading-anchor svg, a.with-icon--before svg, a.with-icon--after svg",
          "cssText": "a:not([class]) svg, .heading-anchor svg, a.with-icon--before svg, a.with-icon--after svg { fill: currentcolor; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "a:not([class]):visited, .heading-anchor:visited, a.with-icon--before:visited, a.with-icon--after:visited",
          "cssText": "a:not([class]):visited, .heading-anchor:visited, a.with-icon--before:visited, a.with-icon--after:visited { color: rgb(117, 51, 108); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "a:not([class]):hover, .heading-anchor:hover, a.with-icon--before:hover, a.with-icon--after:hover",
          "cssText": "a:not([class]):hover, .heading-anchor:hover, a.with-icon--before:hover, a.with-icon--after:hover { color: rgb(0, 42, 86); outline-width: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "a:not([class]):focus, .heading-anchor:focus, a.with-icon--before:focus, a.with-icon--after:focus",
          "cssText": "a:not([class]):focus, .heading-anchor:focus, a.with-icon--before:focus, a.with-icon--after:focus { background-color: rgb(249, 220, 74); background-image: linear-gradient(to top, rgb(0, 0, 0) 3px, rgb(249, 220, 74) 3px, rgb(249, 220, 74)); color: rgb(0, 0, 0); text-decoration: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "a:not([class]):active, .heading-anchor:active, a.with-icon--before:active, a.with-icon--after:active",
          "cssText": "a:not([class]):active, .heading-anchor:active, a.with-icon--before:active, a.with-icon--after:active { color: rgb(0, 0, 0); outline-width: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".heading-anchor",
          "cssText": ".heading-anchor { color: rgb(84, 84, 84); font-weight: normal; opacity: 0.82; text-underline-offset: auto; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".heading-anchor:visited",
          "cssText": ".heading-anchor:visited { color: rgb(84, 84, 84); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".heading-anchor:hover",
          "cssText": ".heading-anchor:hover { color: rgb(84, 84, 84); opacity: 1; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".heading-anchor:focus",
          "cssText": ".heading-anchor:focus { color: rgb(0, 0, 0); opacity: 1; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "ul, ol",
          "cssText": "ul, ol { margin-block: 1em; padding-inline-start: 2.4em; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "ul > * + *, ul li ul, ul li ol, ol > * + *, ol li ul, ol li ol",
          "cssText": "ul > * + *, ul li ul, ul li ol, ol > * + *, ol li ul, ol li ol { margin-block-start: 0.75em; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "ol.counter ::marker",
          "cssText": "ol.counter ::marker { content: counters(list-item, \".\") \". \"; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "nav ul, nav ol, .clean-list",
          "cssText": "nav ul, nav ol, .clean-list { list-style: none; margin: 0px; padding: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "nav ul li, nav ul ol, nav ul ul, nav ol li, nav ol ol, nav ol ul, .clean-list li, .clean-list ol, .clean-list ul",
          "cssText": "nav ul li, nav ul ol, nav ul ul, nav ol li, nav ol ol, nav ol ul, .clean-list li, .clean-list ol, .clean-list ul { margin: 0px; padding: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "dl",
          "cssText": "dl { margin-block: 1em; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "dl dt",
          "cssText": "dl dt { font-weight: bold; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "dl dd",
          "cssText": "dl dd { margin-inline-start: 2.5rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "dl dd + dt",
          "cssText": "dl dd + dt { margin-block-start: 0.5em; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "dl dt + dd, dl dd + dd",
          "cssText": "dl dt + dd, dl dd + dd { margin-block-start: 0.25em; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "dl.inline div",
          "cssText": "dl.inline div { align-items: baseline; display: flex; flex-wrap: wrap; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "dl.inline div dt, dl.inline div dd",
          "cssText": "dl.inline div dt, dl.inline div dd { margin-inline-start: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "dl.inline div dt::after",
          "cssText": "dl.inline div dt::after { content: \": \"; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "dl.inline div dd:not(:last-child)::after",
          "cssText": "dl.inline div dd:not(:last-child)::after { content: \", \"; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSSupportsRule",
          "selector": "",
          "cssText": "@supports (grid-row-start: auto) {\n  dl.grid { gap: 1rem; display: grid; grid-template-columns: max-content; grid-template-rows: 1fr; }\n  dl.grid dd + dt, dl.grid dt + dd, dl.grid dd + dd { margin-block-start: 0px; }\n  dl.grid dt { grid-column: 1 / 2; }\n  dl.grid dd { grid-column: 2 / 3; margin-inline-start: 0px; }\n}",
          "urls": [],
          "group": "(grid-row-start: auto)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "(grid-row-start: auto)",
              "requiresEcho": true,
              "echoTokens": [
                "grid-row-start",
                "auto"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "dl.grid",
          "cssText": "dl.grid { gap: 1rem; display: grid; grid-template-columns: max-content; grid-template-rows: 1fr; }",
          "urls": [],
          "group": "(grid-row-start: auto)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "(grid-row-start: auto)",
              "requiresEcho": true,
              "echoTokens": [
                "grid-row-start",
                "auto"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": "dl.grid dd + dt, dl.grid dt + dd, dl.grid dd + dd",
          "cssText": "dl.grid dd + dt, dl.grid dt + dd, dl.grid dd + dd { margin-block-start: 0px; }",
          "urls": [],
          "group": "(grid-row-start: auto)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "(grid-row-start: auto)",
              "requiresEcho": true,
              "echoTokens": [
                "grid-row-start",
                "auto"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": "dl.grid dt",
          "cssText": "dl.grid dt { grid-column: 1 / 2; }",
          "urls": [],
          "group": "(grid-row-start: auto)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "(grid-row-start: auto)",
              "requiresEcho": true,
              "echoTokens": [
                "grid-row-start",
                "auto"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": "dl.grid dd",
          "cssText": "dl.grid dd { grid-column: 2 / 3; margin-inline-start: 0px; }",
          "urls": [],
          "group": "(grid-row-start: auto)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "(grid-row-start: auto)",
              "requiresEcho": true,
              "echoTokens": [
                "grid-row-start",
                "auto"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".skip-link",
          "cssText": ".skip-link { background-color: rgb(249, 220, 74); border: 3px solid rgb(0, 0, 0); color: rgb(0, 0, 0); padding: 0.625em 0.9375em; text-decoration: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".skip-link:active, .skip-link:focus",
          "cssText": ".skip-link:active, .skip-link:focus { left: 0px; position: absolute; top: 0px; z-index: 999; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".skip-link:active span, .skip-link:focus span",
          "cssText": ".skip-link:active span, .skip-link:focus span { box-shadow: 0px -1px 0px 0px inset; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".skip-link [dir=\"rtl\"]:active, .skip-link [dir=\"rtl\"]:focus",
          "cssText": ".skip-link [dir=\"rtl\"]:active, .skip-link [dir=\"rtl\"]:focus { left: auto; right: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "summary",
          "cssText": "summary { color: rgb(0, 90, 156); cursor: pointer; display: inline-block; padding-left: 1.5625rem; position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "summary::before",
          "cssText": "summary::before { border-top: 7px solid transparent; border-right: 0px solid transparent; border-bottom: 7px solid transparent; border-left-color: inherit; border-left-style: solid; border-left-width: 12.124px; bottom: 0px; clip-path: polygon(0% 0%, 100% 50%, 0% 100%); content: \"\"; display: block; height: 0px; left: 0px; margin: auto; position: absolute; top: -0.0625rem; width: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "summary::-webkit-details-marker",
          "cssText": "summary::-webkit-details-marker { display: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "summary:hover",
          "cssText": "summary:hover { color: rgb(0, 42, 86); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "summary span",
          "cssText": "summary span { display: inline-block; padding-bottom: 0.625rem; padding-top: 0.625rem; text-decoration: underline; text-decoration-skip-ink: auto; text-underline-offset: 0.25em; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "summary:focus",
          "cssText": "summary:focus { background-color: rgb(249, 220, 74); background-image: linear-gradient(to top, rgb(0, 0, 0) 3px, rgb(249, 220, 74) 3px, rgb(249, 220, 74)); color: rgb(0, 0, 0); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "summary:focus span",
          "cssText": "summary:focus span { text-decoration: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "details",
          "cssText": "details { margin-bottom: 1rem; margin-top: 1rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "details[open] > summary",
          "cssText": "details[open] > summary { margin-bottom: 1rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "details[open] > summary::before",
          "cssText": "details[open] > summary::before { transform: rotate(90deg); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[dir=\"rtl\"] summary",
          "cssText": "[dir=\"rtl\"] summary { padding-left: 0px; padding-right: 1.5625rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[dir=\"rtl\"] summary::before",
          "cssText": "[dir=\"rtl\"] summary::before { left: auto; right: 0px; transform: rotate(180deg); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".social-links__item",
          "cssText": ".social-links__item { height: 3rem; padding: 0.875rem; width: 3rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".social-links__item .icon",
          "cssText": ".social-links__item .icon { height: 1.25rem; width: 1.25rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".social-links__item:hover .icon",
          "cssText": ".social-links__item:hover .icon { color: rgb(0, 42, 86); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "table",
          "cssText": "table { border: 1px solid rgb(202, 201, 201); border-collapse: collapse; margin-bottom: 1rem; margin-top: 1rem; width: 100%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "tr:nth-child(2n)",
          "cssText": "tr:nth-child(2n) { background-color: rgba(206, 205, 205, 0.5); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "th, td, table caption",
          "cssText": "th, td, table caption { padding: 0.75rem; text-align: start; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[dir=\"rtl\"] th, [dir=\"rtl\"] td, [dir=\"rtl\"] table caption",
          "cssText": "[dir=\"rtl\"] th, [dir=\"rtl\"] td, [dir=\"rtl\"] table caption { text-align: start; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "td, th",
          "cssText": "td, th { vertical-align: text-top; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "thead th, tfoot th",
          "cssText": "thead th, tfoot th { background-color: rgb(0, 42, 86); color: rgb(255, 255, 255); vertical-align: bottom; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen {\n  .table-wrap { border: 1px solid rgb(202, 201, 201); margin-bottom: 1rem; margin-top: 1rem; max-width: 100% !important; }\n  .table-wrap[role][aria-labelledby][tabindex] { overflow: auto; }\n  .table-wrap table { border: 0px; margin-bottom: 0px; margin-top: 0px; }\n  .table-wrap:focus { border-color: rgb(0, 0, 0); box-shadow: 0px 0px 0px 4px inset; outline: rgb(249, 220, 74) solid 3px; }\n}",
          "urls": [],
          "group": "screen",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".table-wrap",
          "cssText": ".table-wrap { border: 1px solid rgb(202, 201, 201); margin-bottom: 1rem; margin-top: 1rem; max-width: 100% !important; }",
          "urls": [],
          "group": "screen",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".table-wrap[role][aria-labelledby][tabindex]",
          "cssText": ".table-wrap[role][aria-labelledby][tabindex] { overflow: auto; }",
          "urls": [],
          "group": "screen",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".table-wrap table",
          "cssText": ".table-wrap table { border: 0px; margin-bottom: 0px; margin-top: 0px; }",
          "urls": [],
          "group": "screen",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".table-wrap:focus",
          "cssText": ".table-wrap:focus { border-color: rgb(0, 0, 0); box-shadow: 0px 0px 0px 4px inset; outline: rgb(249, 220, 74) solid 3px; }",
          "urls": [],
          "group": "screen",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "body",
          "cssText": "body { font-family: \"Trebuchet MS\", Geneva, sans-serif; font-size: 1rem; font-style: normal; font-weight: 400; line-height: 1.5; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "p",
          "cssText": "p { margin: 1rem 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "h1, h2, h3, h4, h5, h6",
          "cssText": "h1, h2, h3, h4, h5, h6 { font-weight: 600; margin: 0px 0px 1rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "h1",
          "cssText": "h1 { margin-bottom: 1em; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "h1, .txt-venus",
          "cssText": "h1, .txt-venus { font-size: 2.0625rem; line-height: 1.30303; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 48em) {\n  h1, .txt-venus { font-size: 2.625rem; line-height: 1.4; }\n}",
          "urls": [],
          "group": "screen and (min-width: 48em)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 48em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "48em",
                "48",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "h1, .txt-venus",
          "cssText": "h1, .txt-venus { font-size: 2.625rem; line-height: 1.4; }",
          "urls": [],
          "group": "screen and (min-width: 48em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 48em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "48em",
                "48",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": "h2, .txt-earth",
          "cssText": "h2, .txt-earth { font-size: 1.6875rem; line-height: 1.24444; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 48em) {\n  h2, .txt-earth { font-size: 2.125rem; line-height: 1.26471; }\n}",
          "urls": [],
          "group": "screen and (min-width: 48em)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 48em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "48em",
                "48",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "h2, .txt-earth",
          "cssText": "h2, .txt-earth { font-size: 2.125rem; line-height: 1.26471; }",
          "urls": [],
          "group": "screen and (min-width: 48em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 48em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "48em",
                "48",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": "h3, .txt-mars",
          "cssText": "h3, .txt-mars { font-size: 1.5rem; line-height: 1.4; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "h4, .txt-jupiter",
          "cssText": "h4, .txt-jupiter { font-size: 1.25rem; line-height: 1.6; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "h5, .txt-saturn, .post__notes h3",
          "cssText": "h5, .txt-saturn, .post__notes h3 { font-size: 1.125rem; line-height: 1.5; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "h6",
          "cssText": "h6 { font-size: 1rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".lead",
          "cssText": ".lead { font-size: 1.4375rem; line-height: 1.4; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".txt-pluto",
          "cssText": ".txt-pluto { font-size: 0.9375rem; line-height: 1.5; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".txt-eris",
          "cssText": ".txt-eris { font-size: 0.875rem; line-height: 1.42857; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".fonts-loaded body",
          "cssText": ".fonts-loaded body { font-family: \"Noto Sans\", \"Trebuchet MS\", Geneva, sans-serif; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".l-box",
          "cssText": ".l-box { border: 1px solid; display: block; padding: 1.5rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".l-box--no-padding",
          "cssText": ".l-box--no-padding { padding: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".l-box--no-border",
          "cssText": ".l-box--no-border { border: none; outline: transparent solid 1px; outline-offset: -1px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".l-center.l-center",
          "cssText": ".l-center.l-center { box-sizing: content-box; margin-left: auto; margin-right: auto; max-width: 70rem; padding-left: 5vw; padding-right: 5vw; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".l-cluster",
          "cssText": ".l-cluster { overflow: hidden; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".l-cluster > *",
          "cssText": ".l-cluster > * { display: flex; flex-flow: wrap; margin: -0.625rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".l-cluster--vertical-align > *",
          "cssText": ".l-cluster--vertical-align > * { align-items: center; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".l-cluster.l-cluster > * > *",
          "cssText": ".l-cluster.l-cluster > * > * { display: inline-block; margin: 0.625rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".l-frame",
          "cssText": ".l-frame { display: block; overflow: hidden; position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".l-frame > *",
          "cssText": ".l-frame > * { align-items: center; inset: 0px; display: flex; justify-content: center; position: absolute; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".l-frame > iframe, .l-frame > img, .l-frame > video",
          "cssText": ".l-frame > iframe, .l-frame > img, .l-frame > video { height: 100%; width: 100%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".l-frame > img, .l-frame > video",
          "cssText": ".l-frame > img, .l-frame > video { object-fit: cover; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".l-frame--16-9",
          "cssText": ".l-frame--16-9 { padding-bottom: 56.25%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".l-frame--3-2",
          "cssText": ".l-frame--3-2 { padding-bottom: 66.67%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".l-frame--4-3",
          "cssText": ".l-frame--4-3 { padding-bottom: 75%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".l-frame--square",
          "cssText": ".l-frame--square { padding-bottom: 100%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".l-sidebar",
          "cssText": ".l-sidebar { overflow: hidden; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".l-sidebar > *",
          "cssText": ".l-sidebar > * { display: flex; flex-flow: wrap; margin: -0.75rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".l-sidebar > * > *",
          "cssText": ".l-sidebar > * > * { margin: 0.75rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".l-sidebar .sidebar",
          "cssText": ".l-sidebar .sidebar { flex-basis: 18.75rem; flex-grow: 1; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".l-sidebar .not-sidebar",
          "cssText": ".l-sidebar .not-sidebar { flex-basis: 0px; flex-grow: 999; min-width: calc(55% - 1.5rem); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".l-sidebar--expanded",
          "cssText": ".l-sidebar--expanded { width: 100%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".l-sidebar .sidebar--compact",
          "cssText": ".l-sidebar .sidebar--compact { flex-basis: 11.25rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".l-switcher",
          "cssText": ".l-switcher { overflow: hidden; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".l-switcher > *",
          "cssText": ".l-switcher > * { display: flex; flex-flow: wrap; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".l-switcher > * > *",
          "cssText": ".l-switcher > * > * { max-width: 100%; min-width: 50%; width: calc(-69000% + 476100px); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".no-js [data-trigger=\"account-menu\"], .no-js .account-menu",
          "cssText": ".no-js [data-trigger=\"account-menu\"], .no-js .account-menu { display: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-header",
          "cssText": ".global-header { background-color: rgb(255, 255, 255); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-header .banner",
          "cssText": ".global-header .banner { background-color: rgb(203, 224, 251); padding-bottom: 0.625rem; padding-top: 0.625rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-header .banner__inner",
          "cssText": ".global-header .banner__inner { align-items: center; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-header .banner__inner p",
          "cssText": ".global-header .banner__inner p { font-size: 0.875rem; line-height: 1.42857; margin-bottom: 0px; margin-top: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-header .banner__inner a, .global-header .banner__inner .heading-anchor",
          "cssText": ".global-header .banner__inner a, .global-header .banner__inner .heading-anchor { color: rgb(0, 42, 86); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-header .banner__inner a:focus, .global-header .banner__inner .heading-anchor:focus",
          "cssText": ".global-header .banner__inner a:focus, .global-header .banner__inner .heading-anchor:focus { color: rgb(0, 0, 0); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "#lang-nav",
          "cssText": "#lang-nav { background-color: rgb(248, 248, 251); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "#lang-nav .l-cluster > *",
          "cssText": "#lang-nav .l-cluster > * { justify-content: flex-end; margin: 0px -0.625rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "#lang-nav .l-cluster.l-cluster > * > *",
          "cssText": "#lang-nav .l-cluster.l-cluster > * > * { margin: 0px 0.625rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "#lang-nav a, #lang-nav .heading-anchor",
          "cssText": "#lang-nav a, #lang-nav .heading-anchor { font-size: 0.875rem; line-height: 1.42857; color: rgb(17, 17, 17); display: block; padding-bottom: 0.75rem; padding-top: 0.75rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen {\n  #archive-banner { background-color: rgb(249, 220, 74); padding-bottom: 1.25rem; padding-top: 1.25rem; }\n  #archive-banner .centered { box-sizing: content-box; margin-left: auto; margin-right: auto; max-width: 70rem; overflow: hidden; padding-left: 5vw; padding-right: 5vw; }\n  #archive-banner .centered > * { display: flex; flex-flow: wrap; margin: -0.75rem; }\n  #archive-banner .centered > * > * { margin: 0.75rem; }\n  #archive-banner .archive-banner__message { flex-basis: 0px; flex-grow: 999; min-width: calc(80% - 1.5rem); }\n  #archive-banner .archive-banner__message > * + * { margin-top: 1rem; }\n  #archive-banner .archive-banner__message > * { max-width: 41.25rem; }\n  #archive-banner .archive-banner__message h2 { display: block; font-size: 1.1875rem; line-height: 1.68421; }\n  #archive-banner .archive-banner__message h3 { font-size: 1rem; line-height: 1.33333; }\n  #archive-banner .archive-banner__message h3 + * { margin-top: 0px; }\n  #archive-banner a, #archive-banner .heading-anchor { color: rgb(2, 68, 136); }\n  #archive-banner a:visited, #archive-banner .heading-anchor:visited { color: rgb(2, 68, 136); }\n  #archive-banner a:focus, #archive-banner .heading-anchor:focus { background-image: none; color: rgb(0, 0, 0); outline: rgb(0, 0, 0) solid 2px; outline-offset: 1px; text-decoration: none; }\n  #archive-banner .archive-banner__logo { flex-basis: auto; flex-grow: 1; order: -1; }\n  #archive-banner .archive-banner__logo > span { display: block; height: 2.75rem; position: relative; width: 4.125rem; }\n}",
          "urls": [],
          "group": "screen",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "#archive-banner",
          "cssText": "#archive-banner { background-color: rgb(249, 220, 74); padding-bottom: 1.25rem; padding-top: 1.25rem; }",
          "urls": [],
          "group": "screen",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "#archive-banner .centered",
          "cssText": "#archive-banner .centered { box-sizing: content-box; margin-left: auto; margin-right: auto; max-width: 70rem; overflow: hidden; padding-left: 5vw; padding-right: 5vw; }",
          "urls": [],
          "group": "screen",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "#archive-banner .centered > *",
          "cssText": "#archive-banner .centered > * { display: flex; flex-flow: wrap; margin: -0.75rem; }",
          "urls": [],
          "group": "screen",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "#archive-banner .centered > * > *",
          "cssText": "#archive-banner .centered > * > * { margin: 0.75rem; }",
          "urls": [],
          "group": "screen",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "#archive-banner .archive-banner__message",
          "cssText": "#archive-banner .archive-banner__message { flex-basis: 0px; flex-grow: 999; min-width: calc(80% - 1.5rem); }",
          "urls": [],
          "group": "screen",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "#archive-banner .archive-banner__message > * + *",
          "cssText": "#archive-banner .archive-banner__message > * + * { margin-top: 1rem; }",
          "urls": [],
          "group": "screen",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "#archive-banner .archive-banner__message > *",
          "cssText": "#archive-banner .archive-banner__message > * { max-width: 41.25rem; }",
          "urls": [],
          "group": "screen",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "#archive-banner .archive-banner__message h2",
          "cssText": "#archive-banner .archive-banner__message h2 { display: block; font-size: 1.1875rem; line-height: 1.68421; }",
          "urls": [],
          "group": "screen",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "#archive-banner .archive-banner__message h3",
          "cssText": "#archive-banner .archive-banner__message h3 { font-size: 1rem; line-height: 1.33333; }",
          "urls": [],
          "group": "screen",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "#archive-banner .archive-banner__message h3 + *",
          "cssText": "#archive-banner .archive-banner__message h3 + * { margin-top: 0px; }",
          "urls": [],
          "group": "screen",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "#archive-banner a, #archive-banner .heading-anchor",
          "cssText": "#archive-banner a, #archive-banner .heading-anchor { color: rgb(2, 68, 136); }",
          "urls": [],
          "group": "screen",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "#archive-banner a:visited, #archive-banner .heading-anchor:visited",
          "cssText": "#archive-banner a:visited, #archive-banner .heading-anchor:visited { color: rgb(2, 68, 136); }",
          "urls": [],
          "group": "screen",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "#archive-banner a:focus, #archive-banner .heading-anchor:focus",
          "cssText": "#archive-banner a:focus, #archive-banner .heading-anchor:focus { background-image: none; color: rgb(0, 0, 0); outline: rgb(0, 0, 0) solid 2px; outline-offset: 1px; text-decoration: none; }",
          "urls": [],
          "group": "screen",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "#archive-banner .archive-banner__logo",
          "cssText": "#archive-banner .archive-banner__logo { flex-basis: auto; flex-grow: 1; order: -1; }",
          "urls": [],
          "group": "screen",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "#archive-banner .archive-banner__logo > span",
          "cssText": "#archive-banner .archive-banner__logo > span { display: block; height: 2.75rem; position: relative; width: 4.125rem; }",
          "urls": [],
          "group": "screen",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 64em) {\n  #archive-banner .archive-banner__logo > span { height: 3.25rem; width: 4.875rem; }\n}",
          "urls": [],
          "group": "screen and (min-width: 64em)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 64em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "64em",
                "64",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "#archive-banner .archive-banner__logo > span",
          "cssText": "#archive-banner .archive-banner__logo > span { height: 3.25rem; width: 4.875rem; }",
          "urls": [],
          "group": "screen and (min-width: 64em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 64em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "64em",
                "64",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media print {\n  #archive-banner { border: 2.25pt solid; font-family: \"Noto Sans\", \"Trebuchet MS\", Geneva, sans-serif; margin: 1cm; padding: 8pt; position: relative; }\n  #archive-banner a:link, #archive-banner a:visited, #archive-banner a, #archive-banner .heading-anchor { color: rgb(0, 0, 0); }\n  #archive-banner a[href]::after, #archive-banner [href].heading-anchor::after { content: \" <\" attr(href) \"> \"; }\n  .archive-banner__message { min-height: 40pt; padding-left: 62pt; }\n  .archive-banner__message > * + * { margin-top: 8pt; }\n  [dir=\"rtl\"] .archive-banner__message { padding-left: 0px; padding-right: 60pt; }\n  .archive-banner__logo { left: 8pt; position: absolute; top: 8pt; }\n  [dir=\"rtl\"] .archive-banner__logo { left: auto; right: 8pt; }\n}",
          "urls": [],
          "group": "print",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "#archive-banner",
          "cssText": "#archive-banner { border: 2.25pt solid; font-family: \"Noto Sans\", \"Trebuchet MS\", Geneva, sans-serif; margin: 1cm; padding: 8pt; position: relative; }",
          "urls": [],
          "group": "print",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "#archive-banner a:link, #archive-banner a:visited, #archive-banner a, #archive-banner .heading-anchor",
          "cssText": "#archive-banner a:link, #archive-banner a:visited, #archive-banner a, #archive-banner .heading-anchor { color: rgb(0, 0, 0); }",
          "urls": [],
          "group": "print",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "#archive-banner a[href]::after, #archive-banner [href].heading-anchor::after",
          "cssText": "#archive-banner a[href]::after, #archive-banner [href].heading-anchor::after { content: \" <\" attr(href) \"> \"; }",
          "urls": [],
          "group": "print",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".archive-banner__message",
          "cssText": ".archive-banner__message { min-height: 40pt; padding-left: 62pt; }",
          "urls": [],
          "group": "print",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".archive-banner__message > * + *",
          "cssText": ".archive-banner__message > * + * { margin-top: 8pt; }",
          "urls": [],
          "group": "print",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[dir=\"rtl\"] .archive-banner__message",
          "cssText": "[dir=\"rtl\"] .archive-banner__message { padding-left: 0px; padding-right: 60pt; }",
          "urls": [],
          "group": "print",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".archive-banner__logo",
          "cssText": ".archive-banner__logo { left: 8pt; position: absolute; top: 8pt; }",
          "urls": [],
          "group": "print",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[dir=\"rtl\"] .archive-banner__logo",
          "cssText": "[dir=\"rtl\"] .archive-banner__logo { left: auto; right: 8pt; }",
          "urls": [],
          "group": "print",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".logo",
          "cssText": ".logo { display: block; position: relative; width: clamp(3.75rem, 2.51rem + 6.198vw, 7.5rem); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".logo--member",
          "cssText": ".logo--member { height: 5.25rem; padding-left: 1.25rem; padding-right: 1.25rem; position: relative; width: 9.375rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".logo--member > img",
          "cssText": ".logo--member > img { inset: 0px; height: auto; margin: auto 0px; max-height: 100%; max-width: calc(100% - 40px); position: absolute; width: auto; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "#global-nav svg",
          "cssText": "#global-nav svg { pointer-events: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "#global-nav",
          "cssText": "#global-nav { display: block; padding-bottom: 1.625em; padding-top: 1.625em; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-nav__inner",
          "cssText": ".global-nav__inner { align-items: center; display: flex; flex-wrap: wrap; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 70em) {\n  .global-nav__inner { flex-wrap: nowrap; position: relative; }\n}",
          "urls": [],
          "group": "screen and (min-width: 70em)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 70em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "70em",
                "70",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-nav__inner",
          "cssText": ".global-nav__inner { flex-wrap: nowrap; position: relative; }",
          "urls": [],
          "group": "screen and (min-width: 70em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 70em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "70em",
                "70",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-nav__inner > ul",
          "cssText": ".global-nav__inner > ul { background-color: rgb(255, 255, 255); display: flex; flex-basis: 100%; flex-wrap: wrap; padding-bottom: 2.8125rem; width: 100%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 70em) {\n  .global-nav__inner > ul { flex-basis: auto; flex-wrap: nowrap; margin-inline-start: 3em; padding-bottom: 0px; }\n}",
          "urls": [],
          "group": "screen and (min-width: 70em)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 70em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "70em",
                "70",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-nav__inner > ul",
          "cssText": ".global-nav__inner > ul { flex-basis: auto; flex-wrap: nowrap; margin-inline-start: 3em; padding-bottom: 0px; }",
          "urls": [],
          "group": "screen and (min-width: 70em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 70em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "70em",
                "70",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 70em) {\n  li.top-nav-item + li.top-nav-item { margin-inline-start: 0.5rem; }\n}",
          "urls": [],
          "group": "screen and (min-width: 70em)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 70em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "70em",
                "70",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "li.top-nav-item + li.top-nav-item",
          "cssText": "li.top-nav-item + li.top-nav-item { margin-inline-start: 0.5rem; }",
          "urls": [],
          "group": "screen and (min-width: 70em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 70em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "70em",
                "70",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 70em) {\n  .global-nav__inner > ul > li:last-child { margin-inline-start: auto; }\n}",
          "urls": [],
          "group": "screen and (min-width: 70em)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 70em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "70em",
                "70",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-nav__inner > ul > li:last-child",
          "cssText": ".global-nav__inner > ul > li:last-child { margin-inline-start: auto; }",
          "urls": [],
          "group": "screen and (min-width: 70em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 70em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "70em",
                "70",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-nav__inner .top-nav-item",
          "cssText": ".global-nav__inner .top-nav-item { border-bottom: 1px solid rgb(202, 201, 201); flex-basis: 100%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 70em) {\n  .global-nav__inner .top-nav-item { border-bottom: none; flex-basis: auto; }\n}",
          "urls": [],
          "group": "screen and (min-width: 70em)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 70em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "70em",
                "70",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-nav__inner .top-nav-item",
          "cssText": ".global-nav__inner .top-nav-item { border-bottom: none; flex-basis: auto; }",
          "urls": [],
          "group": "screen and (min-width: 70em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 70em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "70em",
                "70",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".nav-link",
          "cssText": ".nav-link { color: rgb(17, 17, 17); display: block; padding: 0.625rem 0px; position: relative; text-decoration: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 70em) {\n  .nav-link { display: inline-block; }\n}",
          "urls": [],
          "group": "screen and (min-width: 70em)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 70em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "70em",
                "70",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".nav-link",
          "cssText": ".nav-link { display: inline-block; }",
          "urls": [],
          "group": "screen and (min-width: 70em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 70em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "70em",
                "70",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-nav__inner .top-nav-item > .nav-link",
          "cssText": ".global-nav__inner .top-nav-item > .nav-link { font-weight: 600; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-nav__inner .has-children > .nav-link",
          "cssText": ".global-nav__inner .has-children > .nav-link { align-items: center; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-nav__inner .has-children > .nav-link::after",
          "cssText": ".global-nav__inner .has-children > .nav-link::after { block-size: 0.4375rem; border-color: black; border-style: solid; border-width: 0px 0.125rem 0.125rem 0px; content: \"\"; inline-size: 0.4375rem; margin-inline-start: 0.75rem; visibility: hidden; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".logo-link:focus",
          "cssText": ".logo-link:focus { box-shadow: rgb(0, 0, 0) 0px 0px 0px 3px; outline: rgb(249, 220, 74) solid 3px; outline-offset: 3px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 70em) {\n  .logo-link { position: relative; }\n  .logo-link::before { background-color: rgb(0, 90, 156); bottom: -0.1875rem; content: \"\"; display: none; height: 0.1875rem; left: 0px; position: absolute; width: 100%; }\n  .logo-link:hover::before { display: block; }\n}",
          "urls": [],
          "group": "screen and (min-width: 70em)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 70em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "70em",
                "70",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".logo-link",
          "cssText": ".logo-link { position: relative; }",
          "urls": [],
          "group": "screen and (min-width: 70em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 70em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "70em",
                "70",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".logo-link::before",
          "cssText": ".logo-link::before { background-color: rgb(0, 90, 156); bottom: -0.1875rem; content: \"\"; display: none; height: 0.1875rem; left: 0px; position: absolute; width: 100%; }",
          "urls": [],
          "group": "screen and (min-width: 70em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 70em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "70em",
                "70",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".logo-link:hover::before",
          "cssText": ".logo-link:hover::before { display: block; }",
          "urls": [],
          "group": "screen and (min-width: 70em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 70em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "70em",
                "70",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".icon-link",
          "cssText": ".icon-link { align-items: center; color: rgb(17, 17, 17); display: flex; min-height: 2.75rem; text-decoration: none !important; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 70em) {\n  .icon-link { display: inline-flex; justify-content: center; height: 100%; min-width: 2.75rem; }\n}",
          "urls": [],
          "group": "screen and (min-width: 70em)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 70em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "70em",
                "70",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".icon-link",
          "cssText": ".icon-link { display: inline-flex; justify-content: center; height: 100%; min-width: 2.75rem; }",
          "urls": [],
          "group": "screen and (min-width: 70em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 70em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "70em",
                "70",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".icon-link::before",
          "cssText": ".icon-link::before { bottom: 0px !important; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".icon-link:visited, .icon-link:hover",
          "cssText": ".icon-link:visited, .icon-link:hover { color: rgb(17, 17, 17) !important; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".icon-link:focus",
          "cssText": ".icon-link:focus { background-color: rgb(249, 220, 74); background-image: linear-gradient(to top, rgb(0, 0, 0) 3px, rgb(249, 220, 74) 3px, rgb(249, 220, 74)); color: rgb(0, 0, 0); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".icon-link .hide-at-max-width",
          "cssText": ".icon-link .hide-at-max-width { margin-inline-start: 0.625rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 70em) {\n  .icon-link .hide-at-max-width { border: 0px; clip: rect(0px, 0px, 0px, 0px); clip-path: inset(100%); height: 1px; margin-inline-start: 0px; overflow: hidden; padding: 0px; position: absolute; white-space: nowrap; width: 1px; }\n}",
          "urls": [],
          "group": "screen and (min-width: 70em)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 70em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "70em",
                "70",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".icon-link .hide-at-max-width",
          "cssText": ".icon-link .hide-at-max-width { border: 0px; clip: rect(0px, 0px, 0px, 0px); clip-path: inset(100%); height: 1px; margin-inline-start: 0px; overflow: hidden; padding: 0px; position: absolute; white-space: nowrap; width: 1px; }",
          "urls": [],
          "group": "screen and (min-width: 70em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 70em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "70em",
                "70",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".account-login",
          "cssText": ".account-login { flex-basis: 100%; font-size: 0.875rem !important; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 70em) {\n  .account-login { flex-basis: auto; padding-bottom: 0.625rem; padding-top: 0.625rem; }\n}",
          "urls": [],
          "group": "screen and (min-width: 70em)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 70em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "70em",
                "70",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".account-login",
          "cssText": ".account-login { flex-basis: auto; padding-bottom: 0.625rem; padding-top: 0.625rem; }",
          "urls": [],
          "group": "screen and (min-width: 70em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 70em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "70em",
                "70",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 70em) {\n  .global-nav__inner .top-nav-item > :first-child { font-size: 1rem; height: 100%; line-height: 1.6875rem; position: relative; white-space: nowrap; padding: 0.625rem 0.3125rem 0.4375rem !important; }\n  .global-nav__inner .top-nav-item > :first-child::before { background-color: rgb(0, 90, 156); bottom: -0.125rem; content: \"\"; display: none; height: 0.1875rem; left: 0px; position: absolute; width: 100%; }\n  .global-nav__inner .top-nav-item > :first-child:hover::before { display: block; }\n  .global-nav__inner .top-nav-item > :first-child:focus { background-color: rgb(249, 220, 74); background-image: linear-gradient(to top, rgb(0, 0, 0) 3px, rgb(249, 220, 74) 3px, rgb(249, 220, 74)); color: rgb(0, 0, 0); }\n  .global-nav__inner .top-nav-item > :first-child:focus:hover::before { display: none; }\n}",
          "urls": [],
          "group": "screen and (min-width: 70em)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 70em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "70em",
                "70",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-nav__inner .top-nav-item > :first-child",
          "cssText": ".global-nav__inner .top-nav-item > :first-child { font-size: 1rem; height: 100%; line-height: 1.6875rem; position: relative; white-space: nowrap; padding: 0.625rem 0.3125rem 0.4375rem !important; }",
          "urls": [],
          "group": "screen and (min-width: 70em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 70em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "70em",
                "70",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-nav__inner .top-nav-item > :first-child::before",
          "cssText": ".global-nav__inner .top-nav-item > :first-child::before { background-color: rgb(0, 90, 156); bottom: -0.125rem; content: \"\"; display: none; height: 0.1875rem; left: 0px; position: absolute; width: 100%; }",
          "urls": [],
          "group": "screen and (min-width: 70em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 70em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "70em",
                "70",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-nav__inner .top-nav-item > :first-child:hover::before",
          "cssText": ".global-nav__inner .top-nav-item > :first-child:hover::before { display: block; }",
          "urls": [],
          "group": "screen and (min-width: 70em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 70em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "70em",
                "70",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-nav__inner .top-nav-item > :first-child:focus",
          "cssText": ".global-nav__inner .top-nav-item > :first-child:focus { background-color: rgb(249, 220, 74); background-image: linear-gradient(to top, rgb(0, 0, 0) 3px, rgb(249, 220, 74) 3px, rgb(249, 220, 74)); color: rgb(0, 0, 0); }",
          "urls": [],
          "group": "screen and (min-width: 70em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 70em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "70em",
                "70",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-nav__inner .top-nav-item > :first-child:focus:hover::before",
          "cssText": ".global-nav__inner .top-nav-item > :first-child:focus:hover::before { display: none; }",
          "urls": [],
          "group": "screen and (min-width: 70em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 70em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "70em",
                "70",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-nav__inner .nav__submenu",
          "cssText": ".global-nav__inner .nav__submenu { display: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "#archive-nav ul, #category-nav ul",
          "cssText": "#archive-nav ul, #category-nav ul { background-color: rgb(255, 255, 255); border: 1px solid rgb(202, 201, 201); height: 11.25rem; overflow: auto; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "#archive-nav ul a, #archive-nav ul .heading-anchor, #category-nav ul a, #category-nav ul .heading-anchor",
          "cssText": "#archive-nav ul a, #archive-nav ul .heading-anchor, #category-nav ul a, #category-nav ul .heading-anchor { display: block; padding: 0.625rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "#breadcrumb",
          "cssText": "#breadcrumb { padding-bottom: 0.9375rem; padding-top: 0.625rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "#breadcrumb .l-cluster > *",
          "cssText": "#breadcrumb .l-cluster > * { margin: 0px -0.6875rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "#breadcrumb .l-cluster.l-cluster > * > *",
          "cssText": "#breadcrumb .l-cluster.l-cluster > * > * { margin: 0px 0px 0px 0.6875rem; padding-right: 1em; position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[dir=\"rtl\"] #breadcrumb .l-cluster.l-cluster > * > *",
          "cssText": "[dir=\"rtl\"] #breadcrumb .l-cluster.l-cluster > * > * { margin: 0px 0.6875rem 0px 0px; padding-left: 1em; padding-right: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".breadcrumbs a, .breadcrumbs .heading-anchor",
          "cssText": ".breadcrumbs a, .breadcrumbs .heading-anchor { font-size: 0.9375rem; line-height: 1.5; color: rgb(17, 17, 17); display: block; padding-bottom: 0.6875rem; padding-top: 0.6875rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".breadcrumbs a:visited, .breadcrumbs .heading-anchor:visited, .breadcrumbs a:hover, .breadcrumbs .heading-anchor:hover, .breadcrumbs a:active, .breadcrumbs .heading-anchor:active",
          "cssText": ".breadcrumbs a:visited, .breadcrumbs .heading-anchor:visited, .breadcrumbs a:hover, .breadcrumbs .heading-anchor:hover, .breadcrumbs a:active, .breadcrumbs .heading-anchor:active { color: rgb(17, 17, 17); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".breadcrumbs [aria-current]",
          "cssText": ".breadcrumbs [aria-current] { font-weight: 600; text-decoration: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".breadcrumbs [aria-current]:hover, .breadcrumbs [aria-current]:focus",
          "cssText": ".breadcrumbs [aria-current]:hover, .breadcrumbs [aria-current]:focus { outline-color: rgb(17, 17, 17); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".breadcrumbs li:not(:last-child)::after",
          "cssText": ".breadcrumbs li:not(:last-child)::after { border-style: solid; border-width: 0.1em 0.1em 0px 0px; content: \"\"; display: block; height: 0.5em; position: absolute; right: 0.4em; top: 50%; transform: rotate(45deg) translateY(-50%); width: 0.5em; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[dir=\"rtl\"] .breadcrumbs li:not(:last-child)::after",
          "cssText": "[dir=\"rtl\"] .breadcrumbs li:not(:last-child)::after { border-width: 0px 0px 0.1em 0.1em; left: 0.1em; right: auto; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".banner.banner--access-control.acl-private, .banner.banner--access-control.acl-user",
          "cssText": ".banner.banner--access-control.acl-private, .banner.banner--access-control.acl-user { background-color: rgb(35, 121, 120); color: rgb(255, 255, 255); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".banner.banner--access-control.acl-private .icon, .banner.banner--access-control.acl-user .icon",
          "cssText": ".banner.banner--access-control.acl-private .icon, .banner.banner--access-control.acl-user .icon { filter: invert(1); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".banner--access-control.acl-member",
          "cssText": ".banner--access-control.acl-member { background-color: rgb(221, 176, 200); color: rgb(0, 0, 0); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".banner--access-control.acl-team",
          "cssText": ".banner--access-control.acl-team { background-color: rgb(236, 112, 112); color: rgb(0, 0, 0); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "main, #main",
          "cssText": "main, #main { box-sizing: content-box; margin-left: auto; margin-right: auto; max-width: 70rem; padding: 1.5rem 5vw 6.25rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "#main .component + .component",
          "cssText": "#main .component + .component { margin-top: 5rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 48em) {\n  #main .component + .component { margin-top: 6.25rem; }\n}",
          "urls": [],
          "group": "screen and (min-width: 48em)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 48em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "48em",
                "48",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "#main .component + .component",
          "cssText": "#main .component + .component { margin-top: 6.25rem; }",
          "urls": [],
          "group": "screen and (min-width: 48em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 48em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "48em",
                "48",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": "#main .component.u-full-width + .component.u-full-width",
          "cssText": "#main .component.u-full-width + .component.u-full-width { margin-top: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero",
          "cssText": ".hero { background-color: rgb(248, 248, 251); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 70em) {\n  .hero { padding-top: 2.875rem; }\n}",
          "urls": [],
          "group": "screen and (min-width: 70em)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 70em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "70em",
                "70",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero",
          "cssText": ".hero { padding-top: 2.875rem; }",
          "urls": [],
          "group": "screen and (min-width: 70em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 70em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "70em",
                "70",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero .l-sidebar > *, .hero .l-sidebar > * > *",
          "cssText": ".hero .l-sidebar > *, .hero .l-sidebar > * > * { margin: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero .l-sidebar .sidebar",
          "cssText": ".hero .l-sidebar .sidebar { flex-basis: 31.25rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero .l-sidebar .not-sidebar",
          "cssText": ".hero .l-sidebar .not-sidebar { min-width: 50%; padding-bottom: 1.875rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 70em) {\n  .hero .l-sidebar .not-sidebar > * { max-width: 31.5rem; }\n}",
          "urls": [],
          "group": "screen and (min-width: 70em)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 70em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "70em",
                "70",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero .l-sidebar .not-sidebar > *",
          "cssText": ".hero .l-sidebar .not-sidebar > * { max-width: 31.5rem; }",
          "urls": [],
          "group": "screen and (min-width: 70em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 70em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "70em",
                "70",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero .lead",
          "cssText": ".hero .lead { margin-bottom: 1.125rem; margin-top: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero img",
          "cssText": ".hero img { margin-left: auto; margin-right: auto; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 48em) {\n  .hero img { max-width: 31.25rem; }\n}",
          "urls": [],
          "group": "screen and (min-width: 48em)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 48em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "48em",
                "48",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero img",
          "cssText": ".hero img { max-width: 31.25rem; }",
          "urls": [],
          "group": "screen and (min-width: 48em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 48em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "48em",
                "48",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero h1",
          "cssText": ".hero h1 { margin-bottom: 1rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero + *",
          "cssText": ".hero + * { margin-top: 3.125rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero .button",
          "cssText": ".hero .button { align-items: center; align-self: flex-start; display: inline-flex; justify-content: center; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero--video .sidebar__video",
          "cssText": ".hero--video .sidebar__video { margin-inline: auto; max-inline-size: 31.25rem; position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero--video video",
          "cssText": ".hero--video video { display: block; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero--listing",
          "cssText": ".hero--listing { background-color: rgb(255, 255, 255); margin-bottom: 1.25rem; padding-bottom: 2.5rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero--listing + *",
          "cssText": ".hero--listing + * { margin-top: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero--listing .filters.l-switcher",
          "cssText": ".hero--listing .filters.l-switcher { margin: -0.625rem; overflow: visible; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero--listing .filters.l-switcher > * > *",
          "cssText": ".hero--listing .filters.l-switcher > * > * { min-width: 33.333%; padding: 0.625rem; width: calc(-92000% + 846400px); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero--listing .filters > div",
          "cssText": ".hero--listing .filters > div { align-items: flex-start; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero--listing .filters > div > fieldset, .hero--listing .filters > div > .input-group-wrap",
          "cssText": ".hero--listing .filters > div > fieldset, .hero--listing .filters > div > .input-group-wrap { align-self: end; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero--listing .filters .field",
          "cssText": ".hero--listing .filters .field { margin-top: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero--listing .filters .button--ghost",
          "cssText": ".hero--listing .filters .button--ghost { padding-left: 0.1875rem; padding-right: 0.1875rem; text-decoration: underline; text-decoration-skip-ink: auto; text-underline-offset: 0.25em; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero--listing .filters .button--ghost:hover",
          "cssText": ".hero--listing .filters .button--ghost:hover { box-shadow: rgba(84, 84, 84, 0.25) 0px 0px 4px 2px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero--listing .filters .button--ghost:focus",
          "cssText": ".hero--listing .filters .button--ghost:focus { border-color: inherit; box-shadow: 0px 0px 0px 2px inset; outline: rgb(249, 220, 74) solid 3px; outline-offset: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero--listing .browse",
          "cssText": ".hero--listing .browse { margin: -0.625rem; overflow: visible; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero--listing .browse > *",
          "cssText": ".hero--listing .browse > * { display: flex; flex-wrap: wrap; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero--listing .browse > * > *",
          "cssText": ".hero--listing .browse > * > * { padding: 0.625rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero--listing .browse h2",
          "cssText": ".hero--listing .browse h2 { font-size: 1rem; font-weight: normal; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".translations",
          "cssText": ".translations { background-color: rgb(248, 248, 251); padding: 1.25rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".translations .l-sidebar > *",
          "cssText": ".translations .l-sidebar > * { align-items: center; margin-bottom: 0px; margin-top: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".translations .l-sidebar > * > *",
          "cssText": ".translations .l-sidebar > * > * { margin-bottom: 0px; margin-top: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".translations .l-sidebar .sidebar",
          "cssText": ".translations .l-sidebar .sidebar { flex-basis: auto; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".translations .l-sidebar .not-sidebar",
          "cssText": ".translations .l-sidebar .not-sidebar { min-width: 70%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".translations.l-cluster > *",
          "cssText": ".translations.l-cluster > * { margin: 0px -0.625rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".translations.l-cluster > * > *",
          "cssText": ".translations.l-cluster > * > * { margin: 0px 0.625rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".translations + *",
          "cssText": ".translations + * { margin-top: 1.875rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".translations h2, .translations h3, .translations h5, .translations .sidebar span",
          "cssText": ".translations h2, .translations h3, .translations h5, .translations .sidebar span { font-size: 1rem; font-weight: normal; padding-bottom: 0.625rem; padding-top: 0.625rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".translations a, .translations .heading-anchor",
          "cssText": ".translations a, .translations .heading-anchor { display: block; padding-bottom: 0.625rem; padding-top: 0.625rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".landing .translations, .ecosystem .translations",
          "cssText": ".landing .translations, .ecosystem .translations { padding: 0px; margin-top: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".landing .translations .sidebar span, .ecosystem .translations .sidebar span",
          "cssText": ".landing .translations .sidebar span, .ecosystem .translations .sidebar span { padding-inline-end: 1em; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".landing .translations .l-sidebar .not-sidebar, .ecosystem .translations .l-sidebar .not-sidebar",
          "cssText": ".landing .translations .l-sidebar .not-sidebar, .ecosystem .translations .l-sidebar .not-sidebar { min-width: 70%; padding-bottom: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".landing .translations + *, .ecosystem .translations + *",
          "cssText": ".landing .translations + *, .ecosystem .translations + * { margin-top: 2em; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".toc + *",
          "cssText": ".toc + * { margin-block-start: 1.875rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 70em) {\n  .toc + * { margin-block-start: 5rem; }\n}",
          "urls": [],
          "group": "screen and (min-width: 70em)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 70em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "70em",
                "70",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".toc + *",
          "cssText": ".toc + * { margin-block-start: 5rem; }",
          "urls": [],
          "group": "screen and (min-width: 70em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 70em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "70em",
                "70",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".toc h2",
          "cssText": ".toc h2 { font-size: 1rem; font-weight: normal; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".toc > ul",
          "cssText": ".toc > ul { border-inline-start: 3px solid rgb(0, 90, 156); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".toc ul",
          "cssText": ".toc ul { line-height: 1em; padding-inline-start: 0.9375rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".toc ul ul",
          "cssText": ".toc ul ul { list-style: inside circle; padding-inline-start: 1.875rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".toc ul a, .toc ul .heading-anchor",
          "cssText": ".toc ul a, .toc ul .heading-anchor { display: inline-block; padding-block: 0.625rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".component--text > *",
          "cssText": ".component--text > * { max-width: 41.25rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".component--text > * + h2, .component--text > * + h3, .component--text > * + h4, .component--text > * + h5, .component--text > * + h6",
          "cssText": ".component--text > * + h2, .component--text > * + h3, .component--text > * + h4, .component--text > * + h5, .component--text > * + h6 { margin-top: 2em; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".component--quote",
          "cssText": ".component--quote { font-size: 1.125rem; line-height: 1.5; color: rgb(117, 51, 108); font-weight: bold; margin-inline: 0.625rem 0px; padding: 1.25rem; position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".component--quote::before",
          "cssText": ".component--quote::before { background-color: rgb(117, 51, 108); border-radius: 0.3125rem; left: -0.625rem; width: 0.625rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".component--quote > *",
          "cssText": ".component--quote > * { max-width: 39.375rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[dir=\"rtl\"] .component--quote::before",
          "cssText": "[dir=\"rtl\"] .component--quote::before { left: auto; right: -0.625rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".component--image figcaption",
          "cssText": ".component--image figcaption { font-size: 0.9375rem; line-height: 1.5; margin-block-start: 1em; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".component--image figcaption > *",
          "cssText": ".component--image figcaption > * { max-width: 33.75rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".component--image figcaption > a, .component--image figcaption > .heading-anchor",
          "cssText": ".component--image figcaption > a, .component--image figcaption > .heading-anchor { align-self: flex-start; display: inline-block; margin: 0px; padding-bottom: 0.625rem; padding-top: 0.625rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".component--video iframe",
          "cssText": ".component--video iframe { border: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".component--video figcaption",
          "cssText": ".component--video figcaption { font-size: 0.9375rem; line-height: 1.5; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".component--video figcaption > *",
          "cssText": ".component--video figcaption > * { max-width: 33.75rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".component--video figcaption > a, .component--video figcaption > .heading-anchor",
          "cssText": ".component--video figcaption > a, .component--video figcaption > .heading-anchor { display: inline-block; margin: 0px; padding-bottom: 0.625rem; padding-top: 0.625rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".note",
          "cssText": ".note { border-width: 5px; margin-bottom: 1.875rem; max-width: 47rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".note--error",
          "cssText": ".note--error { border-color: rgb(168, 38, 21); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".note--info",
          "cssText": ".note--info { border-color: rgb(0, 42, 86); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".note--success",
          "cssText": ".note--success { border-color: rgb(4, 103, 4); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".note--warning",
          "cssText": ".note--warning { border-color: rgb(194, 134, 5); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".component--columns",
          "cssText": ".component--columns { overflow: hidden; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 48em) {\n  .component--columns > ul { display: flex; flex-wrap: wrap; margin: -1.5%; }\n}",
          "urls": [],
          "group": "screen and (min-width: 48em)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 48em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "48em",
                "48",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".component--columns > ul",
          "cssText": ".component--columns > ul { display: flex; flex-wrap: wrap; margin: -1.5%; }",
          "urls": [],
          "group": "screen and (min-width: 48em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 48em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "48em",
                "48",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".component--columns > ul li + li",
          "cssText": ".component--columns > ul li + li { margin-top: 1.25rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 48em) {\n  .component--columns > ul li + li { margin-top: 0px; }\n}",
          "urls": [],
          "group": "screen and (min-width: 48em)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 48em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "48em",
                "48",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".component--columns > ul li + li",
          "cssText": ".component--columns > ul li + li { margin-top: 0px; }",
          "urls": [],
          "group": "screen and (min-width: 48em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 48em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "48em",
                "48",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 48em) {\n  .component--columns--images > ul > li { flex: 1 0 33%; max-width: 50%; padding: 1.5%; }\n}",
          "urls": [],
          "group": "screen and (min-width: 48em)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 48em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "48em",
                "48",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".component--columns--images > ul > li",
          "cssText": ".component--columns--images > ul > li { flex: 1 0 33%; max-width: 50%; padding: 1.5%; }",
          "urls": [],
          "group": "screen and (min-width: 48em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 48em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "48em",
                "48",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 48em) {\n  .component--columns--images li:nth-last-child(n+4):nth-last-child(-n+4):first-child, .component--columns--images li:nth-last-child(n+4):nth-last-child(-n+4):first-child ~ li { flex-basis: 50%; }\n}",
          "urls": [],
          "group": "screen and (min-width: 48em)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 48em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "48em",
                "48",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".component--columns--images li:nth-last-child(n+4):nth-last-child(-n+4):first-child, .component--columns--images li:nth-last-child(n+4):nth-last-child(-n+4):first-child ~ li",
          "cssText": ".component--columns--images li:nth-last-child(n+4):nth-last-child(-n+4):first-child, .component--columns--images li:nth-last-child(n+4):nth-last-child(-n+4):first-child ~ li { flex-basis: 50%; }",
          "urls": [],
          "group": "screen and (min-width: 48em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 48em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "48em",
                "48",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 48em) {\n  .component--columns--icons > ul > li { flex: 1 0 50%; max-width: 50%; padding: 1.5%; }\n}",
          "urls": [],
          "group": "screen and (min-width: 48em)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 48em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "48em",
                "48",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".component--columns--icons > ul > li",
          "cssText": ".component--columns--icons > ul > li { flex: 1 0 50%; max-width: 50%; padding: 1.5%; }",
          "urls": [],
          "group": "screen and (min-width: 48em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 48em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "48em",
                "48",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 70em) {\n  .component--columns--icons > ul > li { flex-basis: 25%; }\n}",
          "urls": [],
          "group": "screen and (min-width: 70em)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 70em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "70em",
                "70",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".component--columns--icons > ul > li",
          "cssText": ".component--columns--icons > ul > li { flex-basis: 25%; }",
          "urls": [],
          "group": "screen and (min-width: 70em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 70em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "70em",
                "70",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 70em) {\n  .component--columns--icons li:nth-last-child(n+5), .component--columns--icons li:nth-last-child(n+5) ~ li { flex-basis: 33%; }\n}",
          "urls": [],
          "group": "screen and (min-width: 70em)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 70em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "70em",
                "70",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".component--columns--icons li:nth-last-child(n+5), .component--columns--icons li:nth-last-child(n+5) ~ li",
          "cssText": ".component--columns--icons li:nth-last-child(n+5), .component--columns--icons li:nth-last-child(n+5) ~ li { flex-basis: 33%; }",
          "urls": [],
          "group": "screen and (min-width: 70em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 70em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "70em",
                "70",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 70em) {\n  .component--columns--icons li:nth-last-child(n+7), .component--columns--icons li:nth-last-child(n+7) ~ li { flex-basis: 25%; }\n}",
          "urls": [],
          "group": "screen and (min-width: 70em)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 70em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "70em",
                "70",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".component--columns--icons li:nth-last-child(n+7), .component--columns--icons li:nth-last-child(n+7) ~ li",
          "cssText": ".component--columns--icons li:nth-last-child(n+7), .component--columns--icons li:nth-last-child(n+7) ~ li { flex-basis: 25%; }",
          "urls": [],
          "group": "screen and (min-width: 70em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 70em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "70em",
                "70",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".card",
          "cssText": ".card { background-color: rgb(255, 255, 255); border-radius: 0.25rem; display: flex; flex-direction: column; height: 100%; overflow: hidden; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".card--event",
          "cssText": ".card--event { border-left: 0.375rem solid; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[dir=\"rtl\"] .card--event",
          "cssText": "[dir=\"rtl\"] .card--event { border-left: 0px; border-right: 0.375rem solid; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".card--event, .card--member, .card--news, .card--group",
          "cssText": ".card--event, .card--member, .card--news, .card--group { box-shadow: rgba(55, 70, 95, 0.12) -1px 1px 4px 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".card--event.conference",
          "cssText": ".card--event.conference { border-color: rgb(35, 121, 120); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".card--event.meeting",
          "cssText": ".card--event.meeting { border-color: rgb(27, 192, 215); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".card--event.talk",
          "cssText": ".card--event.talk { border-color: rgb(0, 42, 86); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".card--event.workshop",
          "cssText": ".card--event.workshop { border-color: rgb(233, 55, 55); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".card__text",
          "cssText": ".card__text { flex-grow: 1; order: 1; padding-top: 1rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".card--group .card__text",
          "cssText": ".card--group .card__text { max-width: 41.25rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".card__text > a:not([class]), .card__text > .heading-anchor",
          "cssText": ".card__text > a:not([class]), .card__text > .heading-anchor { align-self: flex-start; margin-top: 0.375rem; padding-bottom: 0.625rem; padding-top: 0.625rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".card__heading",
          "cssText": ".card__heading { font-size: 1.125rem; line-height: 1.5; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".card__image img",
          "cssText": ".card__image img { border-radius: 0.25rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".card__link",
          "cssText": ".card__link { border: 0px; color: rgb(17, 17, 17); text-decoration: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".card__link:hover",
          "cssText": ".card__link:hover { text-decoration: underline; text-decoration-skip-ink: auto; text-underline-offset: 0.25em; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".card__link:focus",
          "cssText": ".card__link:focus { background-color: rgb(249, 220, 74); background-image: linear-gradient(to top, rgb(0, 0, 0) 3px, rgb(249, 220, 74) 3px, rgb(249, 220, 74)); color: rgb(0, 0, 0); text-decoration: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".card--user.l-sidebar",
          "cssText": ".card--user.l-sidebar { padding-bottom: 1.875rem; padding-top: 2.5rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".card--user.l-sidebar .sidebar",
          "cssText": ".card--user.l-sidebar .sidebar { flex-basis: auto; order: -1; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".card--user.l-sidebar .sidebar img",
          "cssText": ".card--user.l-sidebar .sidebar img { width: 6.25rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".card--user.l-sidebar .not-sidebar",
          "cssText": ".card--user.l-sidebar .not-sidebar { min-width: calc(70% - 1.5rem); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".card--user.l-sidebar .not-sidebar > div",
          "cssText": ".card--user.l-sidebar .not-sidebar > div { max-width: 41.25rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".card--user.l-sidebar .not-sidebar > div > * + *",
          "cssText": ".card--user.l-sidebar .not-sidebar > div > * + * { margin-top: 1.25rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".card--user.l-sidebar .l-cluster > *",
          "cssText": ".card--user.l-sidebar .l-cluster > * { align-items: center; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".card--user.l-sidebar .l-cluster > *, .card--user.l-sidebar .l-cluster.l-cluster > * > *",
          "cssText": ".card--user.l-sidebar .l-cluster > *, .card--user.l-sidebar .l-cluster.l-cluster > * > * { margin-bottom: 0px; margin-top: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".card--user.l-sidebar .l-cluster a, .card--user.l-sidebar .l-cluster .heading-anchor",
          "cssText": ".card--user.l-sidebar .l-cluster a, .card--user.l-sidebar .l-cluster .heading-anchor { display: inline-block; padding: 0.75rem 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".tag-list.tag-list",
          "cssText": ".tag-list.tag-list { margin: -0.625rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".tag-list.tag-list li",
          "cssText": ".tag-list.tag-list li { margin: 0.625rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".tag",
          "cssText": ".tag { font-size: 0.875rem; line-height: 1.42857; background-color: rgba(206, 205, 205, 0.5); background-clip: padding-box; border: 2px solid rgba(206, 205, 205, 0.5); border-radius: 0.25rem; display: inline-block; padding: 0.15625rem 0.3125rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "a.tag, .tag.heading-anchor",
          "cssText": "a.tag, .tag.heading-anchor { position: relative; text-decoration: underline; z-index: 10; text-decoration-skip-ink: auto; text-underline-offset: 0.25em; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 48em) {\n  .component--fifty-fifty { align-items: flex-start; display: flex; flex-wrap: wrap; justify-content: space-between; }\n}",
          "urls": [],
          "group": "screen and (min-width: 48em)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 48em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "48em",
                "48",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".component--fifty-fifty",
          "cssText": ".component--fifty-fifty { align-items: flex-start; display: flex; flex-wrap: wrap; justify-content: space-between; }",
          "urls": [],
          "group": "screen and (min-width: 48em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 48em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "48em",
                "48",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".component--fifty-fifty > * + *",
          "cssText": ".component--fifty-fifty > * + * { margin-top: 1rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 48em) {\n  .component--fifty-fifty > * + * { margin-top: 0px; }\n}",
          "urls": [],
          "group": "screen and (min-width: 48em)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 48em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "48em",
                "48",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".component--fifty-fifty > * + *",
          "cssText": ".component--fifty-fifty > * + * { margin-top: 0px; }",
          "urls": [],
          "group": "screen and (min-width: 48em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 48em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "48em",
                "48",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 48em) {\n  .component--fifty-fifty__text { flex-basis: 52%; }\n}",
          "urls": [],
          "group": "screen and (min-width: 48em)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 48em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "48em",
                "48",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".component--fifty-fifty__text",
          "cssText": ".component--fifty-fifty__text { flex-basis: 52%; }",
          "urls": [],
          "group": "screen and (min-width: 48em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 48em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "48em",
                "48",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 64em) {\n  .component--fifty-fifty__text { flex-basis: 45%; }\n}",
          "urls": [],
          "group": "screen and (min-width: 64em)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 64em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "64em",
                "64",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".component--fifty-fifty__text",
          "cssText": ".component--fifty-fifty__text { flex-basis: 45%; }",
          "urls": [],
          "group": "screen and (min-width: 64em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 64em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "64em",
                "64",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".component--fifty-fifty__text .l-box",
          "cssText": ".component--fifty-fifty__text .l-box { display: flex; flex-direction: column; justify-content: flex-start; margin-top: 1.875rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".component--fifty-fifty__text .l-box > * + *",
          "cssText": ".component--fifty-fifty__text .l-box > * + * { margin-top: 1rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".component--fifty-fifty__text .l-box a, .component--fifty-fifty__text .l-box .heading-anchor",
          "cssText": ".component--fifty-fifty__text .l-box a, .component--fifty-fifty__text .l-box .heading-anchor { align-self: flex-start; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 48em) {\n  .component--fifty-fifty .image, .component--fifty-fifty .illustration { flex-basis: 45%; }\n}",
          "urls": [],
          "group": "screen and (min-width: 48em)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 48em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "48em",
                "48",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".component--fifty-fifty .image, .component--fifty-fifty .illustration",
          "cssText": ".component--fifty-fifty .image, .component--fifty-fifty .illustration { flex-basis: 45%; }",
          "urls": [],
          "group": "screen and (min-width: 48em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 48em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "48em",
                "48",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".component--fifty-fifty .image img",
          "cssText": ".component--fifty-fifty .image img { border-radius: 0.25rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".component--fifty-fifty .image .l-frame",
          "cssText": ".component--fifty-fifty .image .l-frame { padding-bottom: 66.67%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 48em) {\n  .component--fifty-fifty .image .l-frame { padding-bottom: 100%; }\n}",
          "urls": [],
          "group": "screen and (min-width: 48em)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 48em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "48em",
                "48",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".component--fifty-fifty .image .l-frame",
          "cssText": ".component--fifty-fifty .image .l-frame { padding-bottom: 100%; }",
          "urls": [],
          "group": "screen and (min-width: 48em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 48em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "48em",
                "48",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".component--fifty-fifty .illustration .l-frame",
          "cssText": ".component--fifty-fifty .illustration .l-frame { padding-bottom: 75%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 48em) {\n  .component--fifty-fifty.reversed .component--fifty-fifty__text { order: -1; }\n}",
          "urls": [],
          "group": "screen and (min-width: 48em)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 48em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "48em",
                "48",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".component--fifty-fifty.reversed .component--fifty-fifty__text",
          "cssText": ".component--fifty-fifty.reversed .component--fifty-fifty__text { order: -1; }",
          "urls": [],
          "group": "screen and (min-width: 48em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 48em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "48em",
                "48",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 64em) {\n  .component--evangelists { display: flex; flex-wrap: wrap; justify-content: space-between; }\n}",
          "urls": [],
          "group": "screen and (min-width: 64em)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 64em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "64em",
                "64",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".component--evangelists",
          "cssText": ".component--evangelists { display: flex; flex-wrap: wrap; justify-content: space-between; }",
          "urls": [],
          "group": "screen and (min-width: 64em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 64em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "64em",
                "64",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".component--evangelists > * + *",
          "cssText": ".component--evangelists > * + * { margin-top: 1rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 64em) {\n  .component--evangelists > * + * { margin-top: 0px; }\n}",
          "urls": [],
          "group": "screen and (min-width: 64em)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 64em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "64em",
                "64",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".component--evangelists > * + *",
          "cssText": ".component--evangelists > * + * { margin-top: 0px; }",
          "urls": [],
          "group": "screen and (min-width: 64em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 64em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "64em",
                "64",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 64em) {\n  .component--evangelists__text { flex-basis: 45%; }\n}",
          "urls": [],
          "group": "screen and (min-width: 64em)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 64em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "64em",
                "64",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".component--evangelists__text",
          "cssText": ".component--evangelists__text { flex-basis: 45%; }",
          "urls": [],
          "group": "screen and (min-width: 64em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 64em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "64em",
                "64",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".component--evangelists__text h2 ~ *",
          "cssText": ".component--evangelists__text h2 ~ * { max-width: 41.25rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".component--evangelists__list",
          "cssText": ".component--evangelists__list { background-color: rgb(0, 42, 86); border-radius: 0.375rem; color: rgb(255, 255, 255); overflow: hidden; padding-top: 1.5rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 64em) {\n  .component--evangelists__list { flex-basis: 45%; }\n}",
          "urls": [],
          "group": "screen and (min-width: 64em)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 64em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "64em",
                "64",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".component--evangelists__list",
          "cssText": ".component--evangelists__list { flex-basis: 45%; }",
          "urls": [],
          "group": "screen and (min-width: 64em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 64em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "64em",
                "64",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".component--evangelists__list h3",
          "cssText": ".component--evangelists__list h3 { padding-left: 1.5rem; padding-right: 1.5rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".component--evangelists__list .l-box",
          "cssText": ".component--evangelists__list .l-box { padding: 1.5rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".component--evangelists__list li + li",
          "cssText": ".component--evangelists__list li + li { border-top: 1px solid rgb(100, 155, 197); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".component--evangelists__list p",
          "cssText": ".component--evangelists__list p { margin-bottom: 0px; margin-top: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".component--evangelists__list .sidebar",
          "cssText": ".component--evangelists__list .sidebar { flex-basis: auto; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".component--evangelists__list .not-sidebar",
          "cssText": ".component--evangelists__list .not-sidebar { display: flex; flex-direction: column; justify-content: flex-start; min-width: calc(65% - 1.5rem); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".component--evangelists__list .not-sidebar > * + *",
          "cssText": ".component--evangelists__list .not-sidebar > * + * { margin-top: 0.75em; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".component--evangelists__list a, .component--evangelists__list .heading-anchor",
          "cssText": ".component--evangelists__list a, .component--evangelists__list .heading-anchor { color: rgb(255, 255, 255); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".component--evangelists__list a:visited, .component--evangelists__list .heading-anchor:visited, .component--evangelists__list a:hover, .component--evangelists__list .heading-anchor:hover, .component--evangelists__list a:active, .component--evangelists__list .heading-anchor:active",
          "cssText": ".component--evangelists__list a:visited, .component--evangelists__list .heading-anchor:visited, .component--evangelists__list a:hover, .component--evangelists__list .heading-anchor:hover, .component--evangelists__list a:active, .component--evangelists__list .heading-anchor:active { color: rgb(255, 255, 255); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".component--evangelists__list a:focus, .component--evangelists__list .heading-anchor:focus",
          "cssText": ".component--evangelists__list a:focus, .component--evangelists__list .heading-anchor:focus { background-color: rgb(249, 220, 74); background-image: linear-gradient(to top, rgb(0, 0, 0) 3px, rgb(249, 220, 74) 3px, rgb(249, 220, 74)); color: rgb(0, 0, 0); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".component--activity",
          "cssText": ".component--activity { background-color: rgb(248, 248, 251); padding-bottom: 3.125rem; padding-top: 3.125rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 64em) {\n  .component--activity .component--columns--images li:nth-last-child(n+4):nth-last-child(-n+4):first-child, .component--activity .component--columns--images li:nth-last-child(n+4):nth-last-child(-n+4):first-child ~ li { flex-basis: 25%; }\n}",
          "urls": [],
          "group": "screen and (min-width: 64em)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 64em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "64em",
                "64",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".component--activity .component--columns--images li:nth-last-child(n+4):nth-last-child(-n+4):first-child, .component--activity .component--columns--images li:nth-last-child(n+4):nth-last-child(-n+4):first-child ~ li",
          "cssText": ".component--activity .component--columns--images li:nth-last-child(n+4):nth-last-child(-n+4):first-child, .component--activity .component--columns--images li:nth-last-child(n+4):nth-last-child(-n+4):first-child ~ li { flex-basis: 25%; }",
          "urls": [],
          "group": "screen and (min-width: 64em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 64em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "64em",
                "64",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".component--activity .card",
          "cssText": ".component--activity .card { background-color: rgb(255, 255, 255); border-radius: 0.25rem; overflow: hidden; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".component--activity .card__text",
          "cssText": ".component--activity .card__text { padding: 1.25rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".component--activity .card__image img",
          "cssText": ".component--activity .card__image img { border-radius: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".component--collapsibles > div",
          "cssText": ".component--collapsibles > div { background-color: rgb(255, 255, 255); border-radius: 0.375rem; box-shadow: rgba(55, 70, 95, 0.12) -0.0625rem 0.0625rem 0.25rem; padding: 1.5625rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".component--collapsibles > div + div",
          "cssText": ".component--collapsibles > div + div { margin-top: 1rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[data-heading=\"collapsibles\"] span",
          "cssText": "[data-heading=\"collapsibles\"] span { display: flex; flex-direction: column; justify-content: flex-start; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[data-heading=\"collapsibles\"] span > * + *",
          "cssText": "[data-heading=\"collapsibles\"] span > * + * { margin-top: 1rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[data-heading=\"collapsibles\"] h3",
          "cssText": "[data-heading=\"collapsibles\"] h3 { font-size: 1.125rem; line-height: 1.5; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[data-heading=\"collapsibles\"] > *",
          "cssText": "[data-heading=\"collapsibles\"] > * { font-size: 0.9375rem; line-height: 1.5; display: block; font-weight: normal; margin-top: 1rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[data-heading=\"collapsibles\"] + * > *",
          "cssText": "[data-heading=\"collapsibles\"] + * > * { max-width: 41.25rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".component--group-list",
          "cssText": ".component--group-list { background-color: rgb(248, 248, 251); padding-bottom: 3.125rem; padding-top: 3.125rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".component--group-list__intro",
          "cssText": ".component--group-list__intro { max-width: 41.25rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".component--members",
          "cssText": ".component--members { background-color: rgb(248, 248, 251); padding-bottom: 1.5625rem; padding-top: 1.5625rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".component--members .l-center > h2, .component--members .l-center > p",
          "cssText": ".component--members .l-center > h2, .component--members .l-center > p { max-width: 41.25rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".component--members__grid",
          "cssText": ".component--members__grid { display: flex; flex-wrap: wrap; margin-bottom: 1rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSSupportsRule",
          "selector": "",
          "cssText": "@supports (display: grid) {\n  .component--members__grid { display: grid; grid-auto-rows: minmax(10.625rem, auto); gap: 1.25rem; grid-template-columns: repeat(auto-fill, minmax(10.625rem, 1fr)); }\n}",
          "urls": [],
          "group": "(display: grid)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "(display: grid)",
              "requiresEcho": true,
              "echoTokens": [
                "display",
                "grid"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".component--members__grid",
          "cssText": ".component--members__grid { display: grid; grid-auto-rows: minmax(10.625rem, auto); gap: 1.25rem; grid-template-columns: repeat(auto-fill, minmax(10.625rem, 1fr)); }",
          "urls": [],
          "group": "(display: grid)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "(display: grid)",
              "requiresEcho": true,
              "echoTokens": [
                "display",
                "grid"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".component--members__grid figure",
          "cssText": ".component--members__grid figure { align-items: center; background-color: rgb(255, 255, 255); display: flex; justify-content: center; margin-bottom: 1.25rem; margin-left: 0.625rem; margin-right: 0.625rem; flex: 1 1 10.625rem; position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSSupportsRule",
          "selector": "",
          "cssText": "@supports (display: grid) {\n  .component--members__grid figure { margin: 0px; }\n}",
          "urls": [],
          "group": "(display: grid)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "(display: grid)",
              "requiresEcho": true,
              "echoTokens": [
                "display",
                "grid"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".component--members__grid figure",
          "cssText": ".component--members__grid figure { margin: 0px; }",
          "urls": [],
          "group": "(display: grid)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "(display: grid)",
              "requiresEcho": true,
              "echoTokens": [
                "display",
                "grid"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".component--members__grid figcaption",
          "cssText": ".component--members__grid figcaption { font-size: 0.9375rem; line-height: 1.5; font-weight: bold; margin: 0.625rem; text-align: center; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".component--members__grid .l-box",
          "cssText": ".component--members__grid .l-box { max-width: 10.625rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".component--members__grid + a, .component--members__grid + .heading-anchor",
          "cssText": ".component--members__grid + a, .component--members__grid + .heading-anchor { align-self: flex-start; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".component--members__cta > *",
          "cssText": ".component--members__cta > * { align-items: center; margin-top: 1em; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".component--members__cta > * > :not(a):not(.heading-anchor)",
          "cssText": ".component--members__cta > * > :not(a):not(.heading-anchor) { flex-basis: 100%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 48em) {\n  .component--members__cta > * > :not(a):not(.heading-anchor) { flex-basis: auto; }\n}",
          "urls": [],
          "group": "screen and (min-width: 48em)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 48em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "48em",
                "48",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".component--members__cta > * > :not(a):not(.heading-anchor)",
          "cssText": ".component--members__cta > * > :not(a):not(.heading-anchor) { flex-basis: auto; }",
          "urls": [],
          "group": "screen and (min-width: 48em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 48em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "48em",
                "48",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 64em) {\n  .slide { align-items: flex-start; display: flex; justify-content: space-between; }\n}",
          "urls": [],
          "group": "screen and (min-width: 64em)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 64em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "64em",
                "64",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".slide",
          "cssText": ".slide { align-items: flex-start; display: flex; justify-content: space-between; }",
          "urls": [],
          "group": "screen and (min-width: 64em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 64em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "64em",
                "64",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".slide > * + *",
          "cssText": ".slide > * + * { margin-top: 1rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 64em) {\n  .slide > * + * { margin-top: 0px; }\n}",
          "urls": [],
          "group": "screen and (min-width: 64em)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 64em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "64em",
                "64",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".slide > * + *",
          "cssText": ".slide > * + * { margin-top: 0px; }",
          "urls": [],
          "group": "screen and (min-width: 64em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 64em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "64em",
                "64",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 64em) {\n  .slide__quote, .slide__cite { flex-basis: 45%; }\n}",
          "urls": [],
          "group": "screen and (min-width: 64em)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 64em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "64em",
                "64",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".slide__quote, .slide__cite",
          "cssText": ".slide__quote, .slide__cite { flex-basis: 45%; }",
          "urls": [],
          "group": "screen and (min-width: 64em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 64em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "64em",
                "64",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".slide__quote",
          "cssText": ".slide__quote { background: url(\"../images/quote-bg.png\") 0px 0px no-repeat; font-size: 1.25rem; font-weight: bold; line-height: 1.6; margin-inline-start: 2.1875rem; padding-top: 0.9375rem; position: relative; }",
          "urls": [
            "../images/quote-bg.png"
          ],
          "group": "",
          "sources": [],
          "sinks": [
            {
              "reason": "url_sink",
              "urls": [
                "../images/quote-bg.png"
              ]
            }
          ],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 48em) {\n  .slide__quote { font-size: 1.5rem; line-height: 1.4; }\n}",
          "urls": [],
          "group": "screen and (min-width: 48em)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 48em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "48em",
                "48",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".slide__quote",
          "cssText": ".slide__quote { font-size: 1.5rem; line-height: 1.4; }",
          "urls": [],
          "group": "screen and (min-width: 48em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 48em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "48em",
                "48",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".slide__quote::before",
          "cssText": ".slide__quote::before { background-color: rgb(117, 51, 108); border-radius: 0.3125rem; content: \"\"; height: 100%; left: -2.0625rem; position: absolute; top: 0px; width: 0.25rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".slide__quote > *",
          "cssText": ".slide__quote > * { max-width: 41.25rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[dir=\"rtl\"] .slide__quote",
          "cssText": "[dir=\"rtl\"] .slide__quote { background-position-x: 100%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[dir=\"rtl\"] .slide__quote::before",
          "cssText": "[dir=\"rtl\"] .slide__quote::before { left: auto; right: -2.0625rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".slide__cite",
          "cssText": ".slide__cite { font-size: 0.9375rem; line-height: 1.5; padding-inline-start: 0.3125rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".slide__cite.l-sidebar .sidebar",
          "cssText": ".slide__cite.l-sidebar .sidebar { flex-basis: auto; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".slide__cite.l-sidebar .not-sidebar",
          "cssText": ".slide__cite.l-sidebar .not-sidebar { align-items: flex-start; min-width: calc(70% - 1.5rem); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".slide__cite.l-sidebar .not-sidebar p:first-child",
          "cssText": ".slide__cite.l-sidebar .not-sidebar p:first-child { font-weight: bold; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".slide__cite.l-sidebar .not-sidebar p:first-child + p",
          "cssText": ".slide__cite.l-sidebar .not-sidebar p:first-child + p { margin-top: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".slide__logo",
          "cssText": ".slide__logo { background-color: rgb(255, 255, 255); height: 7.5rem; padding: 1.5rem; position: relative; width: 11.25rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".slide__logo > img",
          "cssText": ".slide__logo > img { inset: 0px; margin: auto; max-width: 100%; position: absolute; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSSupportsRule",
          "selector": "",
          "cssText": "@supports ((-o-object-fit: contain) or (object-fit: contain)) {\n  .slide__logo > img { height: 100%; max-width: none; object-fit: contain; position: static; }\n}",
          "urls": [],
          "group": "((-o-object-fit: contain) or (object-fit: contain))",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "((-o-object-fit: contain) or (object-fit: contain))",
              "requiresEcho": true,
              "echoTokens": [
                "-o-object-fit",
                "contain",
                "object-fit"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".slide__logo > img",
          "cssText": ".slide__logo > img { height: 100%; max-width: none; object-fit: contain; position: static; }",
          "urls": [],
          "group": "((-o-object-fit: contain) or (object-fit: contain))",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "((-o-object-fit: contain) or (object-fit: contain))",
              "requiresEcho": true,
              "echoTokens": [
                "-o-object-fit",
                "contain",
                "object-fit"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".component--slider",
          "cssText": ".component--slider { background-color: rgb(248, 248, 251); padding-bottom: 3.125rem; padding-top: 3.125rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".component--slider h2",
          "cssText": ".component--slider h2 { font-size: 1rem; font-weight: normal; margin-bottom: 1.5rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".component--slider ul > li + li",
          "cssText": ".component--slider ul > li + li { margin-top: 2rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".crosslinks",
          "cssText": ".crosslinks { background-color: rgb(0, 42, 86); color: rgb(255, 255, 255); padding-bottom: 3.125rem; padding-top: 3.125rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".crosslinks .component--columns__intro h2",
          "cssText": ".crosslinks .component--columns__intro h2 { font-size: 1.5rem; line-height: 1.4; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".crosslinks .component--columns__intro a, .crosslinks .component--columns__intro .heading-anchor, .crosslinks .component--columns__intro a:visited, .crosslinks .component--columns__intro a:hover, .crosslinks .component--columns__intro a:active",
          "cssText": ".crosslinks .component--columns__intro a, .crosslinks .component--columns__intro .heading-anchor, .crosslinks .component--columns__intro a:visited, .crosslinks .component--columns__intro a:hover, .crosslinks .component--columns__intro a:active { color: rgb(255, 255, 255); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".crosslinks .component--columns__intro a:focus, .crosslinks .component--columns__intro .heading-anchor:focus",
          "cssText": ".crosslinks .component--columns__intro a:focus, .crosslinks .component--columns__intro .heading-anchor:focus { color: rgb(17, 17, 17); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 43.75em) {\n  .crosslinks .component--columns--images > ul { display: flex; flex-wrap: wrap; margin: -1.5%; }\n}",
          "urls": [],
          "group": "screen and (min-width: 43.75em)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 43.75em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "43.75em",
                "43.75",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".crosslinks .component--columns--images > ul",
          "cssText": ".crosslinks .component--columns--images > ul { display: flex; flex-wrap: wrap; margin: -1.5%; }",
          "urls": [],
          "group": "screen and (min-width: 43.75em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 43.75em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "43.75em",
                "43.75",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 43.75em) {\n  .crosslinks .component--columns--images > ul > li { flex: 1 0 50%; max-width: 50%; padding: 1.5%; }\n}",
          "urls": [],
          "group": "screen and (min-width: 43.75em)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 43.75em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "43.75em",
                "43.75",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".crosslinks .component--columns--images > ul > li",
          "cssText": ".crosslinks .component--columns--images > ul > li { flex: 1 0 50%; max-width: 50%; padding: 1.5%; }",
          "urls": [],
          "group": "screen and (min-width: 43.75em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 43.75em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "43.75em",
                "43.75",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 43.75em) {\n  .crosslinks .component--columns--images > ul li + li { margin-top: 0px; }\n}",
          "urls": [],
          "group": "screen and (min-width: 43.75em)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 43.75em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "43.75em",
                "43.75",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".crosslinks .component--columns--images > ul li + li",
          "cssText": ".crosslinks .component--columns--images > ul li + li { margin-top: 0px; }",
          "urls": [],
          "group": "screen and (min-width: 43.75em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 43.75em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "43.75em",
                "43.75",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 43.75em) {\n  .crosslinks .component--columns--images li:nth-last-child(n+3):nth-last-child(-n+3):first-child, .crosslinks .component--columns--images li:nth-last-child(n+3):nth-last-child(-n+3):first-child ~ li { flex-basis: 33%; }\n}",
          "urls": [],
          "group": "screen and (min-width: 43.75em)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 43.75em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "43.75em",
                "43.75",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".crosslinks .component--columns--images li:nth-last-child(n+3):nth-last-child(-n+3):first-child, .crosslinks .component--columns--images li:nth-last-child(n+3):nth-last-child(-n+3):first-child ~ li",
          "cssText": ".crosslinks .component--columns--images li:nth-last-child(n+3):nth-last-child(-n+3):first-child, .crosslinks .component--columns--images li:nth-last-child(n+3):nth-last-child(-n+3):first-child ~ li { flex-basis: 33%; }",
          "urls": [],
          "group": "screen and (min-width: 43.75em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 43.75em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "43.75em",
                "43.75",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 64em) {\n  .crosslinks .component--columns--images li:nth-last-child(n+4):nth-last-child(-n+4):first-child, .crosslinks .component--columns--images li:nth-last-child(n+4):nth-last-child(-n+4):first-child ~ li { flex-basis: 25%; }\n}",
          "urls": [],
          "group": "screen and (min-width: 64em)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 64em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "64em",
                "64",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".crosslinks .component--columns--images li:nth-last-child(n+4):nth-last-child(-n+4):first-child, .crosslinks .component--columns--images li:nth-last-child(n+4):nth-last-child(-n+4):first-child ~ li",
          "cssText": ".crosslinks .component--columns--images li:nth-last-child(n+4):nth-last-child(-n+4):first-child, .crosslinks .component--columns--images li:nth-last-child(n+4):nth-last-child(-n+4):first-child ~ li { flex-basis: 25%; }",
          "urls": [],
          "group": "screen and (min-width: 64em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 64em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "64em",
                "64",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".crosslinks .card",
          "cssText": ".crosslinks .card { background-color: rgb(255, 255, 255); border-radius: 0.25rem; color: rgb(17, 17, 17); overflow: hidden; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".crosslinks .card__text",
          "cssText": ".crosslinks .card__text { padding: 1.25rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".crosslinks .card__image img",
          "cssText": ".crosslinks .card__image img { border-radius: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "input[type=\"search\"]",
          "cssText": "input[type=\"search\"] { max-width: none; position: relative; z-index: 1; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".l-sidebar.search",
          "cssText": ".l-sidebar.search { overflow: visible; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".l-sidebar.search > *",
          "cssText": ".l-sidebar.search > * { margin: -0.75rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".l-sidebar.search > * > *",
          "cssText": ".l-sidebar.search > * > * { margin: 0.75rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".l-sidebar.search form .sidebar",
          "cssText": ".l-sidebar.search form .sidebar { flex-basis: auto; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".l-sidebar.search form .not-sidebar",
          "cssText": ".l-sidebar.search form .not-sidebar { min-width: 70%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".l-sidebar.search input[type=\"search\"]",
          "cssText": ".l-sidebar.search input[type=\"search\"] { max-width: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSSupportsRule",
          "selector": "",
          "cssText": "@supports (padding-inline-start: 1em) {\n  input[type=\"search\"] { background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 512 512'%3E%3Cdefs/%3E%3Cpath d='M505 442.7L405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 44-79.7 44-128C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c48.3 0 92.7-16.4 128-44v16.3c0 6.4 2.5 12.5 7 17l99.7 99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.6.1-34zM208 336c-70.7 0-128-57.2-128-128 0-70.7 57.2-128 128-128 70.7 0 128 57.2 128 128 0 70.7-57.2 128-128 128z'/%3E%3C/svg%3E\"); background-position: left 0.5em center; background-repeat: no-repeat; background-size: 1.25rem; padding-inline-start: 2.5rem; }\n  [dir=\"rtl\"] input[type=\"search\"] { background-position: right 0.5em center; }\n}",
          "urls": [],
          "group": "(padding-inline-start: 1em)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "(padding-inline-start: 1em)",
              "requiresEcho": true,
              "echoTokens": [
                "padding-inline-start",
                "1em"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "input[type=\"search\"]",
          "cssText": "input[type=\"search\"] { background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 512 512'%3E%3Cdefs/%3E%3Cpath d='M505 442.7L405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 44-79.7 44-128C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c48.3 0 92.7-16.4 128-44v16.3c0 6.4 2.5 12.5 7 17l99.7 99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.6.1-34zM208 336c-70.7 0-128-57.2-128-128 0-70.7 57.2-128 128-128 70.7 0 128 57.2 128 128 0 70.7-57.2 128-128 128z'/%3E%3C/svg%3E\"); background-position: left 0.5em center; background-repeat: no-repeat; background-size: 1.25rem; padding-inline-start: 2.5rem; }",
          "urls": [],
          "group": "(padding-inline-start: 1em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "(padding-inline-start: 1em)",
              "requiresEcho": true,
              "echoTokens": [
                "padding-inline-start",
                "1em"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": "[dir=\"rtl\"] input[type=\"search\"]",
          "cssText": "[dir=\"rtl\"] input[type=\"search\"] { background-position: right 0.5em center; }",
          "urls": [],
          "group": "(padding-inline-start: 1em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "(padding-inline-start: 1em)",
              "requiresEcho": true,
              "echoTokens": [
                "padding-inline-start",
                "1em"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".meta",
          "cssText": ".meta { border-bottom: 1px solid rgb(202, 201, 201); border-top: 1px solid rgb(202, 201, 201); margin-bottom: 3.125rem; padding: 1.5rem 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".meta dl",
          "cssText": ".meta dl { margin-bottom: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".meta .with-link",
          "cssText": ".meta .with-link { padding-bottom: 0.625rem; padding-top: 0.625rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".family-grouping",
          "cssText": ".family-grouping { padding-block-start: 1.75rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".family-grouping h2 + *",
          "cssText": ".family-grouping h2 + * { margin-block-start: 1rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".maturity-level",
          "cssText": ".maturity-level { background-color: rgba(206, 205, 205, 0.5); border-radius: 0.25rem; display: inline-block; margin-bottom: 0.3125rem; padding: 0.15625rem 0.3125rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".maturity-level--note",
          "cssText": ".maturity-level--note { background-color: transparent; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".maturity-level--highlighted",
          "cssText": ".maturity-level--highlighted { background-color: rgb(0, 90, 156); color: rgb(255, 255, 255); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".pagination",
          "cssText": ".pagination { margin-top: 2.5rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".l-cluster.pagination > *",
          "cssText": ".l-cluster.pagination > * { margin-bottom: 0px; margin-top: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".l-cluster.pagination > * > *",
          "cssText": ".l-cluster.pagination > * > * { margin-bottom: 0px; margin-top: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".pagination + *",
          "cssText": ".pagination + * { border-top: 1px solid rgb(202, 201, 201); margin-top: 2.0625rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 64em) {\n  .pagination__list { justify-content: center; }\n}",
          "urls": [],
          "group": "screen and (min-width: 64em)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 64em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "64em",
                "64",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".pagination__list",
          "cssText": ".pagination__list { justify-content: center; }",
          "urls": [],
          "group": "screen and (min-width: 64em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 64em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "64em",
                "64",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".pagination__list a, .pagination__list .heading-anchor",
          "cssText": ".pagination__list a, .pagination__list .heading-anchor { font-size: 0.9375rem; line-height: 1.5; color: rgb(0, 0, 0); display: block; text-decoration: none; padding: 0.6875rem 1.125rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".pagination__list a:visited, .pagination__list .heading-anchor:visited",
          "cssText": ".pagination__list a:visited, .pagination__list .heading-anchor:visited { color: rgb(0, 0, 0); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".pagination__list a:focus, .pagination__list .heading-anchor:focus",
          "cssText": ".pagination__list a:focus, .pagination__list .heading-anchor:focus { background-color: rgb(249, 220, 74); background-image: linear-gradient(to top, rgb(0, 0, 0) 3px, rgb(249, 220, 74) 3px, rgb(249, 220, 74)); color: rgb(0, 0, 0); text-decoration: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".pagination__list a[href]:hover, .pagination__list [href].heading-anchor:hover",
          "cssText": ".pagination__list a[href]:hover, .pagination__list [href].heading-anchor:hover { text-decoration: underline; text-decoration-skip-ink: auto; text-underline-offset: 0.25em; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".pagination__list a[href][aria-current], .pagination__list [href][aria-current].heading-anchor",
          "cssText": ".pagination__list a[href][aria-current], .pagination__list [href][aria-current].heading-anchor { background-color: rgb(0, 90, 156); color: rgb(255, 255, 255); font-weight: bold; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".pagination__list a[href][aria-current]:hover, .pagination__list [href][aria-current].heading-anchor:hover",
          "cssText": ".pagination__list a[href][aria-current]:hover, .pagination__list [href][aria-current].heading-anchor:hover { color: rgb(255, 255, 255); text-decoration: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".pagination__list a[href][aria-current]:focus, .pagination__list [href][aria-current].heading-anchor:focus",
          "cssText": ".pagination__list a[href][aria-current]:focus, .pagination__list [href][aria-current].heading-anchor:focus { color: rgb(0, 0, 0); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".rss",
          "cssText": ".rss { margin-top: 2.5rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".rss a, .rss .heading-anchor",
          "cssText": ".rss a, .rss .heading-anchor { padding-bottom: 0.625rem; padding-top: 0.625rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".comments",
          "cssText": ".comments { background-color: rgb(248, 248, 251); padding-bottom: 3.125rem; padding-top: 3.125rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".comments h2",
          "cssText": ".comments h2 { font-size: 1.5rem; line-height: 1.4; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".comment-list",
          "cssText": ".comment-list { margin-top: 1.875rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".comment-list > li",
          "cssText": ".comment-list > li { border-bottom: 1px solid rgb(202, 201, 201); padding-bottom: 3.125rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".comment-list > li + li",
          "cssText": ".comment-list > li + li { margin-top: 1.25rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".l-sidebar.comment",
          "cssText": ".l-sidebar.comment { overflow: visible; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".l-sidebar.comment, .l-sidebar.comment-form-wrap",
          "cssText": ".l-sidebar.comment, .l-sidebar.comment-form-wrap { overflow: visible; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".l-sidebar.comment .sidebar, .l-sidebar.comment-form-wrap .sidebar",
          "cssText": ".l-sidebar.comment .sidebar, .l-sidebar.comment-form-wrap .sidebar { flex-basis: auto; order: -1; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".l-sidebar.comment .sidebar img, .l-sidebar.comment-form-wrap .sidebar img",
          "cssText": ".l-sidebar.comment .sidebar img, .l-sidebar.comment-form-wrap .sidebar img { width: 3.125rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".l-sidebar.comment .not-sidebar, .l-sidebar.comment-form-wrap .not-sidebar",
          "cssText": ".l-sidebar.comment .not-sidebar, .l-sidebar.comment-form-wrap .not-sidebar { min-width: calc(80% - 1.5rem); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".reply-list.reply-list",
          "cssText": ".reply-list.reply-list { margin-left: 4.375rem; margin-top: 1.875rem; padding-left: 1.875rem; position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".reply-list.reply-list::before",
          "cssText": ".reply-list.reply-list::before { background-color: rgb(0, 90, 156); border-radius: 0.1875rem; content: \"\"; height: 100%; left: 0px; position: absolute; top: 0px; width: 0.1875rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".reply-list.reply-list > li",
          "cssText": ".reply-list.reply-list > li { border-top: 1px solid rgb(202, 201, 201); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".reply-list.reply-list > li + li",
          "cssText": ".reply-list.reply-list > li + li { margin-top: 1.25rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[dir=\"rtl\"] .reply-list.reply-list",
          "cssText": "[dir=\"rtl\"] .reply-list.reply-list { margin-left: 0px; margin-right: 4.375rem; padding-left: 0px; padding-right: 1.875rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[dir=\"rtl\"] .reply-list.reply-list::before",
          "cssText": "[dir=\"rtl\"] .reply-list.reply-list::before { left: auto; right: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".reply-list .comment",
          "cssText": ".reply-list .comment { padding-top: 1.25rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".comment__author",
          "cssText": ".comment__author { font-size: 1rem; font-weight: bold; line-height: 1.33333; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".comment__body",
          "cssText": ".comment__body { max-width: 41.25rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[data-replylink]",
          "cssText": "[data-replylink] { font-size: 0.9375rem; line-height: 1.5; align-self: flex-start; padding-bottom: 0.6875rem; padding-top: 0.6875rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "#respond",
          "cssText": "#respond { margin-top: 1rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "#respond > div:first-of-type",
          "cssText": "#respond > div:first-of-type { align-items: center; display: flex; flex-wrap: wrap; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".comment-form-wrap",
          "cssText": ".comment-form-wrap { margin-top: 1.875rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "#comment-form",
          "cssText": "#comment-form { max-width: 41.25rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "#comment-form .l-switcher",
          "cssText": "#comment-form .l-switcher { overflow: visible; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "#comment-form .l-switcher > *",
          "cssText": "#comment-form .l-switcher > * { align-items: flex-end; margin: -0.625rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "#comment-form .l-switcher > * > *",
          "cssText": "#comment-form .l-switcher > * > * { padding: 0.625rem; width: calc(-66000% + 435600px); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".pre-footer.l-switcher",
          "cssText": ".pre-footer.l-switcher { margin: -1.25rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".pre-footer.l-switcher > * > *",
          "cssText": ".pre-footer.l-switcher > * > * { margin-top: 2.5rem; min-width: 33.333%; padding: 1.25rem; width: calc(-92000% + 846400px); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".pre-footer h2 + *",
          "cssText": ".pre-footer h2 + * { margin-top: 1em; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".pre-footer a, .pre-footer .heading-anchor",
          "cssText": ".pre-footer a, .pre-footer .heading-anchor { display: block; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-footer",
          "cssText": ".global-footer { border-top: 1px solid rgb(202, 201, 201); grid-row: 2 / 3; padding: 1.25rem 0px 1.5625rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-footer .l-center",
          "cssText": ".global-footer .l-center { display: flex; flex-direction: column; justify-content: flex-start; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-footer .l-center > * + *",
          "cssText": ".global-footer .l-center > * + * { margin-top: 1rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-footer a, .global-footer .heading-anchor, .global-footer .copyright",
          "cssText": ".global-footer a, .global-footer .heading-anchor, .global-footer .copyright { font-size: 0.875rem; line-height: 1.42857; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-footer .copyright",
          "cssText": ".global-footer .copyright { margin-bottom: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-footer a, .global-footer .heading-anchor",
          "cssText": ".global-footer a, .global-footer .heading-anchor { color: rgb(17, 17, 17); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-footer a:visited, .global-footer .heading-anchor:visited, .global-footer a:hover, .global-footer .heading-anchor:hover, .global-footer a:active, .global-footer .heading-anchor:active",
          "cssText": ".global-footer a:visited, .global-footer .heading-anchor:visited, .global-footer a:hover, .global-footer .heading-anchor:hover, .global-footer a:active, .global-footer .heading-anchor:active { color: rgb(17, 17, 17); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-footer__links",
          "cssText": ".global-footer__links { display: flex; flex-wrap: wrap; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-footer__links > ul",
          "cssText": ".global-footer__links > ul { display: flex; flex-wrap: wrap; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 64em) {\n  .global-footer__links > ul { margin-inline-start: auto; }\n}",
          "urls": [],
          "group": "screen and (min-width: 64em)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 64em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "64em",
                "64",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-footer__links > ul",
          "cssText": ".global-footer__links > ul { margin-inline-start: auto; }",
          "urls": [],
          "group": "screen and (min-width: 64em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 64em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "64em",
                "64",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-footer__links .l-cluster > *",
          "cssText": ".global-footer__links .l-cluster > * { margin: 0px -0.625rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-footer__links .l-cluster.l-cluster > * > *",
          "cssText": ".global-footer__links .l-cluster.l-cluster > * > * { margin: 0px 0.625rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-footer__links a:not([class]), .global-footer__links .heading-anchor",
          "cssText": ".global-footer__links a:not([class]), .global-footer__links .heading-anchor { display: block; padding-bottom: 0.75rem; padding-top: 0.75rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-footer__links .with-icon--larger",
          "cssText": ".global-footer__links .with-icon--larger { padding: 0.75rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-footer__links .with-icon--larger img",
          "cssText": ".global-footer__links .with-icon--larger img { height: 1.25rem; width: 1.25rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-footer__links .with-icon--larger:focus",
          "cssText": ".global-footer__links .with-icon--larger:focus { background-color: rgb(249, 220, 74); background-image: linear-gradient(to top, rgb(0, 0, 0) 3px, rgb(249, 220, 74) 3px, rgb(249, 220, 74)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".default .content",
          "cssText": ".default .content { max-width: 47rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSSupportsRule",
          "selector": "",
          "cssText": "@supports (grid-column-gap: 8%) {\n  .default .content { max-width: none; }\n  @media screen and (min-width: 64em) {\n  .default .content { display: grid; column-gap: 7.857%; grid-template-areas: \"article related\"; grid-template-columns: 67.143% 25%; }\n}\n  @media screen and (min-width: 64em) {\n  .default .content article { grid-area: article; }\n}\n  @media screen and (min-width: 64em) {\n  .default .content .related { grid-area: related; }\n}\n}",
          "urls": [],
          "group": "(grid-column-gap: 8%)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "(grid-column-gap: 8%)",
              "requiresEcho": true,
              "echoTokens": [
                "grid-column-gap",
                "8"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".default .content",
          "cssText": ".default .content { max-width: none; }",
          "urls": [],
          "group": "(grid-column-gap: 8%)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "(grid-column-gap: 8%)",
              "requiresEcho": true,
              "echoTokens": [
                "grid-column-gap",
                "8"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 64em) {\n  .default .content { display: grid; column-gap: 7.857%; grid-template-areas: \"article related\"; grid-template-columns: 67.143% 25%; }\n}",
          "urls": [],
          "group": "(grid-column-gap: 8%)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 64em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "64em",
                "64",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "(grid-column-gap: 8%)",
              "requiresEcho": true,
              "echoTokens": [
                "grid-column-gap",
                "8"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".default .content",
          "cssText": ".default .content { display: grid; column-gap: 7.857%; grid-template-areas: \"article related\"; grid-template-columns: 67.143% 25%; }",
          "urls": [],
          "group": "screen and (min-width: 64em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "(grid-column-gap: 8%)",
              "requiresEcho": true,
              "echoTokens": [
                "grid-column-gap",
                "8"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 64em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "64em",
                "64",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 64em) {\n  .default .content article { grid-area: article; }\n}",
          "urls": [],
          "group": "(grid-column-gap: 8%)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 64em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "64em",
                "64",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "(grid-column-gap: 8%)",
              "requiresEcho": true,
              "echoTokens": [
                "grid-column-gap",
                "8"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".default .content article",
          "cssText": ".default .content article { grid-area: article; }",
          "urls": [],
          "group": "screen and (min-width: 64em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "(grid-column-gap: 8%)",
              "requiresEcho": true,
              "echoTokens": [
                "grid-column-gap",
                "8"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 64em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "64em",
                "64",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 64em) {\n  .default .content .related { grid-area: related; }\n}",
          "urls": [],
          "group": "(grid-column-gap: 8%)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 64em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "64em",
                "64",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "(grid-column-gap: 8%)",
              "requiresEcho": true,
              "echoTokens": [
                "grid-column-gap",
                "8"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".default .content .related",
          "cssText": ".default .content .related { grid-area: related; }",
          "urls": [],
          "group": "screen and (min-width: 64em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "(grid-column-gap: 8%)",
              "requiresEcho": true,
              "echoTokens": [
                "grid-column-gap",
                "8"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 64em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "64em",
                "64",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".default .related",
          "cssText": ".default .related { border-top: 10px solid rgb(0, 90, 156); margin-top: 2.5rem; padding-top: 1.25rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".related [aria-current]",
          "cssText": ".related [aria-current] { color: rgb(17, 17, 17); text-decoration: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSSupportsRule",
          "selector": "",
          "cssText": "@supports (grid-column-gap: 8%) {\n  @media screen and (min-width: 64em) {\n  .default .related { margin-top: 0px; }\n}\n}",
          "urls": [],
          "group": "(grid-column-gap: 8%)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "(grid-column-gap: 8%)",
              "requiresEcho": true,
              "echoTokens": [
                "grid-column-gap",
                "8"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 64em) {\n  .default .related { margin-top: 0px; }\n}",
          "urls": [],
          "group": "(grid-column-gap: 8%)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 64em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "64em",
                "64",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "(grid-column-gap: 8%)",
              "requiresEcho": true,
              "echoTokens": [
                "grid-column-gap",
                "8"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".default .related",
          "cssText": ".default .related { margin-top: 0px; }",
          "urls": [],
          "group": "screen and (min-width: 64em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "(grid-column-gap: 8%)",
              "requiresEcho": true,
              "echoTokens": [
                "grid-column-gap",
                "8"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 64em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "64em",
                "64",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 64em) {\n  .default .related__inner { border-inline-start: 1px solid rgb(202, 201, 201); padding-left: 1.25rem; padding-right: 1.25rem; }\n}",
          "urls": [],
          "group": "screen and (min-width: 64em)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 64em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "64em",
                "64",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".default .related__inner",
          "cssText": ".default .related__inner { border-inline-start: 1px solid rgb(202, 201, 201); padding-left: 1.25rem; padding-right: 1.25rem; }",
          "urls": [],
          "group": "screen and (min-width: 64em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 64em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "64em",
                "64",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".default .related__inner ul a, .default .related__inner ul .heading-anchor",
          "cssText": ".default .related__inner ul a, .default .related__inner ul .heading-anchor { display: inline-block; padding-bottom: 0.625rem; padding-top: 0.625rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".event .content",
          "cssText": ".event .content { max-width: 47rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".event .intro",
          "cssText": ".event .intro { display: flex; flex-direction: column; margin-bottom: 1.25rem; margin-inline-start: 1.875rem; position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".event .intro::before",
          "cssText": ".event .intro::before { border-radius: 0.3125rem; content: \"\"; height: 100%; left: -1.75rem; position: absolute; top: 0px; width: 0.3125rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".event .intro.conference::before",
          "cssText": ".event .intro.conference::before { background-color: rgb(35, 121, 120); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".event .intro.meeting::before",
          "cssText": ".event .intro.meeting::before { background-color: rgb(27, 192, 215); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".event .intro.talk::before",
          "cssText": ".event .intro.talk::before { background-color: rgb(0, 42, 86); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".event .intro.workshop::before",
          "cssText": ".event .intro.workshop::before { background-color: rgb(233, 55, 55); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".event .intro h1",
          "cssText": ".event .intro h1 { margin-bottom: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".event .intro h1 + *",
          "cssText": ".event .intro h1 + * { font-size: 1.5rem; line-height: 1.4; margin-bottom: 0.625rem; order: -1; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[dir=\"rtl\"] .event .intro::before",
          "cssText": "[dir=\"rtl\"] .event .intro::before { left: auto; right: -1.75rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".event .lead, .event .calendar-link",
          "cssText": ".event .lead, .event .calendar-link { margin-bottom: 1.25rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".home .hero",
          "cssText": ".home .hero { background-color: rgb(255, 255, 255); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".home .component--members",
          "cssText": ".home .component--members { padding-bottom: 2.5rem; padding-top: 2.5rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".home .component--members__grid",
          "cssText": ".home .component--members__grid { margin-top: 2.5rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".post .content, .post .rss",
          "cssText": ".post .content, .post .rss { max-width: 47rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSSupportsRule",
          "selector": "",
          "cssText": "@supports (grid-column-gap: 8%) {\n  .post .content { max-width: none; }\n  @media screen and (min-width: 64em) {\n  .post .content { display: grid; column-gap: 7.857%; grid-template-columns: 67.143% 25%; grid-template-areas: \"article related\"; }\n}\n  @media screen and (min-width: 64em) {\n  .post .content article { grid-area: article; }\n}\n  @media screen and (min-width: 64em) {\n  .post .content .related { grid-area: related; }\n}\n}",
          "urls": [],
          "group": "(grid-column-gap: 8%)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "(grid-column-gap: 8%)",
              "requiresEcho": true,
              "echoTokens": [
                "grid-column-gap",
                "8"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".post .content",
          "cssText": ".post .content { max-width: none; }",
          "urls": [],
          "group": "(grid-column-gap: 8%)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "(grid-column-gap: 8%)",
              "requiresEcho": true,
              "echoTokens": [
                "grid-column-gap",
                "8"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 64em) {\n  .post .content { display: grid; column-gap: 7.857%; grid-template-columns: 67.143% 25%; grid-template-areas: \"article related\"; }\n}",
          "urls": [],
          "group": "(grid-column-gap: 8%)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 64em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "64em",
                "64",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "(grid-column-gap: 8%)",
              "requiresEcho": true,
              "echoTokens": [
                "grid-column-gap",
                "8"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".post .content",
          "cssText": ".post .content { display: grid; column-gap: 7.857%; grid-template-columns: 67.143% 25%; grid-template-areas: \"article related\"; }",
          "urls": [],
          "group": "screen and (min-width: 64em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "(grid-column-gap: 8%)",
              "requiresEcho": true,
              "echoTokens": [
                "grid-column-gap",
                "8"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 64em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "64em",
                "64",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 64em) {\n  .post .content article { grid-area: article; }\n}",
          "urls": [],
          "group": "(grid-column-gap: 8%)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 64em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "64em",
                "64",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "(grid-column-gap: 8%)",
              "requiresEcho": true,
              "echoTokens": [
                "grid-column-gap",
                "8"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".post .content article",
          "cssText": ".post .content article { grid-area: article; }",
          "urls": [],
          "group": "screen and (min-width: 64em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "(grid-column-gap: 8%)",
              "requiresEcho": true,
              "echoTokens": [
                "grid-column-gap",
                "8"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 64em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "64em",
                "64",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 64em) {\n  .post .content .related { grid-area: related; }\n}",
          "urls": [],
          "group": "(grid-column-gap: 8%)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 64em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "64em",
                "64",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "(grid-column-gap: 8%)",
              "requiresEcho": true,
              "echoTokens": [
                "grid-column-gap",
                "8"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".post .content .related",
          "cssText": ".post .content .related { grid-area: related; }",
          "urls": [],
          "group": "screen and (min-width: 64em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "(grid-column-gap: 8%)",
              "requiresEcho": true,
              "echoTokens": [
                "grid-column-gap",
                "8"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 64em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "64em",
                "64",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".post .related",
          "cssText": ".post .related { margin-top: 2.5rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSSupportsRule",
          "selector": "",
          "cssText": "@supports (grid-column-gap: 8%) {\n  @media screen and (min-width: 64em) {\n  .post .content .related { margin-top: 0px; }\n}\n}",
          "urls": [],
          "group": "(grid-column-gap: 8%)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "(grid-column-gap: 8%)",
              "requiresEcho": true,
              "echoTokens": [
                "grid-column-gap",
                "8"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 64em) {\n  .post .content .related { margin-top: 0px; }\n}",
          "urls": [],
          "group": "(grid-column-gap: 8%)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 64em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "64em",
                "64",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "(grid-column-gap: 8%)",
              "requiresEcho": true,
              "echoTokens": [
                "grid-column-gap",
                "8"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".post .content .related",
          "cssText": ".post .content .related { margin-top: 0px; }",
          "urls": [],
          "group": "screen and (min-width: 64em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "(grid-column-gap: 8%)",
              "requiresEcho": true,
              "echoTokens": [
                "grid-column-gap",
                "8"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 64em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "64em",
                "64",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".post .related__inner",
          "cssText": ".post .related__inner { background-color: rgb(248, 248, 251); padding: 1.75rem 1.25rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".post .related__inner h2",
          "cssText": ".post .related__inner h2 { font-size: 1.1875rem; line-height: 1.94118; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".post .related__inner h3",
          "cssText": ".post .related__inner h3 { font-size: 1rem; line-height: 1.33333; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".post .related__inner a, .post .related__inner .heading-anchor",
          "cssText": ".post .related__inner a, .post .related__inner .heading-anchor { color: rgb(84, 84, 84); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".post .related__inner a:focus, .post .related__inner .heading-anchor:focus",
          "cssText": ".post .related__inner a:focus, .post .related__inner .heading-anchor:focus { color: rgb(0, 0, 0); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".post .related__inner > div, .post .related__inner h3 + *",
          "cssText": ".post .related__inner > div, .post .related__inner h3 + * { margin-top: 1.125rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".post .related__inner > div + div",
          "cssText": ".post .related__inner > div + div { border-top: 1px solid rgb(202, 201, 201); margin-top: 1.5rem; padding-top: 0.9375rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".post .related__inner li",
          "cssText": ".post .related__inner li { font-size: 0.9375rem; line-height: 1.5; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".post .related__inner li + li",
          "cssText": ".post .related__inner li + li { margin-top: 1.375rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".post .sub-head",
          "cssText": ".post .sub-head { font-size: 0.9375rem; line-height: 1.5; margin-bottom: 1.875rem; margin-top: -1.25rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".post .meta",
          "cssText": ".post .meta { position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 48em) {\n  .post .meta dl dd:first-of-type { padding-right: 9.375rem; }\n}",
          "urls": [],
          "group": "screen and (min-width: 48em)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 48em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "48em",
                "48",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".post .meta dl dd:first-of-type",
          "cssText": ".post .meta dl dd:first-of-type { padding-right: 9.375rem; }",
          "urls": [],
          "group": "screen and (min-width: 48em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 48em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "48em",
                "48",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".post .meta dl dd, .post .meta dl dt",
          "cssText": ".post .meta dl dd, .post .meta dl dt { margin: 0px; padding-bottom: 0.5rem; padding-top: 0.3125rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".post .meta dl dt:first-of-type, .post .meta dl dd:first-of-type",
          "cssText": ".post .meta dl dt:first-of-type, .post .meta dl dd:first-of-type { padding-top: 0.5rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".post .meta dl dt",
          "cssText": ".post .meta dl dt { float: left; font-weight: normal; margin-right: 1em; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".post .skip-to-comments, .post .skip-to-comment-form",
          "cssText": ".post .skip-to-comments, .post .skip-to-comment-form { color: rgb(84, 84, 84); display: inline-block; padding-bottom: 0.6875rem; padding-top: 0.6875rem; text-decoration: underline; text-decoration-skip-ink: auto; text-underline-offset: 0.25em; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".post .skip-to-comments:visited, .post .skip-to-comment-form:visited",
          "cssText": ".post .skip-to-comments:visited, .post .skip-to-comment-form:visited { color: rgb(84, 84, 84); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".post .skip-to-comments:focus, .post .skip-to-comment-form:focus",
          "cssText": ".post .skip-to-comments:focus, .post .skip-to-comment-form:focus { background-color: rgb(249, 220, 74); background-image: linear-gradient(to top, rgb(0, 0, 0) 3px, rgb(249, 220, 74) 3px, rgb(249, 220, 74)); color: rgb(0, 0, 0); text-decoration: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 48em) {\n  .post .skip-to-comments { position: absolute; right: 0px; top: 1.1875rem; }\n}",
          "urls": [],
          "group": "screen and (min-width: 48em)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 48em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "48em",
                "48",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".post .skip-to-comments",
          "cssText": ".post .skip-to-comments { position: absolute; right: 0px; top: 1.1875rem; }",
          "urls": [],
          "group": "screen and (min-width: 48em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 48em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "48em",
                "48",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".post .rss",
          "cssText": ".post .rss { border-top: 1px solid rgb(202, 201, 201); padding-top: 2.5rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 48em) {\n  [dir=\"rtl\"] .post .meta dl dd:first-of-type { padding-left: 9.375rem; padding-right: 0px; }\n}",
          "urls": [],
          "group": "screen and (min-width: 48em)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 48em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "48em",
                "48",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[dir=\"rtl\"] .post .meta dl dd:first-of-type",
          "cssText": "[dir=\"rtl\"] .post .meta dl dd:first-of-type { padding-left: 9.375rem; padding-right: 0px; }",
          "urls": [],
          "group": "screen and (min-width: 48em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 48em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "48em",
                "48",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": "[dir=\"rtl\"] .post .meta dl dt",
          "cssText": "[dir=\"rtl\"] .post .meta dl dt { float: right; margin-left: 1em; margin-right: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 48em) {\n  [dir=\"rtl\"] .post .skip-to-comments { left: 0px; right: auto; }\n}",
          "urls": [],
          "group": "screen and (min-width: 48em)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 48em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "48em",
                "48",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[dir=\"rtl\"] .post .skip-to-comments",
          "cssText": "[dir=\"rtl\"] .post .skip-to-comments { left: 0px; right: auto; }",
          "urls": [],
          "group": "screen and (min-width: 48em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 48em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "48em",
                "48",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".post__notes",
          "cssText": ".post__notes { border-top: 1px solid rgb(202, 201, 201); margin-top: 3.75rem; padding-top: 1.25rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".landing #breadcrumb, .ecosystem #breadcrumb",
          "cssText": ".landing #breadcrumb, .ecosystem #breadcrumb { background-color: rgb(248, 248, 251); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".landing main, .landing #main, .ecosystem main, .ecosystem #main",
          "cssText": ".landing main, .landing #main, .ecosystem main, .ecosystem #main { padding-top: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".landing .component--text, .landing .component--image, .landing .component--video, .landing .component--quote, .ecosystem .component--text, .ecosystem .component--image, .ecosystem .component--video, .ecosystem .component--quote",
          "cssText": ".landing .component--text, .landing .component--image, .landing .component--video, .landing .component--quote, .ecosystem .component--text, .ecosystem .component--image, .ecosystem .component--video, .ecosystem .component--quote { margin-left: auto; margin-right: auto; max-width: 44.4375rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".landing .component--quote, .ecosystem .component--quote",
          "cssText": ".landing .component--quote, .ecosystem .component--quote { max-width: 43.1875rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".listing .wrap",
          "cssText": ".listing .wrap { background-color: rgb(248, 248, 251); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".listing #breadcrumb",
          "cssText": ".listing #breadcrumb { background-color: rgb(255, 255, 255); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".listing main, .listing #main",
          "cssText": ".listing main, .listing #main { padding-top: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".people-list > * + *, .post-list > * + *",
          "cssText": ".people-list > * + *, .post-list > * + * { border-top: 1px solid rgb(202, 201, 201); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".people-list .groups .sidebar",
          "cssText": ".people-list .groups .sidebar { flex-basis: auto; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".people-list .groups .sidebar h3",
          "cssText": ".people-list .groups .sidebar h3 { font-size: 1rem; font-weight: normal; line-height: 2.75rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".post-list > *",
          "cssText": ".post-list > * { padding-bottom: 1.875rem; padding-top: 2.5rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".post-list > li:last-child",
          "cssText": ".post-list > li:last-child { border-bottom: 1px solid rgb(202, 201, 201); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".post-list .l-sidebar .sidebar",
          "cssText": ".post-list .l-sidebar .sidebar { flex-basis: auto; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".post-list .l-sidebar .not-sidebar",
          "cssText": ".post-list .l-sidebar .not-sidebar { min-width: calc(70% - 1.5rem); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".post-list .l-sidebar .not-sidebar > div",
          "cssText": ".post-list .l-sidebar .not-sidebar > div { max-width: 41.25rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 64em) {\n  .post-list .l-sidebar .not-sidebar > div { margin-bottom: 2.5rem; }\n}",
          "urls": [],
          "group": "screen and (min-width: 64em)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 64em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "64em",
                "64",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".post-list .l-sidebar .not-sidebar > div",
          "cssText": ".post-list .l-sidebar .not-sidebar > div { margin-bottom: 2.5rem; }",
          "urls": [],
          "group": "screen and (min-width: 64em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 64em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "64em",
                "64",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".post-list .l-sidebar .not-sidebar > div > * + *",
          "cssText": ".post-list .l-sidebar .not-sidebar > div > * + * { margin-top: 1.25rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".post-list .l-sidebar .sidebar .l-frame",
          "cssText": ".post-list .l-sidebar .sidebar .l-frame { height: 9.125rem; width: 12.5rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".post-list .l-sidebar .sidebar .l-frame img",
          "cssText": ".post-list .l-sidebar .sidebar .l-frame img { border-radius: 0.25rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".post-list .l-cluster > *",
          "cssText": ".post-list .l-cluster > * { align-items: center; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".post-list .l-cluster a, .post-list .l-cluster .heading-anchor",
          "cssText": ".post-list .l-cluster a, .post-list .l-cluster .heading-anchor { display: inline-block; padding: 0.75rem 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".post-list h2 a, .post-list h2 .heading-anchor",
          "cssText": ".post-list h2 a, .post-list h2 .heading-anchor { color: rgb(0, 0, 0); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".post-list h2 a .icon, .post-list h2 .heading-anchor .icon",
          "cssText": ".post-list h2 a .icon, .post-list h2 .heading-anchor .icon { height: 0.8em; width: 0.8em; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".event-list, .member-list, .group-list, .tr-stats-list",
          "cssText": ".event-list, .member-list, .group-list, .tr-stats-list { margin-top: 2.5rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".event-list > * + *, .member-list > * + *, .group-list > * + *, .tr-stats-list > * + *",
          "cssText": ".event-list > * + *, .member-list > * + *, .group-list > * + *, .tr-stats-list > * + * { margin-top: 1rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".event-list .card, .member-list .card, .group-list .card, .tr-stats-list .card",
          "cssText": ".event-list .card, .member-list .card, .group-list .card, .tr-stats-list .card { padding: 1rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".event-list .card.l-sidebar .sidebar, .member-list .card.l-sidebar .sidebar, .group-list .card.l-sidebar .sidebar, .tr-stats-list .card.l-sidebar .sidebar",
          "cssText": ".event-list .card.l-sidebar .sidebar, .member-list .card.l-sidebar .sidebar, .group-list .card.l-sidebar .sidebar, .tr-stats-list .card.l-sidebar .sidebar { flex-basis: auto; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".event-list .card.l-sidebar .not-sidebar, .member-list .card.l-sidebar .not-sidebar, .group-list .card.l-sidebar .not-sidebar, .tr-stats-list .card.l-sidebar .not-sidebar",
          "cssText": ".event-list .card.l-sidebar .not-sidebar, .member-list .card.l-sidebar .not-sidebar, .group-list .card.l-sidebar .not-sidebar, .tr-stats-list .card.l-sidebar .not-sidebar { min-width: calc(70% - 1.5rem); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".event-list .card__text, .member-list .card__text, .group-list .card__text, .tr-stats-list .card__text",
          "cssText": ".event-list .card__text, .member-list .card__text, .group-list .card__text, .tr-stats-list .card__text { padding-top: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".event-list .card .l-cluster",
          "cssText": ".event-list .card .l-cluster { margin-top: 1rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".event-list .card .l-cluster > *",
          "cssText": ".event-list .card .l-cluster > * { font-size: 0.9375rem; line-height: 1.5; align-items: center; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".event-list .card.l-sidebar .l-sidebar .sidebar",
          "cssText": ".event-list .card.l-sidebar .l-sidebar .sidebar { flex-basis: 20rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".event-list .card.l-sidebar .l-sidebar .not-sidebar",
          "cssText": ".event-list .card.l-sidebar .l-sidebar .not-sidebar { min-width: calc(55% - 1.5rem); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".event-list .card__image",
          "cssText": ".event-list .card__image { align-self: flex-start; height: 6.25rem; width: 6.25rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 64em) {\n  .event-list .card__image { height: 12.5rem; width: 12.5rem; }\n}",
          "urls": [],
          "group": "screen and (min-width: 64em)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 64em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "64em",
                "64",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".event-list .card__image",
          "cssText": ".event-list .card__image { height: 12.5rem; width: 12.5rem; }",
          "urls": [],
          "group": "screen and (min-width: 64em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 64em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "64em",
                "64",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".event-list .card__image img",
          "cssText": ".event-list .card__image img { border-radius: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".event-list .date-location",
          "cssText": ".event-list .date-location { font-size: 0.9375rem; line-height: 1.5; display: flex; flex-wrap: nowrap; max-width: 18.75rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".event-list .date-location img",
          "cssText": ".event-list .date-location img { margin-inline-end: 0.75rem; width: 1.125rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".event-list .date-location .date-orig",
          "cssText": ".event-list .date-location .date-orig { display: inline-block; padding-bottom: 0.625rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".event-list .date-location > div:last-child",
          "cssText": ".event-list .date-location > div:last-child { border-inline-start: 1px solid rgb(202, 201, 201); padding-inline-start: 0.75rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".member-list .card__text > *",
          "cssText": ".member-list .card__text > * { max-width: 41.25rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".member-list .logo--member",
          "cssText": ".member-list .logo--member { margin-left: auto; margin-right: auto; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".js .member-list [data-component=\"card\"] .card__text > :last-child",
          "cssText": ".js .member-list [data-component=\"card\"] .card__text > :last-child { margin-bottom: 2.5rem; margin-top: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".group-list",
          "cssText": ".group-list { margin-top: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".archive-links h2 + *",
          "cssText": ".archive-links h2 + * { margin-top: 0.8em; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".profile .content",
          "cssText": ".profile .content { max-width: 47rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSSupportsRule",
          "selector": "",
          "cssText": "@supports (grid-column-gap: 8%) {\n  .profile .content { max-width: none; }\n  @media screen and (min-width: 64em) {\n  .profile .content { display: grid; column-gap: 7.857%; grid-template: \"title nav\" \"details nav\" 1fr / 67.143% 25%; }\n}\n  @media screen and (min-width: 64em) {\n  .profile .content h1 { grid-area: title; }\n}\n  @media screen and (min-width: 64em) {\n  .profile .content #profile-nav { grid-area: nav; }\n}\n  @media screen and (min-width: 64em) {\n  .profile .content .details { grid-area: details; }\n}\n}",
          "urls": [],
          "group": "(grid-column-gap: 8%)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "(grid-column-gap: 8%)",
              "requiresEcho": true,
              "echoTokens": [
                "grid-column-gap",
                "8"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".profile .content",
          "cssText": ".profile .content { max-width: none; }",
          "urls": [],
          "group": "(grid-column-gap: 8%)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "(grid-column-gap: 8%)",
              "requiresEcho": true,
              "echoTokens": [
                "grid-column-gap",
                "8"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 64em) {\n  .profile .content { display: grid; column-gap: 7.857%; grid-template: \"title nav\" \"details nav\" 1fr / 67.143% 25%; }\n}",
          "urls": [],
          "group": "(grid-column-gap: 8%)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 64em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "64em",
                "64",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "(grid-column-gap: 8%)",
              "requiresEcho": true,
              "echoTokens": [
                "grid-column-gap",
                "8"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".profile .content",
          "cssText": ".profile .content { display: grid; column-gap: 7.857%; grid-template: \"title nav\" \"details nav\" 1fr / 67.143% 25%; }",
          "urls": [],
          "group": "screen and (min-width: 64em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "(grid-column-gap: 8%)",
              "requiresEcho": true,
              "echoTokens": [
                "grid-column-gap",
                "8"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 64em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "64em",
                "64",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 64em) {\n  .profile .content h1 { grid-area: title; }\n}",
          "urls": [],
          "group": "(grid-column-gap: 8%)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 64em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "64em",
                "64",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "(grid-column-gap: 8%)",
              "requiresEcho": true,
              "echoTokens": [
                "grid-column-gap",
                "8"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".profile .content h1",
          "cssText": ".profile .content h1 { grid-area: title; }",
          "urls": [],
          "group": "screen and (min-width: 64em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "(grid-column-gap: 8%)",
              "requiresEcho": true,
              "echoTokens": [
                "grid-column-gap",
                "8"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 64em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "64em",
                "64",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 64em) {\n  .profile .content #profile-nav { grid-area: nav; }\n}",
          "urls": [],
          "group": "(grid-column-gap: 8%)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 64em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "64em",
                "64",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "(grid-column-gap: 8%)",
              "requiresEcho": true,
              "echoTokens": [
                "grid-column-gap",
                "8"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".profile .content #profile-nav",
          "cssText": ".profile .content #profile-nav { grid-area: nav; }",
          "urls": [],
          "group": "screen and (min-width: 64em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "(grid-column-gap: 8%)",
              "requiresEcho": true,
              "echoTokens": [
                "grid-column-gap",
                "8"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 64em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "64em",
                "64",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 64em) {\n  .profile .content .details { grid-area: details; }\n}",
          "urls": [],
          "group": "(grid-column-gap: 8%)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 64em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "64em",
                "64",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "(grid-column-gap: 8%)",
              "requiresEcho": true,
              "echoTokens": [
                "grid-column-gap",
                "8"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".profile .content .details",
          "cssText": ".profile .content .details { grid-area: details; }",
          "urls": [],
          "group": "screen and (min-width: 64em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "(grid-column-gap: 8%)",
              "requiresEcho": true,
              "echoTokens": [
                "grid-column-gap",
                "8"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 64em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "64em",
                "64",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".profile .profile-nav__inner",
          "cssText": ".profile .profile-nav__inner { margin-bottom: 2.0625rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 64em) {\n  .profile .profile-nav__inner { border-inline-start: 1px solid rgb(202, 201, 201); margin-bottom: 0px; padding-left: 1.25rem; padding-right: 1.25rem; }\n}",
          "urls": [],
          "group": "screen and (min-width: 64em)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 64em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "64em",
                "64",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".profile .profile-nav__inner",
          "cssText": ".profile .profile-nav__inner { border-inline-start: 1px solid rgb(202, 201, 201); margin-bottom: 0px; padding-left: 1.25rem; padding-right: 1.25rem; }",
          "urls": [],
          "group": "screen and (min-width: 64em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 64em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "64em",
                "64",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".profile .profile-nav__inner [aria-current]",
          "cssText": ".profile .profile-nav__inner [aria-current] { font-weight: bold; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 64em) {\n  .profile [data-toggle=\"true\"] { display: none; }\n}",
          "urls": [],
          "group": "screen and (min-width: 64em)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 64em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "64em",
                "64",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".profile [data-toggle=\"true\"]",
          "cssText": ".profile [data-toggle=\"true\"] { display: none; }",
          "urls": [],
          "group": "screen and (min-width: 64em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 64em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "64em",
                "64",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".profile [data-toggle=\"true\"][aria-expanded=\"false\"]",
          "cssText": ".profile [data-toggle=\"true\"][aria-expanded=\"false\"] { margin-bottom: 2.0625rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "#profile-nav a, #profile-nav .heading-anchor",
          "cssText": "#profile-nav a, #profile-nav .heading-anchor { display: inline-block; padding-bottom: 0.625rem; padding-top: 0.625rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "#profile-nav a[aria-current], #profile-nav [aria-current].heading-anchor",
          "cssText": "#profile-nav a[aria-current], #profile-nav [aria-current].heading-anchor { color: rgb(17, 17, 17); text-decoration: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".technical-reports .wrap",
          "cssText": ".technical-reports .wrap { background-color: rgb(255, 255, 255); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".technical-reports .hero",
          "cssText": ".technical-reports .hero { background-color: rgb(255, 255, 255); margin-block-end: 1.25rem; padding-block-end: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".technical-reports .hero .l-box",
          "cssText": ".technical-reports .hero .l-box { background-color: rgb(243, 243, 246); border-radius: 0.25rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".technical-reports .hero .field",
          "cssText": ".technical-reports .hero .field { max-width: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".technical-reports .hero .field-hint",
          "cssText": ".technical-reports .hero .field-hint { color: rgb(17, 17, 17); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".technical-reports .checkbox-item label::before, .technical-reports .radio-item label::before",
          "cssText": ".technical-reports .checkbox-item label::before, .technical-reports .radio-item label::before { background-color: rgb(255, 255, 255); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".technical-reports .translation-list dt:has(span.visuallyhidden, span.skip-link)::after",
          "cssText": ".technical-reports .translation-list dt:has(span.visuallyhidden, span.skip-link)::after { margin-inline-start: -0.25rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".tr-list .tr-list__item",
          "cssText": ".tr-list .tr-list__item { display: flex; flex-direction: column; justify-content: flex-start; font-size: 0.9375rem; line-height: 1.5; border-block-end: 1px solid rgb(202, 201, 201); padding-block: 1.25rem 0.5rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".tr-list .tr-list__item > * + *",
          "cssText": ".tr-list .tr-list__item > * + * { margin-top: 0.5em; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".tr-list .tr-list__item > *",
          "cssText": ".tr-list .tr-list__item > * { max-width: 51.25rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".tr-list .tr-list__item h3",
          "cssText": ".tr-list .tr-list__item h3 { font-size: 1.5rem; line-height: 1.4; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".tr-list .tr-list__item__header",
          "cssText": ".tr-list .tr-list__item__header { display: flex; flex-direction: column; justify-content: flex-start; align-items: flex-start; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".tr-list .tr-list__item__header > * + *",
          "cssText": ".tr-list .tr-list__item__header > * + * { margin-top: 1em; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".tr-list .tr-list__item__header h3",
          "cssText": ".tr-list .tr-list__item__header h3 { margin-block: 0.3125rem 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".tr-list .tr-list__item__header h3 + *",
          "cssText": ".tr-list .tr-list__item__header h3 + * { margin-block-start: 0px; order: -1; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".u-float-left",
          "cssText": ".u-float-left { float: inline-start; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".u-float-right",
          "cssText": ".u-float-right { float: inline-end; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".u-text-center",
          "cssText": ".u-text-center { text-align: center; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".u-text-left",
          "cssText": ".u-text-left { text-align: start; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".u-text-right",
          "cssText": ".u-text-right { text-align: end; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".u-text-vertical-lr",
          "cssText": ".u-text-vertical-lr { writing-mode: vertical-lr; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".u-text-vertical-rl",
          "cssText": ".u-text-vertical-rl { writing-mode: vertical-rl; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".u-block-left",
          "cssText": ".u-block-left { float: left; margin-bottom: 1em; margin-right: 1em; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".u-block-right",
          "cssText": ".u-block-right { float: right; margin-bottom: 1em; margin-left: 1em; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 80em) {\n  .u-text-left-from-lap { text-align: start; }\n}",
          "urls": [],
          "group": "screen and (min-width: 80em)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 80em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "80em",
                "80",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".u-text-left-from-lap",
          "cssText": ".u-text-left-from-lap { text-align: start; }",
          "urls": [],
          "group": "screen and (min-width: 80em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 80em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "80em",
                "80",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 80em) {\n  .u-text-center-from-lap { text-align: center; }\n}",
          "urls": [],
          "group": "screen and (min-width: 80em)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 80em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "80em",
                "80",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".u-text-center-from-lap",
          "cssText": ".u-text-center-from-lap { text-align: center; }",
          "urls": [],
          "group": "screen and (min-width: 80em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 80em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "80em",
                "80",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 80em) {\n  .u-text-right-from-lap { text-align: end; }\n}",
          "urls": [],
          "group": "screen and (min-width: 80em)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 80em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "80em",
                "80",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".u-text-right-from-lap",
          "cssText": ".u-text-right-from-lap { text-align: end; }",
          "urls": [],
          "group": "screen and (min-width: 80em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 80em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "80em",
                "80",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".u-full-width",
          "cssText": ".u-full-width { left: 50%; margin-left: -50vw; margin-right: -50vw; position: relative; right: 50%; width: 100vw; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".u-center",
          "cssText": ".u-center { margin-left: auto; margin-right: auto; position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".u-no-margin.u-no-margin",
          "cssText": ".u-no-margin.u-no-margin { margin: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".u-no-margin-top.u-no-margin-top",
          "cssText": ".u-no-margin-top.u-no-margin-top { margin-top: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".u-bg-active.u-bg-active",
          "cssText": ".u-bg-active.u-bg-active { background-color: rgb(252, 119, 80); border-color: rgb(252, 119, 80); color: rgb(17, 17, 17); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".u-bg-category.u-bg-category",
          "cssText": ".u-bg-category.u-bg-category { background-color: rgb(117, 51, 108); border-color: rgb(117, 51, 108); color: rgb(255, 255, 255); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".u-bg-error.u-bg-error",
          "cssText": ".u-bg-error.u-bg-error { background-color: rgb(168, 38, 21); border-color: rgb(168, 38, 21); color: rgb(255, 255, 255); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".u-bg-info.u-bg-info",
          "cssText": ".u-bg-info.u-bg-info { background-color: rgb(0, 42, 86); border-color: rgb(0, 42, 86); color: rgb(255, 255, 255); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".u-bg-success.u-bg-success",
          "cssText": ".u-bg-success.u-bg-success { background-color: rgb(4, 103, 4); border-color: rgb(4, 103, 4); color: rgb(255, 255, 255); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".u-bg-warning.u-bg-warning",
          "cssText": ".u-bg-warning.u-bg-warning { background-color: rgb(194, 134, 5); border-color: rgb(194, 134, 5); color: rgb(17, 17, 17); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".u-color-draft.u-color-draft",
          "cssText": ".u-color-draft.u-color-draft { background-color: rgb(255, 255, 255); border-color: rgb(17, 17, 17); color: rgb(17, 17, 17); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".u-color-error.u-color-error",
          "cssText": ".u-color-error.u-color-error { background-color: rgb(255, 255, 255); border-color: rgb(168, 38, 21); color: rgb(168, 38, 21); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".u-color-info.u-color-info",
          "cssText": ".u-color-info.u-color-info { background-color: rgb(255, 255, 255); border-color: rgb(0, 42, 86); color: rgb(0, 42, 86); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".u-color-success.u-color-success",
          "cssText": ".u-color-success.u-color-success { background-color: rgb(255, 255, 255); border-color: rgb(4, 103, 4); color: rgb(4, 103, 4); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".u-color-warning.u-color-warning",
          "cssText": ".u-color-warning.u-color-warning { background-color: rgb(255, 255, 255); border-color: rgb(194, 134, 5); color: rgb(17, 17, 17); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        }
      ]
    },
    {
      "href": "https://www.w3.org/assets/website-2021/styles/advanced.css?ver=1.5",
      "rules": 190,
      "rulesList": [
        {
          "type": "CSSStyleRule",
          "selector": "[hidden]",
          "cssText": "[hidden] { display: none !important; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[data-trigger=\"account-menu\"] .sr-only, .visuallyhidden:not(:focus):not(:active)",
          "cssText": "[data-trigger=\"account-menu\"] .sr-only, .visuallyhidden:not(:focus):not(:active) { border: 0px; clip: rect(0px, 0px, 0px, 0px); clip-path: inset(100%); height: 1px; overflow: hidden; padding: 0px; position: absolute; white-space: nowrap; width: 1px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".visuallyhidden + *",
          "cssText": ".visuallyhidden + * { margin-top: 0px !important; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "br",
          "cssText": "br { margin-top: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[data-trigger=\"account-menu\"]",
          "cssText": "[data-trigger=\"account-menu\"] { border-radius: 0px; margin-left: auto; padding: 0.4375rem; position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[data-trigger=\"account-menu\"]::before",
          "cssText": "[data-trigger=\"account-menu\"]::before { background-color: rgb(0, 90, 156); bottom: -0.125rem; content: \"\"; display: none; height: 0.1875rem; left: 0px; position: absolute; width: 100%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[data-trigger=\"account-menu\"].js-has-msg::after",
          "cssText": "[data-trigger=\"account-menu\"].js-has-msg::after { background-color: rgb(233, 55, 55); border: 3px solid rgb(255, 255, 255); border-radius: 50%; content: \"\"; height: 15px; position: absolute; right: 3px; top: 3px; width: 15px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 70em) {\n  [data-trigger=\"account-menu\"] { margin-inline-start: auto; padding: 0.5rem 0.1875rem 0.3125rem; }\n  [data-trigger=\"account-menu\"]:hover::before { display: block; }\n  [data-trigger=\"account-menu\"]:focus { background-color: rgb(249, 220, 74); border-color: rgb(0, 0, 0); }\n  [data-trigger=\"account-menu\"]:focus:hover::before { display: none; }\n}",
          "urls": [],
          "group": "screen and (min-width: 70em)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 70em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "70em",
                "70",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[data-trigger=\"account-menu\"]",
          "cssText": "[data-trigger=\"account-menu\"] { margin-inline-start: auto; padding: 0.5rem 0.1875rem 0.3125rem; }",
          "urls": [],
          "group": "screen and (min-width: 70em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 70em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "70em",
                "70",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": "[data-trigger=\"account-menu\"]:hover::before",
          "cssText": "[data-trigger=\"account-menu\"]:hover::before { display: block; }",
          "urls": [],
          "group": "screen and (min-width: 70em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 70em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "70em",
                "70",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": "[data-trigger=\"account-menu\"]:focus",
          "cssText": "[data-trigger=\"account-menu\"]:focus { background-color: rgb(249, 220, 74); border-color: rgb(0, 0, 0); }",
          "urls": [],
          "group": "screen and (min-width: 70em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 70em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "70em",
                "70",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": "[data-trigger=\"account-menu\"]:focus:hover::before",
          "cssText": "[data-trigger=\"account-menu\"]:focus:hover::before { display: none; }",
          "urls": [],
          "group": "screen and (min-width: 70em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 70em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "70em",
                "70",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": "[data-trigger=\"account-menu\"][aria-expanded=\"false\"] + .account-menu",
          "cssText": "[data-trigger=\"account-menu\"][aria-expanded=\"false\"] + .account-menu { display: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[data-trigger=\"account-menu\"] *",
          "cssText": "[data-trigger=\"account-menu\"] * { pointer-events: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[data-trigger=\"account-menu\"] .sr-only",
          "cssText": "[data-trigger=\"account-menu\"] .sr-only { font-size: 0.875rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 70em) {\n  [data-trigger=\"account-menu\"] .sr-only { border: initial; clip: auto; clip-path: none; height: auto; margin: initial; overflow: initial; padding: initial; position: static; white-space: nowrap; width: auto; }\n}",
          "urls": [],
          "group": "screen and (min-width: 70em)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 70em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "70em",
                "70",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[data-trigger=\"account-menu\"] .sr-only",
          "cssText": "[data-trigger=\"account-menu\"] .sr-only { border: initial; clip: auto; clip-path: none; height: auto; margin: initial; overflow: initial; padding: initial; position: static; white-space: nowrap; width: auto; }",
          "urls": [],
          "group": "screen and (min-width: 70em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 70em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "70em",
                "70",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 70em) {\n  [data-trigger=\"account-menu\"] .avatar { margin-inline-start: 0.5rem; }\n}",
          "urls": [],
          "group": "screen and (min-width: 70em)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 70em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "70em",
                "70",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[data-trigger=\"account-menu\"] .avatar",
          "cssText": "[data-trigger=\"account-menu\"] .avatar { margin-inline-start: 0.5rem; }",
          "urls": [],
          "group": "screen and (min-width: 70em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 70em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "70em",
                "70",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": "[dir=\"rtl\"] [data-trigger=\"account-menu\"]",
          "cssText": "[dir=\"rtl\"] [data-trigger=\"account-menu\"] { margin-left: 0px; margin-right: auto; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[dir=\"rtl\"] [data-trigger=\"account-menu\"].js-has-msg::after",
          "cssText": "[dir=\"rtl\"] [data-trigger=\"account-menu\"].js-has-msg::after { left: 3px; right: auto; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".account-menu",
          "cssText": ".account-menu { background-color: rgb(255, 255, 255); border: 1px solid rgb(202, 201, 201); box-shadow: rgba(55, 70, 95, 0.07) 0px 8px 16px 0px; position: absolute; right: 5vw; top: 100%; max-width: calc(100% - 10vw); min-width: 15.625rem; z-index: 10; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[dir=\"rtl\"] .account-menu",
          "cssText": "[dir=\"rtl\"] .account-menu { left: 5vw; right: auto; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".account-menu ul",
          "cssText": ".account-menu ul { padding-bottom: 0.625rem; padding-top: 0.625rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".account-menu ul li",
          "cssText": ".account-menu ul li { padding: 0.625rem 1.25rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".account-menu li:first-of-type",
          "cssText": ".account-menu li:first-of-type { font-weight: 600; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".account-menu li:nth-child(3)",
          "cssText": ".account-menu li:nth-child(3) { padding-top: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".account-menu li:last-of-type",
          "cssText": ".account-menu li:last-of-type { padding-bottom: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".account-menu a",
          "cssText": ".account-menu a { display: block; padding-bottom: 0.625rem; padding-top: 0.625rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".no-js [data-trigger=\"mobile-nav\"], .no-js .global-nav__inner .nav__submenu",
          "cssText": ".no-js [data-trigger=\"mobile-nav\"], .no-js .global-nav__inner .nav__submenu { display: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".no-js .global-nav__inner > ul",
          "cssText": ".no-js .global-nav__inner > ul { border-bottom: none; box-shadow: none; padding-left: 0px; padding-right: 0px; position: static; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[data-trigger=\"mobile-nav\"]",
          "cssText": "[data-trigger=\"mobile-nav\"] { display: inline-flex; font-size: 0.875rem; padding: 0.4375rem 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[data-trigger=\"mobile-nav\"]:focus",
          "cssText": "[data-trigger=\"mobile-nav\"]:focus { background-color: rgb(249, 220, 74); border-color: rgb(0, 0, 0); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[data-trigger=\"mobile-nav\"][aria-expanded=\"false\"] .close-icon",
          "cssText": "[data-trigger=\"mobile-nav\"][aria-expanded=\"false\"] .close-icon { display: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[data-trigger=\"mobile-nav\"][aria-expanded=\"true\"] .menu-icon",
          "cssText": "[data-trigger=\"mobile-nav\"][aria-expanded=\"true\"] .menu-icon { display: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[data-trigger=\"mobile-nav\"][aria-expanded=\"false\"] ~ .account-login",
          "cssText": "[data-trigger=\"mobile-nav\"][aria-expanded=\"false\"] ~ .account-login { display: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[data-trigger=\"mobile-nav\"][aria-expanded=\"false\"] + *",
          "cssText": "[data-trigger=\"mobile-nav\"][aria-expanded=\"false\"] + * { display: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[data-trigger=\"mobile-nav\"][aria-expanded=\"true\"] ~ .account-login",
          "cssText": "[data-trigger=\"mobile-nav\"][aria-expanded=\"true\"] ~ .account-login { display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 70em) {\n  [data-trigger=\"mobile-nav\"] { display: none; }\n}",
          "urls": [],
          "group": "screen and (min-width: 70em)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 70em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "70em",
                "70",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[data-trigger=\"mobile-nav\"]",
          "cssText": "[data-trigger=\"mobile-nav\"] { display: none; }",
          "urls": [],
          "group": "screen and (min-width: 70em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 70em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "70em",
                "70",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": "[data-trigger=\"mobile-nav\"]",
          "cssText": "[data-trigger=\"mobile-nav\"] { margin-left: auto; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[dir=\"rtl\"] [data-trigger=\"mobile-nav\"]",
          "cssText": "[dir=\"rtl\"] [data-trigger=\"mobile-nav\"] { margin-left: 0px; margin-right: auto; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[data-trigger=\"account-menu\"] ~ [data-trigger=\"mobile-nav\"]",
          "cssText": "[data-trigger=\"account-menu\"] ~ [data-trigger=\"mobile-nav\"] { margin-left: 0.625rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[dir=\"rtl\"] [data-trigger=\"account-menu\"] ~ [data-trigger=\"mobile-nav\"]",
          "cssText": "[dir=\"rtl\"] [data-trigger=\"account-menu\"] ~ [data-trigger=\"mobile-nav\"] { margin-left: 0px; margin-right: 0.625rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "#global-nav",
          "cssText": "#global-nav { position: relative; z-index: 2; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-nav__inner > ul",
          "cssText": ".global-nav__inner > ul { border-bottom: 1px solid rgb(202, 201, 201); box-shadow: rgba(55, 70, 95, 0.07) 0px 8px 16px -5px; display: flex; flex-basis: 100%; flex-wrap: wrap; left: 0px; padding-bottom: 2.8125rem; padding-left: 5vw; padding-right: 5vw; position: absolute; top: 100%; width: 100%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 70em) {\n  .global-nav__inner > ul { border: none; box-shadow: none; flex-basis: auto; flex-wrap: nowrap; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; position: static; }\n}",
          "urls": [],
          "group": "screen and (min-width: 70em)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 70em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "70em",
                "70",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-nav__inner > ul",
          "cssText": ".global-nav__inner > ul { border: none; box-shadow: none; flex-basis: auto; flex-wrap: nowrap; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; position: static; }",
          "urls": [],
          "group": "screen and (min-width: 70em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 70em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "70em",
                "70",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".signed-in .global-nav__inner > ul > li:last-child",
          "cssText": ".signed-in .global-nav__inner > ul > li:last-child { display: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".js .global-nav__inner .top-nav-item > .nav-link::after",
          "cssText": ".js .global-nav__inner .top-nav-item > .nav-link::after { visibility: visible; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-nav__inner [data-trigger=\"sub-nav\"]",
          "cssText": ".global-nav__inner [data-trigger=\"sub-nav\"] { align-items: center; background-color: transparent; border-color: transparent; border-radius: 0px; color: rgb(17, 17, 17); display: flex; font-size: 1rem; line-height: inherit; outline: transparent solid 1px; outline-offset: -1px; padding: 0.75rem 0px; width: 100%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 70em) {\n  .global-nav__inner [data-trigger=\"sub-nav\"] { display: inline-flex; }\n}",
          "urls": [],
          "group": "screen and (min-width: 70em)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 70em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "70em",
                "70",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-nav__inner [data-trigger=\"sub-nav\"]",
          "cssText": ".global-nav__inner [data-trigger=\"sub-nav\"] { display: inline-flex; }",
          "urls": [],
          "group": "screen and (min-width: 70em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 70em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "70em",
                "70",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-nav__inner [data-trigger=\"sub-nav\"]::after",
          "cssText": ".global-nav__inner [data-trigger=\"sub-nav\"]::after { margin-inline-start: auto !important; transform: rotate(-45deg); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 70em) {\n  .global-nav__inner [data-trigger=\"sub-nav\"]::after { margin-block-start: -0.1875rem; transform: rotate(45deg); margin-inline-start: 0.5rem !important; }\n}",
          "urls": [],
          "group": "screen and (min-width: 70em)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 70em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "70em",
                "70",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-nav__inner [data-trigger=\"sub-nav\"]::after",
          "cssText": ".global-nav__inner [data-trigger=\"sub-nav\"]::after { margin-block-start: -0.1875rem; transform: rotate(45deg); margin-inline-start: 0.5rem !important; }",
          "urls": [],
          "group": "screen and (min-width: 70em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 70em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "70em",
                "70",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-nav__inner [data-trigger=\"sub-nav\"]:focus",
          "cssText": ".global-nav__inner [data-trigger=\"sub-nav\"]:focus { background-color: rgb(249, 220, 74); border-color: rgb(0, 0, 0); background-image: none !important; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-nav__inner [data-trigger=\"sub-nav\"][aria-expanded=\"false\"] + *",
          "cssText": ".global-nav__inner [data-trigger=\"sub-nav\"][aria-expanded=\"false\"] + * { display: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 70em) {\n  .global-nav__inner [data-trigger=\"sub-nav\"][aria-expanded=\"true\"]::after { margin-block-start: 0px; scale: -1; }\n}",
          "urls": [],
          "group": "screen and (min-width: 70em)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 70em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "70em",
                "70",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-nav__inner [data-trigger=\"sub-nav\"][aria-expanded=\"true\"]::after",
          "cssText": ".global-nav__inner [data-trigger=\"sub-nav\"][aria-expanded=\"true\"]::after { margin-block-start: 0px; scale: -1; }",
          "urls": [],
          "group": "screen and (min-width: 70em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 70em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "70em",
                "70",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": "[dir=\"rtl\"] .global-nav__inner [data-trigger=\"sub-nav\"]::after",
          "cssText": "[dir=\"rtl\"] .global-nav__inner [data-trigger=\"sub-nav\"]::after { transform: rotate(135deg); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 70em) {\n  [dir=\"rtl\"] .global-nav__inner [data-trigger=\"sub-nav\"]::after { margin-inline-start: 0.25rem; transform: rotate(45deg); }\n}",
          "urls": [],
          "group": "screen and (min-width: 70em)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 70em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "70em",
                "70",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[dir=\"rtl\"] .global-nav__inner [data-trigger=\"sub-nav\"]::after",
          "cssText": "[dir=\"rtl\"] .global-nav__inner [data-trigger=\"sub-nav\"]::after { margin-inline-start: 0.25rem; transform: rotate(45deg); }",
          "urls": [],
          "group": "screen and (min-width: 70em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 70em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "70em",
                "70",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-nav__inner .nav__submenu",
          "cssText": ".global-nav__inner .nav__submenu { background-color: rgb(255, 255, 255); border-bottom: 1px solid rgb(202, 201, 201); box-shadow: rgba(55, 70, 95, 0.07) 0px 8px 16px -5px; display: block; left: 0px; min-height: calc(100% + 1px); padding-bottom: 2.8125rem; position: absolute; top: 0px; width: 100vw; z-index: 5; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 70em) {\n  .global-nav__inner .nav__submenu { border-bottom: 1px solid rgb(202, 201, 201); border-top: 1px solid rgb(202, 201, 201); left: 50%; min-height: auto; padding: 3.125rem 1.25rem; top: 100%; transform: translateX(-50%); }\n}",
          "urls": [],
          "group": "screen and (min-width: 70em)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 70em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "70em",
                "70",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-nav__inner .nav__submenu",
          "cssText": ".global-nav__inner .nav__submenu { border-bottom: 1px solid rgb(202, 201, 201); border-top: 1px solid rgb(202, 201, 201); left: 50%; min-height: auto; padding: 3.125rem 1.25rem; top: 100%; transform: translateX(-50%); }",
          "urls": [],
          "group": "screen and (min-width: 70em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 70em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "70em",
                "70",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 70em) {\n  .global-nav__inner .nav__submenu .l-center { display: flex; justify-content: space-between; }\n}",
          "urls": [],
          "group": "screen and (min-width: 70em)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 70em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "70em",
                "70",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-nav__inner .nav__submenu .l-center",
          "cssText": ".global-nav__inner .nav__submenu .l-center { display: flex; justify-content: space-between; }",
          "urls": [],
          "group": "screen and (min-width: 70em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 70em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "70em",
                "70",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 70em) {\n  .global-nav__inner .nav__submenu__intro { width: 30%; }\n}",
          "urls": [],
          "group": "screen and (min-width: 70em)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 70em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "70em",
                "70",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-nav__inner .nav__submenu__intro",
          "cssText": ".global-nav__inner .nav__submenu__intro { width: 30%; }",
          "urls": [],
          "group": "screen and (min-width: 70em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 70em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "70em",
                "70",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-nav__inner .nav__submenu__intro > h2",
          "cssText": ".global-nav__inner .nav__submenu__intro > h2 { font-size: 1.25rem; line-height: 1.6; color: rgb(17, 17, 17); font-weight: 600; margin-top: 1.5625rem; padding-bottom: 0.375rem; padding-top: 0.375rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 70em) {\n  .global-nav__inner .nav__submenu__intro > h2 { font-size: 2.125rem; line-height: 1.26471; margin-bottom: 1.5625rem; margin-top: 0px; }\n}",
          "urls": [],
          "group": "screen and (min-width: 70em)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 70em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "70em",
                "70",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-nav__inner .nav__submenu__intro > h2",
          "cssText": ".global-nav__inner .nav__submenu__intro > h2 { font-size: 2.125rem; line-height: 1.26471; margin-bottom: 1.5625rem; margin-top: 0px; }",
          "urls": [],
          "group": "screen and (min-width: 70em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 70em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "70em",
                "70",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-nav__inner .nav__submenu__intro__text",
          "cssText": ".global-nav__inner .nav__submenu__intro__text { font-size: 1.125rem; line-height: 1.5; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-nav__inner .nav__submenu__intro__text :not(a)",
          "cssText": ".global-nav__inner .nav__submenu__intro__text :not(a) { display: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 70em) {\n  .global-nav__inner .nav__submenu__intro__text :not(a) { display: block; }\n}",
          "urls": [],
          "group": "screen and (min-width: 70em)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 70em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "70em",
                "70",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-nav__inner .nav__submenu__intro__text :not(a)",
          "cssText": ".global-nav__inner .nav__submenu__intro__text :not(a) { display: block; }",
          "urls": [],
          "group": "screen and (min-width: 70em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 70em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "70em",
                "70",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-nav__inner .nav__submenu__intro__text > a",
          "cssText": ".global-nav__inner .nav__submenu__intro__text > a { color: rgb(0, 90, 156); display: inline-block; margin-bottom: 1rem; margin-top: 0px; padding-bottom: 0.5625rem; padding-top: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 70em) {\n  .global-nav__inner .nav__submenu__intro__text > a { margin-bottom: 0px; margin-top: 1rem; padding-top: 0.5625rem; }\n}",
          "urls": [],
          "group": "screen and (min-width: 70em)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 70em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "70em",
                "70",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-nav__inner .nav__submenu__intro__text > a",
          "cssText": ".global-nav__inner .nav__submenu__intro__text > a { margin-bottom: 0px; margin-top: 1rem; padding-top: 0.5625rem; }",
          "urls": [],
          "group": "screen and (min-width: 70em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 70em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "70em",
                "70",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-nav__inner .nav__submenu__intro__text > a:hover",
          "cssText": ".global-nav__inner .nav__submenu__intro__text > a:hover { color: rgb(0, 42, 86); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-nav__inner .nav__submenu__intro__text > a:focus",
          "cssText": ".global-nav__inner .nav__submenu__intro__text > a:focus { color: rgb(0, 0, 0); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-nav__inner [data-button=\"mobile-back\"]",
          "cssText": ".global-nav__inner [data-button=\"mobile-back\"] { font-size: 1.25rem; line-height: 1.6; align-items: center; border-bottom: 1px solid rgb(202, 201, 201); border-radius: 0px; display: flex; padding: 0.75rem 5vw; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 70em) {\n  .global-nav__inner [data-button=\"mobile-back\"] { display: none; }\n}",
          "urls": [],
          "group": "screen and (min-width: 70em)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 70em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "70em",
                "70",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-nav__inner [data-button=\"mobile-back\"]",
          "cssText": ".global-nav__inner [data-button=\"mobile-back\"] { display: none; }",
          "urls": [],
          "group": "screen and (min-width: 70em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 70em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "70em",
                "70",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-nav__inner [data-button=\"mobile-back\"]::before",
          "cssText": ".global-nav__inner [data-button=\"mobile-back\"]::before { block-size: 1rem; border-color: rgb(0, 0, 0); border-style: solid; border-width: 0px 0.25rem 0.25rem 0px; content: \"\"; inline-size: 1rem; flex: 0 0 auto; margin-inline: 0.375rem 0.75rem; transform: rotate(135deg); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[dir=\"rtl\"] .global-nav__inner [data-button=\"mobile-back\"]::before",
          "cssText": "[dir=\"rtl\"] .global-nav__inner [data-button=\"mobile-back\"]::before { transform: rotate(-45deg); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 70em) {\n  .global-nav__inner .nav__submenu ul { columns: 2; column-gap: 2.5rem; width: 65%; }\n}",
          "urls": [],
          "group": "screen and (min-width: 70em)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 70em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "70em",
                "70",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-nav__inner .nav__submenu ul",
          "cssText": ".global-nav__inner .nav__submenu ul { columns: 2; column-gap: 2.5rem; width: 65%; }",
          "urls": [],
          "group": "screen and (min-width: 70em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 70em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "70em",
                "70",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-nav__inner .nav__submenu li",
          "cssText": ".global-nav__inner .nav__submenu li { border-bottom: 1px solid rgb(202, 201, 201); padding-bottom: 0.1875rem; padding-top: 0.1875rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 70em) {\n  .global-nav__inner .nav__submenu li { border-bottom: 0px; padding-bottom: 0px; padding-top: 0px; }\n}",
          "urls": [],
          "group": "screen and (min-width: 70em)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 70em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "70em",
                "70",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-nav__inner .nav__submenu li",
          "cssText": ".global-nav__inner .nav__submenu li { border-bottom: 0px; padding-bottom: 0px; padding-top: 0px; }",
          "urls": [],
          "group": "screen and (min-width: 70em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 70em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "70em",
                "70",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-nav__inner .nav__submenu li a",
          "cssText": ".global-nav__inner .nav__submenu li a { color: rgb(17, 17, 17); display: block; font-size: 1.1875rem; line-height: 1.5; padding-bottom: 0.5rem; padding-top: 0.5rem; text-decoration: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 70em) {\n  .global-nav__inner .nav__submenu li a { align-items: flex-start; display: inline-flex; padding-inline: 0.125rem; width: auto; }\n  .global-nav__inner .nav__submenu li a::before { block-size: 1rem; border-color: rgb(0, 90, 156); border-style: solid; border-width: 0px 0.25rem 0.25rem 0px; content: \"\"; flex: 0 0 auto; inline-size: 1rem; margin-block-start: 0.375rem; margin-inline-end: 1rem; transform: rotate(-45deg); }\n}",
          "urls": [],
          "group": "screen and (min-width: 70em)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 70em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "70em",
                "70",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-nav__inner .nav__submenu li a",
          "cssText": ".global-nav__inner .nav__submenu li a { align-items: flex-start; display: inline-flex; padding-inline: 0.125rem; width: auto; }",
          "urls": [],
          "group": "screen and (min-width: 70em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 70em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "70em",
                "70",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-nav__inner .nav__submenu li a::before",
          "cssText": ".global-nav__inner .nav__submenu li a::before { block-size: 1rem; border-color: rgb(0, 90, 156); border-style: solid; border-width: 0px 0.25rem 0.25rem 0px; content: \"\"; flex: 0 0 auto; inline-size: 1rem; margin-block-start: 0.375rem; margin-inline-end: 1rem; transform: rotate(-45deg); }",
          "urls": [],
          "group": "screen and (min-width: 70em)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 70em)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "70em",
                "70",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-nav__inner .nav__submenu li a:hover",
          "cssText": ".global-nav__inner .nav__submenu li a:hover { color: rgb(0, 42, 86); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-nav__inner .nav__submenu li a:hover::before",
          "cssText": ".global-nav__inner .nav__submenu li a:hover::before { border-color: rgb(0, 42, 86); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-nav__inner .nav__submenu li a:focus",
          "cssText": ".global-nav__inner .nav__submenu li a:focus { background-color: rgb(249, 220, 74); background-image: linear-gradient(to top, rgb(0, 0, 0) 3px, rgb(249, 220, 74) 3px, rgb(249, 220, 74)); color: rgb(0, 0, 0); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-nav__inner .nav__submenu li a:focus::before",
          "cssText": ".global-nav__inner .nav__submenu li a:focus::before { border-color: rgb(0, 0, 0); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[dir=\"rtl\"] .global-nav__inner .nav__submenu li a::before",
          "cssText": "[dir=\"rtl\"] .global-nav__inner .nav__submenu li a::before { transform: rotate(135deg); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".js .component--collapsibles [data-heading=\"collapsibles\"] button",
          "cssText": ".js .component--collapsibles [data-heading=\"collapsibles\"] button { align-items: flex-start; border-radius: 0px; display: flex; flex-wrap: wrap; font-size: 1.125rem; font-weight: bold; line-height: 1.5; justify-content: space-between; margin-top: 0px; padding: 0.1875rem; width: 100%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".js .component--collapsibles [data-heading=\"collapsibles\"] button > span",
          "cssText": ".js .component--collapsibles [data-heading=\"collapsibles\"] button > span { font-size: 0.9375rem; font-weight: normal; line-height: 1.5; color: rgb(51, 51, 51); order: 2; width: 100%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".js .component--collapsibles [data-heading=\"collapsibles\"] button::after",
          "cssText": ".js .component--collapsibles [data-heading=\"collapsibles\"] button::after { block-size: 0.875rem; border-color: black; border-style: solid; border-width: 0px 0.25rem 0.25rem 0px; content: \"\"; inline-size: 0.875rem; margin-block-start: 0.25rem; margin-inline-end: 0.125rem; transform: rotate(45deg); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".js .component--collapsibles [data-heading=\"collapsibles\"] button:hover",
          "cssText": ".js .component--collapsibles [data-heading=\"collapsibles\"] button:hover { text-decoration: underline; text-decoration-skip-ink: auto; text-underline-offset: 0.25em; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".js .component--collapsibles [data-heading=\"collapsibles\"] button:focus",
          "cssText": ".js .component--collapsibles [data-heading=\"collapsibles\"] button:focus { border-color: inherit; background-color: rgb(249, 220, 74); text-decoration: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".js .component--collapsibles [data-heading=\"collapsibles\"] button[aria-expanded=\"true\"]::after",
          "cssText": ".js .component--collapsibles [data-heading=\"collapsibles\"] button[aria-expanded=\"true\"]::after { margin-block-start: 0.625rem; scale: -1; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".js .component--collapsibles [data-heading=\"collapsibles\"] + [aria-hidden=\"true\"]",
          "cssText": ".js .component--collapsibles [data-heading=\"collapsibles\"] + [aria-hidden=\"true\"] { display: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".js [data-component=\"card\"]",
          "cssText": ".js [data-component=\"card\"] { cursor: pointer; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".js [data-component=\"card\"]:hover .card__link",
          "cssText": ".js [data-component=\"card\"]:hover .card__link { text-decoration: underline; text-decoration-skip-ink: auto; text-underline-offset: 0.25em; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".js [data-component=\"card\"] .card__text",
          "cssText": ".js [data-component=\"card\"] .card__text { }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".js [data-component=\"card\"] .card__text > :nth-last-child(2)",
          "cssText": ".js [data-component=\"card\"] .card__text > :nth-last-child(2) { margin-bottom: 1rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".js [data-component=\"card\"] .card__text > :last-child",
          "cssText": ".js [data-component=\"card\"] .card__text > :last-child { margin-bottom: 0px; margin-top: auto; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".js .hero--listing .browse h2",
          "cssText": ".js .hero--listing .browse h2 { display: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".js .hero--video [data-video-control=\"hero\"]",
          "cssText": ".js .hero--video [data-video-control=\"hero\"] { margin-block-start: 1rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".js .hero--video [data-video-control=\"hero\"] > *",
          "cssText": ".js .hero--video [data-video-control=\"hero\"] > * { pointer-events: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".js .hero--video [data-video-control=\"hero\"] .pause-icon",
          "cssText": ".js .hero--video [data-video-control=\"hero\"] .pause-icon { display: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".js .hero--video [data-video-control=\"hero\"].js-play-video .pause-icon",
          "cssText": ".js .hero--video [data-video-control=\"hero\"].js-play-video .pause-icon { display: block; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".js .hero--video [data-video-control=\"hero\"].js-play-video .play-icon",
          "cssText": ".js .hero--video [data-video-control=\"hero\"].js-play-video .play-icon { display: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".js [data-component=\"slider\"] .js-slider",
          "cssText": ".js [data-component=\"slider\"] .js-slider { overflow: hidden; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".js [data-component=\"slider\"] .js-slider:focus-within",
          "cssText": ".js [data-component=\"slider\"] .js-slider:focus-within { box-shadow: rgb(249, 220, 74) 0px 0px 0px 3px; outline: rgb(17, 17, 17) solid 0.125rem; outline-offset: -0.125rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".js [data-component=\"slider\"] .js-slider > ul",
          "cssText": ".js [data-component=\"slider\"] .js-slider > ul { display: flex; padding-bottom: 0.625rem; padding-top: 0.625rem; position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".js [data-component=\"slider\"] .js-slider > ul > li",
          "cssText": ".js [data-component=\"slider\"] .js-slider > ul > li { flex: 0 0 100%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".js [data-component=\"slider\"] .js-slider > ul > li.js-current",
          "cssText": ".js [data-component=\"slider\"] .js-slider > ul > li.js-current { visibility: visible; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".js [data-component=\"slider\"] .js-slider > ul > li.js-hidden",
          "cssText": ".js [data-component=\"slider\"] .js-slider > ul > li.js-hidden { visibility: hidden; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".js [data-component=\"slider\"] .js-slider > ul > li + li",
          "cssText": ".js [data-component=\"slider\"] .js-slider > ul > li + li { margin-top: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".slider-controls .js-previous svg, .slider-controls .js-next svg",
          "cssText": ".slider-controls .js-previous svg, .slider-controls .js-next svg { pointer-events: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".slider-controls .js-previous .chevron-right",
          "cssText": ".slider-controls .js-previous .chevron-right { display: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".slider-controls .js-next .chevron-left",
          "cssText": ".slider-controls .js-next .chevron-left { display: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[dir=\"rtl\"] .slider-controls .js-previous .chevron-left",
          "cssText": "[dir=\"rtl\"] .slider-controls .js-previous .chevron-left { display: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[dir=\"rtl\"] .slider-controls .js-previous .chevron-right",
          "cssText": "[dir=\"rtl\"] .slider-controls .js-previous .chevron-right { display: block; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[dir=\"rtl\"] .slider-controls .js-next .chevron-left",
          "cssText": "[dir=\"rtl\"] .slider-controls .js-next .chevron-left { display: block; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[dir=\"rtl\"] .slider-controls .js-next .chevron-right",
          "cssText": "[dir=\"rtl\"] .slider-controls .js-next .chevron-right { display: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".slider-controls .js-previous, .slider-controls .js-next",
          "cssText": ".slider-controls .js-previous, .slider-controls .js-next { color: rgb(17, 17, 17); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".slider-controls .js-previous:hover, .slider-controls .js-next:hover",
          "cssText": ".slider-controls .js-previous:hover, .slider-controls .js-next:hover { box-shadow: rgba(84, 84, 84, 0.25) 0px 0px 4px 2px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".slider-controls .js-previous:focus, .slider-controls .js-next:focus",
          "cssText": ".slider-controls .js-previous:focus, .slider-controls .js-next:focus { background-color: rgb(255, 255, 255); border-color: rgb(0, 0, 0); box-shadow: rgb(249, 220, 74) 0px 0px 0px 3px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".slider-controls button[disabled]",
          "cssText": ".slider-controls button[disabled] { background-color: transparent; border-color: transparent; color: rgb(84, 84, 84); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".slider-controls button[disabled]:hover",
          "cssText": ".slider-controls button[disabled]:hover { background-color: transparent; box-shadow: none; color: rgb(84, 84, 84); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".no-js [data-toggle=\"true\"]",
          "cssText": ".no-js [data-toggle=\"true\"] { display: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".no-js [data-toggle=\"true\"] + *",
          "cssText": ".no-js [data-toggle=\"true\"] + * { display: initial; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[data-toggle=\"true\"]",
          "cssText": "[data-toggle=\"true\"] { font-size: 0.9375rem; line-height: 1.5; align-items: center; display: inline-flex; font-weight: bold; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[data-toggle=\"true\"]::after",
          "cssText": "[data-toggle=\"true\"]::after { block-size: 0.4375rem; border-color: black; border-style: solid; border-width: 0px 0.125rem 0.125rem 0px; content: \"\"; inline-size: 0.4375rem; margin-block-start: -0.1875rem; margin-inline: 0.75rem 0.1875rem; transform: rotate(45deg); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[data-toggle=\"true\"]:hover",
          "cssText": "[data-toggle=\"true\"]:hover { box-shadow: rgba(84, 84, 84, 0.25) 0px 0px 4px 2px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[data-toggle=\"true\"]:focus",
          "cssText": "[data-toggle=\"true\"]:focus { background-color: rgb(249, 220, 74); border-color: rgb(0, 0, 0); box-shadow: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[data-toggle=\"true\"][aria-expanded=\"false\"] + *",
          "cssText": "[data-toggle=\"true\"][aria-expanded=\"false\"] + * { display: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[data-toggle=\"true\"][aria-expanded=\"true\"]::after",
          "cssText": "[data-toggle=\"true\"][aria-expanded=\"true\"]::after { margin-block-start: 0.25rem; scale: -1; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[data-toggle=\"true\"][aria-expanded=\"true\"] + *",
          "cssText": "[data-toggle=\"true\"][aria-expanded=\"true\"] + * { display: block; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".button[data-replylink], #js-cancel-reply",
          "cssText": ".button[data-replylink], #js-cancel-reply { font-size: 0.9375rem; line-height: 1.5; text-decoration: underline; text-decoration-skip-ink: auto; text-underline-offset: 0.25em; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".button[data-replylink]:hover, #js-cancel-reply:hover",
          "cssText": ".button[data-replylink]:hover, #js-cancel-reply:hover { box-shadow: rgba(84, 84, 84, 0.25) 0px 0px 4px 2px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".button[data-replylink]:focus, #js-cancel-reply:focus",
          "cssText": ".button[data-replylink]:focus, #js-cancel-reply:focus { background-color: rgb(249, 220, 74); border-color: rgb(0, 0, 0); box-shadow: none; text-decoration: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "#js-cancel-reply",
          "cssText": "#js-cancel-reply { margin-inline-start: 0.625rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".combo",
          "cssText": ".combo { display: block; position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".combo-menu",
          "cssText": ".combo-menu { background-color: rgb(245, 245, 245); display: none; left: 0px; max-height: 18.75rem; overflow-y: scroll; position: absolute; top: 100%; width: 100%; z-index: 100; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".combo-menu:not(:empty)",
          "cssText": ".combo-menu:not(:empty) { border: 1px solid rgba(0, 0, 0, 0.42); border-radius: 0px 0px 4px 4px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".open .combo-menu",
          "cssText": ".open .combo-menu { display: block; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".combo-option",
          "cssText": ".combo-option { padding: 0.625rem 0.75rem 0.75rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".combo-option.option-current, .combo-option:hover",
          "cssText": ".combo-option.option-current, .combo-option:hover { background-color: rgba(0, 0, 0, 0.1); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".combo-option.option-selected",
          "cssText": ".combo-option.option-selected { padding-right: 1.875rem; position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".combo-option.option-selected::after",
          "cssText": ".combo-option.option-selected::after { border-bottom: 2px solid rgb(0, 0, 0); border-right: 2px solid rgb(0, 0, 0); content: \"\"; height: 1rem; position: absolute; right: 0.9375rem; top: 50%; transform: translate(0px, -50%) rotate(45deg); width: 0.5rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".selected-options",
          "cssText": ".selected-options { list-style-type: none; margin: 0px; max-width: 25rem; padding: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".selected-options li",
          "cssText": ".selected-options li { display: inline-block; margin-bottom: 0.3125rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".remove-option",
          "cssText": ".remove-option { background-color: rgb(2, 68, 136); border: 1px solid rgb(2, 68, 136); border-radius: 3px; color: rgb(255, 255, 255); font-size: 0.75em; font-weight: bold; margin-bottom: 0.375rem; margin-right: 0.375rem; padding: 0.25em 1.75em 0.25em 0.25em; position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".remove-option:focus",
          "cssText": ".remove-option:focus { border-color: rgb(186, 161, 221); box-shadow: rgb(98, 0, 238) 0px 0px 3px 1px; outline: transparent solid 3px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".remove-option::before, .remove-option::after",
          "cssText": ".remove-option::before, .remove-option::after { border-right: 2px solid rgb(255, 255, 255); content: \"\"; height: 1em; right: 0.75em; position: absolute; top: 50%; width: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".remove-option::before",
          "cssText": ".remove-option::before { transform: translate(0px, -50%) rotate(45deg); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".remove-option::after",
          "cssText": ".remove-option::after { transform: translate(0px, -50%) rotate(-45deg); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".autocomplete__wrapper",
          "cssText": ".autocomplete__wrapper { position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".autocomplete__hint, .autocomplete__input",
          "cssText": ".autocomplete__hint, .autocomplete__input { appearance: none; border: 2px solid; border-radius: 0px; margin-bottom: 0px; width: 100%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".autocomplete__input",
          "cssText": ".autocomplete__input { background-color: transparent; position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".autocomplete__hint",
          "cssText": ".autocomplete__hint { color: rgb(202, 201, 201); position: absolute; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".autocomplete__input--default",
          "cssText": ".autocomplete__input--default { padding: 5px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".autocomplete__input--focused",
          "cssText": ".autocomplete__input--focused { background-color: rgb(255, 255, 255); outline: rgb(249, 220, 74) solid 3px; outline-offset: 0px; box-shadow: 0px 0px 0px 2px inset; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".autocomplete__input--show-all-values",
          "cssText": ".autocomplete__input--show-all-values { padding: 5px 34px 5px 5px; cursor: pointer; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[dir=\"rtl\"] .autocomplete__input--show-all-values",
          "cssText": "[dir=\"rtl\"] .autocomplete__input--show-all-values { padding-left: 34px; padding-right: 5px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".autocomplete__dropdown-arrow-down",
          "cssText": ".autocomplete__dropdown-arrow-down { display: inline-block; position: absolute; right: 8px; width: 24px; height: 24px; top: 12px; pointer-events: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[dir=\"rtl\"] .autocomplete__dropdown-arrow-down",
          "cssText": "[dir=\"rtl\"] .autocomplete__dropdown-arrow-down { right: auto; left: 8px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".autocomplete__menu",
          "cssText": ".autocomplete__menu { background-color: rgb(255, 255, 255); border-width: 0px 2px 2px; border-right-style: solid; border-bottom-style: solid; border-left-style: solid; border-color: initial; border-image: initial; border-top-style: initial; color: rgb(17, 17, 17); margin: 0px; max-height: 342px; overflow-x: hidden; padding: 0px; width: calc(100% - 4px); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".autocomplete__menu--visible",
          "cssText": ".autocomplete__menu--visible { display: block; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".autocomplete__menu--hidden",
          "cssText": ".autocomplete__menu--hidden { display: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".autocomplete__menu--overlay",
          "cssText": ".autocomplete__menu--overlay { box-shadow: rgba(0, 0, 0, 0.26) 0px 2px 6px; left: 0px; position: absolute; top: 100%; z-index: 100; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".autocomplete__menu--inline",
          "cssText": ".autocomplete__menu--inline { position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".autocomplete__option",
          "cssText": ".autocomplete__option { border-bottom: 1px solid rgb(202, 201, 201); border-top-width: 1px; border-right-width: 0px; border-left-width: 0px; cursor: pointer; display: block; position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".autocomplete__option > *",
          "cssText": ".autocomplete__option > * { pointer-events: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".autocomplete__option:first-of-type",
          "cssText": ".autocomplete__option:first-of-type { border-top-width: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".autocomplete__option:last-of-type",
          "cssText": ".autocomplete__option:last-of-type { border-bottom-width: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".autocomplete__option--odd",
          "cssText": ".autocomplete__option--odd { background-color: rgb(248, 248, 251); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".autocomplete__option--focused, .autocomplete__option:hover",
          "cssText": ".autocomplete__option--focused, .autocomplete__option:hover { background-color: rgb(0, 115, 216); border-color: rgb(0, 115, 216); color: white; outline: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".autocomplete__option--no-results",
          "cssText": ".autocomplete__option--no-results { background-color: rgb(248, 248, 251); color: rgb(84, 84, 84); cursor: not-allowed; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".autocomplete__hint, .autocomplete__input, .autocomplete__option",
          "cssText": ".autocomplete__hint, .autocomplete__input, .autocomplete__option { line-height: 1.25; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".autocomplete__hint, .autocomplete__option",
          "cssText": ".autocomplete__hint, .autocomplete__option { padding: 5px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        }
      ]
    },
    {
      "href": "https://www.w3.org/assets/website-2021/styles/print.css",
      "rules": 127,
      "rulesList": [
        {
          "type": "CSSFontFaceRule",
          "selector": "",
          "cssText": "@font-face { font-display: fallback; font-family: \"Noto Sans\"; font-style: normal; font-weight: 400; src: url(\"../fonts/notosans/notosans-regular.woff2\") format(\"woff2\"), url(\"../fonts/notosans/notosans-regular.woff\") format(\"woff\"); }",
          "urls": [
            "../fonts/notosans/notosans-regular.woff2",
            "../fonts/notosans/notosans-regular.woff"
          ],
          "group": "",
          "sources": [],
          "sinks": [
            {
              "reason": "url_sink",
              "urls": [
                "../fonts/notosans/notosans-regular.woff2",
                "../fonts/notosans/notosans-regular.woff"
              ]
            }
          ],
          "inheritedSources": []
        },
        {
          "type": "CSSFontFaceRule",
          "selector": "",
          "cssText": "@font-face { font-display: fallback; font-family: \"Noto Sans\"; font-style: italic; font-weight: 400; src: url(\"../fonts/notosans/notosans-italic.woff2\") format(\"woff2\"), url(\"../fonts/notosans/notosans-italic.woff\") format(\"woff\"); }",
          "urls": [
            "../fonts/notosans/notosans-italic.woff2",
            "../fonts/notosans/notosans-italic.woff"
          ],
          "group": "",
          "sources": [],
          "sinks": [
            {
              "reason": "url_sink",
              "urls": [
                "../fonts/notosans/notosans-italic.woff2",
                "../fonts/notosans/notosans-italic.woff"
              ]
            }
          ],
          "inheritedSources": []
        },
        {
          "type": "CSSFontFaceRule",
          "selector": "",
          "cssText": "@font-face { font-display: fallback; font-family: \"Noto Sans\"; font-style: normal; font-weight: 600; src: url(\"../fonts/notosans/notosans-bold.woff2\") format(\"woff2\"), url(\"../fonts/notosans/notosans-bold.woff\") format(\"woff\"); }",
          "urls": [
            "../fonts/notosans/notosans-bold.woff2",
            "../fonts/notosans/notosans-bold.woff"
          ],
          "group": "",
          "sources": [],
          "sinks": [
            {
              "reason": "url_sink",
              "urls": [
                "../fonts/notosans/notosans-bold.woff2",
                "../fonts/notosans/notosans-bold.woff"
              ]
            }
          ],
          "inheritedSources": []
        },
        {
          "type": "CSSFontFaceRule",
          "selector": "",
          "cssText": "@font-face { font-display: fallback; font-family: \"Noto Sans\"; font-style: italic; font-weight: 600; src: url(\"../fonts/notosans/notosans-bolditalic.woff2\") format(\"woff2\"), url(\"../fonts/notosans/notosans-bolditalic.woff\") format(\"woff\"); }",
          "urls": [
            "../fonts/notosans/notosans-bolditalic.woff2",
            "../fonts/notosans/notosans-bolditalic.woff"
          ],
          "group": "",
          "sources": [],
          "sinks": [
            {
              "reason": "url_sink",
              "urls": [
                "../fonts/notosans/notosans-bolditalic.woff2",
                "../fonts/notosans/notosans-bolditalic.woff"
              ]
            }
          ],
          "inheritedSources": []
        },
        {
          "type": "CSSPageRule",
          "selector": "",
          "cssText": "@page { margin: 2cm; size: 21cm 28cm; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "*, ::before, ::after, blockquote::first-line, li::first-line, p::first-line",
          "cssText": "*, ::before, ::after, blockquote::first-line, li::first-line, p::first-line { position: static; background: transparent !important; box-shadow: none !important; color: rgb(0, 0, 0) !important; overflow: visible !important; text-shadow: none !important; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "body",
          "cssText": "body { font: 12pt / 1.3 \"Noto Sans\", \"Trebuchet MS\", Geneva, sans-serif; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "body, img",
          "cssText": "body, img { display: block !important; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "img",
          "cssText": "img { height: auto !important; width: 100% !important; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "code, pre",
          "cssText": "code, pre { font-family: Monaco, \"Lucida Console\", \"Courier New\", monospace; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "a, blockquote, figure, h1, h2, h3, h4, h5, h6, img, li, pre, table, .tr-list__item",
          "cssText": "a, blockquote, figure, h1, h2, h3, h4, h5, h6, img, li, pre, table, .tr-list__item { break-inside: avoid; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "h1, h2, h3, h4, h5, h6",
          "cssText": "h1, h2, h3, h4, h5, h6 { font-weight: 600; margin: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "h1",
          "cssText": "h1 { font-size: 24pt; margin-top: 36pt; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "h2",
          "cssText": "h2 { font-size: 20pt; margin-top: 30pt; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "h3",
          "cssText": "h3 { font-size: 18pt; margin-top: 27pt; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "h4",
          "cssText": "h4 { font-size: 16pt; margin-top: 24pt; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "h5",
          "cssText": "h5 { font-size: 15pt; margin-top: 22pt; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "h6",
          "cssText": "h6 { font-size: 14pt; margin-top: 21pt; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "h1, h2, h3, h4, h5, h6, img",
          "cssText": "h1, h2, h3, h4, h5, h6, img { break-after: avoid; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "dl, ol, ul",
          "cssText": "dl, ol, ul { break-before: avoid; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "ul:not([class]) > * + *, ul:not([class]) li ul, ul:not([class]) li ol, ol:not([class]) > * + *, ol:not([class]) li ul, ol:not([class]) li ol, .clean-list > * + *, .clean-list li ul, .clean-list li ol",
          "cssText": "ul:not([class]) > * + *, ul:not([class]) li ul, ul:not([class]) li ol, ol:not([class]) > * + *, ol:not([class]) li ul, ol:not([class]) li ol, .clean-list > * + *, .clean-list li ul, .clean-list li ol { margin-top: 8pt; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".clean-list",
          "cssText": ".clean-list { padding: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "ol:not([class])",
          "cssText": "ol:not([class]) { counter-reset: count 0; list-style-type: none; padding-inline-start: 15pt; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "ol:not([class]) > li",
          "cssText": "ol:not([class]) > li { counter-increment: count 1; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "ol:not([class]) > li::before",
          "cssText": "ol:not([class]) > li::before { content: counters(count, \".\") \" \"; padding-inline-end: 6pt; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "form > * + *, .field-group > * + *, .radio-item + .radio-item, .checkbox-item + .checkbox-item, .segmented-group > * > * + *",
          "cssText": "form > * + *, .field-group > * + *, .radio-item + .radio-item, .checkbox-item + .checkbox-item, .segmented-group > * > * + * { margin-top: 8pt; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "fieldset",
          "cssText": "fieldset { border: 0px; margin: 0px; min-width: 0px; padding: 0.12pt 0px 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".field",
          "cssText": ".field { max-width: 15cm; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".field > *",
          "cssText": ".field > * { display: block; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".field-label, .group-legend",
          "cssText": ".field-label, .group-legend { font-weight: bold; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "select, textarea, [type=\"date\"], [type=\"email\"], [type=\"file\"], [type=\"number\"], [type=\"password\"], [type=\"search\"], [type=\"tel\"], [type=\"text\"], [type=\"time\"], [type=\"url\"]",
          "cssText": "select, textarea, [type=\"date\"], [type=\"email\"], [type=\"file\"], [type=\"number\"], [type=\"password\"], [type=\"search\"], [type=\"tel\"], [type=\"text\"], [type=\"time\"], [type=\"url\"] { appearance: none; border: 2px solid; border-radius: 0px; line-height: 1.25; padding: 3.75pt; width: 100%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[type=\"file\"]",
          "cssText": "[type=\"file\"] { border: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "button, input, optgroup, select, textarea",
          "cssText": "button, input, optgroup, select, textarea { font-size: 12pt; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".memorable-date, .input-group > *",
          "cssText": ".memorable-date, .input-group > * { display: inline-block; margin-top: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".memorable-date .faux-label, .input-group .faux-label",
          "cssText": ".memorable-date .faux-label, .input-group .faux-label { display: block; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".segmented-label span:first-of-type::after",
          "cssText": ".segmented-label span:first-of-type::after { content: \":\"; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".input-width-30",
          "cssText": ".input-width-30 { max-width: 59ex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".input-width-20",
          "cssText": ".input-width-20 { max-width: 41ex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".input-width-10",
          "cssText": ".input-width-10 { max-width: 23ex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".input-width-5",
          "cssText": ".input-width-5 { max-width: 10.8ex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".input-width-4",
          "cssText": ".input-width-4 { max-width: 9ex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".input-width-3",
          "cssText": ".input-width-3 { max-width: 7.2ex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".input-width-2",
          "cssText": ".input-width-2 { max-width: 5.4ex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "a:link, a:visited, a",
          "cssText": "a:link, a:visited, a { text-decoration: underline; text-decoration-skip-ink: auto; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".logo",
          "cssText": ".logo { display: block; width: 2cm; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "main a[href]::after, footer a[href]::after",
          "cssText": "main a[href]::after, footer a[href]::after { content: \" <\" attr(href) \"> \"; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "abbr[title]::after",
          "cssText": "abbr[title]::after { content: \" (\" attr(title) \")\"; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "table",
          "cssText": "table { border-collapse: collapse; width: 100%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "table, th, td",
          "cssText": "table, th, td { border: 1px solid; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "th, td, table caption",
          "cssText": "th, td, table caption { padding: 9pt; text-align: start; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "table caption",
          "cssText": "table caption { font-size: 14pt; font-weight: 600; padding-left: 0px; padding-right: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "blockquote, figure",
          "cssText": "blockquote, figure { margin-left: 0px; margin-right: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".l-frame",
          "cssText": ".l-frame { padding: 0px !important; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".l-sidebar > div",
          "cssText": ".l-sidebar > div { display: block !important; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".l-cluster > * > *",
          "cssText": ".l-cluster > * > * { display: inline-block; padding: 3pt; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".home .hero, .landing .hero",
          "cssText": ".home .hero, .landing .hero { margin-top: 36pt; min-height: 6cm; padding-right: 6cm; position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".home .hero h1, .landing .hero h1",
          "cssText": ".home .hero h1, .landing .hero h1 { margin-top: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".home .hero .sidebar, .landing .hero .sidebar",
          "cssText": ".home .hero .sidebar, .landing .hero .sidebar { position: absolute; right: 0px; top: 0px; width: 6cm; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[dir=\"rtl\"] .hero",
          "cssText": "[dir=\"rtl\"] .hero { padding-left: 6cm; padding-right: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[dir=\"rtl\"] .hero .sidebar",
          "cssText": "[dir=\"rtl\"] .hero .sidebar { left: 0px; right: auto; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".card--event .icon",
          "cssText": ".card--event .icon { display: none !important; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".component + .component",
          "cssText": ".component + .component { margin-top: 42pt; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".component--fifty-fifty",
          "cssText": ".component--fifty-fifty { min-height: 6cm; padding-right: 6cm; position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".component--fifty-fifty .l-frame",
          "cssText": ".component--fifty-fifty .l-frame { position: absolute; right: 0px; top: 0px; width: 6cm; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".component--fifty-fifty a",
          "cssText": ".component--fifty-fifty a { display: block; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[dir=\"rtl\"] .component--fifty-fifty",
          "cssText": "[dir=\"rtl\"] .component--fifty-fifty { padding-left: 6cm; padding-right: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[dir=\"rtl\"] .component--fifty-fifty .l-frame",
          "cssText": "[dir=\"rtl\"] .component--fifty-fifty .l-frame { left: 0px; right: auto; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".component--image, .component--quote",
          "cssText": ".component--image, .component--quote { margin-left: auto; margin-right: auto; width: 70%; position: relative !important; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".component--quote",
          "cssText": ".component--quote { border-inline-start: 4pt solid; padding-inline-start: 8pt; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".component--quote blockquote",
          "cssText": ".component--quote blockquote { font-size: 14pt; font-weight: 600; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".component--collapsibles button",
          "cssText": ".component--collapsibles button { border: 0px; text-align: left; display: block !important; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".component--collapsibles button > span",
          "cssText": ".component--collapsibles button > span { display: block; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".component--collapsibles [aria-hidden]",
          "cssText": ".component--collapsibles [aria-hidden] { display: block !important; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".component--collapsibles .icon",
          "cssText": ".component--collapsibles .icon { display: none !important; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".component--collapsibles a",
          "cssText": ".component--collapsibles a { display: block; margin: -18pt 0px 18pt; visibility: hidden; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".component--collapsibles a[href]::after",
          "cssText": ".component--collapsibles a[href]::after { content: \" <\" attr(href) \"> \"; display: block; font-size: 12pt; visibility: visible; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[dir=\"rtl\"] .component--collapsibles button",
          "cssText": "[dir=\"rtl\"] .component--collapsibles button { text-align: right; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".component--columns ul",
          "cssText": ".component--columns ul { padding: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".component--columns li",
          "cssText": ".component--columns li { display: block; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".component--columns--icons .card",
          "cssText": ".component--columns--icons .card { padding-top: 1.5cm; position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".component--columns--icons .card__heading",
          "cssText": ".component--columns--icons .card__heading { margin-top: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".component--columns--icons .icon",
          "cssText": ".component--columns--icons .icon { height: 1cm; position: absolute; top: 0px; width: 1cm; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".component--columns--images .card",
          "cssText": ".component--columns--images .card { min-height: 5cm; padding-right: 6cm; position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".component--columns--images .card__image",
          "cssText": ".component--columns--images .card__image { position: absolute; right: 0px; top: 0px; width: 6cm; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[dir=\"rtl\"] .component--columns--images .card",
          "cssText": "[dir=\"rtl\"] .component--columns--images .card { padding-left: 6cm; padding-right: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[dir=\"rtl\"] .component--columns--images .card__image",
          "cssText": "[dir=\"rtl\"] .component--columns--images .card__image { left: 0px; right: auto; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".component--columns--icons a:not(.card__link), .component--columns--images a:not(.card__link)",
          "cssText": ".component--columns--icons a:not(.card__link), .component--columns--images a:not(.card__link) { display: block; margin: -18pt 0px 18pt; visibility: hidden; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".component--columns--icons a[href]::after, .component--columns--images a[href]::after",
          "cssText": ".component--columns--icons a[href]::after, .component--columns--images a[href]::after { content: \" <\" attr(href) \"> \"; display: block; font-size: 12pt; visibility: visible; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".component--slider .clean-list",
          "cssText": ".component--slider .clean-list { display: block !important; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".component--slider .clean-list li",
          "cssText": ".component--slider .clean-list li { visibility: visible !important; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".component--slider .clean-list li[style]",
          "cssText": ".component--slider .clean-list li[style] { left: 0px !important; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".component--slider .clean-list li + li",
          "cssText": ".component--slider .clean-list li + li { margin-top: 8pt; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".component--slider .slide__logo",
          "cssText": ".component--slider .slide__logo { width: 3cm; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".component--slider .slider-controls",
          "cssText": ".component--slider .slider-controls { display: none !important; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".component--members__grid > div",
          "cssText": ".component--members__grid > div { display: inline-block; width: 3cm; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".component--members__cta a",
          "cssText": ".component--members__cta a { display: block; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".avatar",
          "cssText": ".avatar { border-radius: 50%; height: 75pt; position: relative; width: 75pt; overflow: hidden !important; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".avatar img",
          "cssText": ".avatar img { margin-top: -8pt; width: 100%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".meta dt",
          "cssText": ".meta dt { font-weight: bold; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".meta dd",
          "cssText": ".meta dd { margin-left: 0px; margin-right: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".meta dd + dt",
          "cssText": ".meta dd + dt { margin-top: 8pt; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".post .meta .with-icon--before",
          "cssText": ".post .meta .with-icon--before { line-height: 1.25cm; padding-left: 1.5cm; position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".post .meta .with-icon--before .icon, .post .meta .with-icon--before .avatar",
          "cssText": ".post .meta .with-icon--before .icon, .post .meta .with-icon--before .avatar { left: 0px; position: absolute; top: 0px; height: 1.25cm !important; width: 1.25cm !important; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[dir=\"rtl\"] .post .meta .with-icon--before",
          "cssText": "[dir=\"rtl\"] .post .meta .with-icon--before { padding-left: 0px; padding-right: 1.5cm; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[dir=\"rtl\"] .post .meta .with-icon--before .icon, [dir=\"rtl\"] .post .meta .with-icon--before .avatar",
          "cssText": "[dir=\"rtl\"] .post .meta .with-icon--before .icon, [dir=\"rtl\"] .post .meta .with-icon--before .avatar { left: auto; right: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".component--evangelists__list li",
          "cssText": ".component--evangelists__list li { display: block; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".component--evangelists__list .sidebar",
          "cssText": ".component--evangelists__list .sidebar { width: 3cm; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".component--evangelists__list a[href^=\"mailto\"]::after, .component--evangelists__list a[href^=\"tel\"]::after, .people-list a[href^=\"mailto\"]::after, .people-list a[href^=\"tel\"]::after",
          "cssText": ".component--evangelists__list a[href^=\"mailto\"]::after, .component--evangelists__list a[href^=\"tel\"]::after, .people-list a[href^=\"mailto\"]::after, .people-list a[href^=\"tel\"]::after { display: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".people-list > li + li",
          "cssText": ".people-list > li + li { margin-top: 30pt; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".people-list .l-cluster > * > *",
          "cssText": ".people-list .l-cluster > * > * { display: block; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".people-list > li > div:not(.alumni)",
          "cssText": ".people-list > li > div:not(.alumni) { padding-top: 75pt; position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".people-list > li > div:not(.alumni) h2, .people-list > li > div:not(.alumni) h3",
          "cssText": ".people-list > li > div:not(.alumni) h2, .people-list > li > div:not(.alumni) h3 { margin-top: 12pt; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".people-list > li > div:not(.alumni) > .sidebar",
          "cssText": ".people-list > li > div:not(.alumni) > .sidebar { position: absolute; top: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".people-list .sidebar",
          "cssText": ".people-list .sidebar { width: 75pt; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".event-list .card__image",
          "cssText": ".event-list .card__image { width: 120pt; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".group-list a[href]::after",
          "cssText": ".group-list a[href]::after { display: block; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".member-list .logo--member",
          "cssText": ".member-list .logo--member { display: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".post-list > li > div",
          "cssText": ".post-list > li > div { min-height: 5cm; padding-right: 6cm; position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".post-list > li > div .l-frame",
          "cssText": ".post-list > li > div .l-frame { position: absolute; right: 0px; top: 0px; width: 6cm; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".post-list > li > div .l-frame::after",
          "cssText": ".post-list > li > div .l-frame::after { display: none !important; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[dir=\"rtl\"] .post-list > li > div",
          "cssText": "[dir=\"rtl\"] .post-list > li > div { padding-right: 0px; padding-left: 6cm; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[dir=\"rtl\"] .post-list > li > div .l-frame",
          "cssText": "[dir=\"rtl\"] .post-list > li > div .l-frame { left: 0px; right: auto; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".tr-list__item *",
          "cssText": ".tr-list__item * { font-size: 11pt; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".tr-list__item__header h3",
          "cssText": ".tr-list__item__header h3 { margin-bottom: 6pt; margin-top: 18pt; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".tr-list__item__header a",
          "cssText": ".tr-list__item__header a { font-size: 12pt; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "footer",
          "cssText": "footer { margin-top: 36pt; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".skip-link, .skip-to-comments, .skip-to-comment-form, #cookie-banner, [role=\"status\"], .banner, #lang-nav, .logo-link .visuallyhidden, .heading-anchor, [data-trigger], [data-toggle], #global-nav ul, #breadcrumb, .translations, .toc, .component--video, .calendar-link, .listing .lead, .listing .filters, .listing .browse, .listing form, .progress-list, .autocomplete__wrapper svg, .date-location img, .card--group dl, .card--group .l-cluster, .people-list .icon, .post-list .icon, .post-list .tag, .post .rss .icon, .comments, .pre-footer, .pagination, .crosslinks, .global-footer__links",
          "cssText": ".skip-link, .skip-to-comments, .skip-to-comment-form, #cookie-banner, [role=\"status\"], .banner, #lang-nav, .logo-link .visuallyhidden, .heading-anchor, [data-trigger], [data-toggle], #global-nav ul, #breadcrumb, .translations, .toc, .component--video, .calendar-link, .listing .lead, .listing .filters, .listing .browse, .listing form, .progress-list, .autocomplete__wrapper svg, .date-location img, .card--group dl, .card--group .l-cluster, .people-list .icon, .post-list .icon, .post-list .tag, .post .rss .icon, .comments, .pre-footer, .pagination, .crosslinks, .global-footer__links { display: none !important; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        }
      ]
    }
  ],
  "inaccessible": [],
  "styleTags": 0,
  "inlineStyleCount": 7,
  "associations": [],
  "summary": {
    "sheetsAccessible": 3,
    "sheetsInaccessible": 0,
    "totalRulesScanned": 1244,
    "totalSinks": 9,
    "totalSources": 117,
    "totalAssociations": 0,
    "totalCapped": false
  },
  "likelyFingerprinting": false,
  "verdict": "likely not fingerprinting",
  "claims": [],
  "claimDetails": [],
  "riskScore": 0,
  "riskLevel": "none"
}