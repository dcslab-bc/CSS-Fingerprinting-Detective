{
  "page": "https://www.imdb.com/",
  "timestamp": 1761887105035,
  "sheets": [
    {
      "href": "https://m.media-amazon.com/images/S/sash/Y0$eCvXsjaPu$hv.css",
      "rules": "inaccessible",
      "rulesList": []
    },
    {
      "href": "https://dqpnq362acqdi.cloudfront.net/_next/static/css/082af604df5a63b6.css",
      "rules": "inaccessible",
      "rulesList": []
    },
    {
      "href": "https://dqpnq362acqdi.cloudfront.net/_next/static/css/117506d9cc9c7b5e.css",
      "rules": "inaccessible",
      "rulesList": []
    },
    {
      "href": "(inline <style>)",
      "rules": 977,
      "rulesList": [
        {
          "type": "CSSStyleRule",
          "selector": ".jSvBPj",
          "cssText": ".jSvBPj { width: 100%; position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".jSvBPj.height-page",
          "cssText": ".jSvBPj.height-page { height: 50vh; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".jSvBPj.height-feature",
          "cssText": ".jSvBPj.height-feature { height: 20rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".jSvBPj",
          "cssText": ".jSvBPj { width: 100%; position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".jSvBPj.height-page",
          "cssText": ".jSvBPj.height-page { height: 50vh; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".jSvBPj.height-feature",
          "cssText": ".jSvBPj.height-feature { height: 20rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".eLUakp",
          "cssText": ".eLUakp { margin: auto; position: absolute; inset: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".eLUakp",
          "cssText": ".eLUakp { margin: auto; position: absolute; inset: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".eqmUEb",
          "cssText": ".eqmUEb { display: flex; flex-direction: row; min-width: 0px; margin: 16px 16px 0px; position: absolute; bottom: 0px; right: 0px; left: 177px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 600px) {\n  .eqmUEb { align-items: flex-start; }\n}",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".eqmUEb",
          "cssText": ".eqmUEb { align-items: flex-start; }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 1024px) and (max-width: 1279px) {\n  .eqmUEb { left: 148px; }\n}",
          "urls": [],
          "group": "screen and (min-width: 1024px) and (max-width: 1279px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px) and (max-width: 1279px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "max-width",
                "1279px",
                "1024",
                "1279",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".eqmUEb",
          "cssText": ".eqmUEb { left: 148px; }",
          "urls": [],
          "group": "screen and (min-width: 1024px) and (max-width: 1279px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px) and (max-width: 1279px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "max-width",
                "1279px",
                "1024",
                "1279",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 600px) and (max-width: 1023px) {\n  .eqmUEb { left: 165px; }\n}",
          "urls": [],
          "group": "screen and (min-width: 600px) and (max-width: 1023px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px) and (max-width: 1023px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "max-width",
                "1023px",
                "600",
                "1023",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".eqmUEb",
          "cssText": ".eqmUEb { left: 165px; }",
          "urls": [],
          "group": "screen and (min-width: 600px) and (max-width: 1023px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px) and (max-width: 1023px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "max-width",
                "1023px",
                "600",
                "1023",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (max-width: 600px) {\n  .eqmUEb { left: 90px; flex-direction: column; }\n}",
          "urls": [],
          "group": "screen and (max-width: 600px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "600px",
                "600",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".eqmUEb",
          "cssText": ".eqmUEb { left: 90px; flex-direction: column; }",
          "urls": [],
          "group": "screen and (max-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".eqmUEb",
          "cssText": ".eqmUEb { display: flex; flex-direction: row; min-width: 0px; margin: 16px 16px 0px; position: absolute; bottom: 0px; right: 0px; left: 177px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 600px) {\n  .eqmUEb { align-items: flex-start; }\n}",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".eqmUEb",
          "cssText": ".eqmUEb { align-items: flex-start; }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 1024px) and (max-width: 1279px) {\n  .eqmUEb { left: 148px; }\n}",
          "urls": [],
          "group": "screen and (min-width: 1024px) and (max-width: 1279px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px) and (max-width: 1279px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "max-width",
                "1279px",
                "1024",
                "1279",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".eqmUEb",
          "cssText": ".eqmUEb { left: 148px; }",
          "urls": [],
          "group": "screen and (min-width: 1024px) and (max-width: 1279px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px) and (max-width: 1279px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "max-width",
                "1279px",
                "1024",
                "1279",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 600px) and (max-width: 1023px) {\n  .eqmUEb { left: 165px; }\n}",
          "urls": [],
          "group": "screen and (min-width: 600px) and (max-width: 1023px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px) and (max-width: 1023px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "max-width",
                "1023px",
                "600",
                "1023",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".eqmUEb",
          "cssText": ".eqmUEb { left: 165px; }",
          "urls": [],
          "group": "screen and (min-width: 600px) and (max-width: 1023px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px) and (max-width: 1023px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "max-width",
                "1023px",
                "600",
                "1023",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (max-width: 600px) {\n  .eqmUEb { left: 90px; flex-direction: column; }\n}",
          "urls": [],
          "group": "screen and (max-width: 600px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "600px",
                "600",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".eqmUEb",
          "cssText": ".eqmUEb { left: 90px; flex-direction: column; }",
          "urls": [],
          "group": "screen and (max-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dLcNyP",
          "cssText": ".dLcNyP { display: flex; flex-direction: column; min-width: 0px; justify-content: space-around; width: 100%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dLcNyP",
          "cssText": ".dLcNyP { display: flex; flex-direction: column; min-width: 0px; justify-content: space-around; width: 100%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".iebJpo",
          "cssText": ".iebJpo { display: flex; align-items: flex-end; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (max-width: 480px) {\n  .iebJpo { font-size: 1.25rem; }\n}",
          "urls": [],
          "group": "screen and (max-width: 480px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 480px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "480px",
                "480",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".iebJpo",
          "cssText": ".iebJpo { font-size: 1.25rem; }",
          "urls": [],
          "group": "screen and (max-width: 480px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 480px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "480px",
                "480",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 600px) {\n  .iebJpo { font-size: 34px; line-height: 40px; }\n}",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".iebJpo",
          "cssText": ".iebJpo { font-size: 34px; line-height: 40px; }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".iebJpo",
          "cssText": ".iebJpo { display: flex; align-items: flex-end; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (max-width: 480px) {\n  .iebJpo { font-size: 1.25rem; }\n}",
          "urls": [],
          "group": "screen and (max-width: 480px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 480px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "480px",
                "480",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".iebJpo",
          "cssText": ".iebJpo { font-size: 1.25rem; }",
          "urls": [],
          "group": "screen and (max-width: 480px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 480px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "480px",
                "480",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 600px) {\n  .iebJpo { font-size: 34px; line-height: 40px; }\n}",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".iebJpo",
          "cssText": ".iebJpo { font-size: 34px; line-height: 40px; }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".gLQTin",
          "cssText": ".gLQTin { color: rgba(255, 255, 255, 0.7); font-weight: 400; margin: 0.25rem 0px 0px; overflow: hidden; text-align: start; text-overflow: ellipsis; white-space: nowrap; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 1280px) {\n  .gLQTin { font-family: var(--ipt-font-family); font-size: var(--ipt-type-headline5-size, 1.5rem); -webkit-font-smoothing: antialiased; letter-spacing: var(--ipt-type-headline5-letterSpacing, normal); line-height: var(--ipt-type-headline5-lineHeight, 1.5rem); text-transform: var(--ipt-type-headline5-textTransform, none); font-weight: 400; }\n}",
          "urls": [],
          "group": "screen and (min-width: 1280px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1280px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1280px",
                "1280",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".gLQTin",
          "cssText": ".gLQTin { font-family: var(--ipt-font-family); font-size: var(--ipt-type-headline5-size, 1.5rem); -webkit-font-smoothing: antialiased; letter-spacing: var(--ipt-type-headline5-letterSpacing, normal); line-height: var(--ipt-type-headline5-lineHeight, 1.5rem); text-transform: var(--ipt-type-headline5-textTransform, none); font-weight: 400; }",
          "urls": [],
          "group": "screen and (min-width: 1280px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1280px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1280px",
                "1280",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 600px) {\n  .gLQTin { font-family: var(--ipt-font-family); font-size: var(--ipt-type-headline6-size, 1.25rem); -webkit-font-smoothing: antialiased; letter-spacing: var(--ipt-type-headline6-letterSpacing, .0125em); line-height: var(--ipt-type-headline6-lineHeight, 1.5rem); text-transform: var(--ipt-type-headline6-textTransform, none); font-weight: 400; }\n}",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".gLQTin",
          "cssText": ".gLQTin { font-family: var(--ipt-font-family); font-size: var(--ipt-type-headline6-size, 1.25rem); -webkit-font-smoothing: antialiased; letter-spacing: var(--ipt-type-headline6-letterSpacing, .0125em); line-height: var(--ipt-type-headline6-lineHeight, 1.5rem); text-transform: var(--ipt-type-headline6-textTransform, none); font-weight: 400; }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (max-width: 480px) {\n  .gLQTin { font-family: var(--ipt-font-family); font-size: var(--ipt-type-subtitle2-size, .875rem); font-weight: var(--ipt-type-subtitle2-weight, 500); -webkit-font-smoothing: antialiased; letter-spacing: var(--ipt-type-subtitle2-letterSpacing, normal); line-height: var(--ipt-type-subtitle2-lineHeight, 1.25rem); text-transform: var(--ipt-type-subtitle2-textTransform, none); }\n}",
          "urls": [],
          "group": "screen and (max-width: 480px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 480px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "480px",
                "480",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".gLQTin",
          "cssText": ".gLQTin { font-family: var(--ipt-font-family); font-size: var(--ipt-type-subtitle2-size, .875rem); font-weight: var(--ipt-type-subtitle2-weight, 500); -webkit-font-smoothing: antialiased; letter-spacing: var(--ipt-type-subtitle2-letterSpacing, normal); line-height: var(--ipt-type-subtitle2-lineHeight, 1.25rem); text-transform: var(--ipt-type-subtitle2-textTransform, none); }",
          "urls": [],
          "group": "screen and (max-width: 480px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 480px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "480px",
                "480",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".gLQTin",
          "cssText": ".gLQTin { color: rgba(255, 255, 255, 0.7); font-weight: 400; margin: 0.25rem 0px 0px; overflow: hidden; text-align: start; text-overflow: ellipsis; white-space: nowrap; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 1280px) {\n  .gLQTin { font-family: var(--ipt-font-family); font-size: var(--ipt-type-headline5-size, 1.5rem); -webkit-font-smoothing: antialiased; letter-spacing: var(--ipt-type-headline5-letterSpacing, normal); line-height: var(--ipt-type-headline5-lineHeight, 1.5rem); text-transform: var(--ipt-type-headline5-textTransform, none); font-weight: 400; }\n}",
          "urls": [],
          "group": "screen and (min-width: 1280px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1280px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1280px",
                "1280",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".gLQTin",
          "cssText": ".gLQTin { font-family: var(--ipt-font-family); font-size: var(--ipt-type-headline5-size, 1.5rem); -webkit-font-smoothing: antialiased; letter-spacing: var(--ipt-type-headline5-letterSpacing, normal); line-height: var(--ipt-type-headline5-lineHeight, 1.5rem); text-transform: var(--ipt-type-headline5-textTransform, none); font-weight: 400; }",
          "urls": [],
          "group": "screen and (min-width: 1280px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1280px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1280px",
                "1280",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 600px) {\n  .gLQTin { font-family: var(--ipt-font-family); font-size: var(--ipt-type-headline6-size, 1.25rem); -webkit-font-smoothing: antialiased; letter-spacing: var(--ipt-type-headline6-letterSpacing, .0125em); line-height: var(--ipt-type-headline6-lineHeight, 1.5rem); text-transform: var(--ipt-type-headline6-textTransform, none); font-weight: 400; }\n}",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".gLQTin",
          "cssText": ".gLQTin { font-family: var(--ipt-font-family); font-size: var(--ipt-type-headline6-size, 1.25rem); -webkit-font-smoothing: antialiased; letter-spacing: var(--ipt-type-headline6-letterSpacing, .0125em); line-height: var(--ipt-type-headline6-lineHeight, 1.5rem); text-transform: var(--ipt-type-headline6-textTransform, none); font-weight: 400; }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (max-width: 480px) {\n  .gLQTin { font-family: var(--ipt-font-family); font-size: var(--ipt-type-subtitle2-size, .875rem); font-weight: var(--ipt-type-subtitle2-weight, 500); -webkit-font-smoothing: antialiased; letter-spacing: var(--ipt-type-subtitle2-letterSpacing, normal); line-height: var(--ipt-type-subtitle2-lineHeight, 1.25rem); text-transform: var(--ipt-type-subtitle2-textTransform, none); }\n}",
          "urls": [],
          "group": "screen and (max-width: 480px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 480px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "480px",
                "480",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".gLQTin",
          "cssText": ".gLQTin { font-family: var(--ipt-font-family); font-size: var(--ipt-type-subtitle2-size, .875rem); font-weight: var(--ipt-type-subtitle2-weight, 500); -webkit-font-smoothing: antialiased; letter-spacing: var(--ipt-type-subtitle2-letterSpacing, normal); line-height: var(--ipt-type-subtitle2-lineHeight, 1.25rem); text-transform: var(--ipt-type-subtitle2-textTransform, none); }",
          "urls": [],
          "group": "screen and (max-width: 480px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 480px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "480px",
                "480",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".kJEKRP",
          "cssText": ".kJEKRP { color: rgb(255, 255, 255); display: -webkit-box; -webkit-line-clamp: 2; -webkit-box-orient: vertical; overflow: hidden; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (max-width: 479px) {\n  .kJEKRP { font-family: var(--ipt-font-family); font-size: var(--ipt-type-subtitle-size, 1rem); font-weight: var(--ipt-type-subtitle-weight, 600); -webkit-font-smoothing: antialiased; letter-spacing: var(--ipt-type-subtitle-letterSpacing, .00937em); line-height: var(--ipt-type-subtitle-lineHeight, 1.25rem); text-transform: var(--ipt-type-subtitle-textTransform, none); }\n}",
          "urls": [],
          "group": "screen and (max-width: 479px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 479px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "479px",
                "479",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".kJEKRP",
          "cssText": ".kJEKRP { font-family: var(--ipt-font-family); font-size: var(--ipt-type-subtitle-size, 1rem); font-weight: var(--ipt-type-subtitle-weight, 600); -webkit-font-smoothing: antialiased; letter-spacing: var(--ipt-type-subtitle-letterSpacing, .00937em); line-height: var(--ipt-type-subtitle-lineHeight, 1.25rem); text-transform: var(--ipt-type-subtitle-textTransform, none); }",
          "urls": [],
          "group": "screen and (max-width: 479px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 479px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "479px",
                "479",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 480px) {\n  .kJEKRP { font-family: var(--ipt-font-family); font-size: var(--ipt-type-headline6-size, 1.25rem); -webkit-font-smoothing: antialiased; letter-spacing: var(--ipt-type-headline6-letterSpacing, .0125em); line-height: var(--ipt-type-headline6-lineHeight, 1.5rem); text-transform: var(--ipt-type-headline6-textTransform, none); font-weight: 400; }\n}",
          "urls": [],
          "group": "screen and (min-width: 480px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 480px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "480px",
                "480",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".kJEKRP",
          "cssText": ".kJEKRP { font-family: var(--ipt-font-family); font-size: var(--ipt-type-headline6-size, 1.25rem); -webkit-font-smoothing: antialiased; letter-spacing: var(--ipt-type-headline6-letterSpacing, .0125em); line-height: var(--ipt-type-headline6-lineHeight, 1.5rem); text-transform: var(--ipt-type-headline6-textTransform, none); font-weight: 400; }",
          "urls": [],
          "group": "screen and (min-width: 480px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 480px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "480px",
                "480",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 600px) {\n  .kJEKRP { font-family: var(--ipt-font-family); font-size: var(--ipt-type-headline5-size, 1.5rem); -webkit-font-smoothing: antialiased; letter-spacing: var(--ipt-type-headline5-letterSpacing, normal); line-height: var(--ipt-type-headline5-lineHeight, 1.5rem); text-transform: var(--ipt-type-headline5-textTransform, none); font-weight: 400; }\n}",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".kJEKRP",
          "cssText": ".kJEKRP { font-family: var(--ipt-font-family); font-size: var(--ipt-type-headline5-size, 1.5rem); -webkit-font-smoothing: antialiased; letter-spacing: var(--ipt-type-headline5-letterSpacing, normal); line-height: var(--ipt-type-headline5-lineHeight, 1.5rem); text-transform: var(--ipt-type-headline5-textTransform, none); font-weight: 400; }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 1280px) {\n  .kJEKRP { font-family: var(--ipt-font-family); font-size: var(--ipt-type-headline4-size, 2rem); -webkit-font-smoothing: antialiased; letter-spacing: var(--ipt-type-headline4-letterSpacing, .00735em); line-height: var(--ipt-type-headline4-lineHeight, 2.5rem); text-transform: var(--ipt-type-headline4-textTransform, none); font-weight: 400; }\n}",
          "urls": [],
          "group": "screen and (min-width: 1280px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1280px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1280px",
                "1280",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".kJEKRP",
          "cssText": ".kJEKRP { font-family: var(--ipt-font-family); font-size: var(--ipt-type-headline4-size, 2rem); -webkit-font-smoothing: antialiased; letter-spacing: var(--ipt-type-headline4-letterSpacing, .00735em); line-height: var(--ipt-type-headline4-lineHeight, 2.5rem); text-transform: var(--ipt-type-headline4-textTransform, none); font-weight: 400; }",
          "urls": [],
          "group": "screen and (min-width: 1280px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1280px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1280px",
                "1280",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".kJEKRP",
          "cssText": ".kJEKRP { color: rgb(255, 255, 255); display: -webkit-box; -webkit-line-clamp: 2; -webkit-box-orient: vertical; overflow: hidden; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (max-width: 479px) {\n  .kJEKRP { font-family: var(--ipt-font-family); font-size: var(--ipt-type-subtitle-size, 1rem); font-weight: var(--ipt-type-subtitle-weight, 600); -webkit-font-smoothing: antialiased; letter-spacing: var(--ipt-type-subtitle-letterSpacing, .00937em); line-height: var(--ipt-type-subtitle-lineHeight, 1.25rem); text-transform: var(--ipt-type-subtitle-textTransform, none); }\n}",
          "urls": [],
          "group": "screen and (max-width: 479px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 479px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "479px",
                "479",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".kJEKRP",
          "cssText": ".kJEKRP { font-family: var(--ipt-font-family); font-size: var(--ipt-type-subtitle-size, 1rem); font-weight: var(--ipt-type-subtitle-weight, 600); -webkit-font-smoothing: antialiased; letter-spacing: var(--ipt-type-subtitle-letterSpacing, .00937em); line-height: var(--ipt-type-subtitle-lineHeight, 1.25rem); text-transform: var(--ipt-type-subtitle-textTransform, none); }",
          "urls": [],
          "group": "screen and (max-width: 479px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 479px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "479px",
                "479",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 480px) {\n  .kJEKRP { font-family: var(--ipt-font-family); font-size: var(--ipt-type-headline6-size, 1.25rem); -webkit-font-smoothing: antialiased; letter-spacing: var(--ipt-type-headline6-letterSpacing, .0125em); line-height: var(--ipt-type-headline6-lineHeight, 1.5rem); text-transform: var(--ipt-type-headline6-textTransform, none); font-weight: 400; }\n}",
          "urls": [],
          "group": "screen and (min-width: 480px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 480px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "480px",
                "480",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".kJEKRP",
          "cssText": ".kJEKRP { font-family: var(--ipt-font-family); font-size: var(--ipt-type-headline6-size, 1.25rem); -webkit-font-smoothing: antialiased; letter-spacing: var(--ipt-type-headline6-letterSpacing, .0125em); line-height: var(--ipt-type-headline6-lineHeight, 1.5rem); text-transform: var(--ipt-type-headline6-textTransform, none); font-weight: 400; }",
          "urls": [],
          "group": "screen and (min-width: 480px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 480px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "480px",
                "480",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 600px) {\n  .kJEKRP { font-family: var(--ipt-font-family); font-size: var(--ipt-type-headline5-size, 1.5rem); -webkit-font-smoothing: antialiased; letter-spacing: var(--ipt-type-headline5-letterSpacing, normal); line-height: var(--ipt-type-headline5-lineHeight, 1.5rem); text-transform: var(--ipt-type-headline5-textTransform, none); font-weight: 400; }\n}",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".kJEKRP",
          "cssText": ".kJEKRP { font-family: var(--ipt-font-family); font-size: var(--ipt-type-headline5-size, 1.5rem); -webkit-font-smoothing: antialiased; letter-spacing: var(--ipt-type-headline5-letterSpacing, normal); line-height: var(--ipt-type-headline5-lineHeight, 1.5rem); text-transform: var(--ipt-type-headline5-textTransform, none); font-weight: 400; }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 1280px) {\n  .kJEKRP { font-family: var(--ipt-font-family); font-size: var(--ipt-type-headline4-size, 2rem); -webkit-font-smoothing: antialiased; letter-spacing: var(--ipt-type-headline4-letterSpacing, .00735em); line-height: var(--ipt-type-headline4-lineHeight, 2.5rem); text-transform: var(--ipt-type-headline4-textTransform, none); font-weight: 400; }\n}",
          "urls": [],
          "group": "screen and (min-width: 1280px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1280px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1280px",
                "1280",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".kJEKRP",
          "cssText": ".kJEKRP { font-family: var(--ipt-font-family); font-size: var(--ipt-type-headline4-size, 2rem); -webkit-font-smoothing: antialiased; letter-spacing: var(--ipt-type-headline4-letterSpacing, .00735em); line-height: var(--ipt-type-headline4-lineHeight, 2.5rem); text-transform: var(--ipt-type-headline4-textTransform, none); font-weight: 400; }",
          "urls": [],
          "group": "screen and (min-width: 1280px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1280px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1280px",
                "1280",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".gLhmTs",
          "cssText": ".gLhmTs { height: 50px; margin: 0px 0px 8px; width: 50px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 600px) {\n  .gLhmTs { height: 72px; margin: 0px 16px 0px 0px; width: 72px; }\n}",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".gLhmTs",
          "cssText": ".gLhmTs { height: 72px; margin: 0px 16px 0px 0px; width: 72px; }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".gLhmTs g",
          "cssText": ".gLhmTs g { color: var(--ipt-on-baseAlt-color, rgb(255,255,255)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".gLhmTs",
          "cssText": ".gLhmTs { height: 50px; margin: 0px 0px 8px; width: 50px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 600px) {\n  .gLhmTs { height: 72px; margin: 0px 16px 0px 0px; width: 72px; }\n}",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".gLhmTs",
          "cssText": ".gLhmTs { height: 72px; margin: 0px 16px 0px 0px; width: 72px; }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".gLhmTs g",
          "cssText": ".gLhmTs g { color: var(--ipt-on-baseAlt-color, rgb(255,255,255)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".bjvnRT",
          "cssText": ".bjvnRT { -webkit-box-align: center; align-items: center; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".bjvnRT",
          "cssText": ".bjvnRT { -webkit-box-align: center; align-items: center; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Cfusp",
          "cssText": ".Cfusp { color: rgba(255, 255, 255, 0.7); display: none; font-size: 1rem; line-height: 28px; margin-left: 2rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 600px) {\n  .Cfusp { display: inline; font-size: 1.25rem; align-self: flex-end; }\n}",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Cfusp",
          "cssText": ".Cfusp { display: inline; font-size: 1.25rem; align-self: flex-end; }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Cfusp",
          "cssText": ".Cfusp { color: rgba(255, 255, 255, 0.7); display: none; font-size: 1rem; line-height: 28px; margin-left: 2rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 600px) {\n  .Cfusp { display: inline; font-size: 1.25rem; align-self: flex-end; }\n}",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Cfusp",
          "cssText": ".Cfusp { display: inline; font-size: 1.25rem; align-self: flex-end; }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".jFuAlB",
          "cssText": ".jFuAlB { display: block; margin-left: 1rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 600px) {\n  .jFuAlB { display: none; }\n}",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".jFuAlB",
          "cssText": ".jFuAlB { display: none; }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".jFuAlB",
          "cssText": ".jFuAlB { display: block; margin-left: 1rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 600px) {\n  .jFuAlB { display: none; }\n}",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".jFuAlB",
          "cssText": ".jFuAlB { display: none; }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".iJqhgH",
          "cssText": ".iJqhgH { cursor: pointer; text-align: left; padding-bottom: 70px; position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".iJqhgH.iJqhgH",
          "cssText": ".iJqhgH.iJqhgH { outline: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".iJqhgH:hover:not(:has(.sponsored-link:hover)) .slide-caption-play-icon",
          "cssText": ".iJqhgH:hover:not(:has(.sponsored-link:hover)) .slide-caption-play-icon { color: var(--ipt-on-baseAlt-accent1-color, rgb(245,197,24)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".iJqhgH",
          "cssText": ".iJqhgH { cursor: pointer; text-align: left; padding-bottom: 70px; position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".iJqhgH.iJqhgH",
          "cssText": ".iJqhgH.iJqhgH { outline: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".iJqhgH:hover:not(:has(.sponsored-link:hover)) .slide-caption-play-icon",
          "cssText": ".iJqhgH:hover:not(:has(.sponsored-link:hover)) .slide-caption-play-icon { color: var(--ipt-on-baseAlt-accent1-color, rgb(245,197,24)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hbeLZH",
          "cssText": ".hbeLZH { -webkit-box-align: center; align-items: center; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hbeLZH",
          "cssText": ".hbeLZH { -webkit-box-align: center; align-items: center; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hmHnJm",
          "cssText": ".hmHnJm { width: 40px; align-self: center; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hmHnJm .st0",
          "cssText": ".hmHnJm .st0 { fill-rule: evenodd; clip-rule: evenodd; fill: rgb(255, 255, 255); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hmHnJm .st1",
          "cssText": ".hmHnJm .st1 { fill-rule: evenodd; clip-rule: evenodd; fill: rgb(0, 102, 255); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hmHnJm .st2",
          "cssText": ".hmHnJm .st2 { fill: rgb(255, 255, 255); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hmHnJm .st3",
          "cssText": ".hmHnJm .st3 { fill: rgb(0, 102, 255); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hmHnJm",
          "cssText": ".hmHnJm { width: 40px; align-self: center; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hmHnJm .st0",
          "cssText": ".hmHnJm .st0 { fill-rule: evenodd; clip-rule: evenodd; fill: rgb(255, 255, 255); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hmHnJm .st1",
          "cssText": ".hmHnJm .st1 { fill-rule: evenodd; clip-rule: evenodd; fill: rgb(0, 102, 255); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hmHnJm .st2",
          "cssText": ".hmHnJm .st2 { fill: rgb(255, 255, 255); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hmHnJm .st3",
          "cssText": ".hmHnJm .st3 { fill: rgb(0, 102, 255); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".gLtity",
          "cssText": ".gLtity { order: 8; margin-right: 0.5rem; max-width: fit-content; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 600px) {\n  .gLtity { flex-shrink: 0; margin-left: 0.5rem; }\n}",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".gLtity",
          "cssText": ".gLtity { flex-shrink: 0; margin-left: 0.5rem; }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 1024px) {\n  .gLtity { order: 9; display: none; }\n}",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".gLtity",
          "cssText": ".gLtity { order: 9; display: none; }",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".gLtity",
          "cssText": ".gLtity { order: 8; margin-right: 0.5rem; max-width: fit-content; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 600px) {\n  .gLtity { flex-shrink: 0; margin-left: 0.5rem; }\n}",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".gLtity",
          "cssText": ".gLtity { flex-shrink: 0; margin-left: 0.5rem; }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 1024px) {\n  .gLtity { order: 9; display: none; }\n}",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".gLtity",
          "cssText": ".gLtity { order: 9; display: none; }",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".gAGosK.gAGosK.selected",
          "cssText": ".gAGosK.gAGosK.selected { color: var(--ipt-on-baseAlt-color, rgb(255,255,255)); font-weight: bold; pointer-events: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".gAGosK.gAGosK.disabled",
          "cssText": ".gAGosK.gAGosK.disabled { color: var(--ipt-on-baseAlt-textDisabled-color, rgba(255,255,255,0.5)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".gAGosK.gAGosK span",
          "cssText": ".gAGosK.gAGosK span { opacity: 1; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".gAGosK .language-menu-item-span",
          "cssText": ".gAGosK .language-menu-item-span { padding-right: 0.5rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".gAGosK .language-menu-item-icon",
          "cssText": ".gAGosK .language-menu-item-icon { height: 1.5rem; width: 1.5rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".gAGosK .selected-language-icon",
          "cssText": ".gAGosK .selected-language-icon { color: var(--ipt-accent1-color, rgb(245,197,24)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".gAGosK.gAGosK.selected",
          "cssText": ".gAGosK.gAGosK.selected { color: var(--ipt-on-baseAlt-color, rgb(255,255,255)); font-weight: bold; pointer-events: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".gAGosK.gAGosK.disabled",
          "cssText": ".gAGosK.gAGosK.disabled { color: var(--ipt-on-baseAlt-textDisabled-color, rgba(255,255,255,0.5)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".gAGosK.gAGosK span",
          "cssText": ".gAGosK.gAGosK span { opacity: 1; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".gAGosK .language-menu-item-span",
          "cssText": ".gAGosK .language-menu-item-span { padding-right: 0.5rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".gAGosK .language-menu-item-icon",
          "cssText": ".gAGosK .language-menu-item-icon { height: 1.5rem; width: 1.5rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".gAGosK .selected-language-icon",
          "cssText": ".gAGosK .selected-language-icon { color: var(--ipt-accent1-color, rgb(245,197,24)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ePDsTo",
          "cssText": ".ePDsTo { font-family: var(--ipt-font-family); font-size: var(--ipt-type-overline-size, .75rem); font-weight: var(--ipt-type-overline-weight, 600); -webkit-font-smoothing: antialiased; letter-spacing: var(--ipt-type-overline-letterSpacing, .16667em); line-height: var(--ipt-type-overline-lineHeight, 1rem); text-transform: var(--ipt-type-overline-textTransform, uppercase); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ePDsTo",
          "cssText": ".ePDsTo { font-family: var(--ipt-font-family); font-size: var(--ipt-type-overline-size, .75rem); font-weight: var(--ipt-type-overline-weight, 600); -webkit-font-smoothing: antialiased; letter-spacing: var(--ipt-type-overline-letterSpacing, .16667em); line-height: var(--ipt-type-overline-lineHeight, 1rem); text-transform: var(--ipt-type-overline-textTransform, uppercase); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".RmQiz svg",
          "cssText": ".RmQiz svg { opacity: 0.5; transition: opacity 0.2s; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".RmQiz:hover svg",
          "cssText": ".RmQiz:hover svg { opacity: 1; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (max-width: 479px) {\n  .RmQiz.nav-link--hideXS { display: none; }\n}",
          "urls": [],
          "group": "screen and (max-width: 479px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 479px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "479px",
                "479",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".RmQiz.nav-link--hideXS",
          "cssText": ".RmQiz.nav-link--hideXS { display: none; }",
          "urls": [],
          "group": "screen and (max-width: 479px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 479px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "479px",
                "479",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 480px) and (max-width: 599px) {\n  .RmQiz.nav-link--hideS { display: none; }\n}",
          "urls": [],
          "group": "screen and (min-width: 480px) and (max-width: 599px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 480px) and (max-width: 599px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "480px",
                "max-width",
                "599px",
                "480",
                "599",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".RmQiz.nav-link--hideS",
          "cssText": ".RmQiz.nav-link--hideS { display: none; }",
          "urls": [],
          "group": "screen and (min-width: 480px) and (max-width: 599px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 480px) and (max-width: 599px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "480px",
                "max-width",
                "599px",
                "480",
                "599",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 600px) and (max-width: 1023px) {\n  .RmQiz.nav-link--hideM { display: none; }\n}",
          "urls": [],
          "group": "screen and (min-width: 600px) and (max-width: 1023px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px) and (max-width: 1023px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "max-width",
                "1023px",
                "600",
                "1023",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".RmQiz.nav-link--hideM",
          "cssText": ".RmQiz.nav-link--hideM { display: none; }",
          "urls": [],
          "group": "screen and (min-width: 600px) and (max-width: 1023px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px) and (max-width: 1023px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "max-width",
                "1023px",
                "600",
                "1023",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 1024px) and (max-width: 1279px) {\n  .RmQiz.nav-link--hideL { display: none; }\n}",
          "urls": [],
          "group": "screen and (min-width: 1024px) and (max-width: 1279px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px) and (max-width: 1279px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "max-width",
                "1279px",
                "1024",
                "1279",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".RmQiz.nav-link--hideL",
          "cssText": ".RmQiz.nav-link--hideL { display: none; }",
          "urls": [],
          "group": "screen and (min-width: 1024px) and (max-width: 1279px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px) and (max-width: 1279px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "max-width",
                "1279px",
                "1024",
                "1279",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 1280px) {\n  .RmQiz.nav-link--hideXL { display: none; }\n}",
          "urls": [],
          "group": "screen and (min-width: 1280px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1280px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1280px",
                "1280",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".RmQiz.nav-link--hideXL",
          "cssText": ".RmQiz.nav-link--hideXL { display: none; }",
          "urls": [],
          "group": "screen and (min-width: 1280px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1280px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1280px",
                "1280",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".RmQiz svg",
          "cssText": ".RmQiz svg { opacity: 0.5; transition: opacity 0.2s; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".RmQiz:hover svg",
          "cssText": ".RmQiz:hover svg { opacity: 1; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (max-width: 479px) {\n  .RmQiz.nav-link--hideXS { display: none; }\n}",
          "urls": [],
          "group": "screen and (max-width: 479px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 479px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "479px",
                "479",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".RmQiz.nav-link--hideXS",
          "cssText": ".RmQiz.nav-link--hideXS { display: none; }",
          "urls": [],
          "group": "screen and (max-width: 479px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 479px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "479px",
                "479",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 480px) and (max-width: 599px) {\n  .RmQiz.nav-link--hideS { display: none; }\n}",
          "urls": [],
          "group": "screen and (min-width: 480px) and (max-width: 599px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 480px) and (max-width: 599px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "480px",
                "max-width",
                "599px",
                "480",
                "599",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".RmQiz.nav-link--hideS",
          "cssText": ".RmQiz.nav-link--hideS { display: none; }",
          "urls": [],
          "group": "screen and (min-width: 480px) and (max-width: 599px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 480px) and (max-width: 599px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "480px",
                "max-width",
                "599px",
                "480",
                "599",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 600px) and (max-width: 1023px) {\n  .RmQiz.nav-link--hideM { display: none; }\n}",
          "urls": [],
          "group": "screen and (min-width: 600px) and (max-width: 1023px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px) and (max-width: 1023px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "max-width",
                "1023px",
                "600",
                "1023",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".RmQiz.nav-link--hideM",
          "cssText": ".RmQiz.nav-link--hideM { display: none; }",
          "urls": [],
          "group": "screen and (min-width: 600px) and (max-width: 1023px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px) and (max-width: 1023px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "max-width",
                "1023px",
                "600",
                "1023",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 1024px) and (max-width: 1279px) {\n  .RmQiz.nav-link--hideL { display: none; }\n}",
          "urls": [],
          "group": "screen and (min-width: 1024px) and (max-width: 1279px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px) and (max-width: 1279px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "max-width",
                "1279px",
                "1024",
                "1279",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".RmQiz.nav-link--hideL",
          "cssText": ".RmQiz.nav-link--hideL { display: none; }",
          "urls": [],
          "group": "screen and (min-width: 1024px) and (max-width: 1279px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px) and (max-width: 1279px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "max-width",
                "1279px",
                "1024",
                "1279",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 1280px) {\n  .RmQiz.nav-link--hideXL { display: none; }\n}",
          "urls": [],
          "group": "screen and (min-width: 1280px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1280px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1280px",
                "1280",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".RmQiz.nav-link--hideXL",
          "cssText": ".RmQiz.nav-link--hideXL { display: none; }",
          "urls": [],
          "group": "screen and (min-width: 1280px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1280px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1280px",
                "1280",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".cBLpOw .navlinkcat__item",
          "cssText": ".cBLpOw .navlinkcat__item { font-family: var(--ipt-font-family); font-size: var(--ipt-type-body-size, 1rem); font-weight: var(--ipt-type-body-weight, 400); letter-spacing: var(--ipt-type-body-letterSpacing, .03125em); line-height: var(--ipt-type-body-lineHeight, 1.5rem); text-transform: var(--ipt-type-body-textTransform, none); cursor: pointer; -webkit-box-align: center; align-items: center; border-top: 1px solid transparent; display: flex; -webkit-box-pack: justify; justify-content: space-between; margin: 0px; padding: 0.5rem 1rem; transition: color 0.1s ease-in, border-color 0.1s ease-in, opacity 0.12s ease-in; user-select: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".cBLpOw .navlinkcat__item:hover",
          "cssText": ".cBLpOw .navlinkcat__item:hover { background: rgba( var(--ipt-on-baseAlt-color, rgb(255,255,255)),var(--ipt-baseAlt-hover-opacity, 0.08) ); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".cBLpOw .navlinkcat__item:focus",
          "cssText": ".cBLpOw .navlinkcat__item:focus { outline: var(--ipt-focus-outline-on-baseAlt); outline-offset: 1px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".cBLpOw .navlinkcat__itemIcon",
          "cssText": ".cBLpOw .navlinkcat__itemIcon { align-self: flex-start; padding-right: 0.75rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".cBLpOw .navlinkcat__itemTitle",
          "cssText": ".cBLpOw .navlinkcat__itemTitle { -webkit-box-flex: 1; flex-grow: 1; overflow: initial; overflow-wrap: break-word; padding-right: 0.75rem; text-overflow: unset; white-space: break-spaces; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 1024px) {\n  .cBLpOw .navlinkcat__itemTitle { font-family: var(--ipt-font-family); font-size: var(--ipt-type-headline5-size, 1.5rem); font-weight: var(--ipt-type-headline5-weight, 600); -webkit-font-smoothing: antialiased; letter-spacing: var(--ipt-type-headline5-letterSpacing, normal); line-height: var(--ipt-type-headline5-lineHeight, 1.5rem); text-transform: var(--ipt-type-headline5-textTransform, none); }\n}",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".cBLpOw .navlinkcat__itemTitle",
          "cssText": ".cBLpOw .navlinkcat__itemTitle { font-family: var(--ipt-font-family); font-size: var(--ipt-type-headline5-size, 1.5rem); font-weight: var(--ipt-type-headline5-weight, 600); -webkit-font-smoothing: antialiased; letter-spacing: var(--ipt-type-headline5-letterSpacing, normal); line-height: var(--ipt-type-headline5-lineHeight, 1.5rem); text-transform: var(--ipt-type-headline5-textTransform, none); }",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".cBLpOw .navlinkcat__itemChevron",
          "cssText": ".cBLpOw .navlinkcat__itemChevron { transform: rotate(90deg); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".cBLpOw .navlinkcat__itemIcon, .cBLpOw .navlinkcat__itemChevron",
          "cssText": ".cBLpOw .navlinkcat__itemIcon, .cBLpOw .navlinkcat__itemChevron { opacity: 0.5; transition: 0.2s; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".cBLpOw .navlinkcat__item:focus .navlinkcat__itemChevron, .cBLpOw .navlinkcat__item:hover .navlinkcat__itemChevron, .cBLpOw .navlinkcat__item:focus .navlinkcat__itemIcon, .cBLpOw .navlinkcat__item:hover .navlinkcat__itemIcon",
          "cssText": ".cBLpOw .navlinkcat__item:focus .navlinkcat__itemChevron, .cBLpOw .navlinkcat__item:hover .navlinkcat__itemChevron, .cBLpOw .navlinkcat__item:focus .navlinkcat__itemIcon, .cBLpOw .navlinkcat__item:hover .navlinkcat__itemIcon { opacity: 1; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".cBLpOw .navlinkcat__listContainer",
          "cssText": ".cBLpOw .navlinkcat__listContainer { height: 0px; visibility: hidden; overflow: hidden; border-bottom: 1px solid transparent; transition: border-color 0.1s ease-in, height 0.2s; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".cBLpOw .navlinkcat__state:checked ~ .navlinkcat__targetWrapper .navlinkcat__item",
          "cssText": ".cBLpOw .navlinkcat__state:checked ~ .navlinkcat__targetWrapper .navlinkcat__item { border-color: var(--ipt-baseAlt-border-color, rgba(255,255,255,0.2)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".cBLpOw .navlinkcat__state:checked ~ .navlinkcat__targetWrapper .navlinkcat__item .navlinkcat__itemIcon, .cBLpOw .navlinkcat__state:checked ~ .navlinkcat__targetWrapper .navlinkcat__item .navlinkcat__itemTitle",
          "cssText": ".cBLpOw .navlinkcat__state:checked ~ .navlinkcat__targetWrapper .navlinkcat__item .navlinkcat__itemIcon, .cBLpOw .navlinkcat__state:checked ~ .navlinkcat__targetWrapper .navlinkcat__item .navlinkcat__itemTitle { color: var(--ipt-on-baseAlt-accent1-color, rgb(245,197,24)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".cBLpOw .navlinkcat__state:checked ~ .navlinkcat__targetWrapper .navlinkcat__listContainer",
          "cssText": ".cBLpOw .navlinkcat__state:checked ~ .navlinkcat__targetWrapper .navlinkcat__listContainer { border-color: var(--ipt-baseAlt-border-color, rgba(255,255,255,0.2)); height: auto; visibility: inherit; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".cBLpOw .navlinkcat__state:checked ~ span .navlinkcat__item .navlinkcat__itemIcon",
          "cssText": ".cBLpOw .navlinkcat__state:checked ~ span .navlinkcat__item .navlinkcat__itemIcon { opacity: 1; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".cBLpOw .navlinkcat__state:checked ~ span .navlinkcat__item .navlinkcat__itemChevron",
          "cssText": ".cBLpOw .navlinkcat__state:checked ~ span .navlinkcat__item .navlinkcat__itemChevron { transform: rotate(-90deg); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".cBLpOw .navlinkcat__state:checked ~ span .navlinkcat__listContainer",
          "cssText": ".cBLpOw .navlinkcat__state:checked ~ span .navlinkcat__listContainer { display: block; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".cBLpOw:nth-of-type(1) .navlinkcat__item",
          "cssText": ".cBLpOw:nth-of-type(1) .navlinkcat__item { border-top: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 1024px) {\n  .cBLpOw.noMarginItem .navlinkcat__item { margin-top: 0px; }\n}",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".cBLpOw.noMarginItem .navlinkcat__item",
          "cssText": ".cBLpOw.noMarginItem .navlinkcat__item { margin-top: 0px; }",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 1024px) {\n  .cBLpOw.marginTop { margin-top: 5rem; }\n}",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".cBLpOw.marginTop",
          "cssText": ".cBLpOw.marginTop { margin-top: 5rem; }",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".cBLpOw .nav-link",
          "cssText": ".cBLpOw .nav-link { height: auto; padding-top: 0.5rem; padding-bottom: 0.5rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".cBLpOw .nav-link > *",
          "cssText": ".cBLpOw .nav-link > * { white-space: initial; overflow-wrap: break-word; line-height: normal; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 1024px) {\n  .cBLpOw { flex-basis: 33%; }\n  .cBLpOw .navlinkcat__item { border: none; margin-top: 1.5rem; padding-top: 0.5rem; padding-bottom: 0.5rem; pointer-events: none; }\n  .cBLpOw .navlinkcat__state:checked ~ .navlinkcat__targetWrapper .navlinkcat__item .navlinkcat__itemTitle { color: inherit; }\n  .cBLpOw .navlinkcat__listContainer { visibility: inherit; border: 0px; height: auto !important; }\n  .cBLpOw .navlinkcat__itemChevron { display: none; }\n  .cBLpOw .navlinkcat__itemIcon { color: var(--ipt-on-baseAlt-accent1-color, rgb(245,197,24)); opacity: 1; }\n  .cBLpOw .nav-link:hover { background: none; text-decoration: underline; }\n}",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".cBLpOw",
          "cssText": ".cBLpOw { flex-basis: 33%; }",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".cBLpOw .navlinkcat__item",
          "cssText": ".cBLpOw .navlinkcat__item { border: none; margin-top: 1.5rem; padding-top: 0.5rem; padding-bottom: 0.5rem; pointer-events: none; }",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".cBLpOw .navlinkcat__state:checked ~ .navlinkcat__targetWrapper .navlinkcat__item .navlinkcat__itemTitle",
          "cssText": ".cBLpOw .navlinkcat__state:checked ~ .navlinkcat__targetWrapper .navlinkcat__item .navlinkcat__itemTitle { color: inherit; }",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".cBLpOw .navlinkcat__listContainer",
          "cssText": ".cBLpOw .navlinkcat__listContainer { visibility: inherit; border: 0px; height: auto !important; }",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".cBLpOw .navlinkcat__itemChevron",
          "cssText": ".cBLpOw .navlinkcat__itemChevron { display: none; }",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".cBLpOw .navlinkcat__itemIcon",
          "cssText": ".cBLpOw .navlinkcat__itemIcon { color: var(--ipt-on-baseAlt-accent1-color, rgb(245,197,24)); opacity: 1; }",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".cBLpOw .nav-link:hover",
          "cssText": ".cBLpOw .nav-link:hover { background: none; text-decoration: underline; }",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (max-width: 479px) {\n  .cBLpOw.navlinkcat--hideXS { display: none; }\n}",
          "urls": [],
          "group": "screen and (max-width: 479px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 479px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "479px",
                "479",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".cBLpOw.navlinkcat--hideXS",
          "cssText": ".cBLpOw.navlinkcat--hideXS { display: none; }",
          "urls": [],
          "group": "screen and (max-width: 479px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 479px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "479px",
                "479",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 480px) and (max-width: 599px) {\n  .cBLpOw.navlinkcat--hideS { display: none; }\n}",
          "urls": [],
          "group": "screen and (min-width: 480px) and (max-width: 599px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 480px) and (max-width: 599px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "480px",
                "max-width",
                "599px",
                "480",
                "599",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".cBLpOw.navlinkcat--hideS",
          "cssText": ".cBLpOw.navlinkcat--hideS { display: none; }",
          "urls": [],
          "group": "screen and (min-width: 480px) and (max-width: 599px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 480px) and (max-width: 599px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "480px",
                "max-width",
                "599px",
                "480",
                "599",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 600px) and (max-width: 1023px) {\n  .cBLpOw.navlinkcat--hideM { display: none; }\n}",
          "urls": [],
          "group": "screen and (min-width: 600px) and (max-width: 1023px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px) and (max-width: 1023px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "max-width",
                "1023px",
                "600",
                "1023",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".cBLpOw.navlinkcat--hideM",
          "cssText": ".cBLpOw.navlinkcat--hideM { display: none; }",
          "urls": [],
          "group": "screen and (min-width: 600px) and (max-width: 1023px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px) and (max-width: 1023px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "max-width",
                "1023px",
                "600",
                "1023",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 1024px) and (max-width: 1279px) {\n  .cBLpOw.navlinkcat--hideL { display: none; }\n}",
          "urls": [],
          "group": "screen and (min-width: 1024px) and (max-width: 1279px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px) and (max-width: 1279px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "max-width",
                "1279px",
                "1024",
                "1279",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".cBLpOw.navlinkcat--hideL",
          "cssText": ".cBLpOw.navlinkcat--hideL { display: none; }",
          "urls": [],
          "group": "screen and (min-width: 1024px) and (max-width: 1279px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px) and (max-width: 1279px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "max-width",
                "1279px",
                "1024",
                "1279",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 1280px) {\n  .cBLpOw.navlinkcat--hideXL { display: none; }\n}",
          "urls": [],
          "group": "screen and (min-width: 1280px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1280px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1280px",
                "1280",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".cBLpOw.navlinkcat--hideXL",
          "cssText": ".cBLpOw.navlinkcat--hideXL { display: none; }",
          "urls": [],
          "group": "screen and (min-width: 1280px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1280px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1280px",
                "1280",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".cBLpOw .navlinkcat__item",
          "cssText": ".cBLpOw .navlinkcat__item { font-family: var(--ipt-font-family); font-size: var(--ipt-type-body-size, 1rem); font-weight: var(--ipt-type-body-weight, 400); letter-spacing: var(--ipt-type-body-letterSpacing, .03125em); line-height: var(--ipt-type-body-lineHeight, 1.5rem); text-transform: var(--ipt-type-body-textTransform, none); cursor: pointer; -webkit-box-align: center; align-items: center; border-top: 1px solid transparent; display: flex; -webkit-box-pack: justify; justify-content: space-between; margin: 0px; padding: 0.5rem 1rem; transition: color 0.1s ease-in, border-color 0.1s ease-in, opacity 0.12s ease-in; user-select: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".cBLpOw .navlinkcat__item:hover",
          "cssText": ".cBLpOw .navlinkcat__item:hover { background: rgba( var(--ipt-on-baseAlt-color, rgb(255,255,255)),var(--ipt-baseAlt-hover-opacity, 0.08) ); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".cBLpOw .navlinkcat__item:focus",
          "cssText": ".cBLpOw .navlinkcat__item:focus { outline: var(--ipt-focus-outline-on-baseAlt); outline-offset: 1px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".cBLpOw .navlinkcat__itemIcon",
          "cssText": ".cBLpOw .navlinkcat__itemIcon { align-self: flex-start; padding-right: 0.75rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".cBLpOw .navlinkcat__itemTitle",
          "cssText": ".cBLpOw .navlinkcat__itemTitle { -webkit-box-flex: 1; flex-grow: 1; overflow: initial; overflow-wrap: break-word; padding-right: 0.75rem; text-overflow: unset; white-space: break-spaces; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 1024px) {\n  .cBLpOw .navlinkcat__itemTitle { font-family: var(--ipt-font-family); font-size: var(--ipt-type-headline5-size, 1.5rem); font-weight: var(--ipt-type-headline5-weight, 600); -webkit-font-smoothing: antialiased; letter-spacing: var(--ipt-type-headline5-letterSpacing, normal); line-height: var(--ipt-type-headline5-lineHeight, 1.5rem); text-transform: var(--ipt-type-headline5-textTransform, none); }\n}",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".cBLpOw .navlinkcat__itemTitle",
          "cssText": ".cBLpOw .navlinkcat__itemTitle { font-family: var(--ipt-font-family); font-size: var(--ipt-type-headline5-size, 1.5rem); font-weight: var(--ipt-type-headline5-weight, 600); -webkit-font-smoothing: antialiased; letter-spacing: var(--ipt-type-headline5-letterSpacing, normal); line-height: var(--ipt-type-headline5-lineHeight, 1.5rem); text-transform: var(--ipt-type-headline5-textTransform, none); }",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".cBLpOw .navlinkcat__itemChevron",
          "cssText": ".cBLpOw .navlinkcat__itemChevron { transform: rotate(90deg); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".cBLpOw .navlinkcat__itemIcon, .cBLpOw .navlinkcat__itemChevron",
          "cssText": ".cBLpOw .navlinkcat__itemIcon, .cBLpOw .navlinkcat__itemChevron { opacity: 0.5; transition: 0.2s; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".cBLpOw .navlinkcat__item:focus .navlinkcat__itemChevron, .cBLpOw .navlinkcat__item:hover .navlinkcat__itemChevron, .cBLpOw .navlinkcat__item:focus .navlinkcat__itemIcon, .cBLpOw .navlinkcat__item:hover .navlinkcat__itemIcon",
          "cssText": ".cBLpOw .navlinkcat__item:focus .navlinkcat__itemChevron, .cBLpOw .navlinkcat__item:hover .navlinkcat__itemChevron, .cBLpOw .navlinkcat__item:focus .navlinkcat__itemIcon, .cBLpOw .navlinkcat__item:hover .navlinkcat__itemIcon { opacity: 1; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".cBLpOw .navlinkcat__listContainer",
          "cssText": ".cBLpOw .navlinkcat__listContainer { height: 0px; visibility: hidden; overflow: hidden; border-bottom: 1px solid transparent; transition: border-color 0.1s ease-in, height 0.2s; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".cBLpOw .navlinkcat__state:checked ~ .navlinkcat__targetWrapper .navlinkcat__item",
          "cssText": ".cBLpOw .navlinkcat__state:checked ~ .navlinkcat__targetWrapper .navlinkcat__item { border-color: var(--ipt-baseAlt-border-color, rgba(255,255,255,0.2)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".cBLpOw .navlinkcat__state:checked ~ .navlinkcat__targetWrapper .navlinkcat__item .navlinkcat__itemIcon, .cBLpOw .navlinkcat__state:checked ~ .navlinkcat__targetWrapper .navlinkcat__item .navlinkcat__itemTitle",
          "cssText": ".cBLpOw .navlinkcat__state:checked ~ .navlinkcat__targetWrapper .navlinkcat__item .navlinkcat__itemIcon, .cBLpOw .navlinkcat__state:checked ~ .navlinkcat__targetWrapper .navlinkcat__item .navlinkcat__itemTitle { color: var(--ipt-on-baseAlt-accent1-color, rgb(245,197,24)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".cBLpOw .navlinkcat__state:checked ~ .navlinkcat__targetWrapper .navlinkcat__listContainer",
          "cssText": ".cBLpOw .navlinkcat__state:checked ~ .navlinkcat__targetWrapper .navlinkcat__listContainer { border-color: var(--ipt-baseAlt-border-color, rgba(255,255,255,0.2)); height: auto; visibility: inherit; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".cBLpOw .navlinkcat__state:checked ~ span .navlinkcat__item .navlinkcat__itemIcon",
          "cssText": ".cBLpOw .navlinkcat__state:checked ~ span .navlinkcat__item .navlinkcat__itemIcon { opacity: 1; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".cBLpOw .navlinkcat__state:checked ~ span .navlinkcat__item .navlinkcat__itemChevron",
          "cssText": ".cBLpOw .navlinkcat__state:checked ~ span .navlinkcat__item .navlinkcat__itemChevron { transform: rotate(-90deg); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".cBLpOw .navlinkcat__state:checked ~ span .navlinkcat__listContainer",
          "cssText": ".cBLpOw .navlinkcat__state:checked ~ span .navlinkcat__listContainer { display: block; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".cBLpOw:nth-of-type(1) .navlinkcat__item",
          "cssText": ".cBLpOw:nth-of-type(1) .navlinkcat__item { border-top: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 1024px) {\n  .cBLpOw.noMarginItem .navlinkcat__item { margin-top: 0px; }\n}",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".cBLpOw.noMarginItem .navlinkcat__item",
          "cssText": ".cBLpOw.noMarginItem .navlinkcat__item { margin-top: 0px; }",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 1024px) {\n  .cBLpOw.marginTop { margin-top: 5rem; }\n}",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".cBLpOw.marginTop",
          "cssText": ".cBLpOw.marginTop { margin-top: 5rem; }",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".cBLpOw .nav-link",
          "cssText": ".cBLpOw .nav-link { height: auto; padding-top: 0.5rem; padding-bottom: 0.5rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".cBLpOw .nav-link > *",
          "cssText": ".cBLpOw .nav-link > * { white-space: initial; overflow-wrap: break-word; line-height: normal; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 1024px) {\n  .cBLpOw { flex-basis: 33%; }\n  .cBLpOw .navlinkcat__item { border: none; margin-top: 1.5rem; padding-top: 0.5rem; padding-bottom: 0.5rem; pointer-events: none; }\n  .cBLpOw .navlinkcat__state:checked ~ .navlinkcat__targetWrapper .navlinkcat__item .navlinkcat__itemTitle { color: inherit; }\n  .cBLpOw .navlinkcat__listContainer { visibility: inherit; border: 0px; height: auto !important; }\n  .cBLpOw .navlinkcat__itemChevron { display: none; }\n  .cBLpOw .navlinkcat__itemIcon { color: var(--ipt-on-baseAlt-accent1-color, rgb(245,197,24)); opacity: 1; }\n  .cBLpOw .nav-link:hover { background: none; text-decoration: underline; }\n}",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".cBLpOw",
          "cssText": ".cBLpOw { flex-basis: 33%; }",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".cBLpOw .navlinkcat__item",
          "cssText": ".cBLpOw .navlinkcat__item { border: none; margin-top: 1.5rem; padding-top: 0.5rem; padding-bottom: 0.5rem; pointer-events: none; }",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".cBLpOw .navlinkcat__state:checked ~ .navlinkcat__targetWrapper .navlinkcat__item .navlinkcat__itemTitle",
          "cssText": ".cBLpOw .navlinkcat__state:checked ~ .navlinkcat__targetWrapper .navlinkcat__item .navlinkcat__itemTitle { color: inherit; }",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".cBLpOw .navlinkcat__listContainer",
          "cssText": ".cBLpOw .navlinkcat__listContainer { visibility: inherit; border: 0px; height: auto !important; }",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".cBLpOw .navlinkcat__itemChevron",
          "cssText": ".cBLpOw .navlinkcat__itemChevron { display: none; }",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".cBLpOw .navlinkcat__itemIcon",
          "cssText": ".cBLpOw .navlinkcat__itemIcon { color: var(--ipt-on-baseAlt-accent1-color, rgb(245,197,24)); opacity: 1; }",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".cBLpOw .nav-link:hover",
          "cssText": ".cBLpOw .nav-link:hover { background: none; text-decoration: underline; }",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (max-width: 479px) {\n  .cBLpOw.navlinkcat--hideXS { display: none; }\n}",
          "urls": [],
          "group": "screen and (max-width: 479px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 479px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "479px",
                "479",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".cBLpOw.navlinkcat--hideXS",
          "cssText": ".cBLpOw.navlinkcat--hideXS { display: none; }",
          "urls": [],
          "group": "screen and (max-width: 479px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 479px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "479px",
                "479",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 480px) and (max-width: 599px) {\n  .cBLpOw.navlinkcat--hideS { display: none; }\n}",
          "urls": [],
          "group": "screen and (min-width: 480px) and (max-width: 599px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 480px) and (max-width: 599px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "480px",
                "max-width",
                "599px",
                "480",
                "599",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".cBLpOw.navlinkcat--hideS",
          "cssText": ".cBLpOw.navlinkcat--hideS { display: none; }",
          "urls": [],
          "group": "screen and (min-width: 480px) and (max-width: 599px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 480px) and (max-width: 599px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "480px",
                "max-width",
                "599px",
                "480",
                "599",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 600px) and (max-width: 1023px) {\n  .cBLpOw.navlinkcat--hideM { display: none; }\n}",
          "urls": [],
          "group": "screen and (min-width: 600px) and (max-width: 1023px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px) and (max-width: 1023px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "max-width",
                "1023px",
                "600",
                "1023",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".cBLpOw.navlinkcat--hideM",
          "cssText": ".cBLpOw.navlinkcat--hideM { display: none; }",
          "urls": [],
          "group": "screen and (min-width: 600px) and (max-width: 1023px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px) and (max-width: 1023px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "max-width",
                "1023px",
                "600",
                "1023",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 1024px) and (max-width: 1279px) {\n  .cBLpOw.navlinkcat--hideL { display: none; }\n}",
          "urls": [],
          "group": "screen and (min-width: 1024px) and (max-width: 1279px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px) and (max-width: 1279px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "max-width",
                "1279px",
                "1024",
                "1279",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".cBLpOw.navlinkcat--hideL",
          "cssText": ".cBLpOw.navlinkcat--hideL { display: none; }",
          "urls": [],
          "group": "screen and (min-width: 1024px) and (max-width: 1279px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px) and (max-width: 1279px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "max-width",
                "1279px",
                "1024",
                "1279",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 1280px) {\n  .cBLpOw.navlinkcat--hideXL { display: none; }\n}",
          "urls": [],
          "group": "screen and (min-width: 1280px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1280px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1280px",
                "1280",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".cBLpOw.navlinkcat--hideXL",
          "cssText": ".cBLpOw.navlinkcat--hideXL { display: none; }",
          "urls": [],
          "group": "screen and (min-width: 1280px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1280px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1280px",
                "1280",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 1024px) {\n  .kKMtIp { flex-basis: 33%; }\n}",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".kKMtIp",
          "cssText": ".kKMtIp { flex-basis: 33%; }",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 1024px) {\n  .kKMtIp { flex-basis: 33%; }\n}",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".kKMtIp",
          "cssText": ".kKMtIp { flex-basis: 33%; }",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 1024px) {\n  .gPSSIe { flex-basis: 33%; max-width: 100%; }\n}",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".gPSSIe",
          "cssText": ".gPSSIe { flex-basis: 33%; max-width: 100%; }",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 1024px) {\n  .gPSSIe { flex-basis: 33%; max-width: 100%; }\n}",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".gPSSIe",
          "cssText": ".gPSSIe { flex-basis: 33%; max-width: 100%; }",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 1024px) {\n  .evQpmB { max-width: 100%; }\n}",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".evQpmB",
          "cssText": ".evQpmB { max-width: 100%; }",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 1024px) {\n  .evQpmB { max-width: 100%; }\n}",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".evQpmB",
          "cssText": ".evQpmB { max-width: 100%; }",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".fyZBWo",
          "cssText": ".fyZBWo { position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".fyZBWo.navbar__flyout__text-button-after-mobile, .fyZBWo .navbar__flyout__text-button-after-mobile",
          "cssText": ".fyZBWo.navbar__flyout__text-button-after-mobile, .fyZBWo .navbar__flyout__text-button-after-mobile { display: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".fyZBWo .navbar__flyout__text-button-after-mobile > div",
          "cssText": ".fyZBWo .navbar__flyout__text-button-after-mobile > div { display: flex; -webkit-box-align: center; align-items: center; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".fyZBWo .navbar__flyout--menu",
          "cssText": ".fyZBWo .navbar__flyout--menu { top: 100%; position: absolute; margin-top: 0.25rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".fyZBWo.fyZBWo.navbar__flyout--positionLeft .navbar__flyout--menu",
          "cssText": ".fyZBWo.fyZBWo.navbar__flyout--positionLeft .navbar__flyout--menu { left: 0px; right: auto; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 600px) {\n  .fyZBWo.navbar__flyout--breakpoint-m .navbar__flyout__icon-on-mobile { display: none; }\n  .fyZBWo.navbar__flyout--breakpoint-m .navbar__flyout__text-button-after-mobile { display: inline-flex; }\n}",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".fyZBWo.navbar__flyout--breakpoint-m .navbar__flyout__icon-on-mobile",
          "cssText": ".fyZBWo.navbar__flyout--breakpoint-m .navbar__flyout__icon-on-mobile { display: none; }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".fyZBWo.navbar__flyout--breakpoint-m .navbar__flyout__text-button-after-mobile",
          "cssText": ".fyZBWo.navbar__flyout--breakpoint-m .navbar__flyout__text-button-after-mobile { display: inline-flex; }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 1024px) {\n  .fyZBWo.navbar__flyout--breakpoint-l .navbar__flyout__icon-on-mobile { display: none; }\n  .fyZBWo.navbar__flyout--breakpoint-l .navbar__flyout__text-button-after-mobile { display: inline-flex; }\n}",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".fyZBWo.navbar__flyout--breakpoint-l .navbar__flyout__icon-on-mobile",
          "cssText": ".fyZBWo.navbar__flyout--breakpoint-l .navbar__flyout__icon-on-mobile { display: none; }",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".fyZBWo.navbar__flyout--breakpoint-l .navbar__flyout__text-button-after-mobile",
          "cssText": ".fyZBWo.navbar__flyout--breakpoint-l .navbar__flyout__text-button-after-mobile { display: inline-flex; }",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 1280px) {\n  .fyZBWo.navbar__flyout--breakpoint-xl .navbar__flyout__icon-on-mobile { display: none; }\n  .fyZBWo.navbar__flyout--breakpoint-xl .navbar__flyout__text-button-after-mobile { display: inline-flex; }\n}",
          "urls": [],
          "group": "screen and (min-width: 1280px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1280px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1280px",
                "1280",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".fyZBWo.navbar__flyout--breakpoint-xl .navbar__flyout__icon-on-mobile",
          "cssText": ".fyZBWo.navbar__flyout--breakpoint-xl .navbar__flyout__icon-on-mobile { display: none; }",
          "urls": [],
          "group": "screen and (min-width: 1280px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1280px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1280px",
                "1280",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".fyZBWo.navbar__flyout--breakpoint-xl .navbar__flyout__text-button-after-mobile",
          "cssText": ".fyZBWo.navbar__flyout--breakpoint-xl .navbar__flyout__text-button-after-mobile { display: inline-flex; }",
          "urls": [],
          "group": "screen and (min-width: 1280px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1280px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1280px",
                "1280",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".fyZBWo .navbar__flyout__text-button-post-icon",
          "cssText": ".fyZBWo .navbar__flyout__text-button-post-icon { transition: transform 0.2s; transform: rotateX(0deg); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".fyZBWo.navbar__flyout--isVisible .navbar__flyout__text-button-post-icon",
          "cssText": ".fyZBWo.navbar__flyout--isVisible .navbar__flyout__text-button-post-icon { transform: rotateX(180deg); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".fyZBWo",
          "cssText": ".fyZBWo { position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".fyZBWo.navbar__flyout__text-button-after-mobile, .fyZBWo .navbar__flyout__text-button-after-mobile",
          "cssText": ".fyZBWo.navbar__flyout__text-button-after-mobile, .fyZBWo .navbar__flyout__text-button-after-mobile { display: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".fyZBWo .navbar__flyout__text-button-after-mobile > div",
          "cssText": ".fyZBWo .navbar__flyout__text-button-after-mobile > div { display: flex; -webkit-box-align: center; align-items: center; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".fyZBWo .navbar__flyout--menu",
          "cssText": ".fyZBWo .navbar__flyout--menu { top: 100%; position: absolute; margin-top: 0.25rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".fyZBWo.fyZBWo.navbar__flyout--positionLeft .navbar__flyout--menu",
          "cssText": ".fyZBWo.fyZBWo.navbar__flyout--positionLeft .navbar__flyout--menu { left: 0px; right: auto; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 600px) {\n  .fyZBWo.navbar__flyout--breakpoint-m .navbar__flyout__icon-on-mobile { display: none; }\n  .fyZBWo.navbar__flyout--breakpoint-m .navbar__flyout__text-button-after-mobile { display: inline-flex; }\n}",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".fyZBWo.navbar__flyout--breakpoint-m .navbar__flyout__icon-on-mobile",
          "cssText": ".fyZBWo.navbar__flyout--breakpoint-m .navbar__flyout__icon-on-mobile { display: none; }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".fyZBWo.navbar__flyout--breakpoint-m .navbar__flyout__text-button-after-mobile",
          "cssText": ".fyZBWo.navbar__flyout--breakpoint-m .navbar__flyout__text-button-after-mobile { display: inline-flex; }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 1024px) {\n  .fyZBWo.navbar__flyout--breakpoint-l .navbar__flyout__icon-on-mobile { display: none; }\n  .fyZBWo.navbar__flyout--breakpoint-l .navbar__flyout__text-button-after-mobile { display: inline-flex; }\n}",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".fyZBWo.navbar__flyout--breakpoint-l .navbar__flyout__icon-on-mobile",
          "cssText": ".fyZBWo.navbar__flyout--breakpoint-l .navbar__flyout__icon-on-mobile { display: none; }",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".fyZBWo.navbar__flyout--breakpoint-l .navbar__flyout__text-button-after-mobile",
          "cssText": ".fyZBWo.navbar__flyout--breakpoint-l .navbar__flyout__text-button-after-mobile { display: inline-flex; }",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 1280px) {\n  .fyZBWo.navbar__flyout--breakpoint-xl .navbar__flyout__icon-on-mobile { display: none; }\n  .fyZBWo.navbar__flyout--breakpoint-xl .navbar__flyout__text-button-after-mobile { display: inline-flex; }\n}",
          "urls": [],
          "group": "screen and (min-width: 1280px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1280px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1280px",
                "1280",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".fyZBWo.navbar__flyout--breakpoint-xl .navbar__flyout__icon-on-mobile",
          "cssText": ".fyZBWo.navbar__flyout--breakpoint-xl .navbar__flyout__icon-on-mobile { display: none; }",
          "urls": [],
          "group": "screen and (min-width: 1280px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1280px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1280px",
                "1280",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".fyZBWo.navbar__flyout--breakpoint-xl .navbar__flyout__text-button-after-mobile",
          "cssText": ".fyZBWo.navbar__flyout--breakpoint-xl .navbar__flyout__text-button-after-mobile { display: inline-flex; }",
          "urls": [],
          "group": "screen and (min-width: 1280px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1280px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1280px",
                "1280",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".fyZBWo .navbar__flyout__text-button-post-icon",
          "cssText": ".fyZBWo .navbar__flyout__text-button-post-icon { transition: transform 0.2s; transform: rotateX(0deg); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".fyZBWo.navbar__flyout--isVisible .navbar__flyout__text-button-post-icon",
          "cssText": ".fyZBWo.navbar__flyout--isVisible .navbar__flyout__text-button-post-icon { transform: rotateX(180deg); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ekjSlF",
          "cssText": ".ekjSlF { flex-shrink: 0; -webkit-box-align: center; align-items: center; -webkit-box-pack: center; justify-content: center; user-select: none; margin-left: 0.25rem; margin-right: auto; order: 1; position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 1024px) {\n  .ekjSlF { margin-left: auto; margin-right: 0.5rem; order: 0; padding-left: 0px; }\n}",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ekjSlF",
          "cssText": ".ekjSlF { margin-left: auto; margin-right: 0.5rem; order: 0; padding-left: 0px; }",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (hover: hover) and (pointer: fine) {\n  .ekjSlF:focus { outline: currentcolor dashed 1px; }\n  .ekjSlF:focus:active { outline: 0px; }\n  .ekjSlF::before, .ekjSlF::after { border-radius: 10%; inset: 0px; content: \"\"; height: 100%; margin: auto; opacity: 0; position: absolute; transition: opacity 0.2s cubic-bezier(1, 1, 1, 1); width: 100%; background: var(--ipt-on-accent1-color, rgb(0,0,0)); }\n  .ekjSlF:hover::before { opacity: var(--ipt-base-hover-opacity, 0.08); }\n  .ekjSlF:active::after { opacity: var(--ipt-base-pressed-opacity, 0.16); }\n}",
          "urls": [],
          "group": "(hover: hover) and (pointer: fine)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "pointer",
              "semanticGroup": "input capability",
              "claim": "pointer accuracy",
              "excerpt": "(hover: hover) and (pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "hover",
                "pointer",
                "fine"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "hover",
              "semanticGroup": "input capability",
              "claim": "hover capability",
              "excerpt": "(hover: hover) and (pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "hover",
                "pointer",
                "fine"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ekjSlF:focus",
          "cssText": ".ekjSlF:focus { outline: currentcolor dashed 1px; }",
          "urls": [],
          "group": "(hover: hover) and (pointer: fine)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "pointer",
              "semanticGroup": "input capability",
              "claim": "pointer accuracy",
              "excerpt": "(hover: hover) and (pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "hover",
                "pointer",
                "fine"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "hover",
              "semanticGroup": "input capability",
              "claim": "hover capability",
              "excerpt": "(hover: hover) and (pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "hover",
                "pointer",
                "fine"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ekjSlF:focus:active",
          "cssText": ".ekjSlF:focus:active { outline: 0px; }",
          "urls": [],
          "group": "(hover: hover) and (pointer: fine)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "pointer",
              "semanticGroup": "input capability",
              "claim": "pointer accuracy",
              "excerpt": "(hover: hover) and (pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "hover",
                "pointer",
                "fine"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "hover",
              "semanticGroup": "input capability",
              "claim": "hover capability",
              "excerpt": "(hover: hover) and (pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "hover",
                "pointer",
                "fine"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ekjSlF::before, .ekjSlF::after",
          "cssText": ".ekjSlF::before, .ekjSlF::after { border-radius: 10%; inset: 0px; content: \"\"; height: 100%; margin: auto; opacity: 0; position: absolute; transition: opacity 0.2s cubic-bezier(1, 1, 1, 1); width: 100%; background: var(--ipt-on-accent1-color, rgb(0,0,0)); }",
          "urls": [],
          "group": "(hover: hover) and (pointer: fine)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "pointer",
              "semanticGroup": "input capability",
              "claim": "pointer accuracy",
              "excerpt": "(hover: hover) and (pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "hover",
                "pointer",
                "fine"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "hover",
              "semanticGroup": "input capability",
              "claim": "hover capability",
              "excerpt": "(hover: hover) and (pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "hover",
                "pointer",
                "fine"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ekjSlF:hover::before",
          "cssText": ".ekjSlF:hover::before { opacity: var(--ipt-base-hover-opacity, 0.08); }",
          "urls": [],
          "group": "(hover: hover) and (pointer: fine)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "pointer",
              "semanticGroup": "input capability",
              "claim": "pointer accuracy",
              "excerpt": "(hover: hover) and (pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "hover",
                "pointer",
                "fine"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "hover",
              "semanticGroup": "input capability",
              "claim": "hover capability",
              "excerpt": "(hover: hover) and (pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "hover",
                "pointer",
                "fine"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ekjSlF:active::after",
          "cssText": ".ekjSlF:active::after { opacity: var(--ipt-base-pressed-opacity, 0.16); }",
          "urls": [],
          "group": "(hover: hover) and (pointer: fine)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "pointer",
              "semanticGroup": "input capability",
              "claim": "pointer accuracy",
              "excerpt": "(hover: hover) and (pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "hover",
                "pointer",
                "fine"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "hover",
              "semanticGroup": "input capability",
              "claim": "hover capability",
              "excerpt": "(hover: hover) and (pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "hover",
                "pointer",
                "fine"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ekjSlF.imdb-header__logo-link--large",
          "cssText": ".ekjSlF.imdb-header__logo-link--large { display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (max-width: 1024px) {\n  .ekjSlF.imdb-header__logo-link--large { display: none; }\n}",
          "urls": [],
          "group": "screen and (max-width: 1024px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ekjSlF.imdb-header__logo-link--large",
          "cssText": ".ekjSlF.imdb-header__logo-link--large { display: none; }",
          "urls": [],
          "group": "screen and (max-width: 1024px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ekjSlF.imdb-header__logo-link--small",
          "cssText": ".ekjSlF.imdb-header__logo-link--small { display: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (max-width: 1024px) {\n  .ekjSlF.imdb-header__logo-link--small { display: flex; }\n}",
          "urls": [],
          "group": "screen and (max-width: 1024px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ekjSlF.imdb-header__logo-link--small",
          "cssText": ".ekjSlF.imdb-header__logo-link--small { display: flex; }",
          "urls": [],
          "group": "screen and (max-width: 1024px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ekjSlF",
          "cssText": ".ekjSlF { flex-shrink: 0; -webkit-box-align: center; align-items: center; -webkit-box-pack: center; justify-content: center; user-select: none; margin-left: 0.25rem; margin-right: auto; order: 1; position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 1024px) {\n  .ekjSlF { margin-left: auto; margin-right: 0.5rem; order: 0; padding-left: 0px; }\n}",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ekjSlF",
          "cssText": ".ekjSlF { margin-left: auto; margin-right: 0.5rem; order: 0; padding-left: 0px; }",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (hover: hover) and (pointer: fine) {\n  .ekjSlF:focus { outline: currentcolor dashed 1px; }\n  .ekjSlF:focus:active { outline: 0px; }\n  .ekjSlF::before, .ekjSlF::after { border-radius: 10%; inset: 0px; content: \"\"; height: 100%; margin: auto; opacity: 0; position: absolute; transition: opacity 0.2s cubic-bezier(1, 1, 1, 1); width: 100%; background: var(--ipt-on-accent1-color, rgb(0,0,0)); }\n  .ekjSlF:hover::before { opacity: var(--ipt-base-hover-opacity, 0.08); }\n  .ekjSlF:active::after { opacity: var(--ipt-base-pressed-opacity, 0.16); }\n}",
          "urls": [],
          "group": "(hover: hover) and (pointer: fine)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "pointer",
              "semanticGroup": "input capability",
              "claim": "pointer accuracy",
              "excerpt": "(hover: hover) and (pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "hover",
                "pointer",
                "fine"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "hover",
              "semanticGroup": "input capability",
              "claim": "hover capability",
              "excerpt": "(hover: hover) and (pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "hover",
                "pointer",
                "fine"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ekjSlF:focus",
          "cssText": ".ekjSlF:focus { outline: currentcolor dashed 1px; }",
          "urls": [],
          "group": "(hover: hover) and (pointer: fine)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "pointer",
              "semanticGroup": "input capability",
              "claim": "pointer accuracy",
              "excerpt": "(hover: hover) and (pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "hover",
                "pointer",
                "fine"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "hover",
              "semanticGroup": "input capability",
              "claim": "hover capability",
              "excerpt": "(hover: hover) and (pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "hover",
                "pointer",
                "fine"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ekjSlF:focus:active",
          "cssText": ".ekjSlF:focus:active { outline: 0px; }",
          "urls": [],
          "group": "(hover: hover) and (pointer: fine)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "pointer",
              "semanticGroup": "input capability",
              "claim": "pointer accuracy",
              "excerpt": "(hover: hover) and (pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "hover",
                "pointer",
                "fine"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "hover",
              "semanticGroup": "input capability",
              "claim": "hover capability",
              "excerpt": "(hover: hover) and (pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "hover",
                "pointer",
                "fine"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ekjSlF::before, .ekjSlF::after",
          "cssText": ".ekjSlF::before, .ekjSlF::after { border-radius: 10%; inset: 0px; content: \"\"; height: 100%; margin: auto; opacity: 0; position: absolute; transition: opacity 0.2s cubic-bezier(1, 1, 1, 1); width: 100%; background: var(--ipt-on-accent1-color, rgb(0,0,0)); }",
          "urls": [],
          "group": "(hover: hover) and (pointer: fine)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "pointer",
              "semanticGroup": "input capability",
              "claim": "pointer accuracy",
              "excerpt": "(hover: hover) and (pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "hover",
                "pointer",
                "fine"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "hover",
              "semanticGroup": "input capability",
              "claim": "hover capability",
              "excerpt": "(hover: hover) and (pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "hover",
                "pointer",
                "fine"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ekjSlF:hover::before",
          "cssText": ".ekjSlF:hover::before { opacity: var(--ipt-base-hover-opacity, 0.08); }",
          "urls": [],
          "group": "(hover: hover) and (pointer: fine)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "pointer",
              "semanticGroup": "input capability",
              "claim": "pointer accuracy",
              "excerpt": "(hover: hover) and (pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "hover",
                "pointer",
                "fine"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "hover",
              "semanticGroup": "input capability",
              "claim": "hover capability",
              "excerpt": "(hover: hover) and (pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "hover",
                "pointer",
                "fine"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ekjSlF:active::after",
          "cssText": ".ekjSlF:active::after { opacity: var(--ipt-base-pressed-opacity, 0.16); }",
          "urls": [],
          "group": "(hover: hover) and (pointer: fine)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "pointer",
              "semanticGroup": "input capability",
              "claim": "pointer accuracy",
              "excerpt": "(hover: hover) and (pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "hover",
                "pointer",
                "fine"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "hover",
              "semanticGroup": "input capability",
              "claim": "hover capability",
              "excerpt": "(hover: hover) and (pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "hover",
                "pointer",
                "fine"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ekjSlF.imdb-header__logo-link--large",
          "cssText": ".ekjSlF.imdb-header__logo-link--large { display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (max-width: 1024px) {\n  .ekjSlF.imdb-header__logo-link--large { display: none; }\n}",
          "urls": [],
          "group": "screen and (max-width: 1024px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ekjSlF.imdb-header__logo-link--large",
          "cssText": ".ekjSlF.imdb-header__logo-link--large { display: none; }",
          "urls": [],
          "group": "screen and (max-width: 1024px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ekjSlF.imdb-header__logo-link--small",
          "cssText": ".ekjSlF.imdb-header__logo-link--small { display: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (max-width: 1024px) {\n  .ekjSlF.imdb-header__logo-link--small { display: flex; }\n}",
          "urls": [],
          "group": "screen and (max-width: 1024px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ekjSlF.imdb-header__logo-link--small",
          "cssText": ".ekjSlF.imdb-header__logo-link--small { display: flex; }",
          "urls": [],
          "group": "screen and (max-width: 1024px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".kmZQRk",
          "cssText": ".kmZQRk { order: 4; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 1024px) {\n  .kmZQRk { order: 4; }\n}",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".kmZQRk",
          "cssText": ".kmZQRk { order: 4; }",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".kmZQRk .navbar__imdbpro-menu-toggle__name",
          "cssText": ".kmZQRk .navbar__imdbpro-menu-toggle__name { display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".kmZQRk .navbar__imdbpro-content .navbar__flyout--menu",
          "cssText": ".kmZQRk .navbar__imdbpro-content .navbar__flyout--menu { padding: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".kmZQRk .navbar__imdbpro-imdb-pro-ad",
          "cssText": ".kmZQRk .navbar__imdbpro-imdb-pro-ad { background-repeat: no-repeat; color: white; width: 590px; height: 240px; overflow: hidden; border-radius: 8px; left: initial; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".kmZQRk .navbar__imdbpro-imdb-pro-ad .imdb-pro-new__button",
          "cssText": ".kmZQRk .navbar__imdbpro-imdb-pro-ad .imdb-pro-new__button { min-height: auto; height: 28px; font-size: 13px; font-weight: normal; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".kmZQRk .imdb-pro-new__button-center_align",
          "cssText": ".kmZQRk .imdb-pro-new__button-center_align { margin: 187px 0px 25px 159px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".kmZQRk .imdb-pro-new__button-left_align",
          "cssText": ".kmZQRk .imdb-pro-new__button-left_align { margin: 190px 0px 25px 58px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".kmZQRk .navbar__imdbpro-imdb-pro-ad .imdb-pro-new__button:hover",
          "cssText": ".kmZQRk .navbar__imdbpro-imdb-pro-ad .imdb-pro-new__button:hover { background-color: rgb(247, 221, 149); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".kmZQRk",
          "cssText": ".kmZQRk { order: 4; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 1024px) {\n  .kmZQRk { order: 4; }\n}",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".kmZQRk",
          "cssText": ".kmZQRk { order: 4; }",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".kmZQRk .navbar__imdbpro-menu-toggle__name",
          "cssText": ".kmZQRk .navbar__imdbpro-menu-toggle__name { display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".kmZQRk .navbar__imdbpro-content .navbar__flyout--menu",
          "cssText": ".kmZQRk .navbar__imdbpro-content .navbar__flyout--menu { padding: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".kmZQRk .navbar__imdbpro-imdb-pro-ad",
          "cssText": ".kmZQRk .navbar__imdbpro-imdb-pro-ad { background-repeat: no-repeat; color: white; width: 590px; height: 240px; overflow: hidden; border-radius: 8px; left: initial; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".kmZQRk .navbar__imdbpro-imdb-pro-ad .imdb-pro-new__button",
          "cssText": ".kmZQRk .navbar__imdbpro-imdb-pro-ad .imdb-pro-new__button { min-height: auto; height: 28px; font-size: 13px; font-weight: normal; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".kmZQRk .imdb-pro-new__button-center_align",
          "cssText": ".kmZQRk .imdb-pro-new__button-center_align { margin: 187px 0px 25px 159px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".kmZQRk .imdb-pro-new__button-left_align",
          "cssText": ".kmZQRk .imdb-pro-new__button-left_align { margin: 190px 0px 25px 58px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".kmZQRk .navbar__imdbpro-imdb-pro-ad .imdb-pro-new__button:hover",
          "cssText": ".kmZQRk .navbar__imdbpro-imdb-pro-ad .imdb-pro-new__button:hover { background-color: rgb(247, 221, 149); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".fClFUt",
          "cssText": ".fClFUt { position: relative; order: 5; display: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 1024px) {\n  .fClFUt { order: 6; display: inline-flex; }\n}",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".fClFUt",
          "cssText": ".fClFUt { order: 6; display: inline-flex; }",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".fClFUt .imdb-header__watchlist-button-count",
          "cssText": ".fClFUt .imdb-header__watchlist-button-count { background: var(--ipt-on-base-accent1-color, rgb(245,197,24)); color: var(--ipt-on-accent1-color, rgb(0,0,0)); font-family: var(--ipt-font-family); font-size: var(--ipt-type-copyright-size, .75rem); font-weight: var(--ipt-type-copyright-weight, 400); letter-spacing: var(--ipt-type-copyright-letterSpacing, .03333em); line-height: var(--ipt-type-copyright-lineHeight, 1rem); text-transform: var(--ipt-type-copyright-textTransform, none); margin-left: 0.5rem; padding: 0px 0.4rem; border-radius: 10px; text-align: center; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".fClFUt",
          "cssText": ".fClFUt { position: relative; order: 5; display: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 1024px) {\n  .fClFUt { order: 6; display: inline-flex; }\n}",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".fClFUt",
          "cssText": ".fClFUt { order: 6; display: inline-flex; }",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".fClFUt .imdb-header__watchlist-button-count",
          "cssText": ".fClFUt .imdb-header__watchlist-button-count { background: var(--ipt-on-base-accent1-color, rgb(245,197,24)); color: var(--ipt-on-accent1-color, rgb(0,0,0)); font-family: var(--ipt-font-family); font-size: var(--ipt-type-copyright-size, .75rem); font-weight: var(--ipt-type-copyright-weight, 400); letter-spacing: var(--ipt-type-copyright-letterSpacing, .03333em); line-height: var(--ipt-type-copyright-lineHeight, 1rem); text-transform: var(--ipt-type-copyright-textTransform, none); margin-left: 0.5rem; padding: 0px 0.4rem; border-radius: 10px; text-align: center; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 480px) {\n  .bvVkvj { display: inline-flex; }\n}",
          "urls": [],
          "group": "screen and (min-width: 480px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 480px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "480px",
                "480",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".bvVkvj",
          "cssText": ".bvVkvj { display: inline-flex; }",
          "urls": [],
          "group": "screen and (min-width: 480px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 480px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "480px",
                "480",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (max-width: 600px) {\n  .bvVkvj { display: none; }\n}",
          "urls": [],
          "group": "screen and (max-width: 600px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "600px",
                "600",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".bvVkvj",
          "cssText": ".bvVkvj { display: none; }",
          "urls": [],
          "group": "screen and (max-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 480px) {\n  .bvVkvj { display: inline-flex; }\n}",
          "urls": [],
          "group": "screen and (min-width: 480px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 480px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "480px",
                "480",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".bvVkvj",
          "cssText": ".bvVkvj { display: inline-flex; }",
          "urls": [],
          "group": "screen and (min-width: 480px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 480px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "480px",
                "480",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (max-width: 600px) {\n  .bvVkvj { display: none; }\n}",
          "urls": [],
          "group": "screen and (max-width: 600px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "600px",
                "600",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".bvVkvj",
          "cssText": ".bvVkvj { display: none; }",
          "urls": [],
          "group": "screen and (max-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 480px) {\n  .lbMEMu { display: none; }\n}",
          "urls": [],
          "group": "screen and (min-width: 480px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 480px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "480px",
                "480",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".lbMEMu",
          "cssText": ".lbMEMu { display: none; }",
          "urls": [],
          "group": "screen and (min-width: 480px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 480px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "480px",
                "480",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (max-width: 600px) {\n  .lbMEMu { display: inline-flex; }\n}",
          "urls": [],
          "group": "screen and (max-width: 600px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "600px",
                "600",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".lbMEMu",
          "cssText": ".lbMEMu { display: inline-flex; }",
          "urls": [],
          "group": "screen and (max-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 480px) {\n  .lbMEMu { display: none; }\n}",
          "urls": [],
          "group": "screen and (min-width: 480px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 480px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "480px",
                "480",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".lbMEMu",
          "cssText": ".lbMEMu { display: none; }",
          "urls": [],
          "group": "screen and (min-width: 480px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 480px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "480px",
                "480",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (max-width: 600px) {\n  .lbMEMu { display: inline-flex; }\n}",
          "urls": [],
          "group": "screen and (max-width: 600px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "600px",
                "600",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".lbMEMu",
          "cssText": ".lbMEMu { display: inline-flex; }",
          "urls": [],
          "group": "screen and (max-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".jwjxXp",
          "cssText": ".jwjxXp { background: var(--ipt-baseAlt-shade1-bg, rgb(31,31,31)); width: 100%; left: 0px; right: 0px; top: 100%; position: absolute; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 600px) {\n  .jwjxXp { border-radius: var(--ipt-cornerRadius, 4px); top: calc(100% + 0.25rem); }\n}",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".jwjxXp",
          "cssText": ".jwjxXp { border-radius: var(--ipt-cornerRadius, 4px); top: calc(100% + 0.25rem); }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".jwjxXp ul",
          "cssText": ".jwjxXp ul { margin: 0px; padding: 0px; list-style: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".jwjxXp ul li",
          "cssText": ".jwjxXp ul li { display: inline; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".jwjxXp .anim-enter",
          "cssText": ".jwjxXp .anim-enter { opacity: 0; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".jwjxXp .anim-enter-active",
          "cssText": ".jwjxXp .anim-enter-active { opacity: 1; transition: opacity 200ms; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".jwjxXp .anim-exit",
          "cssText": ".jwjxXp .anim-exit { opacity: 1; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".jwjxXp .anim-exit-active",
          "cssText": ".jwjxXp .anim-exit-active { opacity: 0; transition: opacity 200ms; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".jwjxXp",
          "cssText": ".jwjxXp { background: var(--ipt-baseAlt-shade1-bg, rgb(31,31,31)); width: 100%; left: 0px; right: 0px; top: 100%; position: absolute; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 600px) {\n  .jwjxXp { border-radius: var(--ipt-cornerRadius, 4px); top: calc(100% + 0.25rem); }\n}",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".jwjxXp",
          "cssText": ".jwjxXp { border-radius: var(--ipt-cornerRadius, 4px); top: calc(100% + 0.25rem); }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".jwjxXp ul",
          "cssText": ".jwjxXp ul { margin: 0px; padding: 0px; list-style: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".jwjxXp ul li",
          "cssText": ".jwjxXp ul li { display: inline; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".jwjxXp .anim-enter",
          "cssText": ".jwjxXp .anim-enter { opacity: 0; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".jwjxXp .anim-enter-active",
          "cssText": ".jwjxXp .anim-enter-active { opacity: 1; transition: opacity 200ms; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".jwjxXp .anim-exit",
          "cssText": ".jwjxXp .anim-exit { opacity: 1; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".jwjxXp .anim-exit-active",
          "cssText": ".jwjxXp .anim-exit-active { opacity: 0; transition: opacity 200ms; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".fNenhu.fNenhu h3",
          "cssText": ".fNenhu.fNenhu h3 { padding-left: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".fNenhu.fNenhu h3 ::before",
          "cssText": ".fNenhu.fNenhu h3 ::before { display: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".fNenhu.fNenhu h3",
          "cssText": ".fNenhu.fNenhu h3 { padding-left: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".fNenhu.fNenhu h3 ::before",
          "cssText": ".fNenhu.fNenhu h3 ::before { display: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".juzrps",
          "cssText": ".juzrps { display: flex; -webkit-box-pack: justify; justify-content: space-between; padding: var(--ipt-pageMargin, 1rem); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".juzrps",
          "cssText": ".juzrps { display: flex; -webkit-box-pack: justify; justify-content: space-between; padding: var(--ipt-pageMargin, 1rem); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "*, ::before, ::after",
          "cssText": "*, ::before, ::after { box-sizing: border-box; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "html",
          "cssText": "html { scroll-behavior: smooth; background: rgb(0, 0, 0); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "h1, h2, h3, h4, h5, h6",
          "cssText": "h1, h2, h3, h4, h5, h6 { margin: 0px; font-family: var(--ipt-font-family); font-size: var(--ipt-type-body-size, 1rem); font-weight: var(--ipt-type-body-weight, 400); letter-spacing: var(--ipt-type-body-letterSpacing, .03125em); line-height: var(--ipt-type-body-lineHeight, 1.5rem); text-transform: var(--ipt-type-body-textTransform, none); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "ul",
          "cssText": "ul { list-style: none; padding: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "iframe",
          "cssText": "iframe { border: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "#nprogress",
          "cssText": "#nprogress { pointer-events: none; display: initial; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "#nprogress .bar",
          "cssText": "#nprogress .bar { background: var(--ipt-accent1-bg, rgb(245,197,24)); position: fixed; z-index: 99999; top: 0px; left: 0px; width: 100%; height: 2px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "#nprogress .peg",
          "cssText": "#nprogress .peg { display: block; position: absolute; right: 0px; width: 100px; height: 100%; box-shadow: rgb(245, 197, 24) 0px 0px 10px, rgb(245, 197, 24) 0px 0px 5px; opacity: 1; transform: rotate(3deg) translate(0px, -4px); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".imGzHj",
          "cssText": ".imGzHj { width: 1rem; margin-left: 0.25rem; vertical-align: top; margin-right: 0.5rem; height: 1.5rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".imGzHj",
          "cssText": ".imGzHj { width: 1rem; margin-left: 0.25rem; vertical-align: top; margin-right: 0.5rem; height: 1.5rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dsfGjw",
          "cssText": ".dsfGjw { margin-left: -0.25rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dsfGjw",
          "cssText": ".dsfGjw { margin-left: -0.25rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".jghkwL",
          "cssText": ".jghkwL { width: 100%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".jghkwL",
          "cssText": ".jghkwL { width: 100%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".goagWI",
          "cssText": ".goagWI { position: absolute; z-index: 1; width: 270px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".imVsVJ",
          "cssText": ".imVsVJ { padding: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".jSxdvB",
          "cssText": ".jSxdvB { display: flex; -webkit-box-pack: justify; justify-content: space-between; -webkit-box-align: center; align-items: center; padding: 0.5rem; font-weight: bold; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".esFOoe",
          "cssText": ".esFOoe { padding: 0.5rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dAMRKF",
          "cssText": ".dAMRKF { position: absolute; right: 0.25rem; margin-left: 0.5rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".bMfdeg",
          "cssText": ".bMfdeg { display: block; position: relative; top: 0.5rem; left: 0.5rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 1024px) {\n  .bMfdeg { display: none; }\n}",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".bMfdeg",
          "cssText": ".bMfdeg { display: none; }",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".cTChME",
          "cssText": ".cTChME { display: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 1024px) {\n  .cTChME { display: block; position: relative; top: 0.9rem; right: 220px; }\n}",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".cTChME",
          "cssText": ".cTChME { display: block; position: relative; top: 0.9rem; right: 220px; }",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".iXyuCJ",
          "cssText": ".iXyuCJ { height: 100%; position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".iXyuCJ",
          "cssText": ".iXyuCJ { height: 100%; position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".eKnhBi",
          "cssText": ".eKnhBi { display: flex; position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".eKnhBi",
          "cssText": ".eKnhBi { display: flex; position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".BVweP",
          "cssText": ".BVweP { position: absolute; width: 165px; z-index: 100; bottom: 0px; left: 16px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (max-width: 1280px) {\n  .BVweP { width: 132px; }\n}",
          "urls": [],
          "group": "screen and (max-width: 1280px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 1280px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "1280px",
                "1280",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".BVweP",
          "cssText": ".BVweP { width: 132px; }",
          "urls": [],
          "group": "screen and (max-width: 1280px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 1280px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "1280px",
                "1280",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (max-width: 600px) {\n  .BVweP { width: 90px; left: 0px; }\n}",
          "urls": [],
          "group": "screen and (max-width: 600px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "600px",
                "600",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".BVweP",
          "cssText": ".BVweP { width: 90px; left: 0px; }",
          "urls": [],
          "group": "screen and (max-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".BVweP",
          "cssText": ".BVweP { position: absolute; width: 165px; z-index: 100; bottom: 0px; left: 16px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (max-width: 1280px) {\n  .BVweP { width: 132px; }\n}",
          "urls": [],
          "group": "screen and (max-width: 1280px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 1280px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "1280px",
                "1280",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".BVweP",
          "cssText": ".BVweP { width: 132px; }",
          "urls": [],
          "group": "screen and (max-width: 1280px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 1280px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "1280px",
                "1280",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (max-width: 600px) {\n  .BVweP { width: 90px; left: 0px; }\n}",
          "urls": [],
          "group": "screen and (max-width: 600px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "600px",
                "600",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".BVweP",
          "cssText": ".BVweP { width: 90px; left: 0px; }",
          "urls": [],
          "group": "screen and (max-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".KijQj",
          "cssText": ".KijQj { background: linear-gradient(transparent 0%, transparent 65%, rgba(0, 0, 0, 0.7) 77%, rgb(0, 0, 0) 85%, rgb(0, 0, 0) 100%); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (max-width: 480px) {\n  .KijQj { background: linear-gradient(transparent 0%, transparent 65%, rgba(0, 0, 0, 0.7) 70%, rgb(0, 0, 0) 82%, rgb(0, 0, 0) 100%); }\n}",
          "urls": [],
          "group": "screen and (max-width: 480px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 480px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "480px",
                "480",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".KijQj",
          "cssText": ".KijQj { background: linear-gradient(transparent 0%, transparent 65%, rgba(0, 0, 0, 0.7) 70%, rgb(0, 0, 0) 82%, rgb(0, 0, 0) 100%); }",
          "urls": [],
          "group": "screen and (max-width: 480px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 480px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "480px",
                "480",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".KijQj",
          "cssText": ".KijQj { background: linear-gradient(transparent 0%, transparent 65%, rgba(0, 0, 0, 0.7) 77%, rgb(0, 0, 0) 85%, rgb(0, 0, 0) 100%); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (max-width: 480px) {\n  .KijQj { background: linear-gradient(transparent 0%, transparent 65%, rgba(0, 0, 0, 0.7) 70%, rgb(0, 0, 0) 82%, rgb(0, 0, 0) 100%); }\n}",
          "urls": [],
          "group": "screen and (max-width: 480px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 480px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "480px",
                "480",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".KijQj",
          "cssText": ".KijQj { background: linear-gradient(transparent 0%, transparent 65%, rgba(0, 0, 0, 0.7) 70%, rgb(0, 0, 0) 82%, rgb(0, 0, 0) 100%); }",
          "urls": [],
          "group": "screen and (max-width: 480px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 480px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "480px",
                "480",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".lngaIt",
          "cssText": ".lngaIt { margin-top: 0.25rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".lngaIt",
          "cssText": ".lngaIt { margin-top: 0.25rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dOykdw",
          "cssText": ".dOykdw { color: rgb(0, 0, 0); z-index: 5; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dOykdw:hover, .dOykdw:active, .dOykdw:focus",
          "cssText": ".dOykdw:hover, .dOykdw:active, .dOykdw:focus { color: rgb(0, 0, 0); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dOykdw",
          "cssText": ".dOykdw { color: rgb(0, 0, 0); z-index: 5; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dOykdw:hover, .dOykdw:active, .dOykdw:focus",
          "cssText": ".dOykdw:hover, .dOykdw:active, .dOykdw:focus { color: rgb(0, 0, 0); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".JHWA-D",
          "cssText": ".JHWA-D { display: flex; flex-direction: row; -webkit-box-align: center; align-items: center; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".JHWA-D",
          "cssText": ".JHWA-D { display: flex; flex-direction: row; -webkit-box-align: center; align-items: center; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hKmVyS",
          "cssText": ".hKmVyS { display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hKmVyS",
          "cssText": ".hKmVyS { display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hblEUO",
          "cssText": ".hblEUO { background: none; display: none; grid-template-columns: 1fr 1fr; gap: 1rem; padding-bottom: 1rem; width: 80%; margin: 0px auto; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 1024px) {\n  .hblEUO { display: grid; }\n}",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hblEUO",
          "cssText": ".hblEUO { display: grid; }",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hblEUO",
          "cssText": ".hblEUO { background: none; display: none; grid-template-columns: 1fr 1fr; gap: 1rem; padding-bottom: 1rem; width: 80%; margin: 0px auto; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 1024px) {\n  .hblEUO { display: grid; }\n}",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hblEUO",
          "cssText": ".hblEUO { display: grid; }",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".epdXei",
          "cssText": ".epdXei { border-color: var(--ipt-baseAlt-shade1-color, rgb(31,31,31)); border-width: 2px; border-style: solid; border-radius: 10px; padding-top: 1rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".epdXei",
          "cssText": ".epdXei { border-color: var(--ipt-baseAlt-shade1-color, rgb(31,31,31)); border-width: 2px; border-style: solid; border-radius: 10px; padding-top: 1rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".jpthNp",
          "cssText": ".jpthNp { font-family: var(--ipt-font-family); font-size: var(--ipt-type-headline6-size, 1.25rem); font-weight: var(--ipt-type-headline6-weight, 600); -webkit-font-smoothing: antialiased; letter-spacing: var(--ipt-type-headline6-letterSpacing, .0125em); line-height: var(--ipt-type-headline6-lineHeight, 1.5rem); text-transform: var(--ipt-type-headline6-textTransform, none); text-align: center; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".jpthNp",
          "cssText": ".jpthNp { font-family: var(--ipt-font-family); font-size: var(--ipt-type-headline6-size, 1.25rem); font-weight: var(--ipt-type-headline6-weight, 600); -webkit-font-smoothing: antialiased; letter-spacing: var(--ipt-type-headline6-letterSpacing, .0125em); line-height: var(--ipt-type-headline6-lineHeight, 1.5rem); text-transform: var(--ipt-type-headline6-textTransform, none); text-align: center; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hpfHEg",
          "cssText": ".hpfHEg { border-color: var(--ipt-baseAlt-shade1-color, rgb(31,31,31)); border-width: 2px; border-style: solid; border-radius: 10px; display: flex; line-height: 2rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hpfHEg",
          "cssText": ".hpfHEg { border-color: var(--ipt-baseAlt-shade1-color, rgb(31,31,31)); border-width: 2px; border-style: solid; border-radius: 10px; display: flex; line-height: 2rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".gloJCT",
          "cssText": ".gloJCT { margin-top: 1.5rem; padding-left: 1.5rem; text-align: left; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".gloJCT",
          "cssText": ".gloJCT { margin-top: 1.5rem; padding-left: 1.5rem; text-align: left; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".kHButn",
          "cssText": ".kHButn { color: rgba(255, 255, 255, 0.7); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".kHButn",
          "cssText": ".kHButn { color: rgba(255, 255, 255, 0.7); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".eZZxpB",
          "cssText": ".eZZxpB { margin: 1rem 1.5rem 1rem auto; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".eZZxpB",
          "cssText": ".eZZxpB { margin: 1rem 1.5rem 1rem auto; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".jVqvQu",
          "cssText": ".jVqvQu { border-width: 4px; border-style: solid; border-color: var(--ipt-on-baseAlt-color, rgb(255,255,255)); border-radius: var(--ipt-cornerRadius, 4px); vertical-align: middle; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".jVqvQu",
          "cssText": ".jVqvQu { border-width: 4px; border-style: solid; border-color: var(--ipt-on-baseAlt-color, rgb(255,255,255)); border-radius: var(--ipt-cornerRadius, 4px); vertical-align: middle; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".eFIbLI",
          "cssText": ".eFIbLI { --ipt-base-rgb: 255,255,255; --ipt-base-bg: rgb(255,255,255); --ipt-base-color: rgb(255,255,255); --ipt-base-shade1-rgb: 250,250,250; --ipt-base-shade1-bg: rgb(250,250,250); --ipt-base-shade1-color: rgb(250,250,250); --ipt-base-shade2-rgb: 240,240,240; --ipt-base-shade2-bg: rgb(240,240,240); --ipt-base-shade2-color: rgb(240,240,240); --ipt-base-shade3-rgb: 255,255,255; --ipt-base-shade3-bg: rgb(255,255,255); --ipt-base-shade3-color: rgb(255,255,255); --ipt-on-base-rgb: 0,0,0; --ipt-on-base-color: rgb(0,0,0); --ipt-on-base-accent1-rgb: 245,197,24; --ipt-on-base-accent1-color: rgb(245,197,24); --ipt-on-base-accent2-rgb: 14,99,190; --ipt-on-base-accent2-color: rgb(14,99,190); --ipt-on-base-accent3-rgb: 189,36,4; --ipt-on-base-accent3-color: rgb(189,36,4); --ipt-on-base-accent4-rgb: 0,138,0; --ipt-on-base-accent4-color: rgb(0,138,0); --ipt-on-base-accent5-rgb: 189,82,0; --ipt-on-base-accent5-color: rgb(189,82,0); --ipt-on-base-accent6-rgb: 140,58,217; --ipt-on-base-accent6-color: rgb(140,58,217); --ipt-on-base-textPrimary-opacity: 0.87; --ipt-on-base-textPrimary-color: rgba(0,0,0,0.87); --ipt-on-base-textSecondary-opacity: 0.54; --ipt-on-base-textSecondary-color: rgba(0,0,0,0.54); --ipt-on-base-textHint-opacity: 0.38; --ipt-on-base-textHint-color: rgba(0,0,0,0.38); --ipt-on-base-textDisabled-opacity: 0.38; --ipt-on-base-textDisabled-color: rgba(0,0,0,0.38); --ipt-on-base-textIcon-opacity: 0.5; --ipt-on-base-textIcon-color: rgba(0,0,0,0.5); --ipt-base-border-opacity: 0.12; --ipt-base-hover-opacity: 0.08; --ipt-base-pressed-opacity: 0.16; --ipt-base-border-color: rgba(0...",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".eFIbLI .footer__app",
          "cssText": ".eFIbLI .footer__app { background: rgba(255, 255, 255, 0.1); margin-bottom: 0.5rem; padding: 1rem 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".eFIbLI .footer__socials",
          "cssText": ".eFIbLI .footer__socials { margin: 16px 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".eFIbLI .footer__logo",
          "cssText": ".eFIbLI .footer__logo { min-height: 40px; display: flex; -webkit-box-pack: center; justify-content: center; -webkit-box-align: center; align-items: center; margin: 16px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".eFIbLI .footer__copyright",
          "cssText": ".eFIbLI .footer__copyright { color: var(--ipt-on-baseAlt-textSecondary-color, rgba(255,255,255,0.7)); font-family: var(--ipt-font-family); font-size: var(--ipt-type-copyright-size, .75rem); font-weight: var(--ipt-type-copyright-weight, 400); letter-spacing: var(--ipt-type-copyright-letterSpacing, .03333em); line-height: var(--ipt-type-copyright-lineHeight, 1rem); text-transform: var(--ipt-type-copyright-textTransform, none); margin: 0.5em 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".eFIbLI .footer__links",
          "cssText": ".eFIbLI .footer__links { max-width: 360px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".eFIbLI .footer__linksRow",
          "cssText": ".eFIbLI .footer__linksRow { display: inline; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".eFIbLI .footer__linksRow li",
          "cssText": ".eFIbLI .footer__linksRow li { margin-left: 0.5rem; margin-right: 0.5rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".eFIbLI .footerLink--wideScreen",
          "cssText": ".eFIbLI .footerLink--wideScreen { display: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 600px) {\n  .eFIbLI { margin-top: 0px; }\n  .eFIbLI .footer__links { max-width: 600px; }\n  .eFIbLI .footer__linksRow { display: inline; }\n}",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".eFIbLI",
          "cssText": ".eFIbLI { margin-top: 0px; }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".eFIbLI .footer__links",
          "cssText": ".eFIbLI .footer__links { max-width: 600px; }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".eFIbLI .footer__linksRow",
          "cssText": ".eFIbLI .footer__linksRow { display: inline; }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".eFIbLI .footer__sign-in-button",
          "cssText": ".eFIbLI .footer__sign-in-button { display: inline-flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".eFIbLI .footer__sign-in-mobile-button",
          "cssText": ".eFIbLI .footer__sign-in-mobile-button { display: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (max-width: 1024px) {\n  .eFIbLI .footer__app { margin: 0px; }\n  .eFIbLI .footer__sign-in { background: rgba(255, 255, 255, 0.06); padding: 1rem 0px; }\n  .eFIbLI .footer__sign-in-button { display: none; }\n  .eFIbLI .footer__sign-in-mobile-button { display: inline-flex; }\n}",
          "urls": [],
          "group": "screen and (max-width: 1024px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".eFIbLI .footer__app",
          "cssText": ".eFIbLI .footer__app { margin: 0px; }",
          "urls": [],
          "group": "screen and (max-width: 1024px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".eFIbLI .footer__sign-in",
          "cssText": ".eFIbLI .footer__sign-in { background: rgba(255, 255, 255, 0.06); padding: 1rem 0px; }",
          "urls": [],
          "group": "screen and (max-width: 1024px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".eFIbLI .footer__sign-in-button",
          "cssText": ".eFIbLI .footer__sign-in-button { display: none; }",
          "urls": [],
          "group": "screen and (max-width: 1024px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".eFIbLI .footer__sign-in-mobile-button",
          "cssText": ".eFIbLI .footer__sign-in-mobile-button { display: inline-flex; }",
          "urls": [],
          "group": "screen and (max-width: 1024px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 1024px) {\n  .eFIbLI .footer__links { max-width: 1024px; }\n  .eFIbLI .footer__app { display: none; }\n  .eFIbLI .footer__socials { display: none; }\n  .eFIbLI .footerLink--wideScreen { display: inline-block; }\n  .eFIbLI .footerLink--smallScreen { display: none; }\n  .eFIbLI .footer__sign-in { background: var(--ipt-baseAlt-bg, rgb(0,0,0)); padding: 0px; }\n  .eFIbLI .footer__sign-in-button { display: inline-flex; }\n  .eFIbLI .footer__sign-in-mobile-button { display: none; }\n}",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".eFIbLI .footer__links",
          "cssText": ".eFIbLI .footer__links { max-width: 1024px; }",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".eFIbLI .footer__app",
          "cssText": ".eFIbLI .footer__app { display: none; }",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".eFIbLI .footer__socials",
          "cssText": ".eFIbLI .footer__socials { display: none; }",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".eFIbLI .footerLink--wideScreen",
          "cssText": ".eFIbLI .footerLink--wideScreen { display: inline-block; }",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".eFIbLI .footerLink--smallScreen",
          "cssText": ".eFIbLI .footerLink--smallScreen { display: none; }",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".eFIbLI .footer__sign-in",
          "cssText": ".eFIbLI .footer__sign-in { background: var(--ipt-baseAlt-bg, rgb(0,0,0)); padding: 0px; }",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".eFIbLI .footer__sign-in-button",
          "cssText": ".eFIbLI .footer__sign-in-button { display: inline-flex; }",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".eFIbLI .footer__sign-in-mobile-button",
          "cssText": ".eFIbLI .footer__sign-in-mobile-button { display: none; }",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".eFIbLI",
          "cssText": ".eFIbLI { --ipt-base-rgb: 255,255,255; --ipt-base-bg: rgb(255,255,255); --ipt-base-color: rgb(255,255,255); --ipt-base-shade1-rgb: 250,250,250; --ipt-base-shade1-bg: rgb(250,250,250); --ipt-base-shade1-color: rgb(250,250,250); --ipt-base-shade2-rgb: 240,240,240; --ipt-base-shade2-bg: rgb(240,240,240); --ipt-base-shade2-color: rgb(240,240,240); --ipt-base-shade3-rgb: 255,255,255; --ipt-base-shade3-bg: rgb(255,255,255); --ipt-base-shade3-color: rgb(255,255,255); --ipt-on-base-rgb: 0,0,0; --ipt-on-base-color: rgb(0,0,0); --ipt-on-base-accent1-rgb: 245,197,24; --ipt-on-base-accent1-color: rgb(245,197,24); --ipt-on-base-accent2-rgb: 14,99,190; --ipt-on-base-accent2-color: rgb(14,99,190); --ipt-on-base-accent3-rgb: 189,36,4; --ipt-on-base-accent3-color: rgb(189,36,4); --ipt-on-base-accent4-rgb: 0,138,0; --ipt-on-base-accent4-color: rgb(0,138,0); --ipt-on-base-accent5-rgb: 189,82,0; --ipt-on-base-accent5-color: rgb(189,82,0); --ipt-on-base-accent6-rgb: 140,58,217; --ipt-on-base-accent6-color: rgb(140,58,217); --ipt-on-base-textPrimary-opacity: 0.87; --ipt-on-base-textPrimary-color: rgba(0,0,0,0.87); --ipt-on-base-textSecondary-opacity: 0.54; --ipt-on-base-textSecondary-color: rgba(0,0,0,0.54); --ipt-on-base-textHint-opacity: 0.38; --ipt-on-base-textHint-color: rgba(0,0,0,0.38); --ipt-on-base-textDisabled-opacity: 0.38; --ipt-on-base-textDisabled-color: rgba(0,0,0,0.38); --ipt-on-base-textIcon-opacity: 0.5; --ipt-on-base-textIcon-color: rgba(0,0,0,0.5); --ipt-base-border-opacity: 0.12; --ipt-base-hover-opacity: 0.08; --ipt-base-pressed-opacity: 0.16; --ipt-base-border-color: rgba(0...",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".eFIbLI .footer__app",
          "cssText": ".eFIbLI .footer__app { background: rgba(255, 255, 255, 0.1); margin-bottom: 0.5rem; padding: 1rem 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".eFIbLI .footer__socials",
          "cssText": ".eFIbLI .footer__socials { margin: 16px 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".eFIbLI .footer__logo",
          "cssText": ".eFIbLI .footer__logo { min-height: 40px; display: flex; -webkit-box-pack: center; justify-content: center; -webkit-box-align: center; align-items: center; margin: 16px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".eFIbLI .footer__copyright",
          "cssText": ".eFIbLI .footer__copyright { color: var(--ipt-on-baseAlt-textSecondary-color, rgba(255,255,255,0.7)); font-family: var(--ipt-font-family); font-size: var(--ipt-type-copyright-size, .75rem); font-weight: var(--ipt-type-copyright-weight, 400); letter-spacing: var(--ipt-type-copyright-letterSpacing, .03333em); line-height: var(--ipt-type-copyright-lineHeight, 1rem); text-transform: var(--ipt-type-copyright-textTransform, none); margin: 0.5em 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".eFIbLI .footer__links",
          "cssText": ".eFIbLI .footer__links { max-width: 360px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".eFIbLI .footer__linksRow",
          "cssText": ".eFIbLI .footer__linksRow { display: inline; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".eFIbLI .footer__linksRow li",
          "cssText": ".eFIbLI .footer__linksRow li { margin-left: 0.5rem; margin-right: 0.5rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".eFIbLI .footerLink--wideScreen",
          "cssText": ".eFIbLI .footerLink--wideScreen { display: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 600px) {\n  .eFIbLI { margin-top: 0px; }\n  .eFIbLI .footer__links { max-width: 600px; }\n  .eFIbLI .footer__linksRow { display: inline; }\n}",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".eFIbLI",
          "cssText": ".eFIbLI { margin-top: 0px; }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".eFIbLI .footer__links",
          "cssText": ".eFIbLI .footer__links { max-width: 600px; }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".eFIbLI .footer__linksRow",
          "cssText": ".eFIbLI .footer__linksRow { display: inline; }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".eFIbLI .footer__sign-in-button",
          "cssText": ".eFIbLI .footer__sign-in-button { display: inline-flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".eFIbLI .footer__sign-in-mobile-button",
          "cssText": ".eFIbLI .footer__sign-in-mobile-button { display: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (max-width: 1024px) {\n  .eFIbLI .footer__app { margin: 0px; }\n  .eFIbLI .footer__sign-in { background: rgba(255, 255, 255, 0.06); padding: 1rem 0px; }\n  .eFIbLI .footer__sign-in-button { display: none; }\n  .eFIbLI .footer__sign-in-mobile-button { display: inline-flex; }\n}",
          "urls": [],
          "group": "screen and (max-width: 1024px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".eFIbLI .footer__app",
          "cssText": ".eFIbLI .footer__app { margin: 0px; }",
          "urls": [],
          "group": "screen and (max-width: 1024px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".eFIbLI .footer__sign-in",
          "cssText": ".eFIbLI .footer__sign-in { background: rgba(255, 255, 255, 0.06); padding: 1rem 0px; }",
          "urls": [],
          "group": "screen and (max-width: 1024px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".eFIbLI .footer__sign-in-button",
          "cssText": ".eFIbLI .footer__sign-in-button { display: none; }",
          "urls": [],
          "group": "screen and (max-width: 1024px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".eFIbLI .footer__sign-in-mobile-button",
          "cssText": ".eFIbLI .footer__sign-in-mobile-button { display: inline-flex; }",
          "urls": [],
          "group": "screen and (max-width: 1024px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 1024px) {\n  .eFIbLI .footer__links { max-width: 1024px; }\n  .eFIbLI .footer__app { display: none; }\n  .eFIbLI .footer__socials { display: none; }\n  .eFIbLI .footerLink--wideScreen { display: inline-block; }\n  .eFIbLI .footerLink--smallScreen { display: none; }\n  .eFIbLI .footer__sign-in { background: var(--ipt-baseAlt-bg, rgb(0,0,0)); padding: 0px; }\n  .eFIbLI .footer__sign-in-button { display: inline-flex; }\n  .eFIbLI .footer__sign-in-mobile-button { display: none; }\n}",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".eFIbLI .footer__links",
          "cssText": ".eFIbLI .footer__links { max-width: 1024px; }",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".eFIbLI .footer__app",
          "cssText": ".eFIbLI .footer__app { display: none; }",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".eFIbLI .footer__socials",
          "cssText": ".eFIbLI .footer__socials { display: none; }",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".eFIbLI .footerLink--wideScreen",
          "cssText": ".eFIbLI .footerLink--wideScreen { display: inline-block; }",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".eFIbLI .footerLink--smallScreen",
          "cssText": ".eFIbLI .footerLink--smallScreen { display: none; }",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".eFIbLI .footer__sign-in",
          "cssText": ".eFIbLI .footer__sign-in { background: var(--ipt-baseAlt-bg, rgb(0,0,0)); padding: 0px; }",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".eFIbLI .footer__sign-in-button",
          "cssText": ".eFIbLI .footer__sign-in-button { display: inline-flex; }",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".eFIbLI .footer__sign-in-mobile-button",
          "cssText": ".eFIbLI .footer__sign-in-mobile-button { display: none; }",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": "body.drawer-bodyLocked",
          "cssText": "body.drawer-bodyLocked { overflow: hidden; position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".bqLuiG.drawer",
          "cssText": ".bqLuiG.drawer { inset: 0px; display: flex; overflow: hidden; perspective: 70vh; pointer-events: none; position: fixed; visibility: hidden; z-index: 100; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".bqLuiG .drawer__panel",
          "cssText": ".bqLuiG .drawer__panel { background: var(--ipt-baseAlt-shade1-bg, rgb(31,31,31)); box-shadow: none; box-sizing: border-box; height: 100%; overflow: hidden auto; position: relative; transform: translateX(calc(-100% - 36px)); transform-origin: right center; transition: 0.3s, box-shadow; width: 280px; z-index: 2; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".bqLuiG .drawer__backdrop",
          "cssText": ".bqLuiG .drawer__backdrop { background: var(--ipt-baseAlt-shade1-bg, rgb(31,31,31)); box-sizing: border-box; display: block; height: 100%; left: 0px; opacity: 0; position: absolute; top: 0px; transition: opacity 0.3s; visibility: hidden; width: 100%; will-change: opacity; z-index: 1; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".bqLuiG .drawer__panelHeader",
          "cssText": ".bqLuiG .drawer__panelHeader { -webkit-box-align: center; align-items: center; box-sizing: border-box; display: flex; -webkit-box-pack: end; justify-content: flex-end; min-height: 3.5rem; margin-bottom: 0.5rem; padding: 0.25rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".bqLuiG .drawer__panelHeaderClose",
          "cssText": ".bqLuiG .drawer__panelHeaderClose { -webkit-tap-highlight-color: transparent; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".drawer__state:checked + .bqLuiG.drawer",
          "cssText": ".drawer__state:checked + .bqLuiG.drawer { pointer-events: auto; visibility: visible; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".drawer__state:checked + .bqLuiG.drawer > .drawer__panel",
          "cssText": ".drawer__state:checked + .bqLuiG.drawer > .drawer__panel { transform: translateX(0px); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".drawer__state:checked + .bqLuiG.drawer > .drawer__backdrop",
          "cssText": ".drawer__state:checked + .bqLuiG.drawer > .drawer__backdrop { opacity: 0.5; visibility: visible; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".bqLuiG .drawer-logo",
          "cssText": ".bqLuiG .drawer-logo { display: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (max-width: 1024px) {\n  .bqLuiG .drawer__panelHeader .drawer__panelHeaderClose { background: none; }\n  .bqLuiG .desktop-theme-toggle { display: none; }\n}",
          "urls": [],
          "group": "screen and (max-width: 1024px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".bqLuiG .drawer__panelHeader .drawer__panelHeaderClose",
          "cssText": ".bqLuiG .drawer__panelHeader .drawer__panelHeaderClose { background: none; }",
          "urls": [],
          "group": "screen and (max-width: 1024px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".bqLuiG .desktop-theme-toggle",
          "cssText": ".bqLuiG .desktop-theme-toggle { display: none; }",
          "urls": [],
          "group": "screen and (max-width: 1024px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 1024px) {\n  .bqLuiG .drawer__panel { width: 100%; transform: translateY(calc(-100%)); padding: 2rem 0px; }\n  .bqLuiG .drawer__panelHeader { background: none; max-width: 1024px; margin: auto; -webkit-box-pack: justify; justify-content: space-between; padding: 0px 1rem; }\n  .bqLuiG .drawer__panelHeader .drawer__panelHeaderClose { background: var(--ipt-accent1-bg, rgb(245,197,24)); color: var(--ipt-on-accent1-color, rgb(0,0,0)); }\n  .bqLuiG .drawer__panelHeader .drawer__panelHeaderClose:hover { color: var(--ipt-on-accent1-color, rgb(0,0,0)); }\n  .bqLuiG .drawer__panelContent { max-width: 1024px; margin: auto; }\n  .bqLuiG .drawer-logo { display: inline; }\n}",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".bqLuiG .drawer__panel",
          "cssText": ".bqLuiG .drawer__panel { width: 100%; transform: translateY(calc(-100%)); padding: 2rem 0px; }",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".bqLuiG .drawer__panelHeader",
          "cssText": ".bqLuiG .drawer__panelHeader { background: none; max-width: 1024px; margin: auto; -webkit-box-pack: justify; justify-content: space-between; padding: 0px 1rem; }",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".bqLuiG .drawer__panelHeader .drawer__panelHeaderClose",
          "cssText": ".bqLuiG .drawer__panelHeader .drawer__panelHeaderClose { background: var(--ipt-accent1-bg, rgb(245,197,24)); color: var(--ipt-on-accent1-color, rgb(0,0,0)); }",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".bqLuiG .drawer__panelHeader .drawer__panelHeaderClose:hover",
          "cssText": ".bqLuiG .drawer__panelHeader .drawer__panelHeaderClose:hover { color: var(--ipt-on-accent1-color, rgb(0,0,0)); }",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".bqLuiG .drawer__panelContent",
          "cssText": ".bqLuiG .drawer__panelContent { max-width: 1024px; margin: auto; }",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".bqLuiG .drawer-logo",
          "cssText": ".bqLuiG .drawer-logo { display: inline; }",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".bqLuiG.drawer",
          "cssText": ".bqLuiG.drawer { inset: 0px; display: flex; overflow: hidden; perspective: 70vh; pointer-events: none; position: fixed; visibility: hidden; z-index: 100; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".bqLuiG .drawer__panel",
          "cssText": ".bqLuiG .drawer__panel { background: var(--ipt-baseAlt-shade1-bg, rgb(31,31,31)); box-shadow: none; box-sizing: border-box; height: 100%; overflow: hidden auto; position: relative; transform: translateX(calc(-100% - 36px)); transform-origin: right center; transition: 0.3s, box-shadow; width: 280px; z-index: 2; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".bqLuiG .drawer__backdrop",
          "cssText": ".bqLuiG .drawer__backdrop { background: var(--ipt-baseAlt-shade1-bg, rgb(31,31,31)); box-sizing: border-box; display: block; height: 100%; left: 0px; opacity: 0; position: absolute; top: 0px; transition: opacity 0.3s; visibility: hidden; width: 100%; will-change: opacity; z-index: 1; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".bqLuiG .drawer__panelHeader",
          "cssText": ".bqLuiG .drawer__panelHeader { -webkit-box-align: center; align-items: center; box-sizing: border-box; display: flex; -webkit-box-pack: end; justify-content: flex-end; min-height: 3.5rem; margin-bottom: 0.5rem; padding: 0.25rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".bqLuiG .drawer__panelHeaderClose",
          "cssText": ".bqLuiG .drawer__panelHeaderClose { -webkit-tap-highlight-color: transparent; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".drawer__state:checked + .bqLuiG.drawer",
          "cssText": ".drawer__state:checked + .bqLuiG.drawer { pointer-events: auto; visibility: visible; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".drawer__state:checked + .bqLuiG.drawer > .drawer__panel",
          "cssText": ".drawer__state:checked + .bqLuiG.drawer > .drawer__panel { transform: translateX(0px); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".drawer__state:checked + .bqLuiG.drawer > .drawer__backdrop",
          "cssText": ".drawer__state:checked + .bqLuiG.drawer > .drawer__backdrop { opacity: 0.5; visibility: visible; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".bqLuiG .drawer-logo",
          "cssText": ".bqLuiG .drawer-logo { display: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (max-width: 1024px) {\n  .bqLuiG .drawer__panelHeader .drawer__panelHeaderClose { background: none; }\n  .bqLuiG .desktop-theme-toggle { display: none; }\n}",
          "urls": [],
          "group": "screen and (max-width: 1024px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".bqLuiG .drawer__panelHeader .drawer__panelHeaderClose",
          "cssText": ".bqLuiG .drawer__panelHeader .drawer__panelHeaderClose { background: none; }",
          "urls": [],
          "group": "screen and (max-width: 1024px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".bqLuiG .desktop-theme-toggle",
          "cssText": ".bqLuiG .desktop-theme-toggle { display: none; }",
          "urls": [],
          "group": "screen and (max-width: 1024px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 1024px) {\n  .bqLuiG .drawer__panel { width: 100%; transform: translateY(calc(-100%)); padding: 2rem 0px; }\n  .bqLuiG .drawer__panelHeader { background: none; max-width: 1024px; margin: auto; -webkit-box-pack: justify; justify-content: space-between; padding: 0px 1rem; }\n  .bqLuiG .drawer__panelHeader .drawer__panelHeaderClose { background: var(--ipt-accent1-bg, rgb(245,197,24)); color: var(--ipt-on-accent1-color, rgb(0,0,0)); }\n  .bqLuiG .drawer__panelHeader .drawer__panelHeaderClose:hover { color: var(--ipt-on-accent1-color, rgb(0,0,0)); }\n  .bqLuiG .drawer__panelContent { max-width: 1024px; margin: auto; }\n  .bqLuiG .drawer-logo { display: inline; }\n}",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".bqLuiG .drawer__panel",
          "cssText": ".bqLuiG .drawer__panel { width: 100%; transform: translateY(calc(-100%)); padding: 2rem 0px; }",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".bqLuiG .drawer__panelHeader",
          "cssText": ".bqLuiG .drawer__panelHeader { background: none; max-width: 1024px; margin: auto; -webkit-box-pack: justify; justify-content: space-between; padding: 0px 1rem; }",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".bqLuiG .drawer__panelHeader .drawer__panelHeaderClose",
          "cssText": ".bqLuiG .drawer__panelHeader .drawer__panelHeaderClose { background: var(--ipt-accent1-bg, rgb(245,197,24)); color: var(--ipt-on-accent1-color, rgb(0,0,0)); }",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".bqLuiG .drawer__panelHeader .drawer__panelHeaderClose:hover",
          "cssText": ".bqLuiG .drawer__panelHeader .drawer__panelHeaderClose:hover { color: var(--ipt-on-accent1-color, rgb(0,0,0)); }",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".bqLuiG .drawer__panelContent",
          "cssText": ".bqLuiG .drawer__panelContent { max-width: 1024px; margin: auto; }",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".bqLuiG .drawer-logo",
          "cssText": ".bqLuiG .drawer-logo { display: inline; }",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".euaRkO",
          "cssText": ".euaRkO { display: flex; -webkit-box-align: center; align-items: center; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".euaRkO",
          "cssText": ".euaRkO { display: flex; -webkit-box-align: center; align-items: center; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dQggbk",
          "cssText": ".dQggbk { padding: 0px; -webkit-font-smoothing: unset; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dQggbk .ipc-btn__text",
          "cssText": ".dQggbk .ipc-btn__text { width: 100%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dQggbk .navlsl__item",
          "cssText": ".dQggbk .navlsl__item { color: var(--ipt-base-color, rgb(255,255,255)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dQggbk .navlsl__itemTitle",
          "cssText": ".dQggbk .navlsl__itemTitle { font-family: var(--ipt-font-family); font-size: var(--ipt-type-overline-size, .75rem); font-weight: var(--ipt-type-overline-weight, 600); -webkit-font-smoothing: antialiased; letter-spacing: var(--ipt-type-overline-letterSpacing, .16667em); line-height: var(--ipt-type-overline-lineHeight, 1rem); text-transform: var(--ipt-type-overline-textTransform, uppercase); display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dQggbk .navlsl__itemContent",
          "cssText": ".dQggbk .navlsl__itemContent { font-family: var(--ipt-font-family); font-size: var(--ipt-type-bodySmall-size, .875rem); font-weight: var(--ipt-type-bodySmall-weight, 400); letter-spacing: var(--ipt-type-bodySmall-letterSpacing, .01786em); line-height: var(--ipt-type-bodySmall-lineHeight, 1.25rem); text-transform: var(--ipt-type-bodySmall-textTransform, none); margin-top: 0.25rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dQggbk .navlsl_icon",
          "cssText": ".dQggbk .navlsl_icon { opacity: 0.5; transition: opacity 0.2s; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dQggbk::before, .dQggbk::after",
          "cssText": ".dQggbk::before, .dQggbk::after { background: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dQggbk:hover .navlsl_icon",
          "cssText": ".dQggbk:hover .navlsl_icon { opacity: 1; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dQggbk",
          "cssText": ".dQggbk { padding: 0px; -webkit-font-smoothing: unset; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dQggbk .ipc-btn__text",
          "cssText": ".dQggbk .ipc-btn__text { width: 100%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dQggbk .navlsl__item",
          "cssText": ".dQggbk .navlsl__item { color: var(--ipt-base-color, rgb(255,255,255)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dQggbk .navlsl__itemTitle",
          "cssText": ".dQggbk .navlsl__itemTitle { font-family: var(--ipt-font-family); font-size: var(--ipt-type-overline-size, .75rem); font-weight: var(--ipt-type-overline-weight, 600); -webkit-font-smoothing: antialiased; letter-spacing: var(--ipt-type-overline-letterSpacing, .16667em); line-height: var(--ipt-type-overline-lineHeight, 1rem); text-transform: var(--ipt-type-overline-textTransform, uppercase); display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dQggbk .navlsl__itemContent",
          "cssText": ".dQggbk .navlsl__itemContent { font-family: var(--ipt-font-family); font-size: var(--ipt-type-bodySmall-size, .875rem); font-weight: var(--ipt-type-bodySmall-weight, 400); letter-spacing: var(--ipt-type-bodySmall-letterSpacing, .01786em); line-height: var(--ipt-type-bodySmall-lineHeight, 1.25rem); text-transform: var(--ipt-type-bodySmall-textTransform, none); margin-top: 0.25rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dQggbk .navlsl_icon",
          "cssText": ".dQggbk .navlsl_icon { opacity: 0.5; transition: opacity 0.2s; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dQggbk::before, .dQggbk::after",
          "cssText": ".dQggbk::before, .dQggbk::after { background: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dQggbk:hover .navlsl_icon",
          "cssText": ".dQggbk:hover .navlsl_icon { opacity: 1; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".fXgTeU .navlcl__divider",
          "cssText": ".fXgTeU .navlcl__divider { list-style: none; margin: 0.5rem 0px; opacity: 0.2; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".fXgTeU .navlcl__proLink",
          "cssText": ".fXgTeU .navlcl__proLink { margin-top: 1.5rem; padding: 1rem; height: auto; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".fXgTeU .navlcl__proLink:hover, .fXgTeU .navlcl__tvLink:hover, .fXgTeU .navlcl__languageLink:hover",
          "cssText": ".fXgTeU .navlcl__proLink:hover, .fXgTeU .navlcl__tvLink:hover, .fXgTeU .navlcl__languageLink:hover { background: rgba( var(--ipt-on-baseAlt-color, rgb(255,255,255)),var(--ipt-baseAlt-hover-opacity, 0.08) ); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 1024px) {\n  .fXgTeU { display: flex; flex-wrap: wrap; }\n  .fXgTeU .navlcl__tvLink { display: none; }\n  .fXgTeU .navlcl__proLink { align-self: flex-start; display: none; }\n  .fXgTeU .navlcl__languageLink { display: none; }\n  .fXgTeU:focus { outline: var(--ipt-focus-outline-on-baseAlt); outline-offset: 1px; }\n}",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".fXgTeU",
          "cssText": ".fXgTeU { display: flex; flex-wrap: wrap; }",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".fXgTeU .navlcl__tvLink",
          "cssText": ".fXgTeU .navlcl__tvLink { display: none; }",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".fXgTeU .navlcl__proLink",
          "cssText": ".fXgTeU .navlcl__proLink { align-self: flex-start; display: none; }",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".fXgTeU .navlcl__languageLink",
          "cssText": ".fXgTeU .navlcl__languageLink { display: none; }",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".fXgTeU:focus",
          "cssText": ".fXgTeU:focus { outline: var(--ipt-focus-outline-on-baseAlt); outline-offset: 1px; }",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".fXgTeU .navlcl__divider",
          "cssText": ".fXgTeU .navlcl__divider { list-style: none; margin: 0.5rem 0px; opacity: 0.2; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".fXgTeU .navlcl__proLink",
          "cssText": ".fXgTeU .navlcl__proLink { margin-top: 1.5rem; padding: 1rem; height: auto; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".fXgTeU .navlcl__proLink:hover, .fXgTeU .navlcl__tvLink:hover, .fXgTeU .navlcl__languageLink:hover",
          "cssText": ".fXgTeU .navlcl__proLink:hover, .fXgTeU .navlcl__tvLink:hover, .fXgTeU .navlcl__languageLink:hover { background: rgba( var(--ipt-on-baseAlt-color, rgb(255,255,255)),var(--ipt-baseAlt-hover-opacity, 0.08) ); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 1024px) {\n  .fXgTeU { display: flex; flex-wrap: wrap; }\n  .fXgTeU .navlcl__tvLink { display: none; }\n  .fXgTeU .navlcl__proLink { align-self: flex-start; display: none; }\n  .fXgTeU .navlcl__languageLink { display: none; }\n  .fXgTeU:focus { outline: var(--ipt-focus-outline-on-baseAlt); outline-offset: 1px; }\n}",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".fXgTeU",
          "cssText": ".fXgTeU { display: flex; flex-wrap: wrap; }",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".fXgTeU .navlcl__tvLink",
          "cssText": ".fXgTeU .navlcl__tvLink { display: none; }",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".fXgTeU .navlcl__proLink",
          "cssText": ".fXgTeU .navlcl__proLink { align-self: flex-start; display: none; }",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".fXgTeU .navlcl__languageLink",
          "cssText": ".fXgTeU .navlcl__languageLink { display: none; }",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".fXgTeU:focus",
          "cssText": ".fXgTeU:focus { outline: var(--ipt-focus-outline-on-baseAlt); outline-offset: 1px; }",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".bntmiJ",
          "cssText": ".bntmiJ { font-family: var(--ipt-font-family); font-size: var(--ipt-type-bodySmall-size, .875rem); font-weight: var(--ipt-type-bodySmall-weight, 400); letter-spacing: var(--ipt-type-bodySmall-letterSpacing, .01786em); line-height: var(--ipt-type-bodySmall-lineHeight, 1.25rem); text-transform: var(--ipt-type-bodySmall-textTransform, none); display: flex; flex-direction: column; -webkit-box-pack: center; justify-content: center; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".bntmiJ",
          "cssText": ".bntmiJ { font-family: var(--ipt-font-family); font-size: var(--ipt-type-bodySmall-size, .875rem); font-weight: var(--ipt-type-bodySmall-weight, 400); letter-spacing: var(--ipt-type-bodySmall-letterSpacing, .01786em); line-height: var(--ipt-type-bodySmall-lineHeight, 1.25rem); text-transform: var(--ipt-type-bodySmall-textTransform, none); display: flex; flex-direction: column; -webkit-box-pack: center; justify-content: center; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hxDqWZ",
          "cssText": ".hxDqWZ { margin-top: 0.25rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hxDqWZ",
          "cssText": ".hxDqWZ { margin-top: 0.25rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".iJXtYf",
          "cssText": ".iJXtYf { display: flex; flex-direction: column; order: 0; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 1024px) {\n  .iJXtYf { order: 1; }\n}",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".iJXtYf",
          "cssText": ".iJXtYf { order: 1; }",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".iJXtYf",
          "cssText": ".iJXtYf { display: flex; flex-direction: column; order: 0; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 1024px) {\n  .iJXtYf { order: 1; }\n}",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".iJXtYf",
          "cssText": ".iJXtYf { order: 1; }",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ewhCrq",
          "cssText": ".ewhCrq { flex-shrink: 0; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ewhCrq",
          "cssText": ".ewhCrq { flex-shrink: 0; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".jkpFlL .disabled",
          "cssText": ".jkpFlL .disabled { pointer-events: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".jkpFlL .disabled",
          "cssText": ".jkpFlL .disabled { pointer-events: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".kReiUl",
          "cssText": ".kReiUl { font-family: var(--ipt-font-family); font-size: var(--ipt-type-headline6-size, 1.25rem); font-weight: var(--ipt-type-headline6-weight, 600); -webkit-font-smoothing: antialiased; letter-spacing: var(--ipt-type-headline6-letterSpacing, .0125em); line-height: var(--ipt-type-headline6-lineHeight, 1.5rem); text-transform: var(--ipt-type-headline6-textTransform, none); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".kReiUl",
          "cssText": ".kReiUl { font-family: var(--ipt-font-family); font-size: var(--ipt-type-headline6-size, 1.25rem); font-weight: var(--ipt-type-headline6-weight, 600); -webkit-font-smoothing: antialiased; letter-spacing: var(--ipt-type-headline6-letterSpacing, .0125em); line-height: var(--ipt-type-headline6-lineHeight, 1.5rem); text-transform: var(--ipt-type-headline6-textTransform, none); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hlOjAe",
          "cssText": ".hlOjAe { order: 7; display: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 1024px) {\n  .hlOjAe { order: 8; display: flex; flex-direction: column; }\n}",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hlOjAe",
          "cssText": ".hlOjAe { order: 8; display: flex; flex-direction: column; }",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hlOjAe",
          "cssText": ".hlOjAe { order: 7; display: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 1024px) {\n  .hlOjAe { order: 8; display: flex; flex-direction: column; }\n}",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hlOjAe",
          "cssText": ".hlOjAe { order: 8; display: flex; flex-direction: column; }",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".AHcUU",
          "cssText": ".AHcUU { display: inline-flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".AHcUU .navbar__flyout__text-button-after-mobile",
          "cssText": ".AHcUU .navbar__flyout__text-button-after-mobile { display: inline-flex; padding-right: 0.25rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (max-width: 600px) {\n  .AHcUU .navbar__flyout__text-button-after-mobile { padding-left: 0px; }\n}",
          "urls": [],
          "group": "screen and (max-width: 600px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "600px",
                "600",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".AHcUU .navbar__flyout__text-button-after-mobile",
          "cssText": ".AHcUU .navbar__flyout__text-button-after-mobile { padding-left: 0px; }",
          "urls": [],
          "group": "screen and (max-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".AHcUU .disabled",
          "cssText": ".AHcUU .disabled { pointer-events: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".AHcUU",
          "cssText": ".AHcUU { display: inline-flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".AHcUU .navbar__flyout__text-button-after-mobile",
          "cssText": ".AHcUU .navbar__flyout__text-button-after-mobile { display: inline-flex; padding-right: 0.25rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (max-width: 600px) {\n  .AHcUU .navbar__flyout__text-button-after-mobile { padding-left: 0px; }\n}",
          "urls": [],
          "group": "screen and (max-width: 600px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "600px",
                "600",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".AHcUU .navbar__flyout__text-button-after-mobile",
          "cssText": ".AHcUU .navbar__flyout__text-button-after-mobile { padding-left: 0px; }",
          "urls": [],
          "group": "screen and (max-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".AHcUU .disabled",
          "cssText": ".AHcUU .disabled { pointer-events: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dbwWEz",
          "cssText": ".dbwWEz { position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dbwWEz .searchCatSelector-menu",
          "cssText": ".dbwWEz .searchCatSelector-menu { top: 100%; position: absolute; margin-top: 0.25rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dbwWEz .searchCatSelector__item-divider",
          "cssText": ".dbwWEz .searchCatSelector__item-divider { background: var(--ipt-baseAlt-border-color, rgba(255,255,255,0.2)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dbwWEz .searchCatSelector .searchCatSelector__item",
          "cssText": ".dbwWEz .searchCatSelector .searchCatSelector__item { color: var(--ipt-on-baseAlt-textPrimary-color, rgba(255,255,255,1)); transition: color 0.15s; cursor: pointer; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dbwWEz .searchCatSelector .searchCatSelector__item .searchCatSelector__itemIcon",
          "cssText": ".dbwWEz .searchCatSelector .searchCatSelector__item .searchCatSelector__itemIcon { margin-right: 0.75rem; opacity: 0.5; transition: opacity 0.2s; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dbwWEz .searchCatSelector .searchCatSelector__item:hover .searchCatSelector__itemIcon, .dbwWEz .searchCatSelector .searchCatSelector__item:focus .searchCatSelector__itemIcon, .dbwWEz .searchCatSelector .searchCatSelector__item.searchCatSelector__itemSelected .searchCatSelector__itemIcon",
          "cssText": ".dbwWEz .searchCatSelector .searchCatSelector__item:hover .searchCatSelector__itemIcon, .dbwWEz .searchCatSelector .searchCatSelector__item:focus .searchCatSelector__itemIcon, .dbwWEz .searchCatSelector .searchCatSelector__item.searchCatSelector__itemSelected .searchCatSelector__itemIcon { opacity: 1; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dbwWEz .searchCatSelector .searchCatSelector__item.searchCatSelector__itemSelected",
          "cssText": ".dbwWEz .searchCatSelector .searchCatSelector__item.searchCatSelector__itemSelected { color: var(--ipt-on-base-accent1-color, rgb(245,197,24)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dbwWEz",
          "cssText": ".dbwWEz { position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dbwWEz .searchCatSelector-menu",
          "cssText": ".dbwWEz .searchCatSelector-menu { top: 100%; position: absolute; margin-top: 0.25rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dbwWEz .searchCatSelector__item-divider",
          "cssText": ".dbwWEz .searchCatSelector__item-divider { background: var(--ipt-baseAlt-border-color, rgba(255,255,255,0.2)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dbwWEz .searchCatSelector .searchCatSelector__item",
          "cssText": ".dbwWEz .searchCatSelector .searchCatSelector__item { color: var(--ipt-on-baseAlt-textPrimary-color, rgba(255,255,255,1)); transition: color 0.15s; cursor: pointer; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dbwWEz .searchCatSelector .searchCatSelector__item .searchCatSelector__itemIcon",
          "cssText": ".dbwWEz .searchCatSelector .searchCatSelector__item .searchCatSelector__itemIcon { margin-right: 0.75rem; opacity: 0.5; transition: opacity 0.2s; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dbwWEz .searchCatSelector .searchCatSelector__item:hover .searchCatSelector__itemIcon, .dbwWEz .searchCatSelector .searchCatSelector__item:focus .searchCatSelector__itemIcon, .dbwWEz .searchCatSelector .searchCatSelector__item.searchCatSelector__itemSelected .searchCatSelector__itemIcon",
          "cssText": ".dbwWEz .searchCatSelector .searchCatSelector__item:hover .searchCatSelector__itemIcon, .dbwWEz .searchCatSelector .searchCatSelector__item:focus .searchCatSelector__itemIcon, .dbwWEz .searchCatSelector .searchCatSelector__item.searchCatSelector__itemSelected .searchCatSelector__itemIcon { opacity: 1; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dbwWEz .searchCatSelector .searchCatSelector__item.searchCatSelector__itemSelected",
          "cssText": ".dbwWEz .searchCatSelector .searchCatSelector__item.searchCatSelector__itemSelected { color: var(--ipt-on-base-accent1-color, rgb(245,197,24)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".bVjXEB",
          "cssText": ".bVjXEB { position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".bVjXEB.bVjXEB.searchCatSelector-menuWrapper .searchCatSelector-menu",
          "cssText": ".bVjXEB.bVjXEB.searchCatSelector-menuWrapper .searchCatSelector-menu { left: 0px; right: auto; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".bVjXEB .searchCatSelector-button",
          "cssText": ".bVjXEB .searchCatSelector-button { display: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".bVjXEB .searchCatSelector__opener",
          "cssText": ".bVjXEB .searchCatSelector__opener { border-radius: 2px 0px 0px 2px; padding: 0px 0.25rem 0px 0.75rem; min-height: 32px; height: 20px; border-right: 1px solid rgba(0, 0, 0, 0.3); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".bVjXEB .searchCatSelector__opener svg",
          "cssText": ".bVjXEB .searchCatSelector__opener svg { margin: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".bVjXEB.searchCatSelector-all-breakpoints .searchCatSelector-button",
          "cssText": ".bVjXEB.searchCatSelector-all-breakpoints .searchCatSelector-button { display: inline-flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".bVjXEB .searchCatSelector-button-post-icon",
          "cssText": ".bVjXEB .searchCatSelector-button-post-icon { transition: transform 0.2s; transform: rotateX(0deg); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".bVjXEB.searchCatSelector-isVisible .searchCatSelector-button-post-icon",
          "cssText": ".bVjXEB.searchCatSelector-isVisible .searchCatSelector-button-post-icon { transform: rotateX(180deg); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".bVjXEB",
          "cssText": ".bVjXEB { position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".bVjXEB.bVjXEB.searchCatSelector-menuWrapper .searchCatSelector-menu",
          "cssText": ".bVjXEB.bVjXEB.searchCatSelector-menuWrapper .searchCatSelector-menu { left: 0px; right: auto; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".bVjXEB .searchCatSelector-button",
          "cssText": ".bVjXEB .searchCatSelector-button { display: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".bVjXEB .searchCatSelector__opener",
          "cssText": ".bVjXEB .searchCatSelector__opener { border-radius: 2px 0px 0px 2px; padding: 0px 0.25rem 0px 0.75rem; min-height: 32px; height: 20px; border-right: 1px solid rgba(0, 0, 0, 0.3); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".bVjXEB .searchCatSelector__opener svg",
          "cssText": ".bVjXEB .searchCatSelector__opener svg { margin: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".bVjXEB.searchCatSelector-all-breakpoints .searchCatSelector-button",
          "cssText": ".bVjXEB.searchCatSelector-all-breakpoints .searchCatSelector-button { display: inline-flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".bVjXEB .searchCatSelector-button-post-icon",
          "cssText": ".bVjXEB .searchCatSelector-button-post-icon { transition: transform 0.2s; transform: rotateX(0deg); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".bVjXEB.searchCatSelector-isVisible .searchCatSelector-button-post-icon",
          "cssText": ".bVjXEB.searchCatSelector-isVisible .searchCatSelector-button-post-icon { transform: rotateX(180deg); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".fwjvpb",
          "cssText": ".fwjvpb { position: absolute; left: -99999px; height: 1px; width: 1px; overflow: hidden; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".fwjvpb",
          "cssText": ".fwjvpb { position: absolute; left: -99999px; height: 1px; width: 1px; overflow: hidden; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ccCXQc li:first-child > .searchResult",
          "cssText": ".ccCXQc li:first-child > .searchResult { border-top: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ccCXQc .searchTypeahead__input",
          "cssText": ".ccCXQc .searchTypeahead__input { font-family: var(--ipt-font-family); font-size: var(--ipt-type-body-size, 1rem); font-weight: var(--ipt-type-body-weight, 400); letter-spacing: var(--ipt-type-body-letterSpacing, .03125em); line-height: var(--ipt-type-body-lineHeight, 1.5rem); text-transform: var(--ipt-type-body-textTransform, none); color: var(--ipt-on-baseAlt-color, rgb(255,255,255)); caret-color: var(--ipt-on-baseAlt-color, rgb(255,255,255)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 600px) {\n  .ccCXQc .searchTypeahead__input { font-family: var(--ipt-font-family); font-size: var(--ipt-type-bodySmall-size, .875rem); font-weight: var(--ipt-type-bodySmall-weight, 400); letter-spacing: var(--ipt-type-bodySmall-letterSpacing, .01786em); line-height: var(--ipt-type-bodySmall-lineHeight, 1.25rem); text-transform: var(--ipt-type-bodySmall-textTransform, none); color: var(--ipt-on-base-textPrimary-color, rgba(0,0,0,0.87)); caret-color: var(--ipt-on-base-textSecondary-color, rgba(0,0,0,0.54)); }\n}",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ccCXQc .searchTypeahead__input",
          "cssText": ".ccCXQc .searchTypeahead__input { font-family: var(--ipt-font-family); font-size: var(--ipt-type-bodySmall-size, .875rem); font-weight: var(--ipt-type-bodySmall-weight, 400); letter-spacing: var(--ipt-type-bodySmall-letterSpacing, .01786em); line-height: var(--ipt-type-bodySmall-lineHeight, 1.25rem); text-transform: var(--ipt-type-bodySmall-textTransform, none); color: var(--ipt-on-base-textPrimary-color, rgba(0,0,0,0.87)); caret-color: var(--ipt-on-base-textSecondary-color, rgba(0,0,0,0.54)); }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ccCXQc .searchTypeahead__input::-webkit-input-placeholder",
          "cssText": ".ccCXQc .searchTypeahead__input::-webkit-input-placeholder { color: var(--ipt-on-baseAlt-textHint-color, rgba(255,255,255,0.5)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ccCXQc .searchTypeahead__input::placeholder",
          "cssText": ".ccCXQc .searchTypeahead__input::placeholder { color: var(--ipt-on-baseAlt-textHint-color, rgba(255,255,255,0.5)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ccCXQc li:first-child > .searchResult",
          "cssText": ".ccCXQc li:first-child > .searchResult { border-top: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ccCXQc .searchTypeahead__input",
          "cssText": ".ccCXQc .searchTypeahead__input { font-family: var(--ipt-font-family); font-size: var(--ipt-type-body-size, 1rem); font-weight: var(--ipt-type-body-weight, 400); letter-spacing: var(--ipt-type-body-letterSpacing, .03125em); line-height: var(--ipt-type-body-lineHeight, 1.5rem); text-transform: var(--ipt-type-body-textTransform, none); color: var(--ipt-on-baseAlt-color, rgb(255,255,255)); caret-color: var(--ipt-on-baseAlt-color, rgb(255,255,255)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 600px) {\n  .ccCXQc .searchTypeahead__input { font-family: var(--ipt-font-family); font-size: var(--ipt-type-bodySmall-size, .875rem); font-weight: var(--ipt-type-bodySmall-weight, 400); letter-spacing: var(--ipt-type-bodySmall-letterSpacing, .01786em); line-height: var(--ipt-type-bodySmall-lineHeight, 1.25rem); text-transform: var(--ipt-type-bodySmall-textTransform, none); color: var(--ipt-on-base-textPrimary-color, rgba(0,0,0,0.87)); caret-color: var(--ipt-on-base-textSecondary-color, rgba(0,0,0,0.54)); }\n}",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ccCXQc .searchTypeahead__input",
          "cssText": ".ccCXQc .searchTypeahead__input { font-family: var(--ipt-font-family); font-size: var(--ipt-type-bodySmall-size, .875rem); font-weight: var(--ipt-type-bodySmall-weight, 400); letter-spacing: var(--ipt-type-bodySmall-letterSpacing, .01786em); line-height: var(--ipt-type-bodySmall-lineHeight, 1.25rem); text-transform: var(--ipt-type-bodySmall-textTransform, none); color: var(--ipt-on-base-textPrimary-color, rgba(0,0,0,0.87)); caret-color: var(--ipt-on-base-textSecondary-color, rgba(0,0,0,0.54)); }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ccCXQc .searchTypeahead__input::-webkit-input-placeholder",
          "cssText": ".ccCXQc .searchTypeahead__input::-webkit-input-placeholder { color: var(--ipt-on-baseAlt-textHint-color, rgba(255,255,255,0.5)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ccCXQc .searchTypeahead__input::placeholder",
          "cssText": ".ccCXQc .searchTypeahead__input::placeholder { color: var(--ipt-on-baseAlt-textHint-color, rgba(255,255,255,0.5)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".WLFG",
          "cssText": ".WLFG { background: var(--ipt-baseAlt-shade1-bg, rgb(31,31,31)); -webkit-box-align: center; align-items: center; display: flex; -webkit-box-flex: 1; flex-grow: 1; margin: 0px; padding: 0px; width: 100%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 600px) {\n  .WLFG.searchform--focused .searchform__submit { background: transparent; opacity: 1; }\n}",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".WLFG.searchform--focused .searchform__submit",
          "cssText": ".WLFG.searchform--focused .searchform__submit { background: transparent; opacity: 1; }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 600px) {\n  .WLFG { transition: border 0.2s, background-color 0.2s, box-shadow 0.2s; background: var(--ipt-base-bg, rgb(255,255,255)); border-radius: var(--ipt-cornerRadius, 4px); }\n  .WLFG.searchform--focused { background: var(--ipt-base-bg, rgb(255,255,255)); outline: none; box-shadow: inset 0 0 0 2px var(--ipt-accent1-color, rgb(245,197,24)); }\n}",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".WLFG",
          "cssText": ".WLFG { transition: border 0.2s, background-color 0.2s, box-shadow 0.2s; background: var(--ipt-base-bg, rgb(255,255,255)); border-radius: var(--ipt-cornerRadius, 4px); }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".WLFG.searchform--focused",
          "cssText": ".WLFG.searchform--focused { background: var(--ipt-base-bg, rgb(255,255,255)); outline: none; box-shadow: inset 0 0 0 2px var(--ipt-accent1-color, rgb(245,197,24)); }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".WLFG .searchform__inputContainer",
          "cssText": ".WLFG .searchform__inputContainer { width: 100%; padding-right: 3.5rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".WLFG .searchform__submit",
          "cssText": ".WLFG .searchform__submit { background: var(--ipt-base-shade1-bg, rgb(250,250,250)); color: var(--ipt-on-base-textSecondary-color, rgba(0,0,0,0.54)); border-radius: var(--ipt-cornerRadius, 4px); position: absolute; right: 0.35rem; min-width: 2rem; cursor: pointer; top: 0.35rem; transition: 0.2s; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 600px) {\n  .WLFG .searchform__submit { background: var(--ipt-base-bg, rgb(255,255,255)); }\n}",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".WLFG .searchform__submit",
          "cssText": ".WLFG .searchform__submit { background: var(--ipt-base-bg, rgb(255,255,255)); }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".WLFG .imdb-header-search__input",
          "cssText": ".WLFG .imdb-header-search__input { background: transparent; -webkit-box-flex: 1; flex-grow: 1; outline: none; padding: 1rem 1rem 1rem 0.75rem; width: 100%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 600px) {\n  .WLFG .imdb-header-search__input { padding: 0.375em 0px 0.375rem 0.5rem; }\n}",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".WLFG .imdb-header-search__input",
          "cssText": ".WLFG .imdb-header-search__input { padding: 0.375em 0px 0.375rem 0.5rem; }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".WLFG",
          "cssText": ".WLFG { background: var(--ipt-baseAlt-shade1-bg, rgb(31,31,31)); -webkit-box-align: center; align-items: center; display: flex; -webkit-box-flex: 1; flex-grow: 1; margin: 0px; padding: 0px; width: 100%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 600px) {\n  .WLFG.searchform--focused .searchform__submit { background: transparent; opacity: 1; }\n}",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".WLFG.searchform--focused .searchform__submit",
          "cssText": ".WLFG.searchform--focused .searchform__submit { background: transparent; opacity: 1; }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 600px) {\n  .WLFG { transition: border 0.2s, background-color 0.2s, box-shadow 0.2s; background: var(--ipt-base-bg, rgb(255,255,255)); border-radius: var(--ipt-cornerRadius, 4px); }\n  .WLFG.searchform--focused { background: var(--ipt-base-bg, rgb(255,255,255)); outline: none; box-shadow: inset 0 0 0 2px var(--ipt-accent1-color, rgb(245,197,24)); }\n}",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".WLFG",
          "cssText": ".WLFG { transition: border 0.2s, background-color 0.2s, box-shadow 0.2s; background: var(--ipt-base-bg, rgb(255,255,255)); border-radius: var(--ipt-cornerRadius, 4px); }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".WLFG.searchform--focused",
          "cssText": ".WLFG.searchform--focused { background: var(--ipt-base-bg, rgb(255,255,255)); outline: none; box-shadow: inset 0 0 0 2px var(--ipt-accent1-color, rgb(245,197,24)); }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".WLFG .searchform__inputContainer",
          "cssText": ".WLFG .searchform__inputContainer { width: 100%; padding-right: 3.5rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".WLFG .searchform__submit",
          "cssText": ".WLFG .searchform__submit { background: var(--ipt-base-shade1-bg, rgb(250,250,250)); color: var(--ipt-on-base-textSecondary-color, rgba(0,0,0,0.54)); border-radius: var(--ipt-cornerRadius, 4px); position: absolute; right: 0.35rem; min-width: 2rem; cursor: pointer; top: 0.35rem; transition: 0.2s; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 600px) {\n  .WLFG .searchform__submit { background: var(--ipt-base-bg, rgb(255,255,255)); }\n}",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".WLFG .searchform__submit",
          "cssText": ".WLFG .searchform__submit { background: var(--ipt-base-bg, rgb(255,255,255)); }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".WLFG .imdb-header-search__input",
          "cssText": ".WLFG .imdb-header-search__input { background: transparent; -webkit-box-flex: 1; flex-grow: 1; outline: none; padding: 1rem 1rem 1rem 0.75rem; width: 100%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 600px) {\n  .WLFG .imdb-header-search__input { padding: 0.375em 0px 0.375rem 0.5rem; }\n}",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".WLFG .imdb-header-search__input",
          "cssText": ".WLFG .imdb-header-search__input { padding: 0.375em 0px 0.375rem 0.5rem; }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".iemiob",
          "cssText": ".iemiob { -webkit-box-align: center; align-items: center; display: flex; left: 0px; margin: 0px; min-height: 3.5rem; opacity: 0; transform: translateY(-10px); transition: none; order: 3; pointer-events: none; position: absolute; top: 0px; visibility: hidden; width: 100%; z-index: 1; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".iemiob .sbar",
          "cssText": ".iemiob .sbar { width: 100%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".iemiob .imdb-header-search__state-closer",
          "cssText": ".iemiob .imdb-header-search__state-closer { transform: scale(0.5); transition: transform 0.2s 0.1s; display: inline; margin: 0.25rem; position: absolute; right: 0px; top: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".iemiob .imdb-header-search__state, .iemiob .imdb-header-search__input, .iemiob .nav-search__search-submit",
          "cssText": ".iemiob .imdb-header-search__state, .iemiob .imdb-header-search__input, .iemiob .nav-search__search-submit { appearance: none; border: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 600px) {\n  .iemiob { -webkit-box-flex: 1; flex-grow: 1; margin: 0px 0.5rem; padding: 0px; min-height: 2.25rem; order: 3; opacity: 1; visibility: visible; pointer-events: auto; position: relative; transform: translateY(0px); }\n  .iemiob .imdb-header-search__state, .iemiob .nav-search__search-submit { padding: 0px; }\n  .iemiob .nav-search__search-submit:focus { outline: var(--ipt-focus-outline-on-base); outline-offset: 1px; }\n  .iemiob .imdb-header-search__state-closer { display: none; }\n}",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".iemiob",
          "cssText": ".iemiob { -webkit-box-flex: 1; flex-grow: 1; margin: 0px 0.5rem; padding: 0px; min-height: 2.25rem; order: 3; opacity: 1; visibility: visible; pointer-events: auto; position: relative; transform: translateY(0px); }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".iemiob .imdb-header-search__state, .iemiob .nav-search__search-submit",
          "cssText": ".iemiob .imdb-header-search__state, .iemiob .nav-search__search-submit { padding: 0px; }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".iemiob .nav-search__search-submit:focus",
          "cssText": ".iemiob .nav-search__search-submit:focus { outline: var(--ipt-focus-outline-on-base); outline-offset: 1px; }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".iemiob .imdb-header-search__state-closer",
          "cssText": ".iemiob .imdb-header-search__state-closer { display: none; }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".iemiob",
          "cssText": ".iemiob { -webkit-box-align: center; align-items: center; display: flex; left: 0px; margin: 0px; min-height: 3.5rem; opacity: 0; transform: translateY(-10px); transition: none; order: 3; pointer-events: none; position: absolute; top: 0px; visibility: hidden; width: 100%; z-index: 1; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".iemiob .sbar",
          "cssText": ".iemiob .sbar { width: 100%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".iemiob .imdb-header-search__state-closer",
          "cssText": ".iemiob .imdb-header-search__state-closer { transform: scale(0.5); transition: transform 0.2s 0.1s; display: inline; margin: 0.25rem; position: absolute; right: 0px; top: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".iemiob .imdb-header-search__state, .iemiob .imdb-header-search__input, .iemiob .nav-search__search-submit",
          "cssText": ".iemiob .imdb-header-search__state, .iemiob .imdb-header-search__input, .iemiob .nav-search__search-submit { appearance: none; border: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 600px) {\n  .iemiob { -webkit-box-flex: 1; flex-grow: 1; margin: 0px 0.5rem; padding: 0px; min-height: 2.25rem; order: 3; opacity: 1; visibility: visible; pointer-events: auto; position: relative; transform: translateY(0px); }\n  .iemiob .imdb-header-search__state, .iemiob .nav-search__search-submit { padding: 0px; }\n  .iemiob .nav-search__search-submit:focus { outline: var(--ipt-focus-outline-on-base); outline-offset: 1px; }\n  .iemiob .imdb-header-search__state-closer { display: none; }\n}",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".iemiob",
          "cssText": ".iemiob { -webkit-box-flex: 1; flex-grow: 1; margin: 0px 0.5rem; padding: 0px; min-height: 2.25rem; order: 3; opacity: 1; visibility: visible; pointer-events: auto; position: relative; transform: translateY(0px); }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".iemiob .imdb-header-search__state, .iemiob .nav-search__search-submit",
          "cssText": ".iemiob .imdb-header-search__state, .iemiob .nav-search__search-submit { padding: 0px; }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".iemiob .nav-search__search-submit:focus",
          "cssText": ".iemiob .nav-search__search-submit:focus { outline: var(--ipt-focus-outline-on-base); outline-offset: 1px; }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".iemiob .imdb-header-search__state-closer",
          "cssText": ".iemiob .imdb-header-search__state-closer { display: none; }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".bykOMq",
          "cssText": ".bykOMq { color: var(--ipt-on-baseAlt-textPrimary-color, rgba(255,255,255,1)); transition: 0.3s; opacity: 1; transform: scale(1); padding: 0px; margin-left: 1rem; order: 3; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 600px) {\n  .bykOMq { order: 3; }\n  .bykOMq.imdb-header-search__state-opener { display: none; }\n}",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".bykOMq",
          "cssText": ".bykOMq { order: 3; }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".bykOMq.imdb-header-search__state-opener",
          "cssText": ".bykOMq.imdb-header-search__state-opener { display: none; }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".bykOMq",
          "cssText": ".bykOMq { color: var(--ipt-on-baseAlt-textPrimary-color, rgba(255,255,255,1)); transition: 0.3s; opacity: 1; transform: scale(1); padding: 0px; margin-left: 1rem; order: 3; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 600px) {\n  .bykOMq { order: 3; }\n  .bykOMq.imdb-header-search__state-opener { display: none; }\n}",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".bykOMq",
          "cssText": ".bykOMq { order: 3; }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".bykOMq.imdb-header-search__state-opener",
          "cssText": ".bykOMq.imdb-header-search__state-opener { display: none; }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hWDrHB:checked ~ .nav-search__search-container",
          "cssText": ".hWDrHB:checked ~ .nav-search__search-container { background-color: var(--ipt-baseAlt-color, rgb(0,0,0)); opacity: 1; transform: scale(1); transition: opacity 0.2s, transform 0.2s; visibility: visible; pointer-events: auto; z-index: 100; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hWDrHB:checked ~ .nav-search__search-container .nav-search__search-submit",
          "cssText": ".hWDrHB:checked ~ .nav-search__search-container .nav-search__search-submit { display: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hWDrHB:checked ~ .nav-search__search-container .imdb-header-search__state-closer",
          "cssText": ".hWDrHB:checked ~ .nav-search__search-container .imdb-header-search__state-closer { transform: scale(1); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hWDrHB:checked ~ .nav-search__search-container ~ .sc-9e96cb48-1",
          "cssText": ".hWDrHB:checked ~ .nav-search__search-container ~ .sc-9e96cb48-1 { transform: scale(0.5); transition: 0.3s 0.3s; opacity: 0; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hWDrHB:checked ~ .nav-search__search-container",
          "cssText": ".hWDrHB:checked ~ .nav-search__search-container { background-color: var(--ipt-baseAlt-color, rgb(0,0,0)); opacity: 1; transform: scale(1); transition: opacity 0.2s, transform 0.2s; visibility: visible; pointer-events: auto; z-index: 100; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hWDrHB:checked ~ .nav-search__search-container .nav-search__search-submit",
          "cssText": ".hWDrHB:checked ~ .nav-search__search-container .nav-search__search-submit { display: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hWDrHB:checked ~ .nav-search__search-container .imdb-header-search__state-closer",
          "cssText": ".hWDrHB:checked ~ .nav-search__search-container .imdb-header-search__state-closer { transform: scale(1); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hWDrHB:checked ~ .nav-search__search-container ~ .sc-9e96cb48-1",
          "cssText": ".hWDrHB:checked ~ .nav-search__search-container ~ .sc-9e96cb48-1 { transform: scale(0.5); transition: 0.3s 0.3s; opacity: 0; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hcycrt",
          "cssText": ".hcycrt { order: 6; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 600px) {\n  .hcycrt .navbar__user-menu__username-divider, .hcycrt .navbar__user-menu__username { display: none; }\n}",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hcycrt .navbar__user-menu__username-divider, .hcycrt .navbar__user-menu__username",
          "cssText": ".hcycrt .navbar__user-menu__username-divider, .hcycrt .navbar__user-menu__username { display: none; }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 1024px) {\n  .hcycrt { order: 7; }\n}",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hcycrt",
          "cssText": ".hcycrt { order: 7; }",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hcycrt .navbar__user-menu-toggle__button",
          "cssText": ".hcycrt .navbar__user-menu-toggle__button { padding-right: 0.25rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hcycrt .navbar__user-name",
          "cssText": ".hcycrt .navbar__user-name { max-width: 160px; text-overflow: ellipsis; white-space: nowrap; overflow: hidden; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hcycrt .imdb-header__signin-text",
          "cssText": ".hcycrt .imdb-header__signin-text { color: var(--ipt-on-baseAlt-textPrimary-color, rgba(255,255,255,1)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hcycrt .imdb-header__signin-text:focus",
          "cssText": ".hcycrt .imdb-header__signin-text:focus { outline: var(--ipt-focus-outline-on-baseAlt); outline-offset: 1px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hcycrt",
          "cssText": ".hcycrt { order: 6; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 600px) {\n  .hcycrt .navbar__user-menu__username-divider, .hcycrt .navbar__user-menu__username { display: none; }\n}",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hcycrt .navbar__user-menu__username-divider, .hcycrt .navbar__user-menu__username",
          "cssText": ".hcycrt .navbar__user-menu__username-divider, .hcycrt .navbar__user-menu__username { display: none; }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 1024px) {\n  .hcycrt { order: 7; }\n}",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hcycrt",
          "cssText": ".hcycrt { order: 7; }",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hcycrt .navbar__user-menu-toggle__button",
          "cssText": ".hcycrt .navbar__user-menu-toggle__button { padding-right: 0.25rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hcycrt .navbar__user-name",
          "cssText": ".hcycrt .navbar__user-name { max-width: 160px; text-overflow: ellipsis; white-space: nowrap; overflow: hidden; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hcycrt .imdb-header__signin-text",
          "cssText": ".hcycrt .imdb-header__signin-text { color: var(--ipt-on-baseAlt-textPrimary-color, rgba(255,255,255,1)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hcycrt .imdb-header__signin-text:focus",
          "cssText": ".hcycrt .imdb-header__signin-text:focus { outline: var(--ipt-focus-outline-on-baseAlt); outline-offset: 1px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".bExpVV",
          "cssText": ".bExpVV { --ipt-base-rgb: 255,255,255; --ipt-base-bg: rgb(255,255,255); --ipt-base-color: rgb(255,255,255); --ipt-base-shade1-rgb: 250,250,250; --ipt-base-shade1-bg: rgb(250,250,250); --ipt-base-shade1-color: rgb(250,250,250); --ipt-base-shade2-rgb: 240,240,240; --ipt-base-shade2-bg: rgb(240,240,240); --ipt-base-shade2-color: rgb(240,240,240); --ipt-base-shade3-rgb: 255,255,255; --ipt-base-shade3-bg: rgb(255,255,255); --ipt-base-shade3-color: rgb(255,255,255); --ipt-on-base-rgb: 0,0,0; --ipt-on-base-color: rgb(0,0,0); --ipt-on-base-accent1-rgb: 245,197,24; --ipt-on-base-accent1-color: rgb(245,197,24); --ipt-on-base-accent2-rgb: 14,99,190; --ipt-on-base-accent2-color: rgb(14,99,190); --ipt-on-base-accent3-rgb: 189,36,4; --ipt-on-base-accent3-color: rgb(189,36,4); --ipt-on-base-accent4-rgb: 0,138,0; --ipt-on-base-accent4-color: rgb(0,138,0); --ipt-on-base-accent5-rgb: 189,82,0; --ipt-on-base-accent5-color: rgb(189,82,0); --ipt-on-base-accent6-rgb: 140,58,217; --ipt-on-base-accent6-color: rgb(140,58,217); --ipt-on-base-textPrimary-opacity: 0.87; --ipt-on-base-textPrimary-color: rgba(0,0,0,0.87); --ipt-on-base-textSecondary-opacity: 0.54; --ipt-on-base-textSecondary-color: rgba(0,0,0,0.54); --ipt-on-base-textHint-opacity: 0.38; --ipt-on-base-textHint-color: rgba(0,0,0,0.38); --ipt-on-base-textDisabled-opacity: 0.38; --ipt-on-base-textDisabled-color: rgba(0,0,0,0.38); --ipt-on-base-textIcon-opacity: 0.5; --ipt-on-base-textIcon-color: rgba(0,0,0,0.5); --ipt-base-border-opacity: 0.12; --ipt-base-hover-opacity: 0.08; --ipt-base-pressed-opacity: 0.16; --ipt-base-border-color: rgba(0...",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".bExpVV a",
          "cssText": ".bExpVV a { color: inherit; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".bExpVV .navbar__inner",
          "cssText": ".bExpVV .navbar__inner { display: flex; -webkit-box-align: center; align-items: center; -webkit-box-pack: justify; justify-content: space-between; width: 100vw; margin: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 600px) {\n  .bExpVV .navbar__inner { padding: 0px 0.75rem; }\n}",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".bExpVV .navbar__inner",
          "cssText": ".bExpVV .navbar__inner { padding: 0px 0.75rem; }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 1024px) {\n  .bExpVV .navbar__inner { width: 100%; margin: 0px auto; }\n}",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".bExpVV .navbar__inner",
          "cssText": ".bExpVV .navbar__inner { width: 100%; margin: 0px auto; }",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".bExpVV",
          "cssText": ".bExpVV { --ipt-base-rgb: 255,255,255; --ipt-base-bg: rgb(255,255,255); --ipt-base-color: rgb(255,255,255); --ipt-base-shade1-rgb: 250,250,250; --ipt-base-shade1-bg: rgb(250,250,250); --ipt-base-shade1-color: rgb(250,250,250); --ipt-base-shade2-rgb: 240,240,240; --ipt-base-shade2-bg: rgb(240,240,240); --ipt-base-shade2-color: rgb(240,240,240); --ipt-base-shade3-rgb: 255,255,255; --ipt-base-shade3-bg: rgb(255,255,255); --ipt-base-shade3-color: rgb(255,255,255); --ipt-on-base-rgb: 0,0,0; --ipt-on-base-color: rgb(0,0,0); --ipt-on-base-accent1-rgb: 245,197,24; --ipt-on-base-accent1-color: rgb(245,197,24); --ipt-on-base-accent2-rgb: 14,99,190; --ipt-on-base-accent2-color: rgb(14,99,190); --ipt-on-base-accent3-rgb: 189,36,4; --ipt-on-base-accent3-color: rgb(189,36,4); --ipt-on-base-accent4-rgb: 0,138,0; --ipt-on-base-accent4-color: rgb(0,138,0); --ipt-on-base-accent5-rgb: 189,82,0; --ipt-on-base-accent5-color: rgb(189,82,0); --ipt-on-base-accent6-rgb: 140,58,217; --ipt-on-base-accent6-color: rgb(140,58,217); --ipt-on-base-textPrimary-opacity: 0.87; --ipt-on-base-textPrimary-color: rgba(0,0,0,0.87); --ipt-on-base-textSecondary-opacity: 0.54; --ipt-on-base-textSecondary-color: rgba(0,0,0,0.54); --ipt-on-base-textHint-opacity: 0.38; --ipt-on-base-textHint-color: rgba(0,0,0,0.38); --ipt-on-base-textDisabled-opacity: 0.38; --ipt-on-base-textDisabled-color: rgba(0,0,0,0.38); --ipt-on-base-textIcon-opacity: 0.5; --ipt-on-base-textIcon-color: rgba(0,0,0,0.5); --ipt-base-border-opacity: 0.12; --ipt-base-hover-opacity: 0.08; --ipt-base-pressed-opacity: 0.16; --ipt-base-border-color: rgba(0...",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".bExpVV a",
          "cssText": ".bExpVV a { color: inherit; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".bExpVV .navbar__inner",
          "cssText": ".bExpVV .navbar__inner { display: flex; -webkit-box-align: center; align-items: center; -webkit-box-pack: justify; justify-content: space-between; width: 100vw; margin: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 600px) {\n  .bExpVV .navbar__inner { padding: 0px 0.75rem; }\n}",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".bExpVV .navbar__inner",
          "cssText": ".bExpVV .navbar__inner { padding: 0px 0.75rem; }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 1024px) {\n  .bExpVV .navbar__inner { width: 100%; margin: 0px auto; }\n}",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".bExpVV .navbar__inner",
          "cssText": ".bExpVV .navbar__inner { width: 100%; margin: 0px auto; }",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".lmMzIu",
          "cssText": ".lmMzIu { border: 1px solid rgba(255, 255, 255, 0.16); order: 5; width: 1px; height: 2rem; margin: 0px 0.5rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (max-width: 600px) {\n  .lmMzIu { display: none; order: 9; }\n}",
          "urls": [],
          "group": "screen and (max-width: 600px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "600px",
                "600",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".lmMzIu",
          "cssText": ".lmMzIu { display: none; order: 9; }",
          "urls": [],
          "group": "screen and (max-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".lmMzIu",
          "cssText": ".lmMzIu { border: 1px solid rgba(255, 255, 255, 0.16); order: 5; width: 1px; height: 2rem; margin: 0px 0.5rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (max-width: 600px) {\n  .lmMzIu { display: none; order: 9; }\n}",
          "urls": [],
          "group": "screen and (max-width: 600px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "600px",
                "600",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".lmMzIu",
          "cssText": ".lmMzIu { display: none; order: 9; }",
          "urls": [],
          "group": "screen and (max-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".btYHFN",
          "cssText": ".btYHFN { font-family: var(--ipt-font-family); font-size: var(--ipt-type-body-size, 1rem); font-weight: var(--ipt-type-body-weight, 400); letter-spacing: var(--ipt-type-body-letterSpacing, .03125em); line-height: var(--ipt-type-body-lineHeight, 1.5rem); text-transform: var(--ipt-type-body-textTransform, none); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".btYHFN",
          "cssText": ".btYHFN { font-family: var(--ipt-font-family); font-size: var(--ipt-type-body-size, 1rem); font-weight: var(--ipt-type-body-weight, 400); letter-spacing: var(--ipt-type-body-letterSpacing, .03125em); line-height: var(--ipt-type-body-lineHeight, 1.5rem); text-transform: var(--ipt-type-body-textTransform, none); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".klurdg",
          "cssText": ".klurdg { position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".klurdg",
          "cssText": ".klurdg { position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".gRhLOo",
          "cssText": ".gRhLOo { --ipt-base-rgb: 255,255,255; --ipt-base-bg: rgb(255,255,255); --ipt-base-color: rgb(255,255,255); --ipt-base-shade1-rgb: 250,250,250; --ipt-base-shade1-bg: rgb(250,250,250); --ipt-base-shade1-color: rgb(250,250,250); --ipt-base-shade2-rgb: 240,240,240; --ipt-base-shade2-bg: rgb(240,240,240); --ipt-base-shade2-color: rgb(240,240,240); --ipt-base-shade3-rgb: 255,255,255; --ipt-base-shade3-bg: rgb(255,255,255); --ipt-base-shade3-color: rgb(255,255,255); --ipt-on-base-rgb: 0,0,0; --ipt-on-base-color: rgb(0,0,0); --ipt-on-base-accent1-rgb: 245,197,24; --ipt-on-base-accent1-color: rgb(245,197,24); --ipt-on-base-accent2-rgb: 14,99,190; --ipt-on-base-accent2-color: rgb(14,99,190); --ipt-on-base-accent3-rgb: 189,36,4; --ipt-on-base-accent3-color: rgb(189,36,4); --ipt-on-base-accent4-rgb: 0,138,0; --ipt-on-base-accent4-color: rgb(0,138,0); --ipt-on-base-accent5-rgb: 189,82,0; --ipt-on-base-accent5-color: rgb(189,82,0); --ipt-on-base-accent6-rgb: 140,58,217; --ipt-on-base-accent6-color: rgb(140,58,217); --ipt-on-base-textPrimary-opacity: 0.87; --ipt-on-base-textPrimary-color: rgba(0,0,0,0.87); --ipt-on-base-textSecondary-opacity: 0.54; --ipt-on-base-textSecondary-color: rgba(0,0,0,0.54); --ipt-on-base-textHint-opacity: 0.38; --ipt-on-base-textHint-color: rgba(0,0,0,0.38); --ipt-on-base-textDisabled-opacity: 0.38; --ipt-on-base-textDisabled-color: rgba(0,0,0,0.38); --ipt-on-base-textIcon-opacity: 0.5; --ipt-on-base-textIcon-color: rgba(0,0,0,0.5); --ipt-base-border-opacity: 0.12; --ipt-base-hover-opacity: 0.08; --ipt-base-pressed-opacity: 0.16; --ipt-base-border-color: rgba(0...",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".gRhLOo",
          "cssText": ".gRhLOo { --ipt-base-rgb: 255,255,255; --ipt-base-bg: rgb(255,255,255); --ipt-base-color: rgb(255,255,255); --ipt-base-shade1-rgb: 250,250,250; --ipt-base-shade1-bg: rgb(250,250,250); --ipt-base-shade1-color: rgb(250,250,250); --ipt-base-shade2-rgb: 240,240,240; --ipt-base-shade2-bg: rgb(240,240,240); --ipt-base-shade2-color: rgb(240,240,240); --ipt-base-shade3-rgb: 255,255,255; --ipt-base-shade3-bg: rgb(255,255,255); --ipt-base-shade3-color: rgb(255,255,255); --ipt-on-base-rgb: 0,0,0; --ipt-on-base-color: rgb(0,0,0); --ipt-on-base-accent1-rgb: 245,197,24; --ipt-on-base-accent1-color: rgb(245,197,24); --ipt-on-base-accent2-rgb: 14,99,190; --ipt-on-base-accent2-color: rgb(14,99,190); --ipt-on-base-accent3-rgb: 189,36,4; --ipt-on-base-accent3-color: rgb(189,36,4); --ipt-on-base-accent4-rgb: 0,138,0; --ipt-on-base-accent4-color: rgb(0,138,0); --ipt-on-base-accent5-rgb: 189,82,0; --ipt-on-base-accent5-color: rgb(189,82,0); --ipt-on-base-accent6-rgb: 140,58,217; --ipt-on-base-accent6-color: rgb(140,58,217); --ipt-on-base-textPrimary-opacity: 0.87; --ipt-on-base-textPrimary-color: rgba(0,0,0,0.87); --ipt-on-base-textSecondary-opacity: 0.54; --ipt-on-base-textSecondary-color: rgba(0,0,0,0.54); --ipt-on-base-textHint-opacity: 0.38; --ipt-on-base-textHint-color: rgba(0,0,0,0.38); --ipt-on-base-textDisabled-opacity: 0.38; --ipt-on-base-textDisabled-color: rgba(0,0,0,0.38); --ipt-on-base-textIcon-opacity: 0.5; --ipt-on-base-textIcon-color: rgba(0,0,0,0.5); --ipt-base-border-opacity: 0.12; --ipt-base-hover-opacity: 0.08; --ipt-base-pressed-opacity: 0.16; --ipt-base-border-color: rgba(0...",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "body.drawer-bodyLocked",
          "cssText": "body.drawer-bodyLocked { overflow: hidden; position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ghlkuX .item-enter",
          "cssText": ".ghlkuX .item-enter { opacity: 0; transform: translateY(1rem); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ghlkuX .item-enter-active",
          "cssText": ".ghlkuX .item-enter-active { opacity: 1; transform: translateY(0px); transition: 170ms ease-out, opacity 170ms ease-in; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ghlkuX .item-exit",
          "cssText": ".ghlkuX .item-exit { opacity: 1; transform: translateY(0px); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ghlkuX .item-exit-active",
          "cssText": ".ghlkuX .item-exit-active { opacity: 0; transform: translateY(-1rem); transition: 170ms ease-in, opacity 170ms ease-out; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ghlkuX .item-enter",
          "cssText": ".ghlkuX .item-enter { opacity: 0; transform: translateY(1rem); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ghlkuX .item-enter-active",
          "cssText": ".ghlkuX .item-enter-active { opacity: 1; transform: translateY(0px); transition: 170ms ease-out, opacity 170ms ease-in; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ghlkuX .item-exit",
          "cssText": ".ghlkuX .item-exit { opacity: 1; transform: translateY(0px); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ghlkuX .item-exit-active",
          "cssText": ".ghlkuX .item-exit-active { opacity: 0; transform: translateY(-1rem); transition: 170ms ease-in, opacity 170ms ease-out; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".eRoFYl",
          "cssText": ".eRoFYl { background: var(--ipt-baseAlt-bg, rgb(0,0,0)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".eRoFYl",
          "cssText": ".eRoFYl { background: var(--ipt-baseAlt-bg, rgb(0,0,0)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".foGmIn",
          "cssText": ".foGmIn { height: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".foGmIn",
          "cssText": ".foGmIn { height: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (max-width: 600px) {\n  .CJeUG { margin-top: 1rem; }\n}",
          "urls": [],
          "group": "screen and (max-width: 600px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "600px",
                "600",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".CJeUG",
          "cssText": ".CJeUG { margin-top: 1rem; }",
          "urls": [],
          "group": "screen and (max-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (max-width: 600px) {\n  .CJeUG { margin-top: 1rem; }\n}",
          "urls": [],
          "group": "screen and (max-width: 600px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "600px",
                "600",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".CJeUG",
          "cssText": ".CJeUG { margin-top: 1rem; }",
          "urls": [],
          "group": "screen and (max-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".emasSz",
          "cssText": ".emasSz { height: 52px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".emasSz",
          "cssText": ".emasSz { height: 52px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".knGeNP",
          "cssText": ".knGeNP { height: 444px; overflow: hidden; position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 1024px) and (max-width: 1279px) {\n  .knGeNP { height: 339px; }\n}",
          "urls": [],
          "group": "screen and (min-width: 1024px) and (max-width: 1279px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px) and (max-width: 1279px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "max-width",
                "1279px",
                "1024",
                "1279",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".knGeNP",
          "cssText": ".knGeNP { height: 339px; }",
          "urls": [],
          "group": "screen and (min-width: 1024px) and (max-width: 1279px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px) and (max-width: 1279px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "max-width",
                "1279px",
                "1024",
                "1279",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".knGeNP",
          "cssText": ".knGeNP { height: 444px; overflow: hidden; position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 1024px) and (max-width: 1279px) {\n  .knGeNP { height: 339px; }\n}",
          "urls": [],
          "group": "screen and (min-width: 1024px) and (max-width: 1279px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px) and (max-width: 1279px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "max-width",
                "1279px",
                "1024",
                "1279",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".knGeNP",
          "cssText": ".knGeNP { height: 339px; }",
          "urls": [],
          "group": "screen and (min-width: 1024px) and (max-width: 1279px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px) and (max-width: 1279px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "max-width",
                "1279px",
                "1024",
                "1279",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".bywksm",
          "cssText": ".bywksm { position: absolute; inset: 0px; overflow: hidden; background: linear-gradient( 0deg,transparent 0%,transparent 50%,rgba(var(--ipt-baseAlt-shade3-rgb, 18,18,18),0.7) 78%,rgba(var(--ipt-baseAlt-shade3-rgb, 18,18,18),1) 100% ); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".bywksm .editorial-slots",
          "cssText": ".bywksm .editorial-slots { height: 100%; display: flex; flex-direction: column; top: -296px; position: absolute; width: 100%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 1024px) and (max-width: 1279px) {\n  .bywksm .editorial-slots { top: -226px; }\n}",
          "urls": [],
          "group": "screen and (min-width: 1024px) and (max-width: 1279px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px) and (max-width: 1279px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "max-width",
                "1279px",
                "1024",
                "1279",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".bywksm .editorial-slots",
          "cssText": ".bywksm .editorial-slots { top: -226px; }",
          "urls": [],
          "group": "screen and (min-width: 1024px) and (max-width: 1279px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px) and (max-width: 1279px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "max-width",
                "1279px",
                "1024",
                "1279",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".bywksm",
          "cssText": ".bywksm { position: absolute; inset: 0px; overflow: hidden; background: linear-gradient( 0deg,transparent 0%,transparent 50%,rgba(var(--ipt-baseAlt-shade3-rgb, 18,18,18),0.7) 78%,rgba(var(--ipt-baseAlt-shade3-rgb, 18,18,18),1) 100% ); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".bywksm .editorial-slots",
          "cssText": ".bywksm .editorial-slots { height: 100%; display: flex; flex-direction: column; top: -296px; position: absolute; width: 100%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 1024px) and (max-width: 1279px) {\n  .bywksm .editorial-slots { top: -226px; }\n}",
          "urls": [],
          "group": "screen and (min-width: 1024px) and (max-width: 1279px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px) and (max-width: 1279px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "max-width",
                "1279px",
                "1024",
                "1279",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".bywksm .editorial-slots",
          "cssText": ".bywksm .editorial-slots { top: -226px; }",
          "urls": [],
          "group": "screen and (min-width: 1024px) and (max-width: 1279px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px) and (max-width: 1279px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "max-width",
                "1279px",
                "1024",
                "1279",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".jhHgOQ",
          "cssText": ".jhHgOQ { height: 100%; width: 100%; left: 0px; bottom: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".jhHgOQ img",
          "cssText": ".jhHgOQ img { height: 100%; width: 100%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".jhHgOQ",
          "cssText": ".jhHgOQ { height: 100%; width: 100%; left: 0px; bottom: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".jhHgOQ img",
          "cssText": ".jhHgOQ img { height: 100%; width: 100%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ghIPgB",
          "cssText": ".ghIPgB { padding: 0px 16px; flex: 0 0 113px; width: 100%; position: relative; overflow: hidden; transition: 300ms; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 1280px) {\n  .ghIPgB { flex: 0 0 148px; }\n}",
          "urls": [],
          "group": "screen and (min-width: 1280px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1280px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1280px",
                "1280",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ghIPgB",
          "cssText": ".ghIPgB { flex: 0 0 148px; }",
          "urls": [],
          "group": "screen and (min-width: 1280px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1280px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1280px",
                "1280",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ghIPgB.transit-enter",
          "cssText": ".ghIPgB.transit-enter { flex-basis: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ghIPgB.transit-enter-active",
          "cssText": ".ghIPgB.transit-enter-active { flex-basis: 113px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 1280px) {\n  .ghIPgB.transit-enter-active { flex-basis: 148px; }\n}",
          "urls": [],
          "group": "screen and (min-width: 1280px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1280px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1280px",
                "1280",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ghIPgB.transit-enter-active",
          "cssText": ".ghIPgB.transit-enter-active { flex-basis: 148px; }",
          "urls": [],
          "group": "screen and (min-width: 1280px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1280px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1280px",
                "1280",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ghIPgB.transit-exit",
          "cssText": ".ghIPgB.transit-exit { flex-basis: 113px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 1280px) {\n  .ghIPgB.transit-exit { flex-basis: 148px; }\n}",
          "urls": [],
          "group": "screen and (min-width: 1280px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1280px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1280px",
                "1280",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ghIPgB.transit-exit",
          "cssText": ".ghIPgB.transit-exit { flex-basis: 148px; }",
          "urls": [],
          "group": "screen and (min-width: 1280px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1280px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1280px",
                "1280",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ghIPgB.transit-exit-active",
          "cssText": ".ghIPgB.transit-exit-active { flex-basis: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ghIPgB",
          "cssText": ".ghIPgB { padding: 0px 16px; flex: 0 0 113px; width: 100%; position: relative; overflow: hidden; transition: 300ms; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 1280px) {\n  .ghIPgB { flex: 0 0 148px; }\n}",
          "urls": [],
          "group": "screen and (min-width: 1280px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1280px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1280px",
                "1280",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ghIPgB",
          "cssText": ".ghIPgB { flex: 0 0 148px; }",
          "urls": [],
          "group": "screen and (min-width: 1280px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1280px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1280px",
                "1280",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ghIPgB.transit-enter",
          "cssText": ".ghIPgB.transit-enter { flex-basis: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ghIPgB.transit-enter-active",
          "cssText": ".ghIPgB.transit-enter-active { flex-basis: 113px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 1280px) {\n  .ghIPgB.transit-enter-active { flex-basis: 148px; }\n}",
          "urls": [],
          "group": "screen and (min-width: 1280px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1280px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1280px",
                "1280",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ghIPgB.transit-enter-active",
          "cssText": ".ghIPgB.transit-enter-active { flex-basis: 148px; }",
          "urls": [],
          "group": "screen and (min-width: 1280px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1280px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1280px",
                "1280",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ghIPgB.transit-exit",
          "cssText": ".ghIPgB.transit-exit { flex-basis: 113px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 1280px) {\n  .ghIPgB.transit-exit { flex-basis: 148px; }\n}",
          "urls": [],
          "group": "screen and (min-width: 1280px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1280px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1280px",
                "1280",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ghIPgB.transit-exit",
          "cssText": ".ghIPgB.transit-exit { flex-basis: 148px; }",
          "urls": [],
          "group": "screen and (min-width: 1280px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1280px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1280px",
                "1280",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ghIPgB.transit-exit-active",
          "cssText": ".ghIPgB.transit-exit-active { flex-basis: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".BMuAS",
          "cssText": ".BMuAS { left: 16px; bottom: 0px; width: 88px; padding-top: 16px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 1024px) and (max-width: 1279px) {\n  .BMuAS { width: 67px; }\n}",
          "urls": [],
          "group": "screen and (min-width: 1024px) and (max-width: 1279px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px) and (max-width: 1279px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "max-width",
                "1279px",
                "1024",
                "1279",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".BMuAS",
          "cssText": ".BMuAS { width: 67px; }",
          "urls": [],
          "group": "screen and (min-width: 1024px) and (max-width: 1279px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px) and (max-width: 1279px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "max-width",
                "1279px",
                "1024",
                "1279",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".BMuAS",
          "cssText": ".BMuAS { left: 16px; bottom: 0px; width: 88px; padding-top: 16px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 1024px) and (max-width: 1279px) {\n  .BMuAS { width: 67px; }\n}",
          "urls": [],
          "group": "screen and (min-width: 1024px) and (max-width: 1279px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px) and (max-width: 1279px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "max-width",
                "1279px",
                "1024",
                "1279",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".BMuAS",
          "cssText": ".BMuAS { width: 67px; }",
          "urls": [],
          "group": "screen and (min-width: 1024px) and (max-width: 1279px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px) and (max-width: 1279px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "max-width",
                "1279px",
                "1024",
                "1279",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".bYYPGy",
          "cssText": ".bYYPGy { position: absolute; top: 0px; right: 0px; left: 112px; padding: 18px 8px 0px; overflow: hidden; text-decoration: none; color: var(--ipt-on-baseAlt-textSecondary-color, rgba(255,255,255,0.7)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".bYYPGy:hover",
          "cssText": ".bYYPGy:hover { cursor: pointer; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".bYYPGy:hover .editorial-play-icon",
          "cssText": ".bYYPGy:hover .editorial-play-icon { color: var(--ipt-on-base-accent1-color, rgb(245,197,24)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 1024px) and (max-width: 1279px) {\n  .bYYPGy { left: 83px; padding: 16px 8px 0px; overflow: hidden; text-decoration: none; }\n}",
          "urls": [],
          "group": "screen and (min-width: 1024px) and (max-width: 1279px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px) and (max-width: 1279px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "max-width",
                "1279px",
                "1024",
                "1279",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".bYYPGy",
          "cssText": ".bYYPGy { left: 83px; padding: 16px 8px 0px; overflow: hidden; text-decoration: none; }",
          "urls": [],
          "group": "screen and (min-width: 1024px) and (max-width: 1279px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px) and (max-width: 1279px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "max-width",
                "1279px",
                "1024",
                "1279",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".bYYPGy",
          "cssText": ".bYYPGy { position: absolute; top: 0px; right: 0px; left: 112px; padding: 18px 8px 0px; overflow: hidden; text-decoration: none; color: var(--ipt-on-baseAlt-textSecondary-color, rgba(255,255,255,0.7)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".bYYPGy:hover",
          "cssText": ".bYYPGy:hover { cursor: pointer; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".bYYPGy:hover .editorial-play-icon",
          "cssText": ".bYYPGy:hover .editorial-play-icon { color: var(--ipt-on-base-accent1-color, rgb(245,197,24)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 1024px) and (max-width: 1279px) {\n  .bYYPGy { left: 83px; padding: 16px 8px 0px; overflow: hidden; text-decoration: none; }\n}",
          "urls": [],
          "group": "screen and (min-width: 1024px) and (max-width: 1279px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px) and (max-width: 1279px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "max-width",
                "1279px",
                "1024",
                "1279",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".bYYPGy",
          "cssText": ".bYYPGy { left: 83px; padding: 16px 8px 0px; overflow: hidden; text-decoration: none; }",
          "urls": [],
          "group": "screen and (min-width: 1024px) and (max-width: 1279px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px) and (max-width: 1279px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "max-width",
                "1279px",
                "1024",
                "1279",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".isXqyH",
          "cssText": ".isXqyH { flex: 0 1 0%; width: 100%; text-align: left; position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".isXqyH",
          "cssText": ".isXqyH { flex: 0 1 0%; width: 100%; text-align: left; position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".jyKfT",
          "cssText": ".jyKfT { margin-bottom: 3px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".jyKfT.reactions",
          "cssText": ".jyKfT.reactions { display: flex; align-items: flex-end; margin-bottom: 10px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 1024px) and (max-width: 1279px) {\n  .jyKfT.reactions { margin-bottom: 6px; }\n}",
          "urls": [],
          "group": "screen and (min-width: 1024px) and (max-width: 1279px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px) and (max-width: 1279px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "max-width",
                "1279px",
                "1024",
                "1279",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".jyKfT.reactions",
          "cssText": ".jyKfT.reactions { margin-bottom: 6px; }",
          "urls": [],
          "group": "screen and (min-width: 1024px) and (max-width: 1279px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px) and (max-width: 1279px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "max-width",
                "1279px",
                "1024",
                "1279",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".jyKfT",
          "cssText": ".jyKfT { margin-bottom: 3px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".jyKfT.reactions",
          "cssText": ".jyKfT.reactions { display: flex; align-items: flex-end; margin-bottom: 10px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 1024px) and (max-width: 1279px) {\n  .jyKfT.reactions { margin-bottom: 6px; }\n}",
          "urls": [],
          "group": "screen and (min-width: 1024px) and (max-width: 1279px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px) and (max-width: 1279px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "max-width",
                "1279px",
                "1024",
                "1279",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".jyKfT.reactions",
          "cssText": ".jyKfT.reactions { margin-bottom: 6px; }",
          "urls": [],
          "group": "screen and (min-width: 1024px) and (max-width: 1279px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px) and (max-width: 1279px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "max-width",
                "1279px",
                "1024",
                "1279",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".eouIwc",
          "cssText": ".eouIwc { max-height: 40px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".eouIwc",
          "cssText": ".eouIwc { max-height: 40px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".lnHcXK",
          "cssText": ".lnHcXK { text-align: start; text-overflow: ellipsis; overflow: hidden; font-family: var(--ipt-font-family); font-size: var(--ipt-type-subtitle-size, 1rem); -webkit-font-smoothing: antialiased; letter-spacing: var(--ipt-type-subtitle-letterSpacing, .00937em); line-height: var(--ipt-type-subtitle-lineHeight, 1.25rem); text-transform: var(--ipt-type-subtitle-textTransform, none); font-weight: 400; width: 100%; color: var(--ipt-on-baseAlt-color, rgb(255,255,255)); white-space: normal; display: -webkit-box; -webkit-line-clamp: 2; -webkit-box-orient: vertical; max-height: 40px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".lnHcXK",
          "cssText": ".lnHcXK { text-align: start; text-overflow: ellipsis; overflow: hidden; font-family: var(--ipt-font-family); font-size: var(--ipt-type-subtitle-size, 1rem); -webkit-font-smoothing: antialiased; letter-spacing: var(--ipt-type-subtitle-letterSpacing, .00937em); line-height: var(--ipt-type-subtitle-lineHeight, 1.25rem); text-transform: var(--ipt-type-subtitle-textTransform, none); font-weight: 400; width: 100%; color: var(--ipt-on-baseAlt-color, rgb(255,255,255)); white-space: normal; display: -webkit-box; -webkit-line-clamp: 2; -webkit-box-orient: vertical; max-height: 40px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".fIVoFa",
          "cssText": ".fIVoFa { color: var(--ipt-on-baseAlt-textSecondary-color, rgba(255,255,255,0.7)); text-align: start; text-overflow: ellipsis; white-space: nowrap; overflow: hidden; font-family: var(--ipt-font-family); font-size: var(--ipt-type-bodySmall-size, .875rem); font-weight: var(--ipt-type-bodySmall-weight, 400); letter-spacing: var(--ipt-type-bodySmall-letterSpacing, .01786em); line-height: var(--ipt-type-bodySmall-lineHeight, 1.25rem); text-transform: var(--ipt-type-bodySmall-textTransform, none); width: 100%; display: inline-block; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".fIVoFa.reactions",
          "cssText": ".fIVoFa.reactions { display: block; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 1024px) and (max-width: 1279px) {\n  .fIVoFa.reactions { display: none; }\n}",
          "urls": [],
          "group": "screen and (min-width: 1024px) and (max-width: 1279px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px) and (max-width: 1279px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "max-width",
                "1279px",
                "1024",
                "1279",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".fIVoFa.reactions",
          "cssText": ".fIVoFa.reactions { display: none; }",
          "urls": [],
          "group": "screen and (min-width: 1024px) and (max-width: 1279px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px) and (max-width: 1279px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "max-width",
                "1279px",
                "1024",
                "1279",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".fIVoFa",
          "cssText": ".fIVoFa { color: var(--ipt-on-baseAlt-textSecondary-color, rgba(255,255,255,0.7)); text-align: start; text-overflow: ellipsis; white-space: nowrap; overflow: hidden; font-family: var(--ipt-font-family); font-size: var(--ipt-type-bodySmall-size, .875rem); font-weight: var(--ipt-type-bodySmall-weight, 400); letter-spacing: var(--ipt-type-bodySmall-letterSpacing, .01786em); line-height: var(--ipt-type-bodySmall-lineHeight, 1.25rem); text-transform: var(--ipt-type-bodySmall-textTransform, none); width: 100%; display: inline-block; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".fIVoFa.reactions",
          "cssText": ".fIVoFa.reactions { display: block; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 1024px) and (max-width: 1279px) {\n  .fIVoFa.reactions { display: none; }\n}",
          "urls": [],
          "group": "screen and (min-width: 1024px) and (max-width: 1279px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px) and (max-width: 1279px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "max-width",
                "1279px",
                "1024",
                "1279",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".fIVoFa.reactions",
          "cssText": ".fIVoFa.reactions { display: none; }",
          "urls": [],
          "group": "screen and (min-width: 1024px) and (max-width: 1279px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px) and (max-width: 1279px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "max-width",
                "1279px",
                "1024",
                "1279",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".jUhEwl",
          "cssText": ".jUhEwl { margin-left: 0px; margin-top: 4px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 1024px) and (max-width: 1279px) {\n  .jUhEwl { margin-bottom: 0px; margin-top: 2px; }\n}",
          "urls": [],
          "group": "screen and (min-width: 1024px) and (max-width: 1279px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px) and (max-width: 1279px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "max-width",
                "1279px",
                "1024",
                "1279",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".jUhEwl",
          "cssText": ".jUhEwl { margin-bottom: 0px; margin-top: 2px; }",
          "urls": [],
          "group": "screen and (min-width: 1024px) and (max-width: 1279px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px) and (max-width: 1279px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "max-width",
                "1279px",
                "1024",
                "1279",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".jUhEwl",
          "cssText": ".jUhEwl { margin-left: 0px; margin-top: 4px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 1024px) and (max-width: 1279px) {\n  .jUhEwl { margin-bottom: 0px; margin-top: 2px; }\n}",
          "urls": [],
          "group": "screen and (min-width: 1024px) and (max-width: 1279px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px) and (max-width: 1279px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "max-width",
                "1279px",
                "1024",
                "1279",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".jUhEwl",
          "cssText": ".jUhEwl { margin-bottom: 0px; margin-top: 2px; }",
          "urls": [],
          "group": "screen and (min-width: 1024px) and (max-width: 1279px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px) and (max-width: 1279px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "max-width",
                "1279px",
                "1024",
                "1279",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".kWFZjx:not(.reactions)",
          "cssText": ".kWFZjx:not(.reactions) { color: var(--ipt-on-baseAlt-textSecondary-color, rgba(255,255,255,0.7)); text-align: start; text-overflow: ellipsis; white-space: nowrap; overflow: hidden; font-family: var(--ipt-font-family); font-size: var(--ipt-type-bodySmall-size, .875rem); font-weight: var(--ipt-type-bodySmall-weight, 400); letter-spacing: var(--ipt-type-bodySmall-letterSpacing, .01786em); line-height: var(--ipt-type-bodySmall-lineHeight, 1.25rem); text-transform: var(--ipt-type-bodySmall-textTransform, none); display: inline-block; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".kWFZjx.reactions",
          "cssText": ".kWFZjx.reactions { color: var(--ipt-on-baseAlt-textSecondary-color, rgba(255,255,255,0.7)); font-family: var(--ipt-font-family); font-size: var(--ipt-type-bodySmall-size, .875rem); font-weight: var(--ipt-type-bodySmall-weight, 400); letter-spacing: var(--ipt-type-bodySmall-letterSpacing, .01786em); line-height: var(--ipt-type-bodySmall-lineHeight, 1.25rem); text-transform: var(--ipt-type-bodySmall-textTransform, none); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".kWFZjx:not(.reactions)",
          "cssText": ".kWFZjx:not(.reactions) { color: var(--ipt-on-baseAlt-textSecondary-color, rgba(255,255,255,0.7)); text-align: start; text-overflow: ellipsis; white-space: nowrap; overflow: hidden; font-family: var(--ipt-font-family); font-size: var(--ipt-type-bodySmall-size, .875rem); font-weight: var(--ipt-type-bodySmall-weight, 400); letter-spacing: var(--ipt-type-bodySmall-letterSpacing, .01786em); line-height: var(--ipt-type-bodySmall-lineHeight, 1.25rem); text-transform: var(--ipt-type-bodySmall-textTransform, none); display: inline-block; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".kWFZjx.reactions",
          "cssText": ".kWFZjx.reactions { color: var(--ipt-on-baseAlt-textSecondary-color, rgba(255,255,255,0.7)); font-family: var(--ipt-font-family); font-size: var(--ipt-type-bodySmall-size, .875rem); font-weight: var(--ipt-type-bodySmall-weight, 400); letter-spacing: var(--ipt-type-bodySmall-letterSpacing, .01786em); line-height: var(--ipt-type-bodySmall-lineHeight, 1.25rem); text-transform: var(--ipt-type-bodySmall-textTransform, none); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".bTgjsk",
          "cssText": ".bTgjsk { text-overflow: ellipsis; white-space: nowrap; overflow: hidden; font-family: var(--ipt-font-family); font-size: var(--ipt-type-headline6-size, 1.25rem); font-weight: var(--ipt-type-headline6-weight, 600); -webkit-font-smoothing: antialiased; letter-spacing: var(--ipt-type-headline6-letterSpacing, .0125em); line-height: var(--ipt-type-headline6-lineHeight, 1.5rem); text-transform: var(--ipt-type-headline6-textTransform, none); display: block; width: 100%; padding: 4px 0px; color: var(--ipt-on-baseAlt-accent1-color, rgb(245,197,24)); text-align: left; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".bTgjsk",
          "cssText": ".bTgjsk { text-overflow: ellipsis; white-space: nowrap; overflow: hidden; font-family: var(--ipt-font-family); font-size: var(--ipt-type-headline6-size, 1.25rem); font-weight: var(--ipt-type-headline6-weight, 600); -webkit-font-smoothing: antialiased; letter-spacing: var(--ipt-type-headline6-letterSpacing, .0125em); line-height: var(--ipt-type-headline6-lineHeight, 1.5rem); text-transform: var(--ipt-type-headline6-textTransform, none); display: block; width: 100%; padding: 4px 0px; color: var(--ipt-on-baseAlt-accent1-color, rgb(245,197,24)); text-align: left; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".jomZmP",
          "cssText": ".jomZmP { height: 32px; width: 32px; margin-right: 8px; color: var(--ipt-on-baseAlt-color, rgb(255,255,255)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 1024px) and (max-width: 1279px) {\n  .jomZmP.reactions { height: 28px; width: 28px; }\n}",
          "urls": [],
          "group": "screen and (min-width: 1024px) and (max-width: 1279px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px) and (max-width: 1279px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "max-width",
                "1279px",
                "1024",
                "1279",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".jomZmP.reactions",
          "cssText": ".jomZmP.reactions { height: 28px; width: 28px; }",
          "urls": [],
          "group": "screen and (min-width: 1024px) and (max-width: 1279px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px) and (max-width: 1279px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "max-width",
                "1279px",
                "1024",
                "1279",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".jomZmP",
          "cssText": ".jomZmP { height: 32px; width: 32px; margin-right: 8px; color: var(--ipt-on-baseAlt-color, rgb(255,255,255)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 1024px) and (max-width: 1279px) {\n  .jomZmP.reactions { height: 28px; width: 28px; }\n}",
          "urls": [],
          "group": "screen and (min-width: 1024px) and (max-width: 1279px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px) and (max-width: 1279px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "max-width",
                "1279px",
                "1024",
                "1279",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".jomZmP.reactions",
          "cssText": ".jomZmP.reactions { height: 28px; width: 28px; }",
          "urls": [],
          "group": "screen and (min-width: 1024px) and (max-width: 1279px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px) and (max-width: 1279px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "max-width",
                "1279px",
                "1024",
                "1279",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".egXUpe",
          "cssText": ".egXUpe { position: relative; margin: 8px auto; display: flex; -webkit-box-pack: center; justify-content: center; max-width: 1280px; background: var(--ipt-baseAlt-color, rgb(0,0,0)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (max-width: 1024px) {\n  .egXUpe { flex-direction: column; }\n}",
          "urls": [],
          "group": "screen and (max-width: 1024px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".egXUpe",
          "cssText": ".egXUpe { flex-direction: column; }",
          "urls": [],
          "group": "screen and (max-width: 1024px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".egXUpe",
          "cssText": ".egXUpe { position: relative; margin: 8px auto; display: flex; -webkit-box-pack: center; justify-content: center; max-width: 1280px; background: var(--ipt-baseAlt-color, rgb(0,0,0)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (max-width: 1024px) {\n  .egXUpe { flex-direction: column; }\n}",
          "urls": [],
          "group": "screen and (max-width: 1024px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".egXUpe",
          "cssText": ".egXUpe { flex-direction: column; }",
          "urls": [],
          "group": "screen and (max-width: 1024px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".bkgLKi",
          "cssText": ".bkgLKi { flex: 846 1 0%; margin: 0px 8px; position: relative; overflow: hidden; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 1024px) and (max-width: 1279px) {\n  .bkgLKi { flex: 664 1 0%; }\n}",
          "urls": [],
          "group": "screen and (min-width: 1024px) and (max-width: 1279px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px) and (max-width: 1279px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "max-width",
                "1279px",
                "1024",
                "1279",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".bkgLKi",
          "cssText": ".bkgLKi { flex: 664 1 0%; }",
          "urls": [],
          "group": "screen and (min-width: 1024px) and (max-width: 1279px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px) and (max-width: 1279px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "max-width",
                "1279px",
                "1024",
                "1279",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (max-width: 1024px) {\n  .bkgLKi { flex: 1 1 100%; }\n}",
          "urls": [],
          "group": "screen and (max-width: 1024px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".bkgLKi",
          "cssText": ".bkgLKi { flex: 1 1 100%; }",
          "urls": [],
          "group": "screen and (max-width: 1024px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".bkgLKi",
          "cssText": ".bkgLKi { flex: 846 1 0%; margin: 0px 8px; position: relative; overflow: hidden; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 1024px) and (max-width: 1279px) {\n  .bkgLKi { flex: 664 1 0%; }\n}",
          "urls": [],
          "group": "screen and (min-width: 1024px) and (max-width: 1279px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px) and (max-width: 1279px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "max-width",
                "1279px",
                "1024",
                "1279",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".bkgLKi",
          "cssText": ".bkgLKi { flex: 664 1 0%; }",
          "urls": [],
          "group": "screen and (min-width: 1024px) and (max-width: 1279px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px) and (max-width: 1279px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "max-width",
                "1279px",
                "1024",
                "1279",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (max-width: 1024px) {\n  .bkgLKi { flex: 1 1 100%; }\n}",
          "urls": [],
          "group": "screen and (max-width: 1024px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".bkgLKi",
          "cssText": ".bkgLKi { flex: 1 1 100%; }",
          "urls": [],
          "group": "screen and (max-width: 1024px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ftSovk",
          "cssText": ".ftSovk { flex: 402 1 0%; margin: 0px 8px 0px 4px; position: relative; overflow: hidden; display: flex; flex-direction: column; -webkit-box-pack: justify; justify-content: space-between; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 1024px) and (max-width: 1279px) {\n  .ftSovk { flex: 328 1 0%; }\n}",
          "urls": [],
          "group": "screen and (min-width: 1024px) and (max-width: 1279px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px) and (max-width: 1279px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "max-width",
                "1279px",
                "1024",
                "1279",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ftSovk",
          "cssText": ".ftSovk { flex: 328 1 0%; }",
          "urls": [],
          "group": "screen and (min-width: 1024px) and (max-width: 1279px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px) and (max-width: 1279px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "max-width",
                "1279px",
                "1024",
                "1279",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (max-width: 1024px) {\n  .ftSovk { flex: 0 1 0%; }\n}",
          "urls": [],
          "group": "screen and (max-width: 1024px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ftSovk",
          "cssText": ".ftSovk { flex: 0 1 0%; }",
          "urls": [],
          "group": "screen and (max-width: 1024px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ftSovk",
          "cssText": ".ftSovk { flex: 402 1 0%; margin: 0px 8px 0px 4px; position: relative; overflow: hidden; display: flex; flex-direction: column; -webkit-box-pack: justify; justify-content: space-between; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 1024px) and (max-width: 1279px) {\n  .ftSovk { flex: 328 1 0%; }\n}",
          "urls": [],
          "group": "screen and (min-width: 1024px) and (max-width: 1279px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px) and (max-width: 1279px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "max-width",
                "1279px",
                "1024",
                "1279",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ftSovk",
          "cssText": ".ftSovk { flex: 328 1 0%; }",
          "urls": [],
          "group": "screen and (min-width: 1024px) and (max-width: 1279px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px) and (max-width: 1279px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "max-width",
                "1279px",
                "1024",
                "1279",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (max-width: 1024px) {\n  .ftSovk { flex: 0 1 0%; }\n}",
          "urls": [],
          "group": "screen and (max-width: 1024px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ftSovk",
          "cssText": ".ftSovk { flex: 0 1 0%; }",
          "urls": [],
          "group": "screen and (max-width: 1024px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".jCsmHg",
          "cssText": ".jCsmHg { width: 100%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (max-width: 1024px) {\n  .jCsmHg { display: none; }\n}",
          "urls": [],
          "group": "screen and (max-width: 1024px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".jCsmHg",
          "cssText": ".jCsmHg { display: none; }",
          "urls": [],
          "group": "screen and (max-width: 1024px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".jCsmHg",
          "cssText": ".jCsmHg { width: 100%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (max-width: 1024px) {\n  .jCsmHg { display: none; }\n}",
          "urls": [],
          "group": "screen and (max-width: 1024px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".jCsmHg",
          "cssText": ".jCsmHg { display: none; }",
          "urls": [],
          "group": "screen and (max-width: 1024px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".itEejP",
          "cssText": ".itEejP { padding: 16px 16px 0px; text-align: left; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (max-width: 1024px) {\n  .itEejP { background: none; }\n}",
          "urls": [],
          "group": "screen and (max-width: 1024px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".itEejP",
          "cssText": ".itEejP { background: none; }",
          "urls": [],
          "group": "screen and (max-width: 1024px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".itEejP",
          "cssText": ".itEejP { padding: 16px 16px 0px; text-align: left; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (max-width: 1024px) {\n  .itEejP { background: none; }\n}",
          "urls": [],
          "group": "screen and (max-width: 1024px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".itEejP",
          "cssText": ".itEejP { background: none; }",
          "urls": [],
          "group": "screen and (max-width: 1024px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".gwJZLo",
          "cssText": ".gwJZLo { height: 100%; width: 100%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".gwJZLo .swiper-slide",
          "cssText": ".gwJZLo .swiper-slide { width: 100%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".gwJZLo",
          "cssText": ".gwJZLo { height: 100%; width: 100%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".gwJZLo .swiper-slide",
          "cssText": ".gwJZLo .swiper-slide { width: 100%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".iOGqTG",
          "cssText": ".iOGqTG { text-decoration: none; font-family: var(--ipt-font-family); font-size: var(--ipt-type-headline6-size, 1.25rem); font-weight: var(--ipt-type-headline6-weight, 600); -webkit-font-smoothing: antialiased; letter-spacing: var(--ipt-type-headline6-letterSpacing, .0125em); line-height: var(--ipt-type-headline6-lineHeight, 1.5rem); text-transform: var(--ipt-type-headline6-textTransform, none); color: var(--ipt-on-baseAlt-textPrimary-color, rgba(255,255,255,1)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".iOGqTG svg",
          "cssText": ".iOGqTG svg { vertical-align: bottom; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".iOGqTG:hover",
          "cssText": ".iOGqTG:hover { color: var(--ipt-on-baseAlt-accent1-color, rgb(245,197,24)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".iOGqTG",
          "cssText": ".iOGqTG { text-decoration: none; font-family: var(--ipt-font-family); font-size: var(--ipt-type-headline6-size, 1.25rem); font-weight: var(--ipt-type-headline6-weight, 600); -webkit-font-smoothing: antialiased; letter-spacing: var(--ipt-type-headline6-letterSpacing, .0125em); line-height: var(--ipt-type-headline6-lineHeight, 1.5rem); text-transform: var(--ipt-type-headline6-textTransform, none); color: var(--ipt-on-baseAlt-textPrimary-color, rgba(255,255,255,1)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".iOGqTG svg",
          "cssText": ".iOGqTG svg { vertical-align: bottom; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".iOGqTG:hover",
          "cssText": ".iOGqTG:hover { color: var(--ipt-on-baseAlt-accent1-color, rgb(245,197,24)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".jrnGXf.swiper-button-next",
          "cssText": ".jrnGXf.swiper-button-next { right: 0px; background-image: none; position: absolute; z-index: 100; top: 30%; outline: none; user-select: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".jrnGXf.swiper-button-next.swiper-button-disabled",
          "cssText": ".jrnGXf.swiper-button-next.swiper-button-disabled { visibility: hidden; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (max-width: 600px) {\n  .jrnGXf.swiper-button-next.swiper-button-next, .jrnGXf.swiper-button-next.swiper-button-prev { visibility: hidden; }\n}",
          "urls": [],
          "group": "screen and (max-width: 600px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "600px",
                "600",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".jrnGXf.swiper-button-next.swiper-button-next, .jrnGXf.swiper-button-next.swiper-button-prev",
          "cssText": ".jrnGXf.swiper-button-next.swiper-button-next, .jrnGXf.swiper-button-next.swiper-button-prev { visibility: hidden; }",
          "urls": [],
          "group": "screen and (max-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".jrnGXf.swiper-button-next",
          "cssText": ".jrnGXf.swiper-button-next { right: 0px; background-image: none; position: absolute; z-index: 100; top: 30%; outline: none; user-select: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".jrnGXf.swiper-button-next.swiper-button-disabled",
          "cssText": ".jrnGXf.swiper-button-next.swiper-button-disabled { visibility: hidden; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (max-width: 600px) {\n  .jrnGXf.swiper-button-next.swiper-button-next, .jrnGXf.swiper-button-next.swiper-button-prev { visibility: hidden; }\n}",
          "urls": [],
          "group": "screen and (max-width: 600px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "600px",
                "600",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".jrnGXf.swiper-button-next.swiper-button-next, .jrnGXf.swiper-button-next.swiper-button-prev",
          "cssText": ".jrnGXf.swiper-button-next.swiper-button-next, .jrnGXf.swiper-button-next.swiper-button-prev { visibility: hidden; }",
          "urls": [],
          "group": "screen and (max-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hNtbDh.swiper-button-prev",
          "cssText": ".hNtbDh.swiper-button-prev { left: 0px; background-image: none; position: absolute; z-index: 100; top: 30%; outline: none; user-select: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hNtbDh.swiper-button-prev.swiper-button-disabled",
          "cssText": ".hNtbDh.swiper-button-prev.swiper-button-disabled { visibility: hidden; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (max-width: 600px) {\n  .hNtbDh.swiper-button-prev.swiper-button-next, .hNtbDh.swiper-button-prev.swiper-button-prev { visibility: hidden; }\n}",
          "urls": [],
          "group": "screen and (max-width: 600px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "600px",
                "600",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hNtbDh.swiper-button-prev.swiper-button-next, .hNtbDh.swiper-button-prev.swiper-button-prev",
          "cssText": ".hNtbDh.swiper-button-prev.swiper-button-next, .hNtbDh.swiper-button-prev.swiper-button-prev { visibility: hidden; }",
          "urls": [],
          "group": "screen and (max-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hNtbDh.swiper-button-prev",
          "cssText": ".hNtbDh.swiper-button-prev { left: 0px; background-image: none; position: absolute; z-index: 100; top: 30%; outline: none; user-select: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hNtbDh.swiper-button-prev.swiper-button-disabled",
          "cssText": ".hNtbDh.swiper-button-prev.swiper-button-disabled { visibility: hidden; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (max-width: 600px) {\n  .hNtbDh.swiper-button-prev.swiper-button-next, .hNtbDh.swiper-button-prev.swiper-button-prev { visibility: hidden; }\n}",
          "urls": [],
          "group": "screen and (max-width: 600px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "600px",
                "600",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hNtbDh.swiper-button-prev.swiper-button-next, .hNtbDh.swiper-button-prev.swiper-button-prev",
          "cssText": ".hNtbDh.swiper-button-prev.swiper-button-next, .hNtbDh.swiper-button-prev.swiper-button-prev { visibility: hidden; }",
          "urls": [],
          "group": "screen and (max-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 600px) {\n  .cYujQi.swiper-buttons { padding: 20px 12px; }\n}",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".cYujQi.swiper-buttons",
          "cssText": ".cYujQi.swiper-buttons { padding: 20px 12px; }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 600px) {\n  .cYujQi.swiper-buttons { padding: 20px 12px; }\n}",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".cYujQi.swiper-buttons",
          "cssText": ".cYujQi.swiper-buttons { padding: 20px 12px; }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".cqEmJP",
          "cssText": ".cqEmJP { max-width: 1280px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".cqEmJP",
          "cssText": ".cqEmJP { max-width: 1280px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".drRhbm",
          "cssText": ".drRhbm { margin-bottom: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".drRhbm",
          "cssText": ".drRhbm { margin-bottom: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dYSjmE",
          "cssText": ".dYSjmE { padding-bottom: 0.75rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 1024px) {\n  .dYSjmE { display: flex; -webkit-box-pack: justify; justify-content: space-between; align-items: flex-end; }\n}",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dYSjmE",
          "cssText": ".dYSjmE { display: flex; -webkit-box-pack: justify; justify-content: space-between; align-items: flex-end; }",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dYSjmE",
          "cssText": ".dYSjmE { padding-bottom: 0.75rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 1024px) {\n  .dYSjmE { display: flex; -webkit-box-pack: justify; justify-content: space-between; align-items: flex-end; }\n}",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dYSjmE",
          "cssText": ".dYSjmE { display: flex; -webkit-box-pack: justify; justify-content: space-between; align-items: flex-end; }",
          "urls": [],
          "group": "screen and (min-width: 1024px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "1024",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ewVFdi",
          "cssText": ".ewVFdi { margin-left: calc(0.5rem); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (max-width: 479px) {\n  .ewVFdi { margin-left: calc(0rem); }\n}",
          "urls": [],
          "group": "screen and (max-width: 479px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 479px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "479px",
                "479",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ewVFdi",
          "cssText": ".ewVFdi { margin-left: calc(0rem); }",
          "urls": [],
          "group": "screen and (max-width: 479px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 479px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "479px",
                "479",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 1024px) and (max-width: 1279px) {\n  .ewVFdi { margin-left: calc(0rem); }\n}",
          "urls": [],
          "group": "screen and (min-width: 1024px) and (max-width: 1279px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px) and (max-width: 1279px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "max-width",
                "1279px",
                "1024",
                "1279",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ewVFdi",
          "cssText": ".ewVFdi { margin-left: calc(0rem); }",
          "urls": [],
          "group": "screen and (min-width: 1024px) and (max-width: 1279px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px) and (max-width: 1279px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "max-width",
                "1279px",
                "1024",
                "1279",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ewVFdi",
          "cssText": ".ewVFdi { margin-left: calc(0.5rem); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (max-width: 479px) {\n  .ewVFdi { margin-left: calc(0rem); }\n}",
          "urls": [],
          "group": "screen and (max-width: 479px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 479px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "479px",
                "479",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ewVFdi",
          "cssText": ".ewVFdi { margin-left: calc(0rem); }",
          "urls": [],
          "group": "screen and (max-width: 479px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 479px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "479px",
                "479",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 1024px) and (max-width: 1279px) {\n  .ewVFdi { margin-left: calc(0rem); }\n}",
          "urls": [],
          "group": "screen and (min-width: 1024px) and (max-width: 1279px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px) and (max-width: 1279px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "max-width",
                "1279px",
                "1024",
                "1279",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ewVFdi",
          "cssText": ".ewVFdi { margin-left: calc(0rem); }",
          "urls": [],
          "group": "screen and (min-width: 1024px) and (max-width: 1279px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1024px) and (max-width: 1279px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1024px",
                "max-width",
                "1279px",
                "1024",
                "1279",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".bnwSZW",
          "cssText": ".bnwSZW { position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".bnwSZW",
          "cssText": ".bnwSZW { position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        }
      ]
    }
  ],
  "inaccessible": [
    "https://m.media-amazon.com/images/S/sash/Y0$eCvXsjaPu$hv.css",
    "https://dqpnq362acqdi.cloudfront.net/_next/static/css/082af604df5a63b6.css",
    "https://dqpnq362acqdi.cloudfront.net/_next/static/css/117506d9cc9c7b5e.css"
  ],
  "styleTags": 1,
  "inlineStyleCount": 93,
  "associations": [],
  "summary": {
    "sheetsAccessible": 1,
    "sheetsInaccessible": 3,
    "totalRulesScanned": 977,
    "totalSinks": 0,
    "totalSources": 202,
    "totalAssociations": 0,
    "totalCapped": false
  },
  "likelyFingerprinting": false,
  "verdict": "likely not fingerprinting",
  "claims": [],
  "claimDetails": [],
  "riskScore": 0,
  "riskLevel": "none"
}