{
  "page": "https://www.adobe.com/",
  "timestamp": 1761884611171,
  "sheets": [
    {
      "href": "(inline <style>)",
      "rules": 1,
      "rulesList": [
        {
          "type": "CSSStyleRule",
          "selector": "body",
          "cssText": "body { display: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        }
      ]
    },
    {
      "href": "https://www.adobe.com/libs/styles/styles.css",
      "rules": 273,
      "rulesList": [
        {
          "type": "CSSStyleRule",
          "selector": ":root",
          "cssText": ":root { --global-height-nav: 64px; --feds-height-nav: 63px; --global-height-breadcrumbs: 33px; --scroll-padding-block: 0; --global-height-navPromo: 72px; --feds-totalheight-nav: calc(var(--feds-height-nav, --global-height-nav) + var(--feds-height-breadcrumbs, --global-height-breadcrumbs)); --feds-localnav-height: 40px; --link-color: rgb(39, 77, 234); --link-hover-color: rgb(29, 62, 207); --link-color-dark: rgb(59, 99, 251); --link-hover-color-dark: rgb(39, 77, 234); --background-color: #fff; --overlay-background-color: #ffffff20; --highlight-background-color: #ffffff40; --text-color: #2c2c2c; --color-white: #FFF; --color-gray-100: #F8F8F8; --color-gray-200: #E8E8E8; --color-gray-300: #D4D4D4; --color-gray-400: #B6B6B6; --color-gray-500: #909090; --color-gray-600: #686868; --color-gray-700: #444; --color-gray-800: #242424; --color-black: #000; --color-brand-title: #000B1D; --color-accent: var(--link-color-dark); --color-accent-hover: var(--link-hover-color-dark); --color-accent-down: #095aba; --color-accent-focus-ring: #378ef0; --color-info-accent: #5C5CE0; --color-info-accent-hover: #4646C6; --color-info-accent-down: #3D3DB4; --color-info-accent-light: #DEDEF9; --body-font-family: 'Adobe Clean', adobe-clean, 'Trebuchet MS', sans-serif; --fixed-font-family: 'Roboto Mono', menlo, consolas, 'Liberation Mono', monospace; --spacing-xxs: 8px; --spacing-xs: 16px; --spacing-s: 24px; --spacing-m: 32px; --spacing-l: 40px; --spacing-xl: 48px; --spacing-xxl: 56px; --spacing-xxxl: 80px; --spacing-l-static: 48px; --spacing-xl-static: 56px; --spacing-xxl-static: 80px; --spacing-xxxl-stati...",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ":root:lang(ar)",
          "cssText": ":root:lang(ar) { --body-font-family: adobe-arabic, myriad-arabic, 'Adobe Clean', adobe-clean, 'Trebuchet MS', sans-serif; --font-size-multiplier: 1.25; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ":root:lang(ko-KR), :root:lang(ko)",
          "cssText": ":root:lang(ko-KR), :root:lang(ko) { --body-font-family: adobe-clean-han-korean, 'Adobe Clean', adobe-clean, 'Trebuchet MS', sans-serif; word-break: keep-all; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ":root:lang(ja-JP), :root:lang(ja)",
          "cssText": ":root:lang(ja-JP), :root:lang(ja) { --body-font-family: adobe-clean-han-japanese, 'Adobe Clean', adobe-clean, 'Trebuchet MS', sans-serif; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ":root:lang(zh-TW)",
          "cssText": ":root:lang(zh-TW) { --body-font-family: adobe-clean-han-traditional, 'Adobe Clean', adobe-clean, 'Trebuchet MS', sans-serif; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ":root:lang(zh-CN)",
          "cssText": ":root:lang(zh-CN) { --body-font-family: adobe-clean-han-simplified-c, 'Adobe Clean', adobe-clean, 'Trebuchet MS', sans-serif; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ":root:lang(zh-HK)",
          "cssText": ":root:lang(zh-HK) { --body-font-family: adobe-clean-han-traditional, 'Adobe Clean', adobe-clean, 'Trebuchet MS', sans-serif; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ":root:lang(th)",
          "cssText": ":root:lang(th) { --body-font-family: adobe-clean-thai, 'Adobe Clean', adobe-clean, 'Trebuchet MS', sans-serif; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (min-width: 1200px) {\n  :root { --spacing-xl: 56px; --spacing-xxl: 80px; --spacing-xxxl: 104px; --type-heading-xxxl-size: calc(var(--font-size-multiplier, 1) * 80px); --type-heading-xxxl-lh: 88px; --type-heading-xxl-size: calc(var(--font-size-multiplier, 1) * 44px); --type-heading-xxl-lh: 55px; --type-heading-xl-size: calc(var(--font-size-multiplier, 1) * 36px); --type-heading-xl-lh: 45px; --type-heading-l-size: calc(var(--font-size-multiplier, 1) * 28px); --type-heading-l-lh: 35px; --type-heading-m-size: calc(var(--font-size-multiplier, 1) * 24px); --type-heading-m-lh: 30px; --type-heading-s-size: calc(var(--font-size-multiplier, 1) * 20px); --type-heading-s-lh: 25px; --type-heading-xs-size: calc(var(--font-size-multiplier, 1) * 18px); --type-heading-xs-lh: 22.5px; }\n}",
          "urls": [],
          "group": "(min-width: 1200px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ":root",
          "cssText": ":root { --spacing-xl: 56px; --spacing-xxl: 80px; --spacing-xxxl: 104px; --type-heading-xxxl-size: calc(var(--font-size-multiplier, 1) * 80px); --type-heading-xxxl-lh: 88px; --type-heading-xxl-size: calc(var(--font-size-multiplier, 1) * 44px); --type-heading-xxl-lh: 55px; --type-heading-xl-size: calc(var(--font-size-multiplier, 1) * 36px); --type-heading-xl-lh: 45px; --type-heading-l-size: calc(var(--font-size-multiplier, 1) * 28px); --type-heading-l-lh: 35px; --type-heading-m-size: calc(var(--font-size-multiplier, 1) * 24px); --type-heading-m-lh: 30px; --type-heading-s-size: calc(var(--font-size-multiplier, 1) * 20px); --type-heading-s-lh: 25px; --type-heading-xs-size: calc(var(--font-size-multiplier, 1) * 18px); --type-heading-xs-lh: 22.5px; }",
          "urls": [],
          "group": "(min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (min-width: 1440px) {\n  :root { --grid-container-width: 1200px; }\n}",
          "urls": [],
          "group": "(min-width: 1440px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 1440px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1440px",
                "1440",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ":root",
          "cssText": ":root { --grid-container-width: 1200px; }",
          "urls": [],
          "group": "(min-width: 1440px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 1440px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1440px",
                "1440",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".heading-xxxl, .heading-xxl, .heading-xl, .heading-l, .heading-m, .heading-s, .heading-xs, .heading-xxs, .body-xxl, .body-xl, .body-l, .body-m, .body-s, .body-xs, .detail-xl, .detail-l, .detail-m, .detail-s, .detail-xs",
          "cssText": ".heading-xxxl, .heading-xxl, .heading-xl, .heading-l, .heading-m, .heading-s, .heading-xs, .heading-xxs, .body-xxl, .body-xl, .body-l, .body-m, .body-s, .body-xs, .detail-xl, .detail-l, .detail-m, .detail-s, .detail-xs { margin: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".heading-xxxl",
          "cssText": ".heading-xxxl { font-size: var(--type-heading-xxxl-size); line-height: var(--type-heading-xxxl-lh); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".heading-xxl",
          "cssText": ".heading-xxl { font-size: var(--type-heading-xxl-size); line-height: var(--type-heading-xxl-lh); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".heading-xl",
          "cssText": ".heading-xl { font-size: var(--type-heading-xl-size); line-height: var(--type-heading-xl-lh); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".heading-l",
          "cssText": ".heading-l { font-size: var(--type-heading-l-size); line-height: var(--type-heading-l-lh); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".heading-m",
          "cssText": ".heading-m { font-size: var(--type-heading-m-size); line-height: var(--type-heading-m-lh); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".heading-s",
          "cssText": ".heading-s { font-size: var(--type-heading-s-size); line-height: var(--type-heading-s-lh); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".heading-xs",
          "cssText": ".heading-xs { font-size: var(--type-heading-xs-size); line-height: var(--type-heading-xs-lh); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".heading-xxs",
          "cssText": ".heading-xxs { font-size: var(--type-heading-xxs-size); line-height: var(--type-heading-xxs-lh); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".body-xxl",
          "cssText": ".body-xxl { font-size: var(--type-body-xxl-size); line-height: var(--type-body-xxl-lh); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".body-xl",
          "cssText": ".body-xl { font-size: var(--type-body-xl-size); line-height: var(--type-body-xl-lh); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".body-l",
          "cssText": ".body-l { font-size: var(--type-body-l-size); line-height: var(--type-body-l-lh); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".body-m",
          "cssText": ".body-m { font-size: var(--type-body-m-size); line-height: var(--type-body-m-lh); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".body-s",
          "cssText": ".body-s { font-size: var(--type-body-s-size); line-height: var(--type-body-s-lh); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".body-xs",
          "cssText": ".body-xs { font-size: var(--type-body-xs-size); line-height: var(--type-body-xs-lh); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".body-xxs",
          "cssText": ".body-xxs { font-size: var(--type-body-xxs-size); line-height: var(--type-body-xxs-lh); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".detail-xl",
          "cssText": ".detail-xl { font-size: var(--type-detail-l-size); line-height: var(--type-detail-l-lh); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".detail-l",
          "cssText": ".detail-l { font-size: var(--type-detail-l-size); line-height: var(--type-detail-l-lh); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".detail-m",
          "cssText": ".detail-m { font-size: var(--type-detail-m-size); line-height: var(--type-detail-m-lh); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".detail-s",
          "cssText": ".detail-s { font-size: var(--type-detail-s-size); line-height: var(--type-detail-s-lh); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".detail-xs",
          "cssText": ".detail-xs { font-size: var(--type-body-xs-size); line-height: var(--type-body-xs-lh); font-weight: 700; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".detail-xl, .detail-l, .detail-m, .detail-s",
          "cssText": ".detail-xl, .detail-l, .detail-m, .detail-s { font-weight: 700; text-transform: uppercase; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-button",
          "cssText": ".con-button { background-color: transparent; border-radius: 16px; border: 2px solid var(--text-color); color: var(--text-color); display: inline-block; font-size: 15px; font-style: normal; font-weight: 700; line-height: 16px; padding: 5px 14px; text-decoration: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-button:hover",
          "cssText": ".con-button:hover { background-color: var(--color-black); border-color: var(--color-black); color: var(--color-white); text-decoration: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".l-button .con-button, .con-button.button-l",
          "cssText": ".l-button .con-button, .con-button.button-l { border-radius: 20px; font-size: 17px; line-height: 20px; min-height: 21px; padding: 7px 18px 8px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".xl-button .con-button, .con-button.button-xl",
          "cssText": ".xl-button .con-button, .con-button.button-xl { border-radius: 25px; font-size: 19px; line-height: 24px; min-height: 28px; padding: 10px 24px 8px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".xxl-button .con-button, .con-button.button-xxl",
          "cssText": ".xxl-button .con-button, .con-button.button-xxl { border-radius: 30px; font-size: 22px; line-height: 27px; min-height: 27px; padding: 14px 30px 15px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-button.button-justified",
          "cssText": ".con-button.button-justified { display: block; text-align: center; width: 100%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dark .con-button",
          "cssText": ".dark .con-button { border-color: var(--color-white); color: var(--color-white); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".light .con-button",
          "cssText": ".light .con-button { border-color: var(--text-color); color: var(--text-color); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".light .con-button:hover, .light .con-button:active",
          "cssText": ".light .con-button:hover, .light .con-button:active { background-color: var(--color-black); border-color: var(--color-black); color: var(--color-white); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dark .con-button:hover",
          "cssText": ".dark .con-button:hover { background-color: var(--color-white); color: var(--color-black); text-decoration: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-button.blue",
          "cssText": ".con-button.blue { background: var(--color-accent); border-color: var(--color-accent); color: var(--color-white); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-button.blue:hover, .con-button.blue:active",
          "cssText": ".con-button.blue:hover, .con-button.blue:active { background: var(--color-accent-hover); border-color: var(--color-accent-hover); color: var(--color-white); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-button.fill",
          "cssText": ".con-button.fill { background: var(--text-color); border-color: var(--text-color); color: var(--color-white); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-button.fill:hover, .con-button.fill:active",
          "cssText": ".con-button.fill:hover, .con-button.fill:active { background: var(--color-black); border-color: var(--color-black); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dark .con-button.fill",
          "cssText": ".dark .con-button.fill { background: var(--color-white); border-color: var(--color-white); color: var(--text-color); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dark .con-button.fill:hover, .dark .con-button.fill:active",
          "cssText": ".dark .con-button.fill:hover, .dark .con-button.fill:active { background: var(--color-white); border-color: var(--color-white); color: var(--color-black); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "img",
          "cssText": "img { max-width: 100%; height: auto; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "blockquote",
          "cssText": "blockquote { margin: 0 0 var(--spacing-s) 0; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "svg.icon-milo, img.icon-milo",
          "cssText": "svg.icon-milo, img.icon-milo { height: 1em; position: relative; top: 0.1em; width: auto; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "div:not([class]) > div > div > img[src^=\"./media_\"]",
          "cssText": "div:not([class]) > div > div > img[src^=\"./media_\"] { width: 100%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".container",
          "cssText": ".container { width: var(--grid-container-width); margin: 0px auto; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "picture.bg-img",
          "cssText": "picture.bg-img { display: block; position: absolute; inset: 0px; z-index: -1; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "picture.bg-img img",
          "cssText": "picture.bg-img img { object-fit: cover; height: 100%; width: 100%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section .section-background img",
          "cssText": ".section .section-background img { object-fit: cover; height: 100%; width: 100%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "main > div, main .section[data-status=\"decorated\"]",
          "cssText": "main > div, main .section[data-status=\"decorated\"] { display: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "main > .section, .fragment > .section",
          "cssText": "main > .section, .fragment > .section { display: block; position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "main > .section > .content, .fragment > .section > .content",
          "cssText": "main > .section > .content, .fragment > .section > .content { display: block; max-width: var(--grid-container-width); margin: 0px auto; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "div[data-failed=\"true\"]",
          "cssText": "div[data-failed=\"true\"] { border: 4px solid rgb(255, 0, 160); position: relative; margin: 12px; border-radius: 6px; display: block; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "div[data-failed=\"true\"]::before",
          "cssText": "div[data-failed=\"true\"]::before { content: attr(data-reason); color: white; padding: 0px 0px 2px 6px; background: rgb(255, 0, 160); font-weight: 700; display: block; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".milo-card-section",
          "cssText": ".milo-card-section { visibility: hidden; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-button svg.icon-milo",
          "cssText": ".con-button svg.icon-milo { display: inline-block; height: 1em; width: 1em; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-button[aria-disabled=\"true\"], .con-button.blue[aria-disabled=\"true\"], .con-button.fill[aria-disabled=\"true\"]",
          "cssText": ".con-button[aria-disabled=\"true\"], .con-button.blue[aria-disabled=\"true\"], .con-button.fill[aria-disabled=\"true\"] { background-color: transparent; border-color: var(--color-gray-500); color: var(--color-gray-500); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-button.blue[aria-disabled=\"true\"], .con-button.fill[aria-disabled=\"true\"]",
          "cssText": ".con-button.blue[aria-disabled=\"true\"], .con-button.fill[aria-disabled=\"true\"] { background-color: var(--color-gray-500); color: var(--color-gray-300); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-button[aria-disabled=\"true\"]:hover, .con-button.blue[aria-disabled=\"true\"]:hover, .con-button.fill[aria-disabled=\"true\"]:hover",
          "cssText": ".con-button[aria-disabled=\"true\"]:hover, .con-button.blue[aria-disabled=\"true\"]:hover, .con-button.fill[aria-disabled=\"true\"]:hover { cursor: default; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dark .con-button[aria-disabled=\"true\"]:hover",
          "cssText": ".dark .con-button[aria-disabled=\"true\"]:hover { background-color: transparent; color: var(--color-gray-500); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dark .con-button.blue[aria-disabled=\"true\"]:hover, .dark .con-button.fill[aria-disabled=\"true\"]:hover",
          "cssText": ".dark .con-button.blue[aria-disabled=\"true\"]:hover, .dark .con-button.fill[aria-disabled=\"true\"]:hover { background-color: var(--color-gray-500); color: var(--color-gray-300); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "span.icon.margin-right",
          "cssText": "span.icon.margin-right { margin-right: 8px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "span.icon.margin-left",
          "cssText": "span.icon.margin-left { margin-left: 8px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "span.icon.margin-inline-end",
          "cssText": "span.icon.margin-inline-end { margin-inline-end: 8px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "span.icon.margin-inline-start",
          "cssText": "span.icon.margin-inline-start { margin-inline-start: 8px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "span.icon.milo-tooltip.margin-inline-end",
          "cssText": "span.icon.milo-tooltip.margin-inline-end { margin-inline-end: 3px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "span.icon.milo-tooltip.margin-inline-start",
          "cssText": "span.icon.milo-tooltip.margin-inline-start { margin-inline-start: 3px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".button-l .con-button span.icon.margin-left, .con-button.button-l span.icon.margin-left",
          "cssText": ".button-l .con-button span.icon.margin-left, .con-button.button-l span.icon.margin-left { margin-left: 12px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".button-xl .con-button span.icon.margin-left, .con-button.button-xl span.icon.margin-left",
          "cssText": ".button-xl .con-button span.icon.margin-left, .con-button.button-xl span.icon.margin-left { margin-left: 14px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.xxs-spacing",
          "cssText": ".con-block.xxs-spacing { padding: var(--spacing-xxs) 0; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.xs-spacing",
          "cssText": ".con-block.xs-spacing { padding: var(--spacing-xs) 0; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.s-spacing",
          "cssText": ".con-block.s-spacing { padding: var(--spacing-s) 0; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.m-spacing",
          "cssText": ".con-block.m-spacing { padding: var(--spacing-m) 0; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.l-spacing",
          "cssText": ".con-block.l-spacing { padding: var(--spacing-l) 0; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.xl-spacing",
          "cssText": ".con-block.xl-spacing { padding: var(--spacing-xl) 0; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.xxl-spacing",
          "cssText": ".con-block.xxl-spacing { padding: var(--spacing-xxl) 0; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.xxxl-spacing",
          "cssText": ".con-block.xxxl-spacing { padding: var(--spacing-xxxl) 0; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.no-spacing",
          "cssText": ".con-block.no-spacing { padding: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.xxs-spacing-top",
          "cssText": ".con-block.xxs-spacing-top { padding-top: var(--spacing-xxs); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.xs-spacing-top",
          "cssText": ".con-block.xs-spacing-top { padding-top: var(--spacing-xs); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.s-spacing-top",
          "cssText": ".con-block.s-spacing-top { padding-top: var(--spacing-s); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.m-spacing-top",
          "cssText": ".con-block.m-spacing-top { padding-top: var(--spacing-m); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.l-spacing-top",
          "cssText": ".con-block.l-spacing-top { padding-top: var(--spacing-l); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.xl-spacing-top",
          "cssText": ".con-block.xl-spacing-top { padding-top: var(--spacing-xl); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.xxl-spacing-top",
          "cssText": ".con-block.xxl-spacing-top { padding-top: var(--spacing-xxl); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.xxxl-spacing-top",
          "cssText": ".con-block.xxxl-spacing-top { padding-top: var(--spacing-xxxl); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.no-spacing-top",
          "cssText": ".con-block.no-spacing-top { padding-top: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.xxs-spacing-bottom",
          "cssText": ".con-block.xxs-spacing-bottom { padding-bottom: var(--spacing-xxs); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.xs-spacing-bottom",
          "cssText": ".con-block.xs-spacing-bottom { padding-bottom: var(--spacing-xs); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.s-spacing-bottom",
          "cssText": ".con-block.s-spacing-bottom { padding-bottom: var(--spacing-s); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.m-spacing-bottom",
          "cssText": ".con-block.m-spacing-bottom { padding-bottom: var(--spacing-m); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.l-spacing-bottom",
          "cssText": ".con-block.l-spacing-bottom { padding-bottom: var(--spacing-l); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.xl-spacing-bottom",
          "cssText": ".con-block.xl-spacing-bottom { padding-bottom: var(--spacing-xl); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.xxl-spacing-bottom",
          "cssText": ".con-block.xxl-spacing-bottom { padding-bottom: var(--spacing-xxl); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.xxxl-spacing-bottom",
          "cssText": ".con-block.xxxl-spacing-bottom { padding-bottom: var(--spacing-xxxl); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.no-spacing-bottom",
          "cssText": ".con-block.no-spacing-bottom { padding-bottom: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.xl-spacing-static-bottom",
          "cssText": ".con-block.xl-spacing-static-bottom { padding-bottom: var(--spacing-xl-static); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.xxl-spacing-static-bottom",
          "cssText": ".con-block.xxl-spacing-static-bottom { padding-bottom: var(--spacing-xxl-static); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.xxxl-spacing-static-bottom",
          "cssText": ".con-block.xxxl-spacing-static-bottom { padding-bottom: var(--spacing-xxxl-static); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "div[class*=\"-up\"] .con-block.full-width",
          "cssText": "div[class*=\"-up\"] .con-block.full-width { grid-column: 1 / -1; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "div[class*=\"-up\"] .con-block.has-bg",
          "cssText": "div[class*=\"-up\"] .con-block.has-bg { padding: var(--spacing-m); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "div[class*=\"-up\"] .con-block.has-bg.xxs-spacing",
          "cssText": "div[class*=\"-up\"] .con-block.has-bg.xxs-spacing { padding: var(--spacing-xxs); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "div[class*=\"-up\"] .con-block.has-bg.xs-spacing",
          "cssText": "div[class*=\"-up\"] .con-block.has-bg.xs-spacing { padding: var(--spacing-xs); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "div[class*=\"-up\"] .con-block.has-bg.s-spacing",
          "cssText": "div[class*=\"-up\"] .con-block.has-bg.s-spacing { padding: var(--spacing-s); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "div[class*=\"-up\"] .con-block.has-bg.m-spacing",
          "cssText": "div[class*=\"-up\"] .con-block.has-bg.m-spacing { padding: var(--spacing-m); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "div[class*=\"-up\"] .con-block.has-bg.l-spacing",
          "cssText": "div[class*=\"-up\"] .con-block.has-bg.l-spacing { padding: var(--spacing-l); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "div[class*=\"-up\"] .con-block.has-bg.xl-spacing",
          "cssText": "div[class*=\"-up\"] .con-block.has-bg.xl-spacing { padding: var(--spacing-xl); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "div[class*=\"-up\"] .con-block.has-bg.xxl-spacing",
          "cssText": "div[class*=\"-up\"] .con-block.has-bg.xxl-spacing { padding: var(--spacing-xxl); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "div[class*=\"-up\"] .con-block.has-bg.xxxl-spacing",
          "cssText": "div[class*=\"-up\"] .con-block.has-bg.xxxl-spacing { padding: var(--spacing-xxxl); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "div[class*=\"-up\"] .con-block.has-bg.no-spacing",
          "cssText": "div[class*=\"-up\"] .con-block.has-bg.no-spacing { padding: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block .foreground",
          "cssText": ".con-block .foreground { position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.max-width-6 .foreground",
          "cssText": ".con-block.max-width-6 .foreground { max-width: 600px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.max-width-8 .foreground",
          "cssText": ".con-block.max-width-8 .foreground { max-width: 800px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.max-width-10 .foreground",
          "cssText": ".con-block.max-width-10 .foreground { max-width: 1000px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.max-width-12 .foreground",
          "cssText": ".con-block.max-width-12 .foreground { max-width: 1200px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.max-width-auto .foreground",
          "cssText": ".con-block.max-width-auto .foreground { max-width: unset; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block .background",
          "cssText": ".con-block .background { overflow: hidden; position: absolute; inset: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block .background > div",
          "cssText": ".con-block .background > div { height: 100%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block .background img, .con-block .background video",
          "cssText": ".con-block .background img, .con-block .background video { object-fit: cover; width: 100%; height: 100%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block .background video",
          "cssText": ".con-block .background video { display: block; position: absolute; top: 0px; left: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block .background .tablet-only, .con-block .background .desktop-only",
          "cssText": ".con-block .background .tablet-only, .con-block .background .desktop-only { display: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSFontFaceRule",
          "selector": "",
          "cssText": "@font-face { font-family: \"Trebuchet MS\"; font-weight: 700; size-adjust: 95%; src: local(\"Trebuchet MS Bold\"), local(\"TrebuchetMSBold\"); }",
          "urls": [],
          "group": "",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@font-face",
              "keyword": "local(",
              "semanticGroup": "fonts",
              "claim": "local font presence probe (trebuchet ms bold)",
              "excerpt": "@font-face { font-family: \"trebuchet ms\"; font-weight: 700; size-adjust: 95%; src: local(\"trebuchet ms bold\"), local(\"trebuchetmsbold\"); }",
              "requiresEcho": true,
              "echoTokens": [
                "trebuchet ms bold"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@font-face",
              "keyword": "local(",
              "semanticGroup": "fonts",
              "claim": "local font presence probe (trebuchetmsbold)",
              "excerpt": "@font-face { font-family: \"trebuchet ms\"; font-weight: 700; size-adjust: 95%; src: local(\"trebuchet ms bold\"), local(\"trebuchetmsbold\"); }",
              "requiresEcho": true,
              "echoTokens": [
                "trebuchetmsbold"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSFontFaceRule",
          "selector": "",
          "cssText": "@font-face { font-family: \"Trebuchet MS\"; font-weight: 400; size-adjust: 93%; src: local(\"Trebuchet MS\"), local(\"TrebuchetMS\"); }",
          "urls": [],
          "group": "",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@font-face",
              "keyword": "local(",
              "semanticGroup": "fonts",
              "claim": "local font presence probe (trebuchet ms)",
              "excerpt": "@font-face { font-family: \"trebuchet ms\"; font-weight: 400; size-adjust: 93%; src: local(\"trebuchet ms\"), local(\"trebuchetms\"); }",
              "requiresEcho": true,
              "echoTokens": [
                "trebuchet ms"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@font-face",
              "keyword": "local(",
              "semanticGroup": "fonts",
              "claim": "local font presence probe (trebuchetms)",
              "excerpt": "@font-face { font-family: \"trebuchet ms\"; font-weight: 400; size-adjust: 93%; src: local(\"trebuchet ms\"), local(\"trebuchetms\"); }",
              "requiresEcho": true,
              "echoTokens": [
                "trebuchetms"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "html",
          "cssText": "html { scroll-padding-block: var(--scroll-padding-block); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "body:has(footer:focus-within) #onetrust-consent-sdk:not(:has(#ot-cookie-button.show))",
          "cssText": "body:has(footer:focus-within) #onetrust-consent-sdk:not(:has(#ot-cookie-button.show)) { position: sticky; bottom: 0px; z-index: 2147483645; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "body:has(footer:focus-within) #onetrust-consent-sdk:not(:has(#ot-cookie-button.show)) #onetrust-banner-sdk",
          "cssText": "body:has(footer:focus-within) #onetrust-consent-sdk:not(:has(#ot-cookie-button.show)) #onetrust-banner-sdk { position: sticky; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "body",
          "cssText": "body { display: block; font-family: var(--body-font-family); font-size: var(--type-body-m-size); line-height: var(--type-body-m-lh); background-color: var(--background-color); color: var(--text-color); margin: 0px; overflow-wrap: break-word; -webkit-font-smoothing: antialiased; opacity: 1 !important; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "body:has(.dialog-modal) #onetrust-consent-sdk",
          "cssText": "body:has(.dialog-modal) #onetrust-consent-sdk { display: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "header.gnav",
          "cssText": "header.gnav { height: 57px; position: fixed; top: 0px; left: 0px; right: 0px; z-index: 100; overflow: hidden; background: rgb(255, 255, 255); box-sizing: border-box; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "header.gnav nav",
          "cssText": "header.gnav nav { display: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "header.gnav ~ main",
          "cssText": "header.gnav ~ main { margin-top: 57px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "header.global-navigation, header.global-navigation.feds--dark",
          "cssText": "header.global-navigation, header.global-navigation.feds--dark { height: var(--global-height-nav); visibility: hidden; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "header.global-navigation a",
          "cssText": "header.global-navigation a { text-decoration: unset; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "header.global-navigation + .feds-localnav",
          "cssText": "header.global-navigation + .feds-localnav { display: block; height: var(--feds-localnav-height); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-promo-aside-wrapper",
          "cssText": ".feds-promo-aside-wrapper { position: sticky; top: 0px; z-index: 11; height: var(--global-height-navPromo); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "sr-only, .feds-sr-only",
          "cssText": "sr-only, .feds-sr-only { position: absolute; width: 1px; height: 1px; padding: 0px; margin: -1px; overflow: hidden; clip: rect(0px, 0px, 0px, 0px); white-space: nowrap; border: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "header.global-navigation.has-promo",
          "cssText": "header.global-navigation.has-promo { top: var(--global-height-navPromo); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "header.global-navigation.new-nav.local-nav",
          "cssText": "header.global-navigation.new-nav.local-nav { top: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "body.mweb-enabled",
          "cssText": "body.mweb-enabled {\n  --type-heading-all-weight: 800;\n  & [class^=\"heading-\"], & h1, & h2, & h3, & h4, & h5, & h6 { font-weight: var(--type-heading-all-weight); }\n}",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "& [class^=\"heading-\"], & h1, & h2, & h3, & h4, & h5, & h6",
          "cssText": "& [class^=\"heading-\"], & h1, & h2, & h3, & h4, & h5, & h6 { font-weight: var(--type-heading-all-weight); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (min-width: 900px) {\n  header.global-navigation.has-breadcrumbs { padding-bottom: var(--global-height-breadcrumbs); }\n  header.global-navigation + .feds-localnav { display: none; }\n}",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "header.global-navigation.has-breadcrumbs",
          "cssText": "header.global-navigation.has-breadcrumbs { padding-bottom: var(--global-height-breadcrumbs); }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": "header.global-navigation + .feds-localnav",
          "cssText": "header.global-navigation + .feds-localnav { display: none; }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".breadcrumbs",
          "cssText": ".breadcrumbs { display: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".gnav-hide",
          "cssText": ".gnav-hide { opacity: 0; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hide-block",
          "cssText": ".hide-block { display: none !important; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".disable-scroll",
          "cssText": ".disable-scroll { overflow: hidden; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "h1, h2, h3, h4, h5, h6",
          "cssText": "h1, h2, h3, h4, h5, h6 { scroll-margin-top: var(--feds-totalheight-nav); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ":is(h1, h2, h3, h4, h5, h6) strong",
          "cssText": ":is(h1, h2, h3, h4, h5, h6) strong { font-weight: inherit; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "h1",
          "cssText": "h1 { font-size: var(--type-heading-xl-size); line-height: var(--type-heading-xl-lh); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "h2",
          "cssText": "h2 { font-size: var(--type-heading-l-size); line-height: var(--type-heading-l-lh); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "h3",
          "cssText": "h3 { font-size: var(--type-heading-m-size); line-height: var(--type-heading-m-lh); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "h4",
          "cssText": "h4 { font-size: var(--type-heading-s-size); line-height: var(--type-heading-s-lh); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "h5",
          "cssText": "h5 { font-size: var(--type-heading-xs-size); line-height: var(--type-heading-xs-lh); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "h6",
          "cssText": "h6 { font-size: var(--type-heading-xs-size); line-height: var(--type-heading-xs-lh); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ":is(h1, h2, h3, h4, h5, h6, p):lang(ja)",
          "cssText": ":is(h1, h2, h3, h4, h5, h6, p):lang(ja) { line-break: strict; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "a.auto-block, a.fragment",
          "cssText": "a.auto-block, a.fragment { display: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "a",
          "cssText": "a { color: var(--link-color); text-decoration: underline; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "a:hover",
          "cssText": "a:hover { color: var(--link-hover-color); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "a:has(> sub:only-child)",
          "cssText": "a:has(> sub:only-child) { text-decoration: unset; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "a > sub:only-child",
          "cssText": "a > sub:only-child { text-decoration: underline; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "a.quiet, a.quiet:hover, a.quiet:focus, a.quiet:active",
          "cssText": "a.quiet, a.quiet:hover, a.quiet:focus, a.quiet:active { text-decoration: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "a.static, a.static:hover, a.static:focus, a.static:active",
          "cssText": "a.static, a.static:hover, a.static:focus, a.static:active { color: var(--text-color); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dark a.static, .dark a.static:hover, .dark a.static:focus, .dark a.static:active",
          "cssText": ".dark a.static, .dark a.static:hover, .dark a.static:focus, .dark a.static:active { color: var(--color-white); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ":is(h1, h2, h3, h4, h5, h6) a, :is(h1, h2, h3, h4, h5, h6) a:hover, :is(h1, h2, h3, h4, h5, h6) a:focus, :is(h1, h2, h3, h4, h5, h6) a:active",
          "cssText": ":is(h1, h2, h3, h4, h5, h6) a, :is(h1, h2, h3, h4, h5, h6) a:hover, :is(h1, h2, h3, h4, h5, h6) a:focus, :is(h1, h2, h3, h4, h5, h6) a:active { color: currentcolor; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dark a",
          "cssText": ".dark a { color: var(--link-color-dark); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".static-links a:not([class*=\"button\"])",
          "cssText": ".static-links a:not([class*=\"button\"]) { color: inherit; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".copy-link",
          "cssText": ".copy-link { font-weight: 700; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".tooltip-wrapper",
          "cssText": ".tooltip-wrapper { visibility: hidden; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section-anchor",
          "cssText": ".section-anchor { scroll-margin-top: var(--global-height-nav); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 600px) {\n  .global-navigation.has-breadcrumbs + main .section-anchor { scroll-margin-top: var(--feds-totalheight-nav); }\n}",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-navigation.has-breadcrumbs + main .section-anchor",
          "cssText": ".global-navigation.has-breadcrumbs + main .section-anchor { scroll-margin-top: var(--feds-totalheight-nav); }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 599px) {\n  :root:not(:lang(ja-JP), :lang(ja)) :is(.heading-xxxl, .heading-xxl) { hyphens: auto; hyphenate-limit-chars: 15 5 5; }\n  .con-button.button-justified-mobile { display: block; text-align: center; }\n}",
          "urls": [],
          "group": "(max-width: 599px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 599px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "599px",
                "599",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ":root:not(:lang(ja-JP), :lang(ja)) :is(.heading-xxxl, .heading-xxl)",
          "cssText": ":root:not(:lang(ja-JP), :lang(ja)) :is(.heading-xxxl, .heading-xxl) { hyphens: auto; hyphenate-limit-chars: 15 5 5; }",
          "urls": [],
          "group": "(max-width: 599px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 599px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "599px",
                "599",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-button.button-justified-mobile",
          "cssText": ".con-button.button-justified-mobile { display: block; text-align: center; }",
          "urls": [],
          "group": "(max-width: 599px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 599px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "599px",
                "599",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 600px) {\n  dialog { width: 60vw; }\n  dialog .fragment > :first-child { margin-top: 0px; }\n  dialog .fragment > :last-child { margin-bottom: 0px; }\n  .con-block.max-width-6-tablet .foreground { max-width: 600px; }\n  .con-block.max-width-8-tablet .foreground { max-width: 800px; }\n  .con-block.max-width-10-tablet .foreground { max-width: 1000px; }\n  .con-block.max-width-12-tablet .foreground { max-width: 1200px; }\n  .con-block .background .mobile-only, .con-block .background .desktop-only { display: none; }\n  .con-block .background .tablet-only { display: block; }\n  .con-block.xxs-spacing-tablet { padding: var(--spacing-xxs) 0; }\n  .con-block.xs-spacing-tablet { padding: var(--spacing-xs) 0; }\n  .con-block.s-spacing-tablet { padding: var(--spacing-s) 0; }\n  .con-block.m-spacing-tablet { padding: var(--spacing-m) 0; }\n  .con-block.l-spacing-tablet { padding: var(--spacing-l) 0; }\n  .con-block.xl-spacing-tablet { padding: var(--spacing-xl) 0; }\n  .con-block.xxl-spacing-tablet { padding: var(--spacing-xxl) 0; }\n  .con-block.xxxl-spacing-tablet { padding: var(--spacing-xxxl) 0; }\n  .con-block.no-spacing-tablet { padding: 0px; }\n  .con-block.xxs-spacing-top-tablet { padding-top: var(--spacing-xxs); }\n  .con-block.xs-spacing-top-tablet { padding-top: var(--spacing-xs); }\n  .con-block.s-spacing-top-tablet { padding-top: var(--spacing-s); }\n  .con-block.m-spacing-top-tablet { padding-top: var(--spacing-m); }\n  .con-block.l-spacing-top-tablet { padding-top: var(--spacing-l); }\n  .con-block.xl-spacing-top-tablet { padding-top: var(--spacing-xl); }\n  .con-bl...",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "dialog",
          "cssText": "dialog { width: 60vw; }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": "dialog .fragment > :first-child",
          "cssText": "dialog .fragment > :first-child { margin-top: 0px; }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": "dialog .fragment > :last-child",
          "cssText": "dialog .fragment > :last-child { margin-bottom: 0px; }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.max-width-6-tablet .foreground",
          "cssText": ".con-block.max-width-6-tablet .foreground { max-width: 600px; }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.max-width-8-tablet .foreground",
          "cssText": ".con-block.max-width-8-tablet .foreground { max-width: 800px; }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.max-width-10-tablet .foreground",
          "cssText": ".con-block.max-width-10-tablet .foreground { max-width: 1000px; }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.max-width-12-tablet .foreground",
          "cssText": ".con-block.max-width-12-tablet .foreground { max-width: 1200px; }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block .background .mobile-only, .con-block .background .desktop-only",
          "cssText": ".con-block .background .mobile-only, .con-block .background .desktop-only { display: none; }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block .background .tablet-only",
          "cssText": ".con-block .background .tablet-only { display: block; }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.xxs-spacing-tablet",
          "cssText": ".con-block.xxs-spacing-tablet { padding: var(--spacing-xxs) 0; }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.xs-spacing-tablet",
          "cssText": ".con-block.xs-spacing-tablet { padding: var(--spacing-xs) 0; }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.s-spacing-tablet",
          "cssText": ".con-block.s-spacing-tablet { padding: var(--spacing-s) 0; }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.m-spacing-tablet",
          "cssText": ".con-block.m-spacing-tablet { padding: var(--spacing-m) 0; }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.l-spacing-tablet",
          "cssText": ".con-block.l-spacing-tablet { padding: var(--spacing-l) 0; }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.xl-spacing-tablet",
          "cssText": ".con-block.xl-spacing-tablet { padding: var(--spacing-xl) 0; }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.xxl-spacing-tablet",
          "cssText": ".con-block.xxl-spacing-tablet { padding: var(--spacing-xxl) 0; }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.xxxl-spacing-tablet",
          "cssText": ".con-block.xxxl-spacing-tablet { padding: var(--spacing-xxxl) 0; }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.no-spacing-tablet",
          "cssText": ".con-block.no-spacing-tablet { padding: 0px; }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.xxs-spacing-top-tablet",
          "cssText": ".con-block.xxs-spacing-top-tablet { padding-top: var(--spacing-xxs); }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.xs-spacing-top-tablet",
          "cssText": ".con-block.xs-spacing-top-tablet { padding-top: var(--spacing-xs); }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.s-spacing-top-tablet",
          "cssText": ".con-block.s-spacing-top-tablet { padding-top: var(--spacing-s); }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.m-spacing-top-tablet",
          "cssText": ".con-block.m-spacing-top-tablet { padding-top: var(--spacing-m); }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.l-spacing-top-tablet",
          "cssText": ".con-block.l-spacing-top-tablet { padding-top: var(--spacing-l); }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.xl-spacing-top-tablet",
          "cssText": ".con-block.xl-spacing-top-tablet { padding-top: var(--spacing-xl); }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.xxl-spacing-top-tablet",
          "cssText": ".con-block.xxl-spacing-top-tablet { padding-top: var(--spacing-xxl); }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.xxxl-spacing-top-tablet",
          "cssText": ".con-block.xxxl-spacing-top-tablet { padding-top: var(--spacing-xxxl); }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.no-spacing-top-tablet",
          "cssText": ".con-block.no-spacing-top-tablet { padding-top: 0px; }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.xxs-spacing-bottom-tablet",
          "cssText": ".con-block.xxs-spacing-bottom-tablet { padding-bottom: var(--spacing-xxs); }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.xs-spacing-bottom-tablet",
          "cssText": ".con-block.xs-spacing-bottom-tablet { padding-bottom: var(--spacing-xs); }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.s-spacing-bottom-tablet",
          "cssText": ".con-block.s-spacing-bottom-tablet { padding-bottom: var(--spacing-s); }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.m-spacing-bottom-tablet",
          "cssText": ".con-block.m-spacing-bottom-tablet { padding-bottom: var(--spacing-m); }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.l-spacing-bottom-tablet",
          "cssText": ".con-block.l-spacing-bottom-tablet { padding-bottom: var(--spacing-l); }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.xl-spacing-bottom-tablet",
          "cssText": ".con-block.xl-spacing-bottom-tablet { padding-bottom: var(--spacing-xl); }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.xxl-spacing-bottom-tablet",
          "cssText": ".con-block.xxl-spacing-bottom-tablet { padding-bottom: var(--spacing-xxl); }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.xxxl-spacing-bottom-tablet",
          "cssText": ".con-block.xxxl-spacing-bottom-tablet { padding-bottom: var(--spacing-xxxl); }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.no-spacing-bottom-tablet",
          "cssText": ".con-block.no-spacing-bottom-tablet { padding-bottom: 0px; }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.xl-spacing-static-bottom-tablet",
          "cssText": ".con-block.xl-spacing-static-bottom-tablet { padding-bottom: var(--spacing-xl-static); }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.xxl-spacing-static-bottom-tablet",
          "cssText": ".con-block.xxl-spacing-static-bottom-tablet { padding-bottom: var(--spacing-xxl-static); }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.xxxl-spacing-static-bottom-tablet",
          "cssText": ".con-block.xxxl-spacing-static-bottom-tablet { padding-bottom: var(--spacing-xxxl-static); }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (min-width: 900px) {\n  header.gnav { min-height: var(--global-height-nav); border-bottom: 1px solid rgb(234, 234, 234); overflow: unset; }\n  header.gnav ~ main { margin-top: 64px; }\n  header.gnav.has-breadcrumbs { min-height: 97px; }\n  header.gnav nav { display: unset; }\n  header.gnav.has-breadcrumbs + main { margin-top: 97px; }\n}",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "header.gnav",
          "cssText": "header.gnav { min-height: var(--global-height-nav); border-bottom: 1px solid rgb(234, 234, 234); overflow: unset; }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": "header.gnav ~ main",
          "cssText": "header.gnav ~ main { margin-top: 64px; }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": "header.gnav.has-breadcrumbs",
          "cssText": "header.gnav.has-breadcrumbs { min-height: 97px; }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": "header.gnav nav",
          "cssText": "header.gnav nav { display: unset; }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": "header.gnav.has-breadcrumbs + main",
          "cssText": "header.gnav.has-breadcrumbs + main { margin-top: 97px; }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (max-width: 1199px) {\n  .mweb-enabled { --type-body-xxl-size: calc(var(--font-size-multiplier, 1) * 24px); --type-body-xxl-lh: 36px; --type-body-xl-size: calc(var(--font-size-multiplier, 1) * 20px); --type-body-xl-lh: 30px; --type-body-l-size: calc(var(--font-size-multiplier, 1) * 18px); --type-body-l-lh: 27px; --type-body-m-size: calc(var(--font-size-multiplier, 1) * 16px); --type-body-m-lh: 24px; --type-body-s-size: calc(var(--font-size-multiplier, 1) * 14px); --type-body-s-lh: 21px; }\n}",
          "urls": [],
          "group": "screen and (max-width: 1199px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 1199px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "1199px",
                "1199",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".mweb-enabled",
          "cssText": ".mweb-enabled { --type-body-xxl-size: calc(var(--font-size-multiplier, 1) * 24px); --type-body-xxl-lh: 36px; --type-body-xl-size: calc(var(--font-size-multiplier, 1) * 20px); --type-body-xl-lh: 30px; --type-body-l-size: calc(var(--font-size-multiplier, 1) * 18px); --type-body-l-lh: 27px; --type-body-m-size: calc(var(--font-size-multiplier, 1) * 16px); --type-body-m-lh: 24px; --type-body-s-size: calc(var(--font-size-multiplier, 1) * 14px); --type-body-s-lh: 21px; }",
          "urls": [],
          "group": "screen and (max-width: 1199px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 1199px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "1199px",
                "1199",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 1200px) {\n  .con-block.max-width-6-desktop .foreground { max-width: 600px; }\n  .con-block.max-width-8-desktop .foreground { max-width: 800px; }\n  .con-block.max-width-10-desktop .foreground { max-width: 1000px; }\n  .con-block.max-width-12-desktop .foreground { max-width: 1200px; }\n  .con-block .background .mobile-only, .con-block .background .tablet-only { display: none; }\n  .con-block .background .desktop-only { display: block; }\n  .con-block.xxs-spacing-desktop { padding: var(--spacing-xxs) 0; }\n  .con-block.xs-spacing-desktop { padding: var(--spacing-xs) 0; }\n  .con-block.s-spacing-desktop { padding: var(--spacing-s) 0; }\n  .con-block.m-spacing-desktop { padding: var(--spacing-m) 0; }\n  .con-block.l-spacing-desktop { padding: var(--spacing-l) 0; }\n  .con-block.xl-spacing-desktop { padding: var(--spacing-xl) 0; }\n  .con-block.xxl-spacing-desktop { padding: var(--spacing-xxl) 0; }\n  .con-block.xxxl-spacing-desktop { padding: var(--spacing-xxxl) 0; }\n  .con-block.no-spacing-desktop { padding: 0px; }\n  .con-block.xxs-spacing-top-desktop { padding-top: var(--spacing-xxs); }\n  .con-block.xs-spacing-top-desktop { padding-top: var(--spacing-xs); }\n  .con-block.s-spacing-top-desktop { padding-top: var(--spacing-s); }\n  .con-block.m-spacing-top-desktop { padding-top: var(--spacing-m); }\n  .con-block.l-spacing-top-desktop { padding-top: var(--spacing-l); }\n  .con-block.xl-spacing-top-desktop { padding-top: var(--spacing-xl); }\n  .con-block.xxl-spacing-top-desktop { padding-top: var(--spacing-xxl); }\n  .con-block.xxxl-spacing-top-desktop { padding-top: ...",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.max-width-6-desktop .foreground",
          "cssText": ".con-block.max-width-6-desktop .foreground { max-width: 600px; }",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.max-width-8-desktop .foreground",
          "cssText": ".con-block.max-width-8-desktop .foreground { max-width: 800px; }",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.max-width-10-desktop .foreground",
          "cssText": ".con-block.max-width-10-desktop .foreground { max-width: 1000px; }",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.max-width-12-desktop .foreground",
          "cssText": ".con-block.max-width-12-desktop .foreground { max-width: 1200px; }",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block .background .mobile-only, .con-block .background .tablet-only",
          "cssText": ".con-block .background .mobile-only, .con-block .background .tablet-only { display: none; }",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block .background .desktop-only",
          "cssText": ".con-block .background .desktop-only { display: block; }",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.xxs-spacing-desktop",
          "cssText": ".con-block.xxs-spacing-desktop { padding: var(--spacing-xxs) 0; }",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.xs-spacing-desktop",
          "cssText": ".con-block.xs-spacing-desktop { padding: var(--spacing-xs) 0; }",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.s-spacing-desktop",
          "cssText": ".con-block.s-spacing-desktop { padding: var(--spacing-s) 0; }",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.m-spacing-desktop",
          "cssText": ".con-block.m-spacing-desktop { padding: var(--spacing-m) 0; }",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.l-spacing-desktop",
          "cssText": ".con-block.l-spacing-desktop { padding: var(--spacing-l) 0; }",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.xl-spacing-desktop",
          "cssText": ".con-block.xl-spacing-desktop { padding: var(--spacing-xl) 0; }",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.xxl-spacing-desktop",
          "cssText": ".con-block.xxl-spacing-desktop { padding: var(--spacing-xxl) 0; }",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.xxxl-spacing-desktop",
          "cssText": ".con-block.xxxl-spacing-desktop { padding: var(--spacing-xxxl) 0; }",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.no-spacing-desktop",
          "cssText": ".con-block.no-spacing-desktop { padding: 0px; }",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.xxs-spacing-top-desktop",
          "cssText": ".con-block.xxs-spacing-top-desktop { padding-top: var(--spacing-xxs); }",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.xs-spacing-top-desktop",
          "cssText": ".con-block.xs-spacing-top-desktop { padding-top: var(--spacing-xs); }",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.s-spacing-top-desktop",
          "cssText": ".con-block.s-spacing-top-desktop { padding-top: var(--spacing-s); }",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.m-spacing-top-desktop",
          "cssText": ".con-block.m-spacing-top-desktop { padding-top: var(--spacing-m); }",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.l-spacing-top-desktop",
          "cssText": ".con-block.l-spacing-top-desktop { padding-top: var(--spacing-l); }",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.xl-spacing-top-desktop",
          "cssText": ".con-block.xl-spacing-top-desktop { padding-top: var(--spacing-xl); }",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.xxl-spacing-top-desktop",
          "cssText": ".con-block.xxl-spacing-top-desktop { padding-top: var(--spacing-xxl); }",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.xxxl-spacing-top-desktop",
          "cssText": ".con-block.xxxl-spacing-top-desktop { padding-top: var(--spacing-xxxl); }",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.no-spacing-top-desktop",
          "cssText": ".con-block.no-spacing-top-desktop { padding-top: 0px; }",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.xxs-spacing-bottom-desktop",
          "cssText": ".con-block.xxs-spacing-bottom-desktop { padding-bottom: var(--spacing-xxs); }",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.xs-spacing-bottom-desktop",
          "cssText": ".con-block.xs-spacing-bottom-desktop { padding-bottom: var(--spacing-xs); }",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.s-spacing-bottom-desktop",
          "cssText": ".con-block.s-spacing-bottom-desktop { padding-bottom: var(--spacing-s); }",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.m-spacing-bottom-desktop",
          "cssText": ".con-block.m-spacing-bottom-desktop { padding-bottom: var(--spacing-m); }",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.l-spacing-bottom-desktop",
          "cssText": ".con-block.l-spacing-bottom-desktop { padding-bottom: var(--spacing-l); }",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.xl-spacing-bottom-desktop",
          "cssText": ".con-block.xl-spacing-bottom-desktop { padding-bottom: var(--spacing-xl); }",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.xxl-spacing-bottom-desktop",
          "cssText": ".con-block.xxl-spacing-bottom-desktop { padding-bottom: var(--spacing-xxl); }",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.xxxl-spacing-bottom-desktop",
          "cssText": ".con-block.xxxl-spacing-bottom-desktop { padding-bottom: var(--spacing-xxxl); }",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.no-spacing-bottom-desktop",
          "cssText": ".con-block.no-spacing-bottom-desktop { padding-bottom: 0px; }",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.xl-spacing-static-bottom-desktop",
          "cssText": ".con-block.xl-spacing-static-bottom-desktop { padding-bottom: var(--spacing-xl-static); }",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.xxl-spacing-static-bottom-desktop",
          "cssText": ".con-block.xxl-spacing-static-bottom-desktop { padding-bottom: var(--spacing-xxl-static); }",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.xxxl-spacing-static-bottom-desktop",
          "cssText": ".con-block.xxxl-spacing-static-bottom-desktop { padding-bottom: var(--spacing-xxxl-static); }",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.margin-top-desktop",
          "cssText": ".con-block.margin-top-desktop { margin-top: var(--spacing-s); }",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.margin-bottom-desktop",
          "cssText": ".con-block.margin-bottom-desktop { margin-bottom: var(--spacing-s); }",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 1440px) {\n  .con-block.max-width-12-desktop-large .foreground { max-width: 1200px; }\n}",
          "urls": [],
          "group": "screen and (min-width: 1440px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1440px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1440px",
                "1440",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.max-width-12-desktop-large .foreground",
          "cssText": ".con-block.max-width-12-desktop-large .foreground { max-width: 1200px; }",
          "urls": [],
          "group": "screen and (min-width: 1440px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1440px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1440px",
                "1440",
                "width"
              ]
            }
          ]
        }
      ]
    },
    {
      "href": "https://www.adobe.com/homepage/styles/styles.css",
      "rules": 1,
      "rulesList": [
        {
          "type": "CSSStyleRule",
          "selector": "header:not(.global-navigation)",
          "cssText": "header:not(.global-navigation) { border-bottom: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        }
      ]
    },
    {
      "href": "https://www.adobe.com/libs/blocks/hero-marquee/hero-marquee.css",
      "rules": 166,
      "rulesList": [
        {
          "type": "CSSStyleRule",
          "selector": ".hero-marquee",
          "cssText": ".hero-marquee { --s-min-height: 248px; --m-min-height: 448px; --l-min-height: 588px; --default-block-spacing: 5px; padding: var(--spacing-xl) 0; position: relative; display: flex; flex-direction: column; gap: var(--spacing-m); width: 100%; overflow: hidden; min-height: var(--m-min-height); justify-content: center; align-items: center; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero-marquee.no-min-height",
          "cssText": ".hero-marquee.no-min-height { min-height: unset; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero-marquee.s-min-height",
          "cssText": ".hero-marquee.s-min-height { min-height: var(--s-min-height); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero-marquee.l-min-height",
          "cssText": ".hero-marquee.l-min-height { min-height: var(--l-min-height); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dark .hero-marquee, .hero-marquee.dark",
          "cssText": ".dark .hero-marquee, .hero-marquee.dark { color: var(--color-white); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero-marquee .background picture",
          "cssText": ".hero-marquee .background picture { line-height: 0; width: 100%; height: 100%; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero-marquee .action-area, .hero-marquee .lockup-area",
          "cssText": ".hero-marquee .action-area, .hero-marquee .lockup-area { display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero-marquee .action-area",
          "cssText": ".hero-marquee .action-area { flex-flow: column wrap; gap: var(--spacing-s); width: 100%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "html[lang=\"ja-jp\"] .hero-marquee .action-area",
          "cssText": "html[lang=\"ja-jp\"] .hero-marquee .action-area { display: block; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "html[lang=\"ja-jp\"] .hero-marquee .action-area wbr:last-of-type",
          "cssText": "html[lang=\"ja-jp\"] .hero-marquee .action-area wbr:last-of-type { display: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero-marquee .background-split picture img",
          "cssText": ".hero-marquee .background-split picture img { object-fit: cover; height: 100%; width: 100%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero-marquee.media-cover picture",
          "cssText": ".hero-marquee.media-cover picture { line-height: 0em; display: block; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero-marquee .main-copy",
          "cssText": ".hero-marquee .main-copy { display: flex; flex-direction: column; gap: var(--spacing-xs); justify-content: center; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero-marquee .row-lockup .lockup-area",
          "cssText": ".hero-marquee .row-lockup .lockup-area { margin: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero-marquee .lockup-area a, .hero-marquee .lockup-area a:hover",
          "cssText": ".hero-marquee .lockup-area a, .hero-marquee .lockup-area a:hover { color: inherit; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero-marquee .lockup-area > p:has(picture)",
          "cssText": ".hero-marquee .lockup-area > p:has(picture) { margin-block: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero-marquee .lockup-label",
          "cssText": ".hero-marquee .lockup-label { line-height: initial; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero-marquee .action-area a:not(.con-button)",
          "cssText": ".hero-marquee .action-area a:not(.con-button) { font-weight: 700; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero-marquee .foreground-media",
          "cssText": ".hero-marquee .foreground-media { z-index: 1; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero-marquee .foreground-media picture img, .hero-marquee .foreground-media video",
          "cssText": ".hero-marquee .foreground-media picture img, .hero-marquee .foreground-media video { object-fit: cover; object-position: center top; width: 100%; height: 100%; display: block; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero-marquee.center",
          "cssText": ".hero-marquee.center { text-align: center; align-items: center; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero-marquee.center .action-area, .hero-marquee.center .lockup-area",
          "cssText": ".hero-marquee.center .action-area, .hero-marquee.center .lockup-area { justify-content: center; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero-marquee .norm p",
          "cssText": ".hero-marquee .norm p { margin: var(--spacing-xs) 0; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero-marquee .main-copy p, .hero-marquee .main-copy p:only-child, .hero-marquee .main-copy [class^=\"heading\"], .hero-marquee .norm p:only-child",
          "cssText": ".hero-marquee .main-copy p, .hero-marquee .main-copy p:only-child, .hero-marquee .main-copy [class^=\"heading\"], .hero-marquee .norm p:only-child { margin: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero-marquee .norm :is(h1, h2, h3, h4, h5, h6)",
          "cssText": ".hero-marquee .norm :is(h1, h2, h3, h4, h5, h6) { margin: 0 0 var(--spacing-xs) 0; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero-marquee .norm div > :last-child",
          "cssText": ".hero-marquee .norm div > :last-child { margin-bottom: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero-marquee .norm div :first-child",
          "cssText": ".hero-marquee .norm div :first-child { margin-top: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero-marquee > .foreground",
          "cssText": ".hero-marquee > .foreground { max-width: var(--grid-container-width); min-width: var(--grid-container-width); margin: 0px auto; display: grid; gap: var(--spacing-m); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "html[dir=\"rtl\"] .hero-marquee .foreground",
          "cssText": "html[dir=\"rtl\"] .hero-marquee .foreground { flex-direction: row-reverse; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero-marquee > .foreground.fw",
          "cssText": ".hero-marquee > .foreground.fw { width: 100%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero-marquee .foreground .copy",
          "cssText": ".hero-marquee .foreground .copy { display: grid; gap: var(--spacing-xs); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero-marquee hr",
          "cssText": ".hero-marquee hr { width: 100%; border: none; height: 1px; margin: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero-marquee .has-divider",
          "cssText": ".hero-marquee .has-divider { margin: var(--spacing-xxs) 0; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero-marquee .hidden",
          "cssText": ".hero-marquee .hidden { visibility: hidden; height: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero-marquee .foreground div:empty",
          "cssText": ".hero-marquee .foreground div:empty { display: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero-marquee .foreground div.empty-asset:empty",
          "cssText": ".hero-marquee .foreground div.empty-asset:empty { display: block; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero-marquee .row-list",
          "cssText": ".hero-marquee .row-list { text-align: left; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "html[dir=\"rtl\"] .hero-marquee .row-list",
          "cssText": "html[dir=\"rtl\"] .hero-marquee .row-list { text-align: right; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero-marquee .row-list .row-wrapper",
          "cssText": ".hero-marquee .row-list .row-wrapper { display: table; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero-marquee .row-list li",
          "cssText": ".hero-marquee .row-list li { margin-bottom: var(--spacing-xxs); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero-marquee .row-qrcode .row-wrapper",
          "cssText": ".hero-marquee .row-qrcode .row-wrapper { display: flex; gap: var(--spacing-s); margin: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero-marquee .row-qrcode .row-wrapper > p",
          "cssText": ".hero-marquee .row-qrcode .row-wrapper > p { margin: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero-marquee .row-qrcode .qr-code-img",
          "cssText": ".hero-marquee .row-qrcode .qr-code-img { display: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero-marquee .row-qrcode .google-play a, .hero-marquee .row-qrcode .app-store a",
          "cssText": ".hero-marquee .row-qrcode .google-play a, .hero-marquee .row-qrcode .app-store a { width: 135px; height: 40px; display: inline-flex; color: transparent; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero-marquee .row-qrcode .google-play a",
          "cssText": ".hero-marquee .row-qrcode .google-play a { background: url(\"/libs/img/ui/google-play.svg\") no-repeat transparent; }",
          "urls": [
            "/libs/img/ui/google-play.svg"
          ],
          "group": "",
          "sources": [],
          "sinks": [
            {
              "reason": "url_sink",
              "urls": [
                "/libs/img/ui/google-play.svg"
              ]
            }
          ],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero-marquee .row-qrcode .app-store a",
          "cssText": ".hero-marquee .row-qrcode .app-store a { background: url(\"/libs/img/ui/app-store.svg\") no-repeat transparent; }",
          "urls": [
            "/libs/img/ui/app-store.svg"
          ],
          "group": "",
          "sources": [],
          "sinks": [
            {
              "reason": "url_sink",
              "urls": [
                "/libs/img/ui/app-store.svg"
              ]
            }
          ],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero-marquee.center .row-qrcode .row-wrapper",
          "cssText": ".hero-marquee.center .row-qrcode .row-wrapper { justify-content: center; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero-marquee.center .row-list .row-wrapper",
          "cssText": ".hero-marquee.center .row-list .row-wrapper { margin: 0px auto; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero-marquee .row-list .icon-list",
          "cssText": ".hero-marquee .row-list .icon-list { padding-inline-start: var(--spacing-m); margin: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero-marquee li.icon-item",
          "cssText": ".hero-marquee li.icon-item { position: relative; list-style: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero-marquee li::marker",
          "cssText": ".hero-marquee li::marker { padding-inline-start: 40px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero-marquee li.icon-item::marker",
          "cssText": ".hero-marquee li.icon-item::marker { color: transparent; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero-marquee li.icon-item span.icon",
          "cssText": ".hero-marquee li.icon-item span.icon { position: absolute; left: -28px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "html[dir=\"rtl\"] .hero-marquee li.icon-item span.icon",
          "cssText": "html[dir=\"rtl\"] .hero-marquee li.icon-item span.icon { left: unset; right: -28px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero-marquee .row-supplemental.bold",
          "cssText": ".hero-marquee .row-supplemental.bold { font-weight: 700; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero-marquee.media-cover.has-bg .asset",
          "cssText": ".hero-marquee.media-cover.has-bg .asset { display: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero-marquee.asset-left > .foreground.cols-2 > .asset",
          "cssText": ".hero-marquee.asset-left > .foreground.cols-2 > .asset { order: 2; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero-marquee .icon-list.has-svg-bullet",
          "cssText": ".hero-marquee .icon-list.has-svg-bullet { padding-inline-start: 0px; display: flex; flex-direction: column; gap: var(--spacing-xs); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero-marquee .icon-list.has-svg-bullet li.icon-item",
          "cssText": ".hero-marquee .icon-list.has-svg-bullet li.icon-item { display: flex; gap: 12px; align-items: center; padding: 0px; margin: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero-marquee .row-list.align-icon-start li.icon-item",
          "cssText": ".hero-marquee .row-list.align-icon-start li.icon-item { align-items: flex-start; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero-marquee li.icon-item picture.list-icon, .hero-marquee li.icon-item picture.list-icon img",
          "cssText": ".hero-marquee li.icon-item picture.list-icon, .hero-marquee li.icon-item picture.list-icon img { display: flex; max-width: 36px; height: auto; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 600px) {\n  .hero-marquee .con-button { display: block; text-align: center; }\n  .hero-marquee.media-top-mobile { flex-direction: column-reverse; }\n  .hero-marquee.media-top-mobile .foreground .copy { order: 2; }\n  .hero-marquee.media-cover:not(.bg-bottom-mobile), .hero-marquee.media-cover:not(.media-hidden-mobile) { padding-bottom: 0px; }\n  .hero-marquee:is(.bg-top-mobile, .bg-bottom-mobile) .background, .hero-marquee:is(.bg-top-mobile, .bg-bottom-mobile) .background video { position: relative; width: 100%; }\n  .hero-marquee.bg-top-mobile { padding-top: unset; }\n  .hero-marquee.bg-bottom-mobile { padding-bottom: unset; }\n  .hero-marquee.media-cover.media-top-mobile, .hero-marquee.media-cover.media-hidden-mobile:not(.bg-bottom-mobile) { padding-top: 0px; padding-bottom: var(--spacing-xl); }\n  .hero-marquee.bg-top-mobile:not(.bg-bottom-mobile), .hero-marquee.bg-top-mobile.media-top-mobile { padding-top: 0px; }\n  .hero-marquee.bg-bottom-mobile .background { order: 2; }\n  html[lang=\"ja-jp\"] .hero-marquee .action-area a:not(:first-of-type) { margin-top: calc(var(--spacing-s) - var(--default-block-spacing)); }\n  .hero-marquee.media-hidden-mobile .foreground .asset, .hero-marquee.media-hidden-mobile .foreground-media { display: none; }\n  .hero-marquee .row-supplemental.center { text-align: center; }\n}",
          "urls": [],
          "group": "(max-width: 600px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "600px",
                "600",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero-marquee .con-button",
          "cssText": ".hero-marquee .con-button { display: block; text-align: center; }",
          "urls": [],
          "group": "(max-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero-marquee.media-top-mobile",
          "cssText": ".hero-marquee.media-top-mobile { flex-direction: column-reverse; }",
          "urls": [],
          "group": "(max-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero-marquee.media-top-mobile .foreground .copy",
          "cssText": ".hero-marquee.media-top-mobile .foreground .copy { order: 2; }",
          "urls": [],
          "group": "(max-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero-marquee.media-cover:not(.bg-bottom-mobile), .hero-marquee.media-cover:not(.media-hidden-mobile)",
          "cssText": ".hero-marquee.media-cover:not(.bg-bottom-mobile), .hero-marquee.media-cover:not(.media-hidden-mobile) { padding-bottom: 0px; }",
          "urls": [],
          "group": "(max-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero-marquee:is(.bg-top-mobile, .bg-bottom-mobile) .background, .hero-marquee:is(.bg-top-mobile, .bg-bottom-mobile) .background video",
          "cssText": ".hero-marquee:is(.bg-top-mobile, .bg-bottom-mobile) .background, .hero-marquee:is(.bg-top-mobile, .bg-bottom-mobile) .background video { position: relative; width: 100%; }",
          "urls": [],
          "group": "(max-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero-marquee.bg-top-mobile",
          "cssText": ".hero-marquee.bg-top-mobile { padding-top: unset; }",
          "urls": [],
          "group": "(max-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero-marquee.bg-bottom-mobile",
          "cssText": ".hero-marquee.bg-bottom-mobile { padding-bottom: unset; }",
          "urls": [],
          "group": "(max-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero-marquee.media-cover.media-top-mobile, .hero-marquee.media-cover.media-hidden-mobile:not(.bg-bottom-mobile)",
          "cssText": ".hero-marquee.media-cover.media-top-mobile, .hero-marquee.media-cover.media-hidden-mobile:not(.bg-bottom-mobile) { padding-top: 0px; padding-bottom: var(--spacing-xl); }",
          "urls": [],
          "group": "(max-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero-marquee.bg-top-mobile:not(.bg-bottom-mobile), .hero-marquee.bg-top-mobile.media-top-mobile",
          "cssText": ".hero-marquee.bg-top-mobile:not(.bg-bottom-mobile), .hero-marquee.bg-top-mobile.media-top-mobile { padding-top: 0px; }",
          "urls": [],
          "group": "(max-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero-marquee.bg-bottom-mobile .background",
          "cssText": ".hero-marquee.bg-bottom-mobile .background { order: 2; }",
          "urls": [],
          "group": "(max-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": "html[lang=\"ja-jp\"] .hero-marquee .action-area a:not(:first-of-type)",
          "cssText": "html[lang=\"ja-jp\"] .hero-marquee .action-area a:not(:first-of-type) { margin-top: calc(var(--spacing-s) - var(--default-block-spacing)); }",
          "urls": [],
          "group": "(max-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero-marquee.media-hidden-mobile .foreground .asset, .hero-marquee.media-hidden-mobile .foreground-media",
          "cssText": ".hero-marquee.media-hidden-mobile .foreground .asset, .hero-marquee.media-hidden-mobile .foreground-media { display: none; }",
          "urls": [],
          "group": "(max-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero-marquee .row-supplemental.center",
          "cssText": ".hero-marquee .row-supplemental.center { text-align: center; }",
          "urls": [],
          "group": "(max-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 600px) and (max-width: 1199px) {\n  .hero-marquee.media-cover:not(.bg-bottom-mobile) { padding-bottom: 0px; }\n  .hero-marquee.media-top-tablet, .hero-marquee.media-cover.media-top-tablet { flex-direction: column-reverse; }\n  .hero-marquee.media-top-tablet > .foreground .copy { order: 2; }\n  .hero-marquee.media-cover.media-top-tablet, .hero-marquee.media-cover.media-hidden-tablet:not(.bg-bottom-tablet) { padding-top: 0px; padding-bottom: var(--spacing-xl); }\n  .hero-marquee:is(.bg-top-tablet, .bg-bottom-tablet) .background, .hero-marquee:is(.bg-top-tablet, .bg-bottom-tablet) .background video { position: relative; width: 100%; }\n  .hero-marquee.bg-top-tablet { padding-top: 0px; }\n  .hero-marquee.bg-bottom-tablet { padding-bottom: 0px; }\n  .hero-marquee.bg-bottom-tablet .background { order: 2; }\n  .hero-marquee.media-hidden-tablet .foreground .asset, .hero-marquee.media-hidden-tablet .foreground-media, .hero-marquee.media-hidden-tablet-tablet .foreground-media { display: none; }\n}",
          "urls": [],
          "group": "screen and (min-width: 600px) and (max-width: 1199px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px) and (max-width: 1199px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "max-width",
                "1199px",
                "600",
                "1199",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero-marquee.media-cover:not(.bg-bottom-mobile)",
          "cssText": ".hero-marquee.media-cover:not(.bg-bottom-mobile) { padding-bottom: 0px; }",
          "urls": [],
          "group": "screen and (min-width: 600px) and (max-width: 1199px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px) and (max-width: 1199px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "max-width",
                "1199px",
                "600",
                "1199",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero-marquee.media-top-tablet, .hero-marquee.media-cover.media-top-tablet",
          "cssText": ".hero-marquee.media-top-tablet, .hero-marquee.media-cover.media-top-tablet { flex-direction: column-reverse; }",
          "urls": [],
          "group": "screen and (min-width: 600px) and (max-width: 1199px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px) and (max-width: 1199px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "max-width",
                "1199px",
                "600",
                "1199",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero-marquee.media-top-tablet > .foreground .copy",
          "cssText": ".hero-marquee.media-top-tablet > .foreground .copy { order: 2; }",
          "urls": [],
          "group": "screen and (min-width: 600px) and (max-width: 1199px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px) and (max-width: 1199px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "max-width",
                "1199px",
                "600",
                "1199",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero-marquee.media-cover.media-top-tablet, .hero-marquee.media-cover.media-hidden-tablet:not(.bg-bottom-tablet)",
          "cssText": ".hero-marquee.media-cover.media-top-tablet, .hero-marquee.media-cover.media-hidden-tablet:not(.bg-bottom-tablet) { padding-top: 0px; padding-bottom: var(--spacing-xl); }",
          "urls": [],
          "group": "screen and (min-width: 600px) and (max-width: 1199px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px) and (max-width: 1199px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "max-width",
                "1199px",
                "600",
                "1199",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero-marquee:is(.bg-top-tablet, .bg-bottom-tablet) .background, .hero-marquee:is(.bg-top-tablet, .bg-bottom-tablet) .background video",
          "cssText": ".hero-marquee:is(.bg-top-tablet, .bg-bottom-tablet) .background, .hero-marquee:is(.bg-top-tablet, .bg-bottom-tablet) .background video { position: relative; width: 100%; }",
          "urls": [],
          "group": "screen and (min-width: 600px) and (max-width: 1199px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px) and (max-width: 1199px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "max-width",
                "1199px",
                "600",
                "1199",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero-marquee.bg-top-tablet",
          "cssText": ".hero-marquee.bg-top-tablet { padding-top: 0px; }",
          "urls": [],
          "group": "screen and (min-width: 600px) and (max-width: 1199px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px) and (max-width: 1199px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "max-width",
                "1199px",
                "600",
                "1199",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero-marquee.bg-bottom-tablet",
          "cssText": ".hero-marquee.bg-bottom-tablet { padding-bottom: 0px; }",
          "urls": [],
          "group": "screen and (min-width: 600px) and (max-width: 1199px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px) and (max-width: 1199px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "max-width",
                "1199px",
                "600",
                "1199",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero-marquee.bg-bottom-tablet .background",
          "cssText": ".hero-marquee.bg-bottom-tablet .background { order: 2; }",
          "urls": [],
          "group": "screen and (min-width: 600px) and (max-width: 1199px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px) and (max-width: 1199px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "max-width",
                "1199px",
                "600",
                "1199",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero-marquee.media-hidden-tablet .foreground .asset, .hero-marquee.media-hidden-tablet .foreground-media, .hero-marquee.media-hidden-tablet-tablet .foreground-media",
          "cssText": ".hero-marquee.media-hidden-tablet .foreground .asset, .hero-marquee.media-hidden-tablet .foreground-media, .hero-marquee.media-hidden-tablet-tablet .foreground-media { display: none; }",
          "urls": [],
          "group": "screen and (min-width: 600px) and (max-width: 1199px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px) and (max-width: 1199px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "max-width",
                "1199px",
                "600",
                "1199",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 600px) {\n  .hero-marquee, .hero-marquee .action-area { flex-direction: row; }\n  .hero-marquee .action-area { align-items: center; }\n  .hero-marquee.media-cover { flex-direction: column; }\n  .hero-marquee.center .action-area { justify-content: center; }\n  .hero-marquee.bg-top-tablet, .hero-marquee.bg-bottom-tablet { flex-direction: column; }\n  .hero-marquee.s-min-height-tablet { min-height: var(--s-min-height); }\n  .hero-marquee.l-min-height-tablet { min-height: var(--l-min-height); }\n  html[lang=\"ja-jp\"] .hero-marquee .action-area a:last-of-type { margin-left: calc(var(--spacing-s) - var(--default-block-spacing)); }\n}",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero-marquee, .hero-marquee .action-area",
          "cssText": ".hero-marquee, .hero-marquee .action-area { flex-direction: row; }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero-marquee .action-area",
          "cssText": ".hero-marquee .action-area { align-items: center; }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero-marquee.media-cover",
          "cssText": ".hero-marquee.media-cover { flex-direction: column; }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero-marquee.center .action-area",
          "cssText": ".hero-marquee.center .action-area { justify-content: center; }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero-marquee.bg-top-tablet, .hero-marquee.bg-bottom-tablet",
          "cssText": ".hero-marquee.bg-top-tablet, .hero-marquee.bg-bottom-tablet { flex-direction: column; }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero-marquee.s-min-height-tablet",
          "cssText": ".hero-marquee.s-min-height-tablet { min-height: var(--s-min-height); }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero-marquee.l-min-height-tablet",
          "cssText": ".hero-marquee.l-min-height-tablet { min-height: var(--l-min-height); }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": "html[lang=\"ja-jp\"] .hero-marquee .action-area a:last-of-type",
          "cssText": "html[lang=\"ja-jp\"] .hero-marquee .action-area a:last-of-type { margin-left: calc(var(--spacing-s) - var(--default-block-spacing)); }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 920px) {\n  .hero-marquee .foreground.cols-1 { max-width: 800px; min-width: unset; }\n}",
          "urls": [],
          "group": "screen and (min-width: 920px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 920px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "920px",
                "920",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero-marquee .foreground.cols-1",
          "cssText": ".hero-marquee .foreground.cols-1 { max-width: 800px; min-width: unset; }",
          "urls": [],
          "group": "screen and (min-width: 920px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 920px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "920px",
                "920",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero-marquee.mobile-left-align.center",
          "cssText": ".hero-marquee.mobile-left-align.center { text-align: start; align-items: flex-start; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero-marquee.mobile-left-align.center :is(.action-area, .lockup-area, .row-qrcode .row-wrapper)",
          "cssText": ".hero-marquee.mobile-left-align.center :is(.action-area, .lockup-area, .row-qrcode .row-wrapper) { justify-content: flex-start; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero-marquee.mobile-left-align.center .row-list .row-wrapper",
          "cssText": ".hero-marquee.mobile-left-align.center .row-list .row-wrapper { margin: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "body.mweb-enabled .hero-marquee .action-area:has(a:not(.con-button))",
          "cssText": "body.mweb-enabled .hero-marquee .action-area:has(a:not(.con-button)) { gap: var(--spacing-xs); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "body.mweb-enabled .hero-marquee .action-area a:not(.con-button), body.mweb-enabled .hero-marquee .con-block.row-text:has(.action-area) + .con-block.row-text .row-wrapper",
          "cssText": "body.mweb-enabled .hero-marquee .action-area a:not(.con-button), body.mweb-enabled .hero-marquee .con-block.row-text:has(.action-area) + .con-block.row-text .row-wrapper { align-self: center; font-size: 17px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero-marquee .body-bold",
          "cssText": ".hero-marquee .body-bold { font-weight: 700; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (max-width: 1199px) {\n  .mweb-enabled .hero-marquee .s-lockup .lockup-area { font-size: var(--type-lockup-xs-size); letter-spacing: var(--type-lockup-xs-ls); gap: 6px; }\n  .mweb-enabled .hero-marquee .s-lockup .lockup-area img { height: var(--icon-size-xs); }\n}",
          "urls": [],
          "group": "screen and (max-width: 1199px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 1199px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "1199px",
                "1199",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".mweb-enabled .hero-marquee .s-lockup .lockup-area",
          "cssText": ".mweb-enabled .hero-marquee .s-lockup .lockup-area { font-size: var(--type-lockup-xs-size); letter-spacing: var(--type-lockup-xs-ls); gap: 6px; }",
          "urls": [],
          "group": "screen and (max-width: 1199px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 1199px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "1199px",
                "1199",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".mweb-enabled .hero-marquee .s-lockup .lockup-area img",
          "cssText": ".mweb-enabled .hero-marquee .s-lockup .lockup-area img { height: var(--icon-size-xs); }",
          "urls": [],
          "group": "screen and (max-width: 1199px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 1199px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "1199px",
                "1199",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 1200px) {\n  .hero-marquee { display: flex; flex-direction: row; }\n  .hero-marquee.no-min-height-desktop { min-height: unset; }\n  .hero-marquee.media-cover { flex-direction: row; }\n  .hero-marquee.media-cover picture { display: unset; }\n  .hero-marquee.media-cover.has-bg .asset { display: initial; }\n  .hero-marquee > .foreground.cols-2 { grid-template-columns: minmax(50%, 1fr) minmax(50%, 1fr); align-items: center; gap: 0px; }\n  .hero-marquee > .foreground.cols-2 .copy { padding-inline-end: 100px; }\n  .hero-marquee.asset-left > .foreground.cols-2 .copy { padding-inline-start: 100px; padding-inline-end: unset; }\n  .hero-marquee .foreground-media { position: absolute; width: 50vw; height: 100%; right: 0px; top: 0px; }\n  .hero-marquee.asset-left .foreground-media, html[dir=\"rtl\"] .hero-marquee .foreground-media { right: unset; left: 0px; }\n  html[dir=\"rtl\"] .hero-marquee.asset-left .foreground-media { right: 0px; left: unset; }\n  .hero-marquee.asset-left > .foreground.cols-2 > .asset { order: unset; }\n  .hero-marquee .main-copy .action-area, .hero-marquee .main-copy [class*=\"heading-\"] + [class*=\"body-\"] { order: unset; }\n  .hero-marquee .row-qrcode .qr-code-img { display: inline-block; max-width: 140px; max-height: 140px; margin: 0px; }\n  .hero-marquee .row-qrcode .google-play, .hero-marquee .row-qrcode .app-store { display: none; }\n  .hero-marquee.s-min-height-desktop { min-height: var(--s-min-height); }\n  .hero-marquee.l-min-height-desktop { min-height: var(--l-min-height); }\n  .hero-marquee.mobile-left-align.center { text-align: center; align-i...",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero-marquee",
          "cssText": ".hero-marquee { display: flex; flex-direction: row; }",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero-marquee.no-min-height-desktop",
          "cssText": ".hero-marquee.no-min-height-desktop { min-height: unset; }",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero-marquee.media-cover",
          "cssText": ".hero-marquee.media-cover { flex-direction: row; }",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero-marquee.media-cover picture",
          "cssText": ".hero-marquee.media-cover picture { display: unset; }",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero-marquee.media-cover.has-bg .asset",
          "cssText": ".hero-marquee.media-cover.has-bg .asset { display: initial; }",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero-marquee > .foreground.cols-2",
          "cssText": ".hero-marquee > .foreground.cols-2 { grid-template-columns: minmax(50%, 1fr) minmax(50%, 1fr); align-items: center; gap: 0px; }",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero-marquee > .foreground.cols-2 .copy",
          "cssText": ".hero-marquee > .foreground.cols-2 .copy { padding-inline-end: 100px; }",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero-marquee.asset-left > .foreground.cols-2 .copy",
          "cssText": ".hero-marquee.asset-left > .foreground.cols-2 .copy { padding-inline-start: 100px; padding-inline-end: unset; }",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero-marquee .foreground-media",
          "cssText": ".hero-marquee .foreground-media { position: absolute; width: 50vw; height: 100%; right: 0px; top: 0px; }",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero-marquee.asset-left .foreground-media, html[dir=\"rtl\"] .hero-marquee .foreground-media",
          "cssText": ".hero-marquee.asset-left .foreground-media, html[dir=\"rtl\"] .hero-marquee .foreground-media { right: unset; left: 0px; }",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": "html[dir=\"rtl\"] .hero-marquee.asset-left .foreground-media",
          "cssText": "html[dir=\"rtl\"] .hero-marquee.asset-left .foreground-media { right: 0px; left: unset; }",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero-marquee.asset-left > .foreground.cols-2 > .asset",
          "cssText": ".hero-marquee.asset-left > .foreground.cols-2 > .asset { order: unset; }",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero-marquee .main-copy .action-area, .hero-marquee .main-copy [class*=\"heading-\"] + [class*=\"body-\"]",
          "cssText": ".hero-marquee .main-copy .action-area, .hero-marquee .main-copy [class*=\"heading-\"] + [class*=\"body-\"] { order: unset; }",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero-marquee .row-qrcode .qr-code-img",
          "cssText": ".hero-marquee .row-qrcode .qr-code-img { display: inline-block; max-width: 140px; max-height: 140px; margin: 0px; }",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero-marquee .row-qrcode .google-play, .hero-marquee .row-qrcode .app-store",
          "cssText": ".hero-marquee .row-qrcode .google-play, .hero-marquee .row-qrcode .app-store { display: none; }",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero-marquee.s-min-height-desktop",
          "cssText": ".hero-marquee.s-min-height-desktop { min-height: var(--s-min-height); }",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero-marquee.l-min-height-desktop",
          "cssText": ".hero-marquee.l-min-height-desktop { min-height: var(--l-min-height); }",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero-marquee.mobile-left-align.center",
          "cssText": ".hero-marquee.mobile-left-align.center { text-align: center; align-items: center; }",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero-marquee.mobile-left-align.center :is(.action-area, .lockup-area, .row-qrcode .row-wrapper)",
          "cssText": ".hero-marquee.mobile-left-align.center :is(.action-area, .lockup-area, .row-qrcode .row-wrapper) { justify-content: center; }",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero-marquee.mobile-left-align.center .row-list .row-wrapper",
          "cssText": ".hero-marquee.mobile-left-align.center .row-list .row-wrapper { margin: 0px auto; }",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": "body.mweb-enabled .hero-marquee .action-area:has(a:not(.con-button))",
          "cssText": "body.mweb-enabled .hero-marquee .action-area:has(a:not(.con-button)) { gap: var(--spacing-s); }",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": "body.mweb-enabled .hero-marquee .action-area a:not(.con-button), body.mweb-enabled .hero-marquee .con-block.row-text:has(.action-area) + .con-block.row-text .row-wrapper",
          "cssText": "body.mweb-enabled .hero-marquee .action-area a:not(.con-button), body.mweb-enabled .hero-marquee .con-block.row-text:has(.action-area) + .con-block.row-text .row-wrapper { align-self: unset; font-size: inherit; }",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ":root:has(meta[name=\"theme\"][content=\"max25\"])",
          "cssText": ":root:has(meta[name=\"theme\"][content=\"max25\"]) {\n  & .hero-marquee.max25 .foreground .copy .detail-l { font-size: 16px; line-height: 1.5; font-weight: 400; color: rgb(185, 185, 185); text-transform: none; }\n  & .hero-marquee.max25 .foreground .copy .heading-xxl { font-size: 32px; font-weight: 900; line-height: 1.05; }\n  & .hero-marquee.max25 .foreground .copy .body-xl { font-size: 18px; color: rgb(185, 185, 185); line-height: 1.35; }\n  @media (max-width: 599px) {\n  & .hero-marquee.max25 .con-button.button-justified-mobile { align-self: flex-start; }\n}\n  @media (max-width: 1199px) {\n  & .hero-marquee.max25 { padding: 56px 0px; gap: 40px; }\n  & .hero-marquee.max25 .background .mobile-only, & .hero-marquee.max25 .background .tablet-only { margin-inline: var(--grid-margins-width); }\n  & .hero-marquee.max25 .background :is(.mobile-only, .tablet-only) img { display: block; overflow: hidden; border-radius: 20px; }\n  & .hero-marquee.max25 .background :is(.mobile-only, .tablet-only)::after { position: absolute; margin-inline: var(--grid-margins-width); content: \"\"; inset: 0px; border: 3px solid rgba(255, 255, 255, 0.3); border-radius: 20px; pointer-events: none; }\n}\n  & .hero-marquee.max-ff { min-height: 497px; }\n  & .hero-marquee.max-ff > .foreground { padding: 10px 0px; gap: 40px; }\n  & .hero-marquee.max-ff.unity-enabled [class^=\"heading-\"] { font-family: \"Adobe Clean Display\", \"Adobe Clean\", adobe-clean, \"Trebuchet MS\", sans-serif; font-weight: 900; font-size: 36px; line-height: 105%; max-width: 300px; margin: 0px auto; text-align: center; letter-spacing: -0.015em; }\n  & .hero-ma...",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "& .hero-marquee.max25 .foreground .copy .detail-l",
          "cssText": "& .hero-marquee.max25 .foreground .copy .detail-l { font-size: 16px; line-height: 1.5; font-weight: 400; color: rgb(185, 185, 185); text-transform: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "& .hero-marquee.max25 .foreground .copy .heading-xxl",
          "cssText": "& .hero-marquee.max25 .foreground .copy .heading-xxl { font-size: 32px; font-weight: 900; line-height: 1.05; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "& .hero-marquee.max25 .foreground .copy .body-xl",
          "cssText": "& .hero-marquee.max25 .foreground .copy .body-xl { font-size: 18px; color: rgb(185, 185, 185); line-height: 1.35; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 599px) {\n  & .hero-marquee.max25 .con-button.button-justified-mobile { align-self: flex-start; }\n}",
          "urls": [],
          "group": "(max-width: 599px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 599px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "599px",
                "599",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "& .hero-marquee.max25 .con-button.button-justified-mobile",
          "cssText": "& .hero-marquee.max25 .con-button.button-justified-mobile { align-self: flex-start; }",
          "urls": [],
          "group": "(max-width: 599px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 599px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "599px",
                "599",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 1199px) {\n  & .hero-marquee.max25 { padding: 56px 0px; gap: 40px; }\n  & .hero-marquee.max25 .background .mobile-only, & .hero-marquee.max25 .background .tablet-only { margin-inline: var(--grid-margins-width); }\n  & .hero-marquee.max25 .background :is(.mobile-only, .tablet-only) img { display: block; overflow: hidden; border-radius: 20px; }\n  & .hero-marquee.max25 .background :is(.mobile-only, .tablet-only)::after { position: absolute; margin-inline: var(--grid-margins-width); content: \"\"; inset: 0px; border: 3px solid rgba(255, 255, 255, 0.3); border-radius: 20px; pointer-events: none; }\n}",
          "urls": [],
          "group": "(max-width: 1199px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 1199px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "1199px",
                "1199",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "& .hero-marquee.max25",
          "cssText": "& .hero-marquee.max25 { padding: 56px 0px; gap: 40px; }",
          "urls": [],
          "group": "(max-width: 1199px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 1199px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "1199px",
                "1199",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": "& .hero-marquee.max25 .background .mobile-only, & .hero-marquee.max25 .background .tablet-only",
          "cssText": "& .hero-marquee.max25 .background .mobile-only, & .hero-marquee.max25 .background .tablet-only { margin-inline: var(--grid-margins-width); }",
          "urls": [],
          "group": "(max-width: 1199px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 1199px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "1199px",
                "1199",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": "& .hero-marquee.max25 .background :is(.mobile-only, .tablet-only) img",
          "cssText": "& .hero-marquee.max25 .background :is(.mobile-only, .tablet-only) img { display: block; overflow: hidden; border-radius: 20px; }",
          "urls": [],
          "group": "(max-width: 1199px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 1199px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "1199px",
                "1199",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": "& .hero-marquee.max25 .background :is(.mobile-only, .tablet-only)::after",
          "cssText": "& .hero-marquee.max25 .background :is(.mobile-only, .tablet-only)::after { position: absolute; margin-inline: var(--grid-margins-width); content: \"\"; inset: 0px; border: 3px solid rgba(255, 255, 255, 0.3); border-radius: 20px; pointer-events: none; }",
          "urls": [],
          "group": "(max-width: 1199px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 1199px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "1199px",
                "1199",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": "& .hero-marquee.max-ff",
          "cssText": "& .hero-marquee.max-ff { min-height: 497px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "& .hero-marquee.max-ff > .foreground",
          "cssText": "& .hero-marquee.max-ff > .foreground { padding: 10px 0px; gap: 40px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "& .hero-marquee.max-ff.unity-enabled [class^=\"heading-\"]",
          "cssText": "& .hero-marquee.max-ff.unity-enabled [class^=\"heading-\"] { font-family: \"Adobe Clean Display\", \"Adobe Clean\", adobe-clean, \"Trebuchet MS\", sans-serif; font-weight: 900; font-size: 36px; line-height: 105%; max-width: 300px; margin: 0px auto; text-align: center; letter-spacing: -0.015em; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "& .hero-marquee.max-ff .background::after",
          "cssText": "& .hero-marquee.max-ff .background::after { content: \"\"; position: absolute; inset: 0px; background: linear-gradient(to top, rgba(0, 0, 0, 0.7), transparent); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (min-width: 600px) {\n  & .hero-marquee.max25 .foreground .copy .detail-l { font-size: 18px; line-height: 1.5; }\n  & .hero-marquee.max25 .foreground .copy .heading-xxl { font-size: 36px; }\n  & .hero-marquee.max25 .foreground .copy .body-xl { font-size: 20px; }\n  & .hero-marquee.max-ff { min-height: 592px; }\n  & .hero-marquee.max-ff.unity-enabled [class^=\"heading-\"] { font-weight: 700; font-size: 44px; line-height: 100%; max-width: 660px; }\n}",
          "urls": [],
          "group": "(min-width: 600px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "& .hero-marquee.max25 .foreground .copy .detail-l",
          "cssText": "& .hero-marquee.max25 .foreground .copy .detail-l { font-size: 18px; line-height: 1.5; }",
          "urls": [],
          "group": "(min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": "& .hero-marquee.max25 .foreground .copy .heading-xxl",
          "cssText": "& .hero-marquee.max25 .foreground .copy .heading-xxl { font-size: 36px; }",
          "urls": [],
          "group": "(min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": "& .hero-marquee.max25 .foreground .copy .body-xl",
          "cssText": "& .hero-marquee.max25 .foreground .copy .body-xl { font-size: 20px; }",
          "urls": [],
          "group": "(min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": "& .hero-marquee.max-ff",
          "cssText": "& .hero-marquee.max-ff { min-height: 592px; }",
          "urls": [],
          "group": "(min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": "& .hero-marquee.max-ff.unity-enabled [class^=\"heading-\"]",
          "cssText": "& .hero-marquee.max-ff.unity-enabled [class^=\"heading-\"] { font-weight: 700; font-size: 44px; line-height: 100%; max-width: 660px; }",
          "urls": [],
          "group": "(min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 1199px) {\n  & .hero-marquee.max25 { min-height: unset; }\n}",
          "urls": [],
          "group": "(max-width: 1199px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 1199px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "1199px",
                "1199",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "& .hero-marquee.max25",
          "cssText": "& .hero-marquee.max25 { min-height: unset; }",
          "urls": [],
          "group": "(max-width: 1199px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 1199px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "1199px",
                "1199",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (min-width: 1200px) {\n  & .hero-marquee.max25 { padding: 160px 0px; }\n  & .hero-marquee.max25 .foreground .copy .heading-xxl { font-size: 54px; }\n  & .hero-marquee.max25 .foreground .copy .body-xl { font-size: 24px; line-height: 1.5; }\n  & .hero-marquee.max25 .foreground .asset { position: relative; border-radius: 20px; overflow: hidden; }\n  & .hero-marquee.max25 .foreground .asset img { display: block; }\n  & .hero-marquee.max25 .foreground .asset::after { position: absolute; content: \"\"; inset: 0px; border: 3px solid rgba(255, 255, 255, 0.3); border-radius: 20px; pointer-events: none; }\n  & .hero-marquee.max-ff { min-height: 915px; }\n  & .hero-marquee.max-ff .foreground { padding: 10px; min-width: unset; max-width: unset; }\n  & .hero-marquee.max-ff .foreground .copy { gap: 40px; }\n  & .hero-marquee.max-ff .foreground .ex-unity-wrap { max-width: 800px; margin: 0px auto; }\n  & .hero-marquee.max-ff.unity-enabled [class^=\"heading-\"] { font-size: 96px; max-width: 1400px; }\n}",
          "urls": [],
          "group": "(min-width: 1200px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "& .hero-marquee.max25",
          "cssText": "& .hero-marquee.max25 { padding: 160px 0px; }",
          "urls": [],
          "group": "(min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": "& .hero-marquee.max25 .foreground .copy .heading-xxl",
          "cssText": "& .hero-marquee.max25 .foreground .copy .heading-xxl { font-size: 54px; }",
          "urls": [],
          "group": "(min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": "& .hero-marquee.max25 .foreground .copy .body-xl",
          "cssText": "& .hero-marquee.max25 .foreground .copy .body-xl { font-size: 24px; line-height: 1.5; }",
          "urls": [],
          "group": "(min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": "& .hero-marquee.max25 .foreground .asset",
          "cssText": "& .hero-marquee.max25 .foreground .asset { position: relative; border-radius: 20px; overflow: hidden; }",
          "urls": [],
          "group": "(min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": "& .hero-marquee.max25 .foreground .asset img",
          "cssText": "& .hero-marquee.max25 .foreground .asset img { display: block; }",
          "urls": [],
          "group": "(min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": "& .hero-marquee.max25 .foreground .asset::after",
          "cssText": "& .hero-marquee.max25 .foreground .asset::after { position: absolute; content: \"\"; inset: 0px; border: 3px solid rgba(255, 255, 255, 0.3); border-radius: 20px; pointer-events: none; }",
          "urls": [],
          "group": "(min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": "& .hero-marquee.max-ff",
          "cssText": "& .hero-marquee.max-ff { min-height: 915px; }",
          "urls": [],
          "group": "(min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": "& .hero-marquee.max-ff .foreground",
          "cssText": "& .hero-marquee.max-ff .foreground { padding: 10px; min-width: unset; max-width: unset; }",
          "urls": [],
          "group": "(min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": "& .hero-marquee.max-ff .foreground .copy",
          "cssText": "& .hero-marquee.max-ff .foreground .copy { gap: 40px; }",
          "urls": [],
          "group": "(min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": "& .hero-marquee.max-ff .foreground .ex-unity-wrap",
          "cssText": "& .hero-marquee.max-ff .foreground .ex-unity-wrap { max-width: 800px; margin: 0px auto; }",
          "urls": [],
          "group": "(min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": "& .hero-marquee.max-ff.unity-enabled [class^=\"heading-\"]",
          "cssText": "& .hero-marquee.max-ff.unity-enabled [class^=\"heading-\"] { font-size: 96px; max-width: 1400px; }",
          "urls": [],
          "group": "(min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (min-width: 1480px) {\n  --grid-container-width: 1440px;\n  & .hero-marquee.max25 > .foreground.cols-2 .copy { padding-inline-end: 200px; }\n}",
          "urls": [],
          "group": "(min-width: 1480px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 1480px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1480px",
                "1480",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSNestedDeclarations",
          "selector": "",
          "cssText": "--grid-container-width: 1440px;",
          "urls": [],
          "group": "(min-width: 1480px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 1480px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1480px",
                "1480",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": "& .hero-marquee.max25 > .foreground.cols-2 .copy",
          "cssText": "& .hero-marquee.max25 > .foreground.cols-2 .copy { padding-inline-end: 200px; }",
          "urls": [],
          "group": "(min-width: 1480px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 1480px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1480px",
                "1480",
                "width"
              ]
            }
          ]
        }
      ]
    },
    {
      "href": "(inline <style>)",
      "rules": 2,
      "rulesList": [
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 1199px) {\n  .homepage-brick.link.split-background { min-height: unset !important; }\n}",
          "urls": [],
          "group": "(max-width: 1199px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 1199px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "1199px",
                "1199",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".homepage-brick.link.split-background",
          "cssText": ".homepage-brick.link.split-background { min-height: unset !important; }",
          "urls": [],
          "group": "(max-width: 1199px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 1199px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "1199px",
                "1199",
                "width"
              ]
            }
          ]
        }
      ]
    },
    {
      "href": "https://www.adobe.com/libs/styles/breakpoint-theme.css",
      "rules": 61,
      "rulesList": [
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.static-links[class*=\"dark-\"] a:not(.con-button), .static-links .con-block[class*=\"dark-\"] a:not(.con-button), .con-block.static-links[class*=\"light-\"] a:not(.con-button), .static-links .con-block[class*=\"light-\"] a:not(.con-button), .con-block.static-links[class*=\"dark-\"] a:not(.con-button):is(:hover, :focus-visible), .static-links .con-block[class*=\"dark-\"] a:not(.con-button):is(:hover, :focus-visible), .con-block.static-links[class*=\"light-\"] a:not(.con-button):is(:hover, :focus-visible), .static-links .con-block[class*=\"light-\"] a:not(.con-button):is(:hover, :focus-visible)",
          "cssText": ".con-block.static-links[class*=\"dark-\"] a:not(.con-button), .static-links .con-block[class*=\"dark-\"] a:not(.con-button), .con-block.static-links[class*=\"light-\"] a:not(.con-button), .static-links .con-block[class*=\"light-\"] a:not(.con-button), .con-block.static-links[class*=\"dark-\"] a:not(.con-button):is(:hover, :focus-visible), .static-links .con-block[class*=\"dark-\"] a:not(.con-button):is(:hover, :focus-visible), .con-block.static-links[class*=\"light-\"] a:not(.con-button):is(:hover, :focus-visible), .static-links .con-block[class*=\"light-\"] a:not(.con-button):is(:hover, :focus-visible) { color: inherit; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 600px) {\n  .con-block.light-mobile-only { color: var(--text-color); }\n  .con-block.dark-mobile-only { color: var(--color-white); }\n  .con-block.light-mobile-only a:not(.con-button) { color: var(--link-color); }\n  .con-block.dark-mobile-only a:not(.con-button) { color: var(--link-color-dark); }\n  .con-block.light-mobile-only a:not(.con-button):is(:hover, :focus, :active) { color: var(--link-hover-color); }\n  .con-block.dark-mobile-only a:not(.con-button):is(:hover, :focus, :active) { color: var(--link-hover-color-dark); }\n  .con-block.light-mobile-only a.con-button.outline { border-color: var(--text-color); color: var(--text-color); }\n  .con-block.dark-mobile-only a.con-button.outline { border-color: var(--color-white); color: var(--color-white); }\n  .con-block.light-mobile-only a.con-button.outline:is(:hover, :focus, :active) { background-color: var(--color-black); border-color: var(--color-black); color: var(--color-white); }\n  .con-block.dark-mobile-only a.con-button.outline:is(:hover, :focus, :active) { background-color: var(--color-white); border-color: var(--color-white); color: var(--color-black); text-decoration: none; }\n  .con-block.light-mobile-only a.con-button.fill { border-color: var(--text-color); background-color: var(--text-color); color: var(--color-white); }\n  .con-block.dark-mobile-only a.con-button.fill { border-color: var(--color-white); background-color: var(--color-white); color: var(--text-color); }\n  .con-block.light-mobile-only a.con-button.fill:is(:hover, :focus, :active) { border-color: var(--color-black); background-color: var(...",
          "urls": [],
          "group": "(max-width: 600px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "600px",
                "600",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.light-mobile-only",
          "cssText": ".con-block.light-mobile-only { color: var(--text-color); }",
          "urls": [],
          "group": "(max-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.dark-mobile-only",
          "cssText": ".con-block.dark-mobile-only { color: var(--color-white); }",
          "urls": [],
          "group": "(max-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.light-mobile-only a:not(.con-button)",
          "cssText": ".con-block.light-mobile-only a:not(.con-button) { color: var(--link-color); }",
          "urls": [],
          "group": "(max-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.dark-mobile-only a:not(.con-button)",
          "cssText": ".con-block.dark-mobile-only a:not(.con-button) { color: var(--link-color-dark); }",
          "urls": [],
          "group": "(max-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.light-mobile-only a:not(.con-button):is(:hover, :focus, :active)",
          "cssText": ".con-block.light-mobile-only a:not(.con-button):is(:hover, :focus, :active) { color: var(--link-hover-color); }",
          "urls": [],
          "group": "(max-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.dark-mobile-only a:not(.con-button):is(:hover, :focus, :active)",
          "cssText": ".con-block.dark-mobile-only a:not(.con-button):is(:hover, :focus, :active) { color: var(--link-hover-color-dark); }",
          "urls": [],
          "group": "(max-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.light-mobile-only a.con-button.outline",
          "cssText": ".con-block.light-mobile-only a.con-button.outline { border-color: var(--text-color); color: var(--text-color); }",
          "urls": [],
          "group": "(max-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.dark-mobile-only a.con-button.outline",
          "cssText": ".con-block.dark-mobile-only a.con-button.outline { border-color: var(--color-white); color: var(--color-white); }",
          "urls": [],
          "group": "(max-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.light-mobile-only a.con-button.outline:is(:hover, :focus, :active)",
          "cssText": ".con-block.light-mobile-only a.con-button.outline:is(:hover, :focus, :active) { background-color: var(--color-black); border-color: var(--color-black); color: var(--color-white); }",
          "urls": [],
          "group": "(max-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.dark-mobile-only a.con-button.outline:is(:hover, :focus, :active)",
          "cssText": ".con-block.dark-mobile-only a.con-button.outline:is(:hover, :focus, :active) { background-color: var(--color-white); border-color: var(--color-white); color: var(--color-black); text-decoration: none; }",
          "urls": [],
          "group": "(max-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.light-mobile-only a.con-button.fill",
          "cssText": ".con-block.light-mobile-only a.con-button.fill { border-color: var(--text-color); background-color: var(--text-color); color: var(--color-white); }",
          "urls": [],
          "group": "(max-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.dark-mobile-only a.con-button.fill",
          "cssText": ".con-block.dark-mobile-only a.con-button.fill { border-color: var(--color-white); background-color: var(--color-white); color: var(--text-color); }",
          "urls": [],
          "group": "(max-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.light-mobile-only a.con-button.fill:is(:hover, :focus, :active)",
          "cssText": ".con-block.light-mobile-only a.con-button.fill:is(:hover, :focus, :active) { border-color: var(--color-black); background-color: var(--color-black); }",
          "urls": [],
          "group": "(max-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.dark-mobile-only a.con-button.fill:is(:hover, :focus, :active)",
          "cssText": ".con-block.dark-mobile-only a.con-button.fill:is(:hover, :focus, :active) { color: var(--color-black); }",
          "urls": [],
          "group": "(max-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 600px) and (max-width: 1199px) {\n  .con-block.light-tablet-only { color: var(--text-color); }\n  .con-block.dark-tablet-only { color: var(--color-white); }\n  .con-block.light-tablet-only a:not(.con-button) { color: var(--link-color); }\n  .con-block.dark-tablet-only a:not(.con-button) { color: var(--link-color-dark); }\n  .con-block.light-tablet-only a:not(.con-button):is(:hover, :focus, :active) { color: var(--link-hover-color); }\n  .con-block.dark-tablet-only a:not(.con-button):is(:hover, :focus, :active) { color: var(--link-hover-color-dark); }\n  .con-block.light-tablet-only a.con-button.outline { border-color: var(--text-color); color: var(--text-color); }\n  .con-block.dark-tablet-only a.con-button.outline { border-color: var(--color-white); color: var(--color-white); }\n  .con-block.light-tablet-only a.con-button.outline:is(:hover, :focus, :active) { background-color: var(--color-black); border-color: var(--color-black); color: var(--color-white); }\n  .con-block.dark-tablet-only a.con-button.outline:is(:hover, :focus, :active) { background-color: var(--color-white); border-color: var(--color-white); color: var(--color-black); text-decoration: none; }\n  .con-block.light-tablet-only a.con-button.fill { border-color: var(--text-color); background-color: var(--text-color); color: var(--color-white); }\n  .con-block.dark-tablet-only a.con-button.fill { border-color: var(--color-white); background-color: var(--color-white); color: var(--text-color); }\n  .con-block.light-tablet-only a.con-button.fill:is(:hover, :focus, :active) { border-color: var(--c...",
          "urls": [],
          "group": "screen and (min-width: 600px) and (max-width: 1199px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px) and (max-width: 1199px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "max-width",
                "1199px",
                "600",
                "1199",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.light-tablet-only",
          "cssText": ".con-block.light-tablet-only { color: var(--text-color); }",
          "urls": [],
          "group": "screen and (min-width: 600px) and (max-width: 1199px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px) and (max-width: 1199px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "max-width",
                "1199px",
                "600",
                "1199",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.dark-tablet-only",
          "cssText": ".con-block.dark-tablet-only { color: var(--color-white); }",
          "urls": [],
          "group": "screen and (min-width: 600px) and (max-width: 1199px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px) and (max-width: 1199px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "max-width",
                "1199px",
                "600",
                "1199",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.light-tablet-only a:not(.con-button)",
          "cssText": ".con-block.light-tablet-only a:not(.con-button) { color: var(--link-color); }",
          "urls": [],
          "group": "screen and (min-width: 600px) and (max-width: 1199px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px) and (max-width: 1199px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "max-width",
                "1199px",
                "600",
                "1199",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.dark-tablet-only a:not(.con-button)",
          "cssText": ".con-block.dark-tablet-only a:not(.con-button) { color: var(--link-color-dark); }",
          "urls": [],
          "group": "screen and (min-width: 600px) and (max-width: 1199px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px) and (max-width: 1199px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "max-width",
                "1199px",
                "600",
                "1199",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.light-tablet-only a:not(.con-button):is(:hover, :focus, :active)",
          "cssText": ".con-block.light-tablet-only a:not(.con-button):is(:hover, :focus, :active) { color: var(--link-hover-color); }",
          "urls": [],
          "group": "screen and (min-width: 600px) and (max-width: 1199px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px) and (max-width: 1199px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "max-width",
                "1199px",
                "600",
                "1199",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.dark-tablet-only a:not(.con-button):is(:hover, :focus, :active)",
          "cssText": ".con-block.dark-tablet-only a:not(.con-button):is(:hover, :focus, :active) { color: var(--link-hover-color-dark); }",
          "urls": [],
          "group": "screen and (min-width: 600px) and (max-width: 1199px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px) and (max-width: 1199px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "max-width",
                "1199px",
                "600",
                "1199",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.light-tablet-only a.con-button.outline",
          "cssText": ".con-block.light-tablet-only a.con-button.outline { border-color: var(--text-color); color: var(--text-color); }",
          "urls": [],
          "group": "screen and (min-width: 600px) and (max-width: 1199px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px) and (max-width: 1199px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "max-width",
                "1199px",
                "600",
                "1199",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.dark-tablet-only a.con-button.outline",
          "cssText": ".con-block.dark-tablet-only a.con-button.outline { border-color: var(--color-white); color: var(--color-white); }",
          "urls": [],
          "group": "screen and (min-width: 600px) and (max-width: 1199px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px) and (max-width: 1199px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "max-width",
                "1199px",
                "600",
                "1199",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.light-tablet-only a.con-button.outline:is(:hover, :focus, :active)",
          "cssText": ".con-block.light-tablet-only a.con-button.outline:is(:hover, :focus, :active) { background-color: var(--color-black); border-color: var(--color-black); color: var(--color-white); }",
          "urls": [],
          "group": "screen and (min-width: 600px) and (max-width: 1199px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px) and (max-width: 1199px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "max-width",
                "1199px",
                "600",
                "1199",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.dark-tablet-only a.con-button.outline:is(:hover, :focus, :active)",
          "cssText": ".con-block.dark-tablet-only a.con-button.outline:is(:hover, :focus, :active) { background-color: var(--color-white); border-color: var(--color-white); color: var(--color-black); text-decoration: none; }",
          "urls": [],
          "group": "screen and (min-width: 600px) and (max-width: 1199px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px) and (max-width: 1199px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "max-width",
                "1199px",
                "600",
                "1199",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.light-tablet-only a.con-button.fill",
          "cssText": ".con-block.light-tablet-only a.con-button.fill { border-color: var(--text-color); background-color: var(--text-color); color: var(--color-white); }",
          "urls": [],
          "group": "screen and (min-width: 600px) and (max-width: 1199px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px) and (max-width: 1199px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "max-width",
                "1199px",
                "600",
                "1199",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.dark-tablet-only a.con-button.fill",
          "cssText": ".con-block.dark-tablet-only a.con-button.fill { border-color: var(--color-white); background-color: var(--color-white); color: var(--text-color); }",
          "urls": [],
          "group": "screen and (min-width: 600px) and (max-width: 1199px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px) and (max-width: 1199px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "max-width",
                "1199px",
                "600",
                "1199",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.light-tablet-only a.con-button.fill:is(:hover, :focus, :active)",
          "cssText": ".con-block.light-tablet-only a.con-button.fill:is(:hover, :focus, :active) { border-color: var(--color-black); background-color: var(--color-black); }",
          "urls": [],
          "group": "screen and (min-width: 600px) and (max-width: 1199px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px) and (max-width: 1199px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "max-width",
                "1199px",
                "600",
                "1199",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.dark-tablet-only a.con-button.fill:is(:hover, :focus, :active)",
          "cssText": ".con-block.dark-tablet-only a.con-button.fill:is(:hover, :focus, :active) { color: var(--color-black); }",
          "urls": [],
          "group": "screen and (min-width: 600px) and (max-width: 1199px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px) and (max-width: 1199px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "max-width",
                "1199px",
                "600",
                "1199",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 600px) {\n  .con-block.light-tablet { color: var(--text-color); }\n  .con-block.dark-tablet { color: var(--color-white); }\n  .con-block.light-tablet a:not(.con-button) { color: var(--link-color); }\n  .con-block.dark-tablet a:not(.con-button) { color: var(--link-color-dark); }\n  .con-block.light-tablet a:not(.con-button):is(:hover, :focus, :active) { color: var(--link-hover-color); }\n  .con-block.dark-tablet a:not(.con-button):is(:hover, :focus, :active) { color: var(--link-hover-color-dark); }\n  .con-block.light-tablet a.con-button.outline { border-color: var(--text-color); color: var(--text-color); }\n  .con-block.dark-tablet a.con-button.outline { border-color: var(--color-white); color: var(--color-white); }\n  .con-block.light-tablet a.con-button.outline:is(:hover, :focus, :active) { background-color: var(--color-black); border-color: var(--color-black); color: var(--color-white); }\n  .con-block.dark-tablet a.con-button.outline:is(:hover, :focus, :active) { background-color: var(--color-white); border-color: var(--color-white); color: var(--color-black); text-decoration: none; }\n  .con-block.light-tablet a.con-button.fill { border-color: var(--text-color); background-color: var(--text-color); color: var(--color-white); }\n  .con-block.dark-tablet a.con-button.fill { border-color: var(--color-white); background-color: var(--color-white); color: var(--text-color); }\n  .con-block.light-tablet a.con-button.fill:is(:hover, :focus, :active) { border-color: var(--color-black); background-color: var(--color-black); }\n  .con-block.dark-tablet a.con-butto...",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.light-tablet",
          "cssText": ".con-block.light-tablet { color: var(--text-color); }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.dark-tablet",
          "cssText": ".con-block.dark-tablet { color: var(--color-white); }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.light-tablet a:not(.con-button)",
          "cssText": ".con-block.light-tablet a:not(.con-button) { color: var(--link-color); }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.dark-tablet a:not(.con-button)",
          "cssText": ".con-block.dark-tablet a:not(.con-button) { color: var(--link-color-dark); }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.light-tablet a:not(.con-button):is(:hover, :focus, :active)",
          "cssText": ".con-block.light-tablet a:not(.con-button):is(:hover, :focus, :active) { color: var(--link-hover-color); }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.dark-tablet a:not(.con-button):is(:hover, :focus, :active)",
          "cssText": ".con-block.dark-tablet a:not(.con-button):is(:hover, :focus, :active) { color: var(--link-hover-color-dark); }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.light-tablet a.con-button.outline",
          "cssText": ".con-block.light-tablet a.con-button.outline { border-color: var(--text-color); color: var(--text-color); }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.dark-tablet a.con-button.outline",
          "cssText": ".con-block.dark-tablet a.con-button.outline { border-color: var(--color-white); color: var(--color-white); }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.light-tablet a.con-button.outline:is(:hover, :focus, :active)",
          "cssText": ".con-block.light-tablet a.con-button.outline:is(:hover, :focus, :active) { background-color: var(--color-black); border-color: var(--color-black); color: var(--color-white); }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.dark-tablet a.con-button.outline:is(:hover, :focus, :active)",
          "cssText": ".con-block.dark-tablet a.con-button.outline:is(:hover, :focus, :active) { background-color: var(--color-white); border-color: var(--color-white); color: var(--color-black); text-decoration: none; }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.light-tablet a.con-button.fill",
          "cssText": ".con-block.light-tablet a.con-button.fill { border-color: var(--text-color); background-color: var(--text-color); color: var(--color-white); }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.dark-tablet a.con-button.fill",
          "cssText": ".con-block.dark-tablet a.con-button.fill { border-color: var(--color-white); background-color: var(--color-white); color: var(--text-color); }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.light-tablet a.con-button.fill:is(:hover, :focus, :active)",
          "cssText": ".con-block.light-tablet a.con-button.fill:is(:hover, :focus, :active) { border-color: var(--color-black); background-color: var(--color-black); }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.dark-tablet a.con-button.fill:is(:hover, :focus, :active)",
          "cssText": ".con-block.dark-tablet a.con-button.fill:is(:hover, :focus, :active) { color: var(--color-black); }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 1200px) {\n  .con-block.light-desktop { color: var(--text-color); }\n  .con-block.dark-desktop { color: var(--color-white); }\n  .con-block.light-desktop a:not(.con-button) { color: var(--link-color); }\n  .con-block.dark-desktop a:not(.con-button) { color: var(--link-color-dark); }\n  .con-block.light-desktop a:not(.con-button):is(:hover, :focus, :active) { color: var(--link-hover-color); }\n  .con-block.dark-desktop a:not(.con-button):is(:hover, :focus, :active) { color: var(--link-hover-color-dark); }\n  .con-block.light-desktop a.con-button.outline { border-color: var(--text-color); color: var(--text-color); }\n  .con-block.dark-desktop a.con-button.outline { border-color: var(--color-white); color: var(--color-white); }\n  .con-block.light-desktop a.con-button.outline:is(:hover, :focus, :active) { background-color: var(--color-black); border-color: var(--color-black); color: var(--color-white); }\n  .con-block.dark-desktop a.con-button.outline:is(:hover, :focus, :active) { background-color: var(--color-white); border-color: var(--color-white); color: var(--color-black); text-decoration: none; }\n  .con-block.light-desktop a.con-button.fill { border-color: var(--text-color); background-color: var(--text-color); color: var(--color-white); }\n  .con-block.dark-desktop a.con-button.fill { border-color: var(--color-white); background-color: var(--color-white); color: var(--text-color); }\n  .con-block.light-desktop a.con-button.fill:is(:hover, :focus, :active) { border-color: var(--color-black); background-color: var(--color-black); }\n  .con-block.dark-desk...",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.light-desktop",
          "cssText": ".con-block.light-desktop { color: var(--text-color); }",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.dark-desktop",
          "cssText": ".con-block.dark-desktop { color: var(--color-white); }",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.light-desktop a:not(.con-button)",
          "cssText": ".con-block.light-desktop a:not(.con-button) { color: var(--link-color); }",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.dark-desktop a:not(.con-button)",
          "cssText": ".con-block.dark-desktop a:not(.con-button) { color: var(--link-color-dark); }",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.light-desktop a:not(.con-button):is(:hover, :focus, :active)",
          "cssText": ".con-block.light-desktop a:not(.con-button):is(:hover, :focus, :active) { color: var(--link-hover-color); }",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.dark-desktop a:not(.con-button):is(:hover, :focus, :active)",
          "cssText": ".con-block.dark-desktop a:not(.con-button):is(:hover, :focus, :active) { color: var(--link-hover-color-dark); }",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.light-desktop a.con-button.outline",
          "cssText": ".con-block.light-desktop a.con-button.outline { border-color: var(--text-color); color: var(--text-color); }",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.dark-desktop a.con-button.outline",
          "cssText": ".con-block.dark-desktop a.con-button.outline { border-color: var(--color-white); color: var(--color-white); }",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.light-desktop a.con-button.outline:is(:hover, :focus, :active)",
          "cssText": ".con-block.light-desktop a.con-button.outline:is(:hover, :focus, :active) { background-color: var(--color-black); border-color: var(--color-black); color: var(--color-white); }",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.dark-desktop a.con-button.outline:is(:hover, :focus, :active)",
          "cssText": ".con-block.dark-desktop a.con-button.outline:is(:hover, :focus, :active) { background-color: var(--color-white); border-color: var(--color-white); color: var(--color-black); text-decoration: none; }",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.light-desktop a.con-button.fill",
          "cssText": ".con-block.light-desktop a.con-button.fill { border-color: var(--text-color); background-color: var(--text-color); color: var(--color-white); }",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.dark-desktop a.con-button.fill",
          "cssText": ".con-block.dark-desktop a.con-button.fill { border-color: var(--color-white); background-color: var(--color-white); color: var(--text-color); }",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.light-desktop a.con-button.fill:is(:hover, :focus, :active)",
          "cssText": ".con-block.light-desktop a.con-button.fill:is(:hover, :focus, :active) { border-color: var(--color-black); background-color: var(--color-black); }",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".con-block.dark-desktop a.con-button.fill:is(:hover, :focus, :active)",
          "cssText": ".con-block.dark-desktop a.con-button.fill:is(:hover, :focus, :active) { color: var(--color-black); }",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        }
      ]
    },
    {
      "href": "https://www.adobe.com/libs/blocks/global-navigation/global-navigation.css",
      "rules": 276,
      "rulesList": [
        {
          "type": "CSSStyleRule",
          "selector": ".global-navigation ul",
          "cssText": ".global-navigation ul { list-style-type: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-navigation a:hover",
          "cssText": ".global-navigation a:hover { text-decoration: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-navigation button:not(.feds-client-desktop-apps button)",
          "cssText": ".global-navigation button:not(.feds-client-desktop-apps button) { background: none; cursor: pointer; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-curtain",
          "cssText": ".feds-curtain { position: fixed; display: none; inset: 0px; background: rgba(0, 0, 0, 0.5); backdrop-filter: blur(1em); z-index: 1; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-curtain--open",
          "cssText": ".feds-curtain--open { display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "header.global-navigation",
          "cssText": "header.global-navigation { position: sticky; top: 0px; z-index: 10; background-color: var(--feds-background-nav); box-sizing: content-box; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-topnav-wrapper",
          "cssText": ".feds-topnav-wrapper { position: relative; z-index: 2; display: flex; justify-content: center; height: var(--feds-height-nav); background-color: var(--feds-background-nav); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-topnav",
          "cssText": ".feds-topnav { display: flex; width: 100%; max-width: var(--feds-maxWidth-nav); height: inherit; justify-content: space-between; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-nav-wrapper",
          "cssText": ".feds-nav-wrapper { position: absolute; top: 100%; left: 0px; right: 20px; display: none; flex-direction: column; height: calc(-100% - 1px + 100dvh); border-top: 1px solid var(--feds-borderColor); background-color: var(--feds-background-nav); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[dir=\"rtl\"] .feds-nav-wrapper",
          "cssText": "[dir=\"rtl\"] .feds-nav-wrapper { left: 20px; right: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-nav-wrapper--expanded",
          "cssText": ".feds-nav-wrapper--expanded { display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-nav",
          "cssText": ".feds-nav { display: flex; flex-direction: column; overflow-y: auto; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-navigation .aside.promobar",
          "cssText": ".global-navigation .aside.promobar { z-index: 1; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-promo-aside-wrapper .aside.promobar",
          "cssText": ".feds-promo-aside-wrapper .aside.promobar { min-height: var(--global-height-navPromo); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-product-entry-cta",
          "cssText": ".feds-product-entry-cta { align-items: center; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-toggle",
          "cssText": ".feds-toggle { width: 60px; margin: 0px; padding: 0px; border: none; background: transparent; box-shadow: none; color: var(--feds-color-hamburger); cursor: pointer; font-size: 20px; font-weight: 300; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-toggle::before",
          "cssText": ".feds-toggle::before { content: \"☰\"; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-toggle[aria-expanded=\"true\"]::before",
          "cssText": ".feds-toggle[aria-expanded=\"true\"]::before { content: \"✕\"; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-brand-container",
          "cssText": ".feds-brand-container { display: flex; flex-shrink: 0; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-brand-container > .feds-brand:first-child",
          "cssText": ".feds-brand-container > .feds-brand:first-child { margin-left: 12px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[dir=\"rtl\"] .feds-brand-container > .feds-brand:first-child",
          "cssText": "[dir=\"rtl\"] .feds-brand-container > .feds-brand:first-child { margin-left: 0px; margin-right: 12px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-brand, .feds-logo",
          "cssText": ".feds-brand, .feds-logo { align-items: center; outline-offset: 2px; padding: 0 var(--feds-gutter); column-gap: 10px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-brand",
          "cssText": ".feds-brand { display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-logo",
          "cssText": ".feds-logo { display: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-brand-image, .feds-logo-image",
          "cssText": ".feds-brand-image, .feds-logo-image { width: 25px; flex-shrink: 0; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-brand-image.brand-image-only",
          "cssText": ".feds-brand-image.brand-image-only { height: 36px; width: auto; min-width: 66px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-brand-image picture, .feds-brand-image img, .feds-brand-image svg, .feds-logo-image picture, .feds-logo-image img, .feds-logo-image svg",
          "cssText": ".feds-brand-image picture, .feds-brand-image img, .feds-brand-image svg, .feds-logo-image picture, .feds-logo-image img, .feds-logo-image svg { width: 100%; display: block; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-brand-image.brand-image-only picture, .feds-brand-image.brand-image-only img, .feds-brand-image.brand-image-only svg",
          "cssText": ".feds-brand-image.brand-image-only picture, .feds-brand-image.brand-image-only img, .feds-brand-image.brand-image-only svg { width: auto; height: 100%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-brand-label, .feds-logo-label",
          "cssText": ".feds-brand-label, .feds-logo-label { flex-shrink: 0; font-weight: 700; font-size: 18px; color: var(--feds-color-adobeBrand); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-popup",
          "cssText": ".feds-popup { display: none; background-color: var(--feds-background-popup); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-popup p",
          "cssText": ".feds-popup p { margin: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-popup ul",
          "cssText": ".feds-popup ul { margin: 0px; padding: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-navItem",
          "cssText": ".feds-navItem { position: relative; display: flex; align-items: stretch; flex-direction: column; font-size: 14px; font-weight: 400; line-height: 1.4; color: var(--feds-color-link); white-space: nowrap; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-topnav--overflowing .feds-navItem",
          "cssText": ".feds-topnav--overflowing .feds-navItem { font-size: 13px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-navItem--centered",
          "cssText": ".feds-navItem--centered { padding: 12px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-navItem:not(:last-child) > .feds-navLink",
          "cssText": ".feds-navItem:not(:last-child) > .feds-navLink { border-bottom: 1px solid var(--feds-borderColor-link); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-navigation .feds-dropdown--active",
          "cssText": ".global-navigation .feds-dropdown--active { position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-navigation .feds-dropdown--active::before",
          "cssText": ".global-navigation .feds-dropdown--active::before { position: absolute; top: 0px; bottom: 0px; left: 0px; width: 2px; background: var(--feds-color-link); content: \"\"; z-index: 1; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-navigation [dir=\"rtl\"] .feds-dropdown--active::before",
          "cssText": ".global-navigation [dir=\"rtl\"] .feds-dropdown--active::before { right: 0px; left: initial; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-popup .feds-navLink:hover, .feds-popup .feds-navLink:focus",
          "cssText": ".feds-popup .feds-navLink:hover, .feds-popup .feds-navLink:focus { background-color: var(--feds-background-link--hover); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-cta-wrapper",
          "cssText": ".feds-cta-wrapper { display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-cta",
          "cssText": ".feds-cta { display: flex; flex-shrink: 0; height: 32px; min-width: 72px; padding: 0px 14px; border-width: 2px; border-style: solid; border-radius: 16px; font-size: 15px; font-weight: 700; line-height: 0; box-sizing: border-box; align-items: center; justify-content: center; overflow: visible; white-space: nowrap; transition-property: color, border-color, background-color; transition-duration: 130ms; transition-timing-function: ease-out; cursor: pointer; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-topnav--overflowing .feds-cta",
          "cssText": ".feds-topnav--overflowing .feds-cta { height: 30px; padding: 0px 10px; font-size: 14px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-promo .feds-cta",
          "cssText": ".feds-promo .feds-cta { height: initial; min-height: 32px; line-height: 1.5; white-space: unset; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-cta--primary",
          "cssText": ".feds-cta--primary { background-color: var(--feds-cta-primary-bg); border-color: var(--feds-cta-primary-bg); color: rgb(255, 255, 255); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-cta--primary:hover, .feds-cta--primary:focus",
          "cssText": ".feds-cta--primary:hover, .feds-cta--primary:focus { background-color: var(--feds-cta-primary-bg--hover); border-color: var(--feds-cta-primary-bg--hover); color: rgb(255, 255, 255); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-cta--secondary",
          "cssText": ".feds-cta--secondary { border-radius: 1rem; background-color: transparent; border: 0.125rem solid rgb(218, 218, 218); color: rgb(41, 41, 41); font-size: 0.875rem; font-style: normal; font-weight: 700; line-height: normal; white-space: nowrap; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-cta--secondary:hover",
          "cssText": ".feds-cta--secondary:hover { border-color: rgb(198, 198, 198); background: rgb(233, 233, 233); color: rgb(41, 41, 41); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-cta--secondary:focus-visible",
          "cssText": ".feds-cta--secondary:focus-visible { outline: rgb(80, 123, 255) solid 2px; background: rgb(233, 233, 233); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-promo--dark .feds-cta--secondary",
          "cssText": ".feds-promo--dark .feds-cta--secondary { border: .125rem solid var(--feds-borderColor-link-dark); color: var(--feds-color-link-dark); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-promo--dark .feds-cta--secondary:hover",
          "cssText": ".feds-promo--dark .feds-cta--secondary:hover { border-color: rgb(68, 68, 68); background: rgb(44, 44, 44); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-promo--dark .feds-cta--secondary:focus-visible",
          "cssText": ".feds-promo--dark .feds-cta--secondary:focus-visible { outline: rgb(56, 96, 250) solid 2px; background: rgb(44, 44, 44); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-search",
          "cssText": ".feds-search { order: -1; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-search-trigger",
          "cssText": ".feds-search-trigger { display: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-search-close",
          "cssText": ".feds-search-close { display: none; font-size: 20px; line-height: 1; color: var(--feds-color-link); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-search-close:hover",
          "cssText": ".feds-search-close:hover { color: var(--feds-color-link--hover); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-search-close::before",
          "cssText": ".feds-search-close::before { content: \"✕\"; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-breadcrumbs-wrapper",
          "cssText": ".feds-breadcrumbs-wrapper { display: flex; order: -1; border-bottom: 1px solid var(--feds-borderColor); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-breadcrumbs",
          "cssText": ".feds-breadcrumbs { padding: 6px 12px; font-size: 12px; overflow-y: auto; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-breadcrumbs ul",
          "cssText": ".feds-breadcrumbs ul { padding: 0px; margin: 0px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-breadcrumbs li",
          "cssText": ".feds-breadcrumbs li { display: flex; align-items: center; flex-shrink: 0; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-breadcrumbs li:last-child:not(:first-child)",
          "cssText": ".feds-breadcrumbs li:last-child:not(:first-child) { padding-right: 12px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[dir=\"rtl\"] .feds-breadcrumbs li:last-child:not(:first-child)",
          "cssText": "[dir=\"rtl\"] .feds-breadcrumbs li:last-child:not(:first-child) { padding-right: 0px; padding-left: 12px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-breadcrumbs li:nth-last-child(n+3):not(:first-child)",
          "cssText": ".feds-breadcrumbs li:nth-last-child(n+3):not(:first-child) { display: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-breadcrumbs li:first-child:not(:nth-last-child(-n+3))::after",
          "cssText": ".feds-breadcrumbs li:first-child:not(:nth-last-child(-n+3))::after { content: \"/　…\"; padding: 0px 0px 0px 12px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[dir=\"rtl\"] .feds-breadcrumbs li:first-child:not(:nth-last-child(-n+3))::after",
          "cssText": "[dir=\"rtl\"] .feds-breadcrumbs li:first-child:not(:nth-last-child(-n+3))::after { padding: 0px 12px 0px 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-breadcrumbs a, .feds-breadcrumbs [aria-current]",
          "cssText": ".feds-breadcrumbs a, .feds-breadcrumbs [aria-current] { line-height: var(--feds-height-breadcrumbs); text-transform: capitalize; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-breadcrumbs.no-transform a, .feds-breadcrumbs.no-transform [aria-current]",
          "cssText": ".feds-breadcrumbs.no-transform a, .feds-breadcrumbs.no-transform [aria-current] { text-transform: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-breadcrumbs a",
          "cssText": ".feds-breadcrumbs a { display: block; color: var(--feds-color-link-breadcrumbs); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-breadcrumbs [aria-current]",
          "cssText": ".feds-breadcrumbs [aria-current] { color: var(--feds-color-breadcrumbs--current); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-breadcrumbs li span[aria-hidden=\"true\"]",
          "cssText": ".feds-breadcrumbs li span[aria-hidden=\"true\"] { padding: 0px 12px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-utilities",
          "cssText": ".feds-utilities { position: relative; display: flex; align-items: center; padding: 0 var(--feds-gutter); z-index: 1; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-utilities .unav-comp-app-switcher-popover, .feds-utilities .spectrum-Dialog-content, .feds-utilities .unav-comp-help-popover, .feds-utilities .unc-overlay-container",
          "cssText": ".feds-utilities .unav-comp-app-switcher-popover, .feds-utilities .spectrum-Dialog-content, .feds-utilities .unav-comp-help-popover, .feds-utilities .unc-overlay-container { transform: translate3d(0px, 0px, 0px); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-profile",
          "cssText": ".feds-profile { display: flex; align-items: center; font-size: 14px; position: relative; justify-content: end; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "header.new-nav.global-navigation:not(:has(.feds-dropdown--active)) .feds-profile",
          "cssText": "header.new-nav.global-navigation:not(:has(.feds-dropdown--active)) .feds-profile { z-index: 3; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-profile-img",
          "cssText": ".feds-profile-img { max-height: 30px; max-width: 30px; display: block; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-profile-button",
          "cssText": ".feds-profile-button { padding: 5px var(--feds-gutter); border-radius: var(--feds-radius-utilityIcon); border: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-signIn",
          "cssText": ".feds-signIn { padding: 11px var(--feds-gutter); border-radius: var(--feds-radius-utilityIcon); color: var(--feds-color-signIn); white-space: nowrap; border: none; font: inherit; text-align: start; width: 100%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-signIn:hover",
          "cssText": ".feds-signIn:hover { color: var(--link-hover-color); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-signIn-dropdown",
          "cssText": ".feds-signIn-dropdown { position: absolute; display: none; right: 0px; top: 100%; background-color: var(--feds-background-popup); overflow: hidden; box-shadow: rgba(0, 0, 0, 0.2) 0px 3px 3px 0px; line-height: 1.4; white-space: nowrap; z-index: 1; transform: translate3d(0px, 0px, 0px); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-signIn[aria-expanded=\"true\"] + .feds-signIn-dropdown",
          "cssText": ".feds-signIn[aria-expanded=\"true\"] + .feds-signIn-dropdown { display: block; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[dir=\"rtl\"] .feds-signIn-dropdown",
          "cssText": "[dir=\"rtl\"] .feds-signIn-dropdown { right: initial; left: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-signIn-dropdown ul",
          "cssText": ".feds-signIn-dropdown ul { margin: 0px; padding: 12px 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-signIn-dropdown li > a, .feds-signIn-dropdown .feds-signIn",
          "cssText": ".feds-signIn-dropdown li > a, .feds-signIn-dropdown .feds-signIn { display: block; color: var(--feds-color-link); padding: 6px 32px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-signIn-dropdown li > a:hover, .feds-signIn-dropdown .feds-signIn:hover",
          "cssText": ".feds-signIn-dropdown li > a:hover, .feds-signIn-dropdown .feds-signIn:hover { color: var(--feds-color-link--hover); background-color: var(--feds-background-link--hover); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-utilities .unav-comp-profile .secondary-button",
          "cssText": ".feds-utilities .unav-comp-profile .secondary-button { line-height: inherit; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "#feds-googleLogin",
          "cssText": "#feds-googleLogin { position: absolute; top: 100%; right: 0px; z-index: 1; transform: translate3d(0px, 0px, 0px); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[dir=\"rtl\"] #feds-googleLogin",
          "cssText": "[dir=\"rtl\"] #feds-googleLogin { left: 0px; right: auto; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-promo .feds-promo-content",
          "cssText": ".feds-promo .feds-promo-content { padding: 24px 32px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".unav-no-scroll",
          "cssText": ".unav-no-scroll { touch-action: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 900px) {\n  .feds-product-entry-cta { display: none; }\n}",
          "urls": [],
          "group": "(max-width: 900px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "900px",
                "900",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-product-entry-cta",
          "cssText": ".feds-product-entry-cta { display: none; }",
          "urls": [],
          "group": "(max-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 320px) {\n  .feds-promo-aside-wrapper[aria-hidden=\"true\"] { display: none; }\n  .feds-promo-aside-wrapper { position: initial; }\n}",
          "urls": [],
          "group": "(max-width: 320px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 320px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "320px",
                "320",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-promo-aside-wrapper[aria-hidden=\"true\"]",
          "cssText": ".feds-promo-aside-wrapper[aria-hidden=\"true\"] { display: none; }",
          "urls": [],
          "group": "(max-width: 320px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 320px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "320px",
                "320",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-promo-aside-wrapper",
          "cssText": ".feds-promo-aside-wrapper { position: initial; }",
          "urls": [],
          "group": "(max-width: 320px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 320px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "320px",
                "320",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (min-width: 900px) {\n  header.global-navigation { contain: layout; }\n  .global-navigation.has-breadcrumbs { padding-bottom: var(--feds-height-breadcrumbs); }\n  .feds-topnav-wrapper { border-bottom: 1px solid var(--feds-borderColor); box-sizing: content-box; }\n  .feds-toggle { display: none; }\n  .feds-nav-wrapper { position: static; display: flex; flex-direction: row; flex-grow: 1; height: unset; border-bottom: unset; border-top: unset; justify-content: space-between; background-color: transparent; }\n  .feds-nav { flex-direction: row; overflow-y: visible; padding-bottom: 0px !important; }\n  .global-navigation .aside.promobar { display: flex; min-height: var(--global-height-navPromo); }\n  .feds-brand-image + .feds-brand-label { display: flex; }\n  .feds-topnav--overflowing .feds-brand-label:nth-child(2) { display: none; }\n  .global-navigation .feds-dropdown--active::before { content: none; }\n  .feds-popup { position: absolute; top: 100%; left: 0px; z-index: 1; box-shadow: rgba(0, 0, 0, 0.2) 0px 3px 3px 0px; transform: translate3d(0px, 0px, 0px); padding: 12px 0px; }\n  [dir=\"rtl\"] .feds-popup { left: auto; right: 0px; }\n  .feds-menu-container { min-width: 100%; padding: 0px 12px 40px; }\n  .feds-navItem { flex-direction: initial; }\n  .feds-navItem--mobile-only { display: none; }\n  .global-navigation .feds-navItem--megaMenu { position: static; }\n  .feds-navItem--megaMenu .feds-popup { right: 0px; padding: 40px 0px 0px; max-height: calc(-100% + 100dvh); overflow: auto; box-sizing: border-box; }\n  .global-navigation.has-promo .feds-navItem--megaMenu .feds-popup { max-height:...",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "header.global-navigation",
          "cssText": "header.global-navigation { contain: layout; }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-navigation.has-breadcrumbs",
          "cssText": ".global-navigation.has-breadcrumbs { padding-bottom: var(--feds-height-breadcrumbs); }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-topnav-wrapper",
          "cssText": ".feds-topnav-wrapper { border-bottom: 1px solid var(--feds-borderColor); box-sizing: content-box; }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-toggle",
          "cssText": ".feds-toggle { display: none; }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-nav-wrapper",
          "cssText": ".feds-nav-wrapper { position: static; display: flex; flex-direction: row; flex-grow: 1; height: unset; border-bottom: unset; border-top: unset; justify-content: space-between; background-color: transparent; }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-nav",
          "cssText": ".feds-nav { flex-direction: row; overflow-y: visible; padding-bottom: 0px !important; }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-navigation .aside.promobar",
          "cssText": ".global-navigation .aside.promobar { display: flex; min-height: var(--global-height-navPromo); }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-brand-image + .feds-brand-label",
          "cssText": ".feds-brand-image + .feds-brand-label { display: flex; }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-topnav--overflowing .feds-brand-label:nth-child(2)",
          "cssText": ".feds-topnav--overflowing .feds-brand-label:nth-child(2) { display: none; }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-navigation .feds-dropdown--active::before",
          "cssText": ".global-navigation .feds-dropdown--active::before { content: none; }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-popup",
          "cssText": ".feds-popup { position: absolute; top: 100%; left: 0px; z-index: 1; box-shadow: rgba(0, 0, 0, 0.2) 0px 3px 3px 0px; transform: translate3d(0px, 0px, 0px); padding: 12px 0px; }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": "[dir=\"rtl\"] .feds-popup",
          "cssText": "[dir=\"rtl\"] .feds-popup { left: auto; right: 0px; }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-menu-container",
          "cssText": ".feds-menu-container { min-width: 100%; padding: 0px 12px 40px; }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-navItem",
          "cssText": ".feds-navItem { flex-direction: initial; }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-navItem--mobile-only",
          "cssText": ".feds-navItem--mobile-only { display: none; }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-navigation .feds-navItem--megaMenu",
          "cssText": ".global-navigation .feds-navItem--megaMenu { position: static; }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-navItem--megaMenu .feds-popup",
          "cssText": ".feds-navItem--megaMenu .feds-popup { right: 0px; padding: 40px 0px 0px; max-height: calc(-100% + 100dvh); overflow: auto; box-sizing: border-box; }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-navigation.has-promo .feds-navItem--megaMenu .feds-popup",
          "cssText": ".global-navigation.has-promo .feds-navItem--megaMenu .feds-popup { max-height: calc(100dvh - 100% - var(--global-height-navPromo)); }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": "[dir=\"rtl\"] .feds-navItem--megaMenu .feds-popup",
          "cssText": "[dir=\"rtl\"] .feds-navItem--megaMenu .feds-popup { left: 0px; }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-navItem--centered",
          "cssText": ".feds-navItem--centered { padding: 0px 12px; align-items: center; }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-topnav--overflowing .feds-navItem--centered",
          "cssText": ".feds-topnav--overflowing .feds-navItem--centered { padding: 0px 8px; }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-navItem--section:only-of-type",
          "cssText": ".feds-navItem--section:only-of-type { border-left: 1px solid var(--feds-borderColor); border-right: 1px solid var(--feds-borderColor); }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-navItem--section > .feds-navLink",
          "cssText": ".feds-navItem--section > .feds-navLink { padding: 0px 20px; }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-navItem--section.feds-navItem--active > .feds-navLink::before",
          "cssText": ".feds-navItem--section.feds-navItem--active > .feds-navLink::before { margin: 0px 20px; }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-topnav--overflowing .feds-navItem--section > .feds-navLink",
          "cssText": ".feds-topnav--overflowing .feds-navItem--section > .feds-navLink { padding: 0px 12px; }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-topnav--overflowing .feds-navItem--section.feds-navItem--active > .feds-navLink::before",
          "cssText": ".feds-topnav--overflowing .feds-navItem--section.feds-navItem--active > .feds-navLink::before { margin: 0px 12px; }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-navItem:not(:last-child) > .feds-navLink",
          "cssText": ".feds-navItem:not(:last-child) > .feds-navLink { border-bottom: none; }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-search",
          "cssText": ".feds-search { display: flex; align-items: center; order: 1; }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-search-trigger",
          "cssText": ".feds-search-trigger { display: flex; padding: var(--feds-gutter); border: none; border-radius: var(--feds-radius-utilityIcon); outline-offset: 2px; }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-search-trigger svg",
          "cssText": ".feds-search-trigger svg { width: 20px; height: 20px; display: block; }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-search-trigger[aria-expanded=\"true\"] svg",
          "cssText": ".feds-search-trigger[aria-expanded=\"true\"] svg { display: none; }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-search-trigger[aria-expanded=\"true\"] .feds-search-close",
          "cssText": ".feds-search-trigger[aria-expanded=\"true\"] .feds-search-close { display: flex; }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-search-trigger svg path",
          "cssText": ".feds-search-trigger svg path { fill: var(--feds-color-link); }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-search-trigger:hover svg path",
          "cssText": ".feds-search-trigger:hover svg path { fill: var(--feds-color-link--hover); }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-breadcrumbs-wrapper",
          "cssText": ".feds-breadcrumbs-wrapper { position: absolute; top: calc(100% + 1px); left: 0px; right: 0px; justify-content: center; border-bottom: 1px solid var(--feds-borderColor); background: var(--feds-background-nav); transform: translate3d(0px, 0px, 0px); }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-breadcrumbs",
          "cssText": ".feds-breadcrumbs { padding: 0 var(--feds-gutter); width: 100%; max-width: var(--feds-maxWidth-nav); box-sizing: border-box; }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-breadcrumbs li:nth-last-child(n+3):not(:first-child)",
          "cssText": ".feds-breadcrumbs li:nth-last-child(n+3):not(:first-child) { display: flex; }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-breadcrumbs li:first-child:not(:nth-last-child(-n+3))::after",
          "cssText": ".feds-breadcrumbs li:first-child:not(:nth-last-child(-n+3))::after { content: none; }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-breadcrumbs a:hover",
          "cssText": ".feds-breadcrumbs a:hover { text-decoration: underline; }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (min-width: 900px) and (max-width: 1199px) {\n  .feds-brand-image + .feds-brand-label { display: none; }\n  .feds-localnav { display: none; }\n}",
          "urls": [],
          "group": "(min-width: 900px) and (max-width: 1199px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px) and (max-width: 1199px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "max-width",
                "1199px",
                "900",
                "1199",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-brand-image + .feds-brand-label",
          "cssText": ".feds-brand-image + .feds-brand-label { display: none; }",
          "urls": [],
          "group": "(min-width: 900px) and (max-width: 1199px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px) and (max-width: 1199px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "max-width",
                "1199px",
                "900",
                "1199",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-localnav",
          "cssText": ".feds-localnav { display: none; }",
          "urls": [],
          "group": "(min-width: 900px) and (max-width: 1199px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px) and (max-width: 1199px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "max-width",
                "1199px",
                "900",
                "1199",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (min-width: 1200px) {\n  .feds-logo { display: flex; }\n  .feds-topnav--overflowing .feds-logo { display: none; }\n  .feds-menu-container { min-width: var(--feds-minWidth-menu); }\n  .feds-navItem--megaMenu .feds-popup { align-items: center; }\n  .feds-localnav { display: none; }\n}",
          "urls": [],
          "group": "(min-width: 1200px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-logo",
          "cssText": ".feds-logo { display: flex; }",
          "urls": [],
          "group": "(min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-topnav--overflowing .feds-logo",
          "cssText": ".feds-topnav--overflowing .feds-logo { display: none; }",
          "urls": [],
          "group": "(min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-menu-container",
          "cssText": ".feds-menu-container { min-width: var(--feds-minWidth-menu); }",
          "urls": [],
          "group": "(min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-navItem--megaMenu .feds-popup",
          "cssText": ".feds-navItem--megaMenu .feds-popup { align-items: center; }",
          "urls": [],
          "group": "(min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-localnav",
          "cssText": ".feds-localnav { display: none; }",
          "urls": [],
          "group": "(min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": "header.new-nav.local-nav",
          "cssText": "header.new-nav.local-nav { position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "header.new-nav.local-nav .feds-curtain--open",
          "cssText": "header.new-nav.local-nav .feds-curtain--open { display: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "header.new-nav:has(.feds-dropdown--active)",
          "cssText": "header.new-nav:has(.feds-dropdown--active) { z-index: 12; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "header.new-nav .feds-nav-wrapper",
          "cssText": "header.new-nav .feds-nav-wrapper { width: 100%; background-color: var(--feds-background-cloudmenu-v2); translate: -200vw; opacity: 0; transition: translate 0.4s ease-out, opacity 0.4s, visibility linear 0.5s; display: flex; visibility: hidden; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "header.new-nav .feds-nav-wrapper:not(:has(.feds-dropdown--active)), header.new-nav.global-navigation:has(.feds-dropdown--active)",
          "cssText": "header.new-nav .feds-nav-wrapper:not(:has(.feds-dropdown--active)), header.new-nav.global-navigation:has(.feds-dropdown--active) { overflow-x: clip; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "header.new-nav .feds-nav-wrapper:not(.feds-nav-wrapper--expanded)",
          "cssText": "header.new-nav .feds-nav-wrapper:not(.feds-nav-wrapper--expanded) { position: fixed; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "header.new-nav.global-navigation:has(.feds-nav-wrapper--expanded):not(:has(.feds-dropdown--active)) .feds-utilities",
          "cssText": "header.new-nav.global-navigation:has(.feds-nav-wrapper--expanded):not(:has(.feds-dropdown--active)) .feds-utilities { z-index: 3; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[dir=\"rtl\"] header.new-nav .feds-nav-wrapper",
          "cssText": "[dir=\"rtl\"] header.new-nav .feds-nav-wrapper { translate: 200vw; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "header.new-nav.local-nav .feds-nav-wrapper",
          "cssText": "header.new-nav.local-nav .feds-nav-wrapper { visibility: hidden; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "header.new-nav .feds-nav-wrapper--expanded",
          "cssText": "header.new-nav .feds-nav-wrapper--expanded { translate: 0px; opacity: 1; z-index: 2; transition: translate 0.4s ease-out, opacity 0.4s, visibility linear; visibility: visible; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[dir=\"rtl\"] header.new-nav .feds-nav-wrapper--expanded",
          "cssText": "[dir=\"rtl\"] header.new-nav .feds-nav-wrapper--expanded { translate: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "header.new-nav .feds-nav-wrapper--expanded .feds-nav > section.feds-navItem:first-child",
          "cssText": "header.new-nav .feds-nav-wrapper--expanded .feds-nav > section.feds-navItem:first-child { padding-top: 25px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "header.new-nav .feds-nav-wrapper--expanded .feds-nav > .feds-navItem.feds-navItem--mobile-only:last-of-type",
          "cssText": "header.new-nav .feds-nav-wrapper--expanded .feds-nav > .feds-navItem.feds-navItem--mobile-only:last-of-type { margin-bottom: 10px; border-bottom: 2px solid var(--feds-color-white-v2); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "header.new-nav .feds-nav-wrapper--expanded .feds-nav > section.feds-navItem > button.feds-navLink",
          "cssText": "header.new-nav .feds-nav-wrapper--expanded .feds-nav > section.feds-navItem > button.feds-navLink { color: var(--feds-color-white-v2); font-size: 20px; font-weight: 400; line-height: 25px; border: none; opacity: 0; translate: -100px; animation: 0.4s ease 0s 1 normal forwards running slideleft, 0.2s ease 0s 1 normal running fadein; padding: 15px 20px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[dir=\"rtl\"] header.new-nav .feds-nav-wrapper--expanded .feds-nav > section.feds-navItem > button.feds-navLink",
          "cssText": "[dir=\"rtl\"] header.new-nav .feds-nav-wrapper--expanded .feds-nav > section.feds-navItem > button.feds-navLink { translate: 100px; animation: 0.4s ease 0s 1 normal forwards running rtlslideleft, 0.2s ease 0s 1 normal running fadein; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "header.new-nav .feds-nav > section.feds-navItem > button.feds-navLink",
          "cssText": "header.new-nav .feds-nav > section.feds-navItem > button.feds-navLink { opacity: 0; border: none; animation: 0.4s ease 0s 1 normal forwards running slideright, 0.2s ease 0s 1 normal running fadeout; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[dir=\"rtl\"] header.new-nav .feds-nav > section.feds-navItem > button.feds-navLink",
          "cssText": "[dir=\"rtl\"] header.new-nav .feds-nav > section.feds-navItem > button.feds-navLink { animation: 0.4s ease 0s 1 normal forwards running rtlslideright, 0.2s ease 0s 1 normal running fadeout; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "header.new-nav .feds-nav > section.feds-navItem > button.feds-navLink::after",
          "cssText": "header.new-nav .feds-nav > section.feds-navItem > button.feds-navLink::after { width: 9.271px; height: 9.179px; transform: rotate(-45deg); border-color: var(--feds-color-white-v2); right: 20px; top: calc(50% - 4px); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[dir=\"rtl\"] header.new-nav .feds-nav > section.feds-navItem > button.feds-navLink::after",
          "cssText": "[dir=\"rtl\"] header.new-nav .feds-nav > section.feds-navItem > button.feds-navLink::after { transform: rotate(135deg); right: unset; left: 20px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "header.new-nav .feds-nav > .feds-navItem > a.feds-navLink",
          "cssText": "header.new-nav .feds-nav > .feds-navItem > a.feds-navLink { border-bottom: 1px solid rgb(44, 44, 44); padding: 20px; font-size: 20px; color: var(--feds-color-white-v2); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "header.new-nav .feds-nav > section.feds-navItem > .feds-popup",
          "cssText": "header.new-nav .feds-nav > section.feds-navItem > .feds-popup { position: fixed; transform: translate3d(0px, 0px, 0px); top: calc(-1 * var(--feds-height-nav)); visibility: hidden; width: 100%; height: calc(var(--feds-height-nav) + 100% + 2px); background-color: var(--feds-background-nav); transition: translate 0.4s ease-out, opacity 0.2s, visibility linear 0.5s; translate: 300vw; display: grid; grid-template: \"top-bar top-bar\" 56px \"title title\" max-content \"tabs tab-panel\" \"cta cta\" 80px / 111px 1fr; box-sizing: content-box; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-promo-aside-wrapper + header.new-nav .feds-nav > section.feds-navItem > .feds-popup",
          "cssText": ".feds-promo-aside-wrapper + header.new-nav .feds-nav > section.feds-navItem > .feds-popup { top: calc(0px - var(--feds-height-nav) - var(--global-height-navPromo)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[dir=\"rtl\"] header.new-nav .feds-nav > section.feds-navItem > .feds-popup",
          "cssText": "[dir=\"rtl\"] header.new-nav .feds-nav > section.feds-navItem > .feds-popup { translate: -300vw; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "header.new-nav.local-nav .feds-nav > section.feds-navItem > .feds-popup",
          "cssText": "header.new-nav.local-nav .feds-nav > section.feds-navItem > .feds-popup { translate: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "header.new-nav .feds-nav > section.feds-navItem.feds-dropdown--active::before",
          "cssText": "header.new-nav .feds-nav > section.feds-navItem.feds-dropdown--active::before { width: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "header.new-nav .feds-nav > section.feds-navItem.feds-dropdown--active > .feds-popup",
          "cssText": "header.new-nav .feds-nav > section.feds-navItem.feds-dropdown--active > .feds-popup { translate: 0px; opacity: 1; z-index: 2; transition: translate 0.4s ease-out, opacity 0.2s, visibility linear; visibility: visible; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[dir=\"rtl\"] header.new-nav .feds-nav > section.feds-navItem.feds-dropdown--active > .feds-popup",
          "cssText": "[dir=\"rtl\"] header.new-nav .feds-nav > section.feds-navItem.feds-dropdown--active > .feds-popup { translate: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "header.new-nav .feds-nav > section.feds-navItem > .feds-popup .top-bar",
          "cssText": "header.new-nav .feds-nav > section.feds-navItem > .feds-popup .top-bar { grid-area: top-bar; display: flex; justify-content: space-between; align-items: center; border-bottom: 1px solid var(--feds-borderColor-link-v2); padding: 0px 20px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "header.new-nav .feds-nav > section.feds-navItem > .feds-popup .top-bar .feds-brand",
          "cssText": "header.new-nav .feds-nav > section.feds-navItem > .feds-popup .top-bar .feds-brand { padding-left: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "header.new-nav .feds-nav > section.feds-navItem > .feds-popup .close-icon",
          "cssText": "header.new-nav .feds-nav > section.feds-navItem > .feds-popup .close-icon { position: absolute; border: none; top: 22px; right: 20px; padding: 0px; height: 14px; font-family: var(--body-font-family); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[dir=\"rtl\"] header.new-nav .feds-nav > section.feds-navItem > .feds-popup .close-icon",
          "cssText": "[dir=\"rtl\"] header.new-nav .feds-nav > section.feds-navItem > .feds-popup .close-icon { right: auto; left: 20px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "header.new-nav .feds-nav > section.feds-navItem > .feds-popup .top-bar .main-menu",
          "cssText": "header.new-nav .feds-nav > section.feds-navItem > .feds-popup .top-bar .main-menu { font-size: 14px; font-weight: 700; line-height: 16px; padding: 1px 0px; border: 0px; font-family: var(--body-font-family); color: var(--text-color); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "header.new-nav .feds-nav > section.feds-navItem > .feds-popup .top-bar .main-menu svg",
          "cssText": "header.new-nav .feds-nav > section.feds-navItem > .feds-popup .top-bar .main-menu svg { translate: 0px 2px; margin-right: 7px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[dir=\"rtl\"] header.new-nav .feds-nav > section.feds-navItem > .feds-popup .top-bar .main-menu svg",
          "cssText": "[dir=\"rtl\"] header.new-nav .feds-nav > section.feds-navItem > .feds-popup .top-bar .main-menu svg { transform: rotate(180deg); margin-right: unset; margin-left: 7px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "header.new-nav .feds-nav > section.feds-navItem > .feds-popup .title",
          "cssText": "header.new-nav .feds-nav > section.feds-navItem > .feds-popup .title { grid-area: title; display: flex; flex-direction: column; border-bottom: 1px solid var(--feds-borderColor-link-v2); padding: 0px 20px; box-sizing: inherit; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "header.new-nav .feds-nav > section.feds-navItem > .feds-popup .title .breadcrumbs",
          "cssText": "header.new-nav .feds-nav > section.feds-navItem > .feds-popup .title .breadcrumbs { display: block; height: 23px; padding-top: 12px; box-sizing: inherit; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "header.new-nav .feds-nav > section.feds-navItem > .feds-popup .title h2",
          "cssText": "header.new-nav .feds-nav > section.feds-navItem > .feds-popup .title h2 { min-height: 25px; font-size: 28px; font-weight: 700; line-height: 25px; padding: 8px 0px 24px; box-sizing: inherit; white-space: break-spaces; margin: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "header.new-nav .feds-nav > section.feds-navItem > .feds-popup .title h2:focus",
          "cssText": "header.new-nav .feds-nav > section.feds-navItem > .feds-popup .title h2:focus { outline: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "header.new-nav .feds-nav > section.feds-navItem > .feds-popup .tabs",
          "cssText": "header.new-nav .feds-nav > section.feds-navItem > .feds-popup .tabs { grid-area: tabs; display: flex; flex-direction: column; padding-top: 16px; background-color: var(--feds-backgroundColor-tabs-v2); overflow-y: auto; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "header.new-nav .feds-nav > section.feds-navItem > .feds-popup .tabs button",
          "cssText": "header.new-nav .feds-nav > section.feds-navItem > .feds-popup .tabs button { min-height: 48px; width: 111px; border: none; padding: 8px 11px 8px 20px; white-space: normal; font-weight: 700; text-align: unset; color: var(--text-color); font-family: var(--body-font-family); font-size: 14px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "header.new-nav .feds-nav > section.feds-navItem > .feds-popup .tabs button[aria-selected=\"true\"]",
          "cssText": "header.new-nav .feds-nav > section.feds-navItem > .feds-popup .tabs button[aria-selected=\"true\"] { background-color: var(--feds-color-black-v2); color: var(--feds-color-white-v2); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "header.new-nav .feds-nav > section.feds-navItem > .feds-popup .tab-content",
          "cssText": "header.new-nav .feds-nav > section.feds-navItem > .feds-popup .tab-content { min-height: 0px; background-color: var(--feds-backgroundColor-tabContent-v2); padding: 10px 13px 25px; display: flex; flex-direction: column; gap: 28px; font-size: 14px; line-height: 16px; overflow-y: scroll; border-left: 1px solid var(--feds-borderColor-link-v2); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "header.new-nav .feds-nav > section.feds-navItem > .feds-popup .tab-content .feds-cta--secondary",
          "cssText": "header.new-nav .feds-nav > section.feds-navItem > .feds-popup .tab-content .feds-cta--secondary { margin: 12px; height: unset; line-height: 1.2; text-wrap: wrap; min-width: 100px; max-width: 200px; text-align: center; padding: 5px 18px 6px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[dir=\"rtl\"] header.new-nav .feds-nav > section.feds-navItem > .feds-popup .tab-content",
          "cssText": "[dir=\"rtl\"] header.new-nav .feds-nav > section.feds-navItem > .feds-popup .tab-content { border-left: none; border-right: 1px solid var(--feds-borderColor-link-v2); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "header.new-nav .feds-nav > section.feds-navItem > .feds-popup .tab-content a.feds-navLink, header.new-nav .feds-nav > section.feds-navItem > .feds-popup .tab-content .feds-navLink--header, header.new-nav .feds-nav > section.feds-navItem > .feds-popup .tab-content > div[role=\"tabpanel\"] > a.feds-cta",
          "cssText": "header.new-nav .feds-nav > section.feds-navItem > .feds-popup .tab-content a.feds-navLink, header.new-nav .feds-nav > section.feds-navItem > .feds-popup .tab-content .feds-navLink--header, header.new-nav .feds-nav > section.feds-navItem > .feds-popup .tab-content > div[role=\"tabpanel\"] > a.feds-cta { translate: 0px 12px; opacity: 0; animation: 0.6s ease 0s 1 normal forwards running slideup, 0.8s ease 0s 1 normal running fadein; font-weight: 700; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "header.new-nav .feds-promo-wrapper",
          "cssText": "header.new-nav .feds-promo-wrapper { display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "header.new-nav .feds-nav > section.feds-navItem > .feds-popup .tab-content .feds-promo-wrapper",
          "cssText": "header.new-nav .feds-nav > section.feds-navItem > .feds-popup .tab-content .feds-promo-wrapper { translate: 0px 12px; opacity: 0; animation: 0.6s ease 0s 1 normal forwards running slideup, 0.8s ease 0s 1 normal running fadein; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "header.new-nav .feds-nav > section.feds-navItem > .feds-popup .tab-content a.feds-navLink:not(:has(div))",
          "cssText": "header.new-nav .feds-nav > section.feds-navItem > .feds-popup .tab-content a.feds-navLink:not(:has(div)) { white-space: break-spaces; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "header.new-nav .feds-nav > section.feds-navItem > .feds-popup .tab-content .feds-navLink-title",
          "cssText": "header.new-nav .feds-nav > section.feds-navItem > .feds-popup .tab-content .feds-navLink-title { font-weight: 700; white-space: break-spaces; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "header.new-nav .feds-nav > section.feds-navItem > .feds-popup .tab-content .feds-navLink--blue .feds-navLink-title",
          "cssText": "header.new-nav .feds-nav > section.feds-navItem > .feds-popup .tab-content .feds-navLink--blue .feds-navLink-title { font-weight: 400; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "header.new-nav .feds-nav > section.feds-navItem > .feds-popup .tab-content .feds-navLink-description",
          "cssText": "header.new-nav .feds-nav > section.feds-navItem > .feds-popup .tab-content .feds-navLink-description { display: inline-block; font-weight: 400; white-space: break-spaces; font-size: 12px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "header.new-nav .feds-nav > section.feds-navItem > .feds-popup .sticky-cta",
          "cssText": "header.new-nav .feds-nav > section.feds-navItem > .feds-popup .sticky-cta { grid-area: cta; display: flex; align-items: center; justify-content: center; width: 100%; position: sticky; border-top: 1px solid var(--feds-borderColor-link-v2); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "header.new-nav .feds-nav > section.feds-navItem.feds-dropdown--active > .feds-popup .sticky-cta a",
          "cssText": "header.new-nav .feds-nav > section.feds-navItem.feds-dropdown--active > .feds-popup .sticky-cta a { width: 320px; height: 39px; border-radius: 50px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "header.new-nav .feds-breadcrumbs-wrapper",
          "cssText": "header.new-nav .feds-breadcrumbs-wrapper { display: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "header.new-nav .feds-navItem--section",
          "cssText": "header.new-nav .feds-navItem--section { display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "header.new-nav .feds-breadcrumbs",
          "cssText": "header.new-nav .feds-breadcrumbs { padding: 2px 0px 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "header.new-nav .feds-breadcrumbs ul",
          "cssText": "header.new-nav .feds-breadcrumbs ul { font-weight: 700; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "header.new-nav .feds-breadcrumbs li:not(:first-of-type)::before",
          "cssText": "header.new-nav .feds-breadcrumbs li:not(:first-of-type)::before { padding: 0px 4px; color: var(--feds-color-link-breadcrumbs); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "header.new-nav .feds-breadcrumbs li:first-child:not(:nth-last-child(-n+3))::after",
          "cssText": "header.new-nav .feds-breadcrumbs li:first-child:not(:nth-last-child(-n+3))::after { content: \"/ …\"; padding: 0px 0px 0px 4px; color: var(--feds-color-link-breadcrumbs); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-localnav",
          "cssText": ".feds-localnav { position: sticky; top: 0px; width: 100%; left: 0px; z-index: 9; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-localnav.has-promo",
          "cssText": ".feds-localnav.has-promo { top: var(--global-height-navPromo); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".local-nav .feds-toggle[aria-expanded=\"true\"]::before",
          "cssText": ".local-nav .feds-toggle[aria-expanded=\"true\"]::before { content: \"☰\"; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-localnav a",
          "cssText": ".feds-localnav a { text-decoration: unset; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-localnav-title",
          "cssText": ".feds-localnav-title { width: 100%; height: 40px; font-size: 16px; font-weight: 700; border-right: 0px; border-left: 0px; border-image: initial; padding: 0px 20px; text-align: justify; color: var(--text-color); cursor: pointer; border-top: 1px solid var(--feds-borderColor-localnav-v2); border-bottom: 1px solid var(--feds-borderColor-localnav-v2); background-color: var(--feds-background-nav); white-space: nowrap; overflow: hidden; text-overflow: ellipsis; font-family: var(--body-font-family); box-shadow: rgba(0, 0, 0, 0.2) 0px 2px 4px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-localnav-items",
          "cssText": ".feds-localnav-items { background: var(--feds-background-popup); border-bottom: 1px solid var(--feds-borderColor-localnav-v2); box-shadow: rgba(0, 0, 0, 0.25) 0px 4px 4px 0px; transition: max-height 320ms ease-in-out; overflow: hidden; pointer-events: none; position: absolute; display: block; width: 100%; top: var(--feds-localnav-height); max-height: 0px; overscroll-behavior: contain; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-localnav-items .feds-navLink",
          "cssText": ".feds-localnav-items .feds-navLink { border: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-localnav-items .feds-navItem.feds-navItem--active > .feds-navLink",
          "cssText": ".feds-localnav-items .feds-navItem.feds-navItem--active > .feds-navLink { font-weight: 600; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-localnav.feds-localnav--active .feds-localnav-items",
          "cssText": ".feds-localnav.feds-localnav--active .feds-localnav-items { overflow: auto; pointer-events: auto; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-localnav .feds-localnav-items .feds-navItem:first-child",
          "cssText": ".feds-localnav .feds-localnav-items .feds-navItem:first-child { margin-top: 20px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-localnav .feds-localnav-items .feds-navItem:last-child",
          "cssText": ".feds-localnav .feds-localnav-items .feds-navItem:last-child { margin-bottom: 24px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-localnav .feds-localnav-items li",
          "cssText": ".feds-localnav .feds-localnav-items li { list-style: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-localnav .feds-localnav-items .feds-menu-items",
          "cssText": ".feds-localnav .feds-localnav-items .feds-menu-items { padding: 0px; border-bottom: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-localnav .feds-localnav-items .feds-menu-column > ul",
          "cssText": ".feds-localnav .feds-localnav-items .feds-menu-column > ul { padding: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-localnav .feds-localnav-items .feds-menu-column .feds-navLink",
          "cssText": ".feds-localnav .feds-localnav-items .feds-menu-column .feds-navLink { padding-left: 38px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-localnav .feds-localnav-items .feds-menu-items .feds-navLink",
          "cssText": ".feds-localnav .feds-localnav-items .feds-menu-items .feds-navLink { padding: 12px 56px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-localnav .feds-localnav-items .feds-navLink",
          "cssText": ".feds-localnav .feds-localnav-items .feds-navLink { border-bottom: 0px; font-size: 14px; padding: 12px 20px; background: var(--feds-background-popup); outline-offset: -1px; cursor: pointer; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-localnav .feds-localnav-items .feds-menu-headline",
          "cssText": ".feds-localnav .feds-localnav-items .feds-menu-headline { background: var(--feds-background-popup); font-weight: 400; border-bottom: 0px; padding: 12px 46px 12px 38px; outline-offset: -1px; color: var(--feds-color-link); white-space: break-spaces; text-size-adjust: 100%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-localnav .feds-localnav-items .feds-navLink-content .feds-navLink-title, .feds-localnav .feds-localnav-items li .feds-navLink",
          "cssText": ".feds-localnav .feds-localnav-items .feds-navLink-content .feds-navLink-title, .feds-localnav .feds-localnav-items li .feds-navLink { white-space: normal; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-localnav .feds-localnav-items .feds-navItem--centered",
          "cssText": ".feds-localnav .feds-localnav-items .feds-navItem--centered { padding: 10px 20px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-localnav.feds-localnav--active .feds-localnav-items",
          "cssText": ".feds-localnav.feds-localnav--active .feds-localnav-items { box-sizing: border-box; max-height: calc(100dvh - (var(--global-height-nav) + var(--feds-localnav-height))); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-localnav.has-promo.feds-localnav--active .feds-localnav-items",
          "cssText": ".feds-localnav.has-promo.feds-localnav--active .feds-localnav-items { max-height: calc(100dvh - (var(--global-height-nav) + var(--feds-localnav-height) + var(--global-height-navPromo))); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-localnav.feds-localnav--active.is-sticky .feds-localnav-items",
          "cssText": ".feds-localnav.feds-localnav--active.is-sticky .feds-localnav-items { max-height: calc(100dvh - var(--feds-localnav-height)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-localnav .feds-localnav--active::before",
          "cssText": ".feds-localnav .feds-localnav--active::before { display: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-localnav .feds-localnav-exit",
          "cssText": ".feds-localnav .feds-localnav-exit { display: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-localnav.feds-localnav--active .feds-localnav-title::after",
          "cssText": ".feds-localnav.feds-localnav--active .feds-localnav-title::after { transform: rotateZ(-135deg); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-localnav .feds-localnav-curtain",
          "cssText": ".feds-localnav .feds-localnav-curtain { opacity: 0; background: var(--feds-color-black-v2); transition: opacity 600ms ease-in-out; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-localnav.feds-localnav--active .feds-localnav-curtain",
          "cssText": ".feds-localnav.feds-localnav--active .feds-localnav-curtain { width: 100%; height: 101lvh; opacity: 0.7; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-localnav.feds-localnav--active .feds-localnav-exit",
          "cssText": ".feds-localnav.feds-localnav--active .feds-localnav-exit { display: block; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframesRule",
          "selector": "",
          "cssText": "@keyframes slideright { \n  0% { translate: 0px; }\n  100% { translate: -100px; }\n}",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "0% { translate: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "100% { translate: -100px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframesRule",
          "selector": "",
          "cssText": "@keyframes rtlslideright { \n  0% { translate: 0px; }\n  100% { translate: 100px; }\n}",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "0% { translate: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "100% { translate: 100px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframesRule",
          "selector": "",
          "cssText": "@keyframes slideleft { \n  0% { translate: -100px; }\n  100% { translate: 0px; }\n}",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "0% { translate: -100px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "100% { translate: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframesRule",
          "selector": "",
          "cssText": "@keyframes rtlslideleft { \n  0% { translate: 100px; }\n  100% { translate: 0px; }\n}",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "0% { translate: 100px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "100% { translate: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframesRule",
          "selector": "",
          "cssText": "@keyframes slideup { \n  0% { translate: 0px 40px; }\n  100% { translate: 0px; }\n}",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "0% { translate: 0px 40px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "100% { translate: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframesRule",
          "selector": "",
          "cssText": "@keyframes fadein { \n  0% { opacity: 0; }\n  100% { opacity: 1; }\n}",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "0% { opacity: 0; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "100% { opacity: 1; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframesRule",
          "selector": "",
          "cssText": "@keyframes fadeout { \n  0% { opacity: 1; }\n  100% { opacity: 0; }\n}",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "0% { opacity: 1; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "100% { opacity: 0; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".disable-ios-scroll",
          "cssText": ".disable-ios-scroll { overflow: hidden; width: 100%; min-height: 100dvh; position: fixed; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "html:has(body.disable-ios-scroll)",
          "cssText": "html:has(body.disable-ios-scroll) { height: 100dvh; position: fixed; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".branch-banner-is-active.branch-banner-inline",
          "cssText": ".branch-banner-is-active.branch-banner-inline { transition: all !important; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".disable-ios-scroll.branch-banner-is-active.branch-banner-inline",
          "cssText": ".disable-ios-scroll.branch-banner-is-active.branch-banner-inline { margin-top: 0px !important; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".disable-ios-scroll.branch-banner-is-active.branch-banner-inline #branch-banner-iframe",
          "cssText": ".disable-ios-scroll.branch-banner-is-active.branch-banner-inline #branch-banner-iframe { position: relative; display: block; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-popup.loading .tabs *, .feds-popup.loading .tab-content *, .feds-popup.loading .feds-menu-container *, .feds-popup.loading .feds-crossCloudMenu-wrapper *",
          "cssText": ".feds-popup.loading .tabs *, .feds-popup.loading .tab-content *, .feds-popup.loading .feds-menu-container *, .feds-popup.loading .feds-crossCloudMenu-wrapper * { pointer-events: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-popup.loading .feds-promo, .feds-popup.loading .first-headline-one, .feds-popup.loading .first-headline-two, .feds-popup.loading .feds-navLink-content .feds-navLink-title, .feds-popup.loading .feds-navLink-content .feds-navLink-description, .feds-popup.loading .feds-cta-wrapper, .feds-popup.loading .feds-menu-headline:not(:has(div)), .feds-popup.loading .feds-crossCloudMenu-item .feds-navLink, header.new-nav .feds-nav > section.feds-navItem > .feds-popup.loading .feds-navLink-content .feds-navLink-title, header.new-nav .feds-nav > section.feds-navItem > .feds-popup.loading .feds-navLink-content .feds-navLink-description, header.new-nav .feds-nav > section.feds-navItem > .feds-popup.loading .tabs button > div",
          "cssText": ".feds-popup.loading .feds-promo, .feds-popup.loading .first-headline-one, .feds-popup.loading .first-headline-two, .feds-popup.loading .feds-navLink-content .feds-navLink-title, .feds-popup.loading .feds-navLink-content .feds-navLink-description, .feds-popup.loading .feds-cta-wrapper, .feds-popup.loading .feds-menu-headline:not(:has(div)), .feds-popup.loading .feds-crossCloudMenu-item .feds-navLink, header.new-nav .feds-nav > section.feds-navItem > .feds-popup.loading .feds-navLink-content .feds-navLink-title, header.new-nav .feds-nav > section.feds-navItem > .feds-popup.loading .feds-navLink-content .feds-navLink-description, header.new-nav .feds-nav > section.feds-navItem > .feds-popup.loading .tabs button > div { border-radius: 2px; opacity: var(--feds-skeleton-opacity); background-image: ; background-position-x: ; background-position-y: ; background-repeat: ; background-attachment: ; background-origin: ; background-clip: ; background-color: ; background-size: 200% 200%; animation: 0.6s linear 0s infinite alternate none running mega-menu-skeleton; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-popup.loading .feds-promo",
          "cssText": ".feds-popup.loading .feds-promo { height: 318px; width: 260px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-popup.loading .first-headline-one",
          "cssText": ".feds-popup.loading .first-headline-one { height: 14px; width: 172px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-popup.loading .first-headline-two",
          "cssText": ".feds-popup.loading .first-headline-two { height: 25px; width: 242px; margin-top: 5px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-popup.loading .feds-navLink-content .feds-navLink-title",
          "cssText": ".feds-popup.loading .feds-navLink-content .feds-navLink-title { height: 14px; width: 85px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-popup.loading .feds-navLink-content .feds-navLink-description",
          "cssText": ".feds-popup.loading .feds-navLink-content .feds-navLink-description { height: 14px; width: 161px; margin-top: 5px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-popup.loading .feds-cta-wrapper",
          "cssText": ".feds-popup.loading .feds-cta-wrapper { height: 25px; width: 181px; padding: 0px; margin: 60px 32px 6px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-popup.loading .feds-menu-headline:not(:has(div))",
          "cssText": ".feds-popup.loading .feds-menu-headline:not(:has(div)) { height: 14px; width: 86px; padding: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-popup.loading .feds-menu-headline.small",
          "cssText": ".feds-popup.loading .feds-menu-headline.small { margin-top: 29px; margin-bottom: 0px; height: 14px; width: 56px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-popup.loading .feds-crossCloudMenu-item .feds-navLink",
          "cssText": ".feds-popup.loading .feds-crossCloudMenu-item .feds-navLink { height: 14px; width: 84px; padding: 0px; margin: 0px 28px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "header.new-nav .feds-nav > section.feds-navItem > .feds-popup.loading .tabs button > div",
          "cssText": "header.new-nav .feds-nav > section.feds-navItem > .feds-popup.loading .tabs button > div { height: 14px; width: 49px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "header.new-nav .feds-nav > section.feds-navItem > .feds-popup.loading .tab-content > div:first-child",
          "cssText": "header.new-nav .feds-nav > section.feds-navItem > .feds-popup.loading .tab-content > div:first-child { display: block; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframesRule",
          "selector": "",
          "cssText": "@keyframes mega-menu-skeleton { \n  0% { background-position: 0% 100%; }\n  100% { background-position: 100% 0%; }\n}",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "0% { background-position: 0% 100%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "100% { background-position: 100% 0%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (orientation: landscape) and (max-width: 900px) {\n  header.new-nav .feds-nav > section.feds-navItem > .feds-popup .tabs button { padding: 15px 11px 15px 20px; min-height: max-content; }\n}",
          "urls": [],
          "group": "(orientation: landscape) and (max-width: 900px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(orientation: landscape) and (max-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "orientation",
                "landscape",
                "max-width",
                "900px",
                "900",
                "width"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "orientation",
              "semanticGroup": "geometry",
              "claim": "screen orientation",
              "excerpt": "(orientation: landscape) and (max-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "orientation",
                "landscape",
                "max-width",
                "900px",
                "900",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "header.new-nav .feds-nav > section.feds-navItem > .feds-popup .tabs button",
          "cssText": "header.new-nav .feds-nav > section.feds-navItem > .feds-popup .tabs button { padding: 15px 11px 15px 20px; min-height: max-content; }",
          "urls": [],
          "group": "(orientation: landscape) and (max-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(orientation: landscape) and (max-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "orientation",
                "landscape",
                "max-width",
                "900px",
                "900",
                "width"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "orientation",
              "semanticGroup": "geometry",
              "claim": "screen orientation",
              "excerpt": "(orientation: landscape) and (max-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "orientation",
                "landscape",
                "max-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        }
      ]
    },
    {
      "href": "https://www.adobe.com/libs/blocks/global-navigation/base.css",
      "rules": 60,
      "rulesList": [
        {
          "type": "CSSStyleRule",
          "selector": ":root",
          "cssText": ":root { --feds-maxWidth-nav: 1440px; --feds-minWidth-menu: 1200px; --feds-height-breadcrumbs: 33px; --feds-gutter: 8px; --feds-background-nav: #f8f8f8; --feds-background-popup: #f3f3f3; --feds-background-promo: #fff; --feds-background-promo--dark: #000; --feds-borderColor: #eaeaea; --feds-borderColor-menu: #e1e1e1; --feds-borderColor-navLink: #2c2c2c; --feds-color-adobeBrand: #eb1000; --feds-color-headline: #505050; --feds-color-hamburger: #2d2d2d; --feds-color-breadcrumbs--current: #2c2c2c; --feds-color-signIn: #4b4b4b; --feds-radius-utilityIcon: 4px; --feds-background-link--hover: #e9e9e9; --feds-borderColor-link: #e9e9e9; --feds-color-link: #292929; --feds-color-blue-link: #274dea; --feds-color-link--hover: #1d3ecf; --feds-color-link-dark: #DBDBDB; --feds-borderColor-link-dark: #393939; --feds-color-navLink-description: #505050; --feds-color-link-breadcrumbs: #707070; --feds-cta-primary-bg: #3b63fb; --feds-cta-primary-bg--hover: #274dea; --feds-background-footer: #fafafa; --feds-borderColor-featuredProducts: #999; --feds-gutter-footer: 32px; --feds-color-white-v2: #fff; --feds-color-black-v2: #000; --feds-background-cloudmenu-v2: #111; --feds-borderColor-link-v2: #eaeaea; --feds-backgroundColor-tabs-v2: #f8f8f8; --feds-backgroundColor-tabContent-v2: #f3f3f3; --feds-borderColor-localnav-v2: #eee; --app-banner-height: 76px; --feds-skeleton-color-1: #D3D3D3; --feds-skeleton-color-2: #EAEAEA; --feds-skeleton-color-3: #D3D3D3; --feds-skeleton-opacity: 0.7; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-navLink",
          "cssText": ".feds-navLink { display: flex; align-items: center; padding: 12px; border: none; color: var(--feds-color-link); font: inherit; white-space: nowrap; flex-shrink: 0; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-popup .has-subheader .feds-navLink:not(.feds-navLink--header)",
          "cssText": ".feds-popup .has-subheader .feds-navLink:not(.feds-navLink--header) { padding: 12px 24px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "header.new-nav .feds-nav > section.feds-navItem > .feds-popup .has-subheader .feds-navLink:not(.feds-navLink--header) .feds-navLink-title",
          "cssText": "header.new-nav .feds-nav > section.feds-navItem > .feds-popup .has-subheader .feds-navLink:not(.feds-navLink--header) .feds-navLink-title { font-weight: 500; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-navLink:hover, .feds-navLink:focus",
          "cssText": ".feds-navLink:hover, .feds-navLink:focus { color: var(--feds-color-link--hover); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-navLink:not(.feds-navLink--hoverCaret)",
          "cssText": ".feds-navLink:not(.feds-navLink--hoverCaret) { column-gap: 15px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "html[lang=\"ja-jp\"] a.feds-navLink wbr",
          "cssText": "html[lang=\"ja-jp\"] a.feds-navLink wbr { display: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-navLink--blue",
          "cssText": ".feds-navLink--blue { color: var(--feds-color-blue-link); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-navLink--hoverCaret",
          "cssText": ".feds-navLink--hoverCaret { position: relative; padding-right: 32px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-navLink--hoverCaret:hover, .feds-navLink--hoverCaret:focus",
          "cssText": ".feds-navLink--hoverCaret:hover, .feds-navLink--hoverCaret:focus { color: var(--feds-color-link); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-navLink--hoverCaret::after, .feds-navLink[class*=\"-gradient\"] .feds-navLink-title::after",
          "cssText": ".feds-navLink--hoverCaret::after, .feds-navLink[class*=\"-gradient\"] .feds-navLink-title::after { display: flex; border-width: 0px 1px 1px 0px; border-style: solid; border-color: var(--feds-color-link); transform-origin: 75% 75%; transition: transform 0.1s; box-sizing: content-box; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-navLink--hoverCaret::after",
          "cssText": ".feds-navLink--hoverCaret::after { position: absolute; right: 18px; top: 50%; width: 6px; height: 6px; margin-top: -3px; transform: rotateZ(45deg); content: \"\"; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[dir=\"rtl\"] .feds-navLink--hoverCaret",
          "cssText": "[dir=\"rtl\"] .feds-navLink--hoverCaret { padding-right: 20px; padding-left: 32px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[dir=\"rtl\"] .feds-navLink--hoverCaret::after",
          "cssText": "[dir=\"rtl\"] .feds-navLink--hoverCaret::after { right: unset; left: 18px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-navLink--gray-gradient",
          "cssText": ".feds-navLink--gray-gradient { display: none; background: rgb(234, 234, 234); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-navigation.new-nav .feds-navLink--gray-gradient",
          "cssText": ".global-navigation.new-nav .feds-navLink--gray-gradient { display: block; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-navLink-image",
          "cssText": ".feds-navLink-image { display: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-navLink-title",
          "cssText": ".feds-navLink-title { display: flex; align-items: center; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "header.global-navigation.ready",
          "cssText": "header.global-navigation.ready { visibility: visible !important; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-navLink.feds-navLink--header",
          "cssText": ".feds-navLink.feds-navLink--header { pointer-events: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-navLink-description",
          "cssText": ".feds-navLink-description { display: flex; font-size: 12px; color: var(--feds-color-navLink-description); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (min-width: 900px) {\n  .feds-navLink, .feds-navLink--hoverCaret, [dir=\"rtl\"] .feds-navLink--hoverCaret { padding: 0px 12px; }\n  .feds-navItem--active > .feds-navLink { position: relative; font-weight: 700; }\n  .feds-navItem--active > .feds-navLink:only-child { cursor: default; }\n  .feds-navItem--active > .feds-navLink:only-child:hover, .feds-navItem--active > .feds-navLink:only-child:focus { color: var(--feds-color-link); }\n  .feds-navItem--active > .feds-navLink::before { position: absolute; bottom: 0px; left: 0px; right: 0px; border-bottom: 2px solid var(--feds-borderColor-navLink); content: \"\"; }\n  .feds-navItem--active > .feds-navLink::before { margin: 0px 12px; }\n  .feds-navItem--activeDeferred > .feds-navLink { padding: 0px; width: 100%; justify-content: center; }\n  .feds-topnav--overflowing .feds-navLink, .feds-topnav--overflowing .feds-navLink--hoverCaret, [dir=\"rtl\"] .feds-topnav--overflowing .feds-navLink--hoverCaret { padding: 0px 8px; }\n  .feds-topnav--overflowing .feds-popup .feds-navLink { padding: 6px 32px; }\n  .feds-topnav--overflowing .feds-navItem--active > .feds-navLink::before { margin: 0px 8px; }\n  .feds-topnav--overflowing .feds-navItem--activeDeferred > .feds-navLink { padding: 0px; }\n  .feds-navLink--hoverCaret:hover, .feds-navLink--hoverCaret:focus { background-color: var(--feds-background-popup); }\n  .feds-navLink--hoverCaret::after { position: static; margin-top: 0px; margin-left: 5px; }\n  .feds-topnav--overflowing .feds-navLink--hoverCaret::after { margin-left: 3px; }\n  [dir=\"rtl\"] .feds-navLink--hoverCaret::after { margin-left: 0px; margi...",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-navLink, .feds-navLink--hoverCaret, [dir=\"rtl\"] .feds-navLink--hoverCaret",
          "cssText": ".feds-navLink, .feds-navLink--hoverCaret, [dir=\"rtl\"] .feds-navLink--hoverCaret { padding: 0px 12px; }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-navItem--active > .feds-navLink",
          "cssText": ".feds-navItem--active > .feds-navLink { position: relative; font-weight: 700; }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-navItem--active > .feds-navLink:only-child",
          "cssText": ".feds-navItem--active > .feds-navLink:only-child { cursor: default; }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-navItem--active > .feds-navLink:only-child:hover, .feds-navItem--active > .feds-navLink:only-child:focus",
          "cssText": ".feds-navItem--active > .feds-navLink:only-child:hover, .feds-navItem--active > .feds-navLink:only-child:focus { color: var(--feds-color-link); }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-navItem--active > .feds-navLink::before",
          "cssText": ".feds-navItem--active > .feds-navLink::before { position: absolute; bottom: 0px; left: 0px; right: 0px; border-bottom: 2px solid var(--feds-borderColor-navLink); content: \"\"; }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-navItem--active > .feds-navLink::before",
          "cssText": ".feds-navItem--active > .feds-navLink::before { margin: 0px 12px; }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-navItem--activeDeferred > .feds-navLink",
          "cssText": ".feds-navItem--activeDeferred > .feds-navLink { padding: 0px; width: 100%; justify-content: center; }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-topnav--overflowing .feds-navLink, .feds-topnav--overflowing .feds-navLink--hoverCaret, [dir=\"rtl\"] .feds-topnav--overflowing .feds-navLink--hoverCaret",
          "cssText": ".feds-topnav--overflowing .feds-navLink, .feds-topnav--overflowing .feds-navLink--hoverCaret, [dir=\"rtl\"] .feds-topnav--overflowing .feds-navLink--hoverCaret { padding: 0px 8px; }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-topnav--overflowing .feds-popup .feds-navLink",
          "cssText": ".feds-topnav--overflowing .feds-popup .feds-navLink { padding: 6px 32px; }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-topnav--overflowing .feds-navItem--active > .feds-navLink::before",
          "cssText": ".feds-topnav--overflowing .feds-navItem--active > .feds-navLink::before { margin: 0px 8px; }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-topnav--overflowing .feds-navItem--activeDeferred > .feds-navLink",
          "cssText": ".feds-topnav--overflowing .feds-navItem--activeDeferred > .feds-navLink { padding: 0px; }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-navLink--hoverCaret:hover, .feds-navLink--hoverCaret:focus",
          "cssText": ".feds-navLink--hoverCaret:hover, .feds-navLink--hoverCaret:focus { background-color: var(--feds-background-popup); }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-navLink--hoverCaret::after",
          "cssText": ".feds-navLink--hoverCaret::after { position: static; margin-top: 0px; margin-left: 5px; }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-topnav--overflowing .feds-navLink--hoverCaret::after",
          "cssText": ".feds-topnav--overflowing .feds-navLink--hoverCaret::after { margin-left: 3px; }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": "[dir=\"rtl\"] .feds-navLink--hoverCaret::after",
          "cssText": "[dir=\"rtl\"] .feds-navLink--hoverCaret::after { margin-left: 0px; margin-right: 7px; }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": "[dir=\"rtl\"] .feds-topnav--overflowing .feds-navLink--hoverCaret::after",
          "cssText": "[dir=\"rtl\"] .feds-topnav--overflowing .feds-navLink--hoverCaret::after { margin-left: 0px; margin-right: 5px; }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-navigation .feds-navLink-image",
          "cssText": ".global-navigation .feds-navLink-image { display: flex; }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-navigation .feds-navLink-image picture, .global-navigation .feds-navLink-image img",
          "cssText": ".global-navigation .feds-navLink-image picture, .global-navigation .feds-navLink-image img { display: block; }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-navigation .feds-navLink-image picture",
          "cssText": ".global-navigation .feds-navLink-image picture { width: max-content; max-width: 25px; }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-footer:not(.mobile) .feds-navLink-image",
          "cssText": ".global-footer:not(.mobile) .feds-navLink-image { display: flex; }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-footer:not(.mobile) .feds-navLink-image picture, .global-footer:not(.mobile) .feds-navLink-image img",
          "cssText": ".global-footer:not(.mobile) .feds-navLink-image picture, .global-footer:not(.mobile) .feds-navLink-image img { display: block; }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-footer:not(.mobile) .feds-navLink-image picture",
          "cssText": ".global-footer:not(.mobile) .feds-navLink-image picture { width: max-content; max-width: 25px; }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-navLink:hover .feds-navLink-description, .feds-navLink:focus .feds-navLink-description",
          "cssText": ".feds-navLink:hover .feds-navLink-description, .feds-navLink:focus .feds-navLink-description { color: var(--feds-color-navLink-description); }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-navLink[class*=\"-gradient\"]",
          "cssText": ".feds-navLink[class*=\"-gradient\"] { display: flex; border-radius: 4px; font-weight: 600; }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-menu-column--group .feds-navLink[class*=\"-gradient\"]",
          "cssText": ".feds-menu-column--group .feds-navLink[class*=\"-gradient\"] { padding-left: 8px; padding-right: 8px; column-gap: 8px; }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-navLink[class*=\"-gradient\"]:not(:first-child)",
          "cssText": ".feds-navLink[class*=\"-gradient\"]:not(:first-child) { margin-top: 12px; }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-menu-column--group .feds-navLink[class*=\"-gradient\"] picture",
          "cssText": ".feds-menu-column--group .feds-navLink[class*=\"-gradient\"] picture { max-width: 18px; }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-navLink[class*=\"-gradient\"] .feds-navLink-title",
          "cssText": ".feds-navLink[class*=\"-gradient\"] .feds-navLink-title { column-gap: 4px; }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-navLink[class*=\"-gradient\"] .feds-navLink-title::after",
          "cssText": ".feds-navLink[class*=\"-gradient\"] .feds-navLink-title::after { width: 4px; height: 4px; transform: rotate(-45deg); content: \"\"; }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-navLink.feds-navLink--header[class*=\"-gradient\"] .feds-navLink-title::after",
          "cssText": ".feds-navLink.feds-navLink--header[class*=\"-gradient\"] .feds-navLink-title::after { display: none; }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": "[dir=\"rtl\"] .feds-navLink[class*=\"-gradient\"] .feds-navLink-title::after",
          "cssText": "[dir=\"rtl\"] .feds-navLink[class*=\"-gradient\"] .feds-navLink-title::after { transform: rotate(135deg); }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-navLink[class*=\"-gradient\"]:hover .feds-navLink-title::after, .feds-navLink[class*=\"-gradient\"]:focus .feds-navLink-title::after",
          "cssText": ".feds-navLink[class*=\"-gradient\"]:hover .feds-navLink-title::after, .feds-navLink[class*=\"-gradient\"]:focus .feds-navLink-title::after { border-color: var(--feds-color-link--hover); }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-navLink--photo-gradient",
          "cssText": ".feds-navLink--photo-gradient { background: linear-gradient(90deg, rgb(208, 232, 250), rgb(206, 244, 244)); }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-navLink--design-gradient",
          "cssText": ".feds-navLink--design-gradient { background: linear-gradient(90deg, rgb(252, 203, 252), rgb(255, 233, 208)); }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-navLink--3d-gradient",
          "cssText": ".feds-navLink--3d-gradient { background: linear-gradient(90deg, rgb(225, 245, 203), rgb(237, 239, 181)); }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-navLink--pdf-gradient",
          "cssText": ".feds-navLink--pdf-gradient { background: linear-gradient(90deg, rgb(255, 191, 191), rgb(253, 230, 211)); }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-navLink--video-gradient",
          "cssText": ".feds-navLink--video-gradient { background: linear-gradient(90deg, rgb(220, 217, 255), rgb(213, 241, 253)); }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-navLink--ai-gradient",
          "cssText": ".feds-navLink--ai-gradient { background: linear-gradient(90deg, rgb(188, 227, 255), rgb(255, 233, 211), rgb(248, 213, 228)); }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        }
      ]
    },
    {
      "href": "https://use.typekit.net/hah7vzn.css",
      "rules": "inaccessible",
      "rulesList": []
    },
    {
      "href": "https://www.adobe.com/libs/mep/ace0861/section-metadata/section-metadata.css",
      "rules": 100,
      "rulesList": [
        {
          "type": "CSSStyleRule",
          "selector": ".section-metadata",
          "cssText": ".section-metadata { display: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section.darkest",
          "cssText": ".section.darkest { background-color: rgb(0, 0, 0); color: rgb(255, 255, 255); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section.dark",
          "cssText": ".section.dark { background-color: rgb(29, 29, 29); color: rgb(255, 255, 255); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section.light",
          "cssText": ".section.light { background-color: rgb(255, 255, 255); color: rgb(34, 34, 34); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section.hide-sticky-section, .section.close-sticky-section",
          "cssText": ".section.hide-sticky-section, .section.close-sticky-section { display: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section.has-background",
          "cssText": ".section.has-background { background-color: unset; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section.xxxl-spacing-static",
          "cssText": ".section.xxxl-spacing-static { padding: var(--spacing-xxxl-static) 0; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section.xxl-spacing-static",
          "cssText": ".section.xxl-spacing-static { padding: var(--spacing-xxl-static) 0; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section.xl-spacing-static",
          "cssText": ".section.xl-spacing-static { padding: var(--spacing-xl-static) 0; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section.xxxl-spacing",
          "cssText": ".section.xxxl-spacing { padding: var(--spacing-xxxl) 0; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section.xxl-spacing",
          "cssText": ".section.xxl-spacing { padding: var(--spacing-xxl) 0; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section.xl-spacing",
          "cssText": ".section.xl-spacing { padding: var(--spacing-xl) 0; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section.l-spacing",
          "cssText": ".section.l-spacing { padding: var(--spacing-l) 0; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section.m-spacing",
          "cssText": ".section.m-spacing { padding: var(--spacing-m) 0; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section.s-spacing",
          "cssText": ".section.s-spacing { padding: var(--spacing-s) 0; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section.xs-spacing",
          "cssText": ".section.xs-spacing { padding: var(--spacing-xs) 0; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section.xxs-spacing",
          "cssText": ".section.xxs-spacing { padding: var(--spacing-xxs) 0; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section.xxxl-padding",
          "cssText": ".section.xxxl-padding { padding: var(--spacing-xxxl); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section.xxl-padding",
          "cssText": ".section.xxl-padding { padding: var(--spacing-xxl); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section.xl-padding",
          "cssText": ".section.xl-padding { padding: var(--spacing-xl); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section.l-padding",
          "cssText": ".section.l-padding { padding: var(--spacing-l); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section.m-padding",
          "cssText": ".section.m-padding { padding: var(--spacing-m); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section.s-padding",
          "cssText": ".section.s-padding { padding: var(--spacing-s); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section.xs-padding",
          "cssText": ".section.xs-padding { padding: var(--spacing-xs); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section.xxs-padding",
          "cssText": ".section.xxs-padding { padding: var(--spacing-xxs); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section div.section-background",
          "cssText": ".section div.section-background { display: block; position: absolute; inset: 0px; z-index: -1; height: 100%; width: 100%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section picture.section-background",
          "cssText": ".section picture.section-background { display: block; position: absolute; inset: 0px; z-index: -1; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section .section-background img",
          "cssText": ".section .section-background img { object-fit: cover; height: 100%; width: 100%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section.center .content > h1, .section.center .content > h2, .section.center .content > h3, .section.center .content > h4, .section.center .content > h5, .section.center .content > h6, .section.center .content > p",
          "cssText": ".section.center .content > h1, .section.center .content > h2, .section.center .content > h3, .section.center .content > h4, .section.center .content > h5, .section.center .content > h6, .section.center .content > p { text-align: center; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section.divider",
          "cssText": ".section.divider { border-bottom: 1px solid rgb(216, 216, 216); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section.divider-inherit",
          "cssText": ".section.divider-inherit { border-bottom: 1px solid; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section.center[class*=\"-up\"]",
          "cssText": ".section.center[class*=\"-up\"] { justify-items: center; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section[class*=\"-up\"].no-gap",
          "cssText": ".section[class*=\"-up\"].no-gap { gap: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section[class*=\"-up\"].xxs-gap",
          "cssText": ".section[class*=\"-up\"].xxs-gap { gap: var(--spacing-xxs); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section[class*=\"-up\"].xs-gap",
          "cssText": ".section[class*=\"-up\"].xs-gap { gap: var(--spacing-xs); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section[class*=\"-up\"].s-gap",
          "cssText": ".section[class*=\"-up\"].s-gap { gap: var(--spacing-s); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section[class*=\"-up\"].l-gap",
          "cssText": ".section[class*=\"-up\"].l-gap { gap: var(--spacing-l); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section[class*=\"-up\"].xl-gap",
          "cssText": ".section[class*=\"-up\"].xl-gap { gap: var(--spacing-xl); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section[class*=\"-up\"].xxl-gap",
          "cssText": ".section[class*=\"-up\"].xxl-gap { gap: var(--spacing-xxl); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section[class*=\"-up\"].xxxl-gap",
          "cssText": ".section[class*=\"-up\"].xxxl-gap { gap: var(--spacing-xxxl); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section.two-up, .section.three-up, .section.four-up, .section.five-up",
          "cssText": ".section.two-up, .section.three-up, .section.four-up, .section.five-up { display: grid; grid-template-columns: repeat(auto-fit, minmax(276px, 1fr)); gap: var(--spacing-m); align-items: start; padding-left: var(--grid-margins-width); padding-right: var(--grid-margins-width); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section.five-up",
          "cssText": ".section.five-up { grid-template-columns: repeat(auto-fit, minmax(142px, 1fr)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section.sticky-top",
          "cssText": ".section.sticky-top { position: sticky; top: 57px; z-index: 1; background-color: var(--color-white); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section.sticky-bottom",
          "cssText": ".section.sticky-bottom { position: sticky; bottom: 0px; z-index: 3; background-color: var(--color-white); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section.sticky-bottom.promo-sticky-section",
          "cssText": ".section.sticky-bottom.promo-sticky-section { background: none; z-index: 4; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section.sticky-bottom.popup",
          "cssText": ".section.sticky-bottom.popup { bottom: var(--spacing-xs); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section[class*=\"grid-width-\"]",
          "cssText": ".section[class*=\"grid-width-\"] { padding-left: var(--grid-margins-width); padding-right: var(--grid-margins-width); display: grid; gap: var(--spacing-m); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section[class*=\"grid-width-\"] > .content, main > .section[class*=\"-up\"] > .content",
          "cssText": ".section[class*=\"grid-width-\"] > .content, main > .section[class*=\"-up\"] > .content { max-width: initial; margin: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section.masonry-layout",
          "cssText": ".section.masonry-layout { display: grid; grid-template-columns: repeat(1, 1fr); gap: var(--spacing-s); padding-left: var(--grid-margins-width); padding-right: var(--grid-margins-width); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section.masonry-layout > div[class*=\"grid-\"], .section.masonry-layout > div[class*=\"grid-\"] > div.fragment, .section.masonry-layout > div[class*=\"grid-\"] > div.fragment > div.section",
          "cssText": ".section.masonry-layout > div[class*=\"grid-\"], .section.masonry-layout > div[class*=\"grid-\"] > div.fragment, .section.masonry-layout > div[class*=\"grid-\"] > div.fragment > div.section { display: grid; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 600px) {\n  .section.two-up.reverse-mobile > div:nth-child(1) { order: 2; }\n  .section.two-up.reverse-mobile > div:nth-child(2) { order: 1; }\n}",
          "urls": [],
          "group": "(max-width: 600px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "600px",
                "600",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section.two-up.reverse-mobile > div:nth-child(1)",
          "cssText": ".section.two-up.reverse-mobile > div:nth-child(1) { order: 2; }",
          "urls": [],
          "group": "(max-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section.two-up.reverse-mobile > div:nth-child(2)",
          "cssText": ".section.two-up.reverse-mobile > div:nth-child(2) { order: 1; }",
          "urls": [],
          "group": "(max-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 600px) and (max-width: 1200px) {\n  .section.five-up { grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); }\n  .section.masonry-layout { grid-template-columns: repeat(auto-fit, minmax(320px, 1fr)); }\n  .section.masonry-layout .grid-full-width:first-child { grid-column: 1 / -1; }\n}",
          "urls": [],
          "group": "screen and (min-width: 600px) and (max-width: 1200px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px) and (max-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "max-width",
                "1200px",
                "600",
                "1200",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section.five-up",
          "cssText": ".section.five-up { grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); }",
          "urls": [],
          "group": "screen and (min-width: 600px) and (max-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px) and (max-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "max-width",
                "1200px",
                "600",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section.masonry-layout",
          "cssText": ".section.masonry-layout { grid-template-columns: repeat(auto-fit, minmax(320px, 1fr)); }",
          "urls": [],
          "group": "screen and (min-width: 600px) and (max-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px) and (max-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "max-width",
                "1200px",
                "600",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section.masonry-layout .grid-full-width:first-child",
          "cssText": ".section.masonry-layout .grid-full-width:first-child { grid-column: 1 / -1; }",
          "urls": [],
          "group": "screen and (min-width: 600px) and (max-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px) and (max-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "max-width",
                "1200px",
                "600",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (max-width: 900px) {\n  .section.two-up.one-up-tablet, .section.three-up.one-up-tablet, .section.four-up.one-up-tablet, .section.five-up.one-up-tablet { grid-template-columns: 1fr; }\n}",
          "urls": [],
          "group": "screen and (max-width: 900px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "900px",
                "900",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section.two-up.one-up-tablet, .section.three-up.one-up-tablet, .section.four-up.one-up-tablet, .section.five-up.one-up-tablet",
          "cssText": ".section.two-up.one-up-tablet, .section.three-up.one-up-tablet, .section.four-up.one-up-tablet, .section.five-up.one-up-tablet { grid-template-columns: 1fr; }",
          "urls": [],
          "group": "screen and (max-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 720px) {\n  .section.grid-width-6 { padding-left: calc(-300px + 50vw); padding-right: calc(-300px + 50vw); }\n}",
          "urls": [],
          "group": "screen and (min-width: 720px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 720px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "720px",
                "720",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section.grid-width-6",
          "cssText": ".section.grid-width-6 { padding-left: calc(-300px + 50vw); padding-right: calc(-300px + 50vw); }",
          "urls": [],
          "group": "screen and (min-width: 720px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 720px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "720px",
                "720",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 920px) {\n  .section.grid-width-8 { padding-left: calc(-400px + 50vw); padding-right: calc(-400px + 50vw); }\n}",
          "urls": [],
          "group": "screen and (min-width: 920px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 920px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "920px",
                "920",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section.grid-width-8",
          "cssText": ".section.grid-width-8 { padding-left: calc(-400px + 50vw); padding-right: calc(-400px + 50vw); }",
          "urls": [],
          "group": "screen and (min-width: 920px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 920px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "920px",
                "920",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (min-width: 900px) {\n  .section.sticky-top { top: 64px; }\n}",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section.sticky-top",
          "cssText": ".section.sticky-top { top: 64px; }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 1120px) {\n  .section.grid-width-10 { padding-left: calc(-500px + 50vw); padding-right: calc(-500px + 50vw); }\n}",
          "urls": [],
          "group": "screen and (min-width: 1120px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1120px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1120px",
                "1120",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section.grid-width-10",
          "cssText": ".section.grid-width-10 { padding-left: calc(-500px + 50vw); padding-right: calc(-500px + 50vw); }",
          "urls": [],
          "group": "screen and (min-width: 1120px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1120px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1120px",
                "1120",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 1200px) {\n  .section.two-up { grid-template-columns: repeat(2, minmax(0px, 1fr)); }\n  .section.three-up { grid-template-columns: repeat(3, minmax(0px, 1fr)); }\n  .section.four-up { grid-template-columns: repeat(4, minmax(0px, 1fr)); }\n  .section.five-up { grid-template-columns: repeat(5, minmax(0px, 1fr)); }\n  .section.grid-template-columns-1-2 { grid-template-columns: 1fr 2fr; }\n  .section.grid-template-columns-2-1 { grid-template-columns: 2fr 1fr; }\n  .section.grid-template-columns-1-3 { grid-template-columns: 1fr 3fr; }\n  .section.grid-template-columns-3-1 { grid-template-columns: 3fr 1fr; }\n  .section.grid-width-6-desktop { padding-left: var(--grid-margins-width-6); padding-right: var(--grid-margins-width-6); }\n  .section.grid-width-8-desktop { padding-left: var(--grid-margins-width-8); padding-right: var(--grid-margins-width-8); }\n  .section.grid-width-10-desktop { padding-left: var(--grid-margins-width-10); padding-right: var(--grid-margins-width-10); }\n  .section.masonry-layout { grid-template-columns: repeat(12, 1fr); }\n  .section.masonry-layout .grid-full-width { grid-column: span 12; }\n  .section.masonry-layout .grid-half-width { grid-column: span 6; }\n  .section.masonry-layout .grid-span-1 { grid-column: span 1; }\n  .section.masonry-layout .grid-span-2 { grid-column: span 2; }\n  .section.masonry-layout .grid-span-3 { grid-column: span 3; }\n  .section.masonry-layout .grid-span-4 { grid-column: span 4; }\n  .section.masonry-layout .grid-span-5 { grid-column: span 5; }\n  .section.masonry-layout .grid-span-6 { grid-column: span 6; }\n  .se...",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section.two-up",
          "cssText": ".section.two-up { grid-template-columns: repeat(2, minmax(0px, 1fr)); }",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section.three-up",
          "cssText": ".section.three-up { grid-template-columns: repeat(3, minmax(0px, 1fr)); }",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section.four-up",
          "cssText": ".section.four-up { grid-template-columns: repeat(4, minmax(0px, 1fr)); }",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section.five-up",
          "cssText": ".section.five-up { grid-template-columns: repeat(5, minmax(0px, 1fr)); }",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section.grid-template-columns-1-2",
          "cssText": ".section.grid-template-columns-1-2 { grid-template-columns: 1fr 2fr; }",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section.grid-template-columns-2-1",
          "cssText": ".section.grid-template-columns-2-1 { grid-template-columns: 2fr 1fr; }",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section.grid-template-columns-1-3",
          "cssText": ".section.grid-template-columns-1-3 { grid-template-columns: 1fr 3fr; }",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section.grid-template-columns-3-1",
          "cssText": ".section.grid-template-columns-3-1 { grid-template-columns: 3fr 1fr; }",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section.grid-width-6-desktop",
          "cssText": ".section.grid-width-6-desktop { padding-left: var(--grid-margins-width-6); padding-right: var(--grid-margins-width-6); }",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section.grid-width-8-desktop",
          "cssText": ".section.grid-width-8-desktop { padding-left: var(--grid-margins-width-8); padding-right: var(--grid-margins-width-8); }",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section.grid-width-10-desktop",
          "cssText": ".section.grid-width-10-desktop { padding-left: var(--grid-margins-width-10); padding-right: var(--grid-margins-width-10); }",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section.masonry-layout",
          "cssText": ".section.masonry-layout { grid-template-columns: repeat(12, 1fr); }",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section.masonry-layout .grid-full-width",
          "cssText": ".section.masonry-layout .grid-full-width { grid-column: span 12; }",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section.masonry-layout .grid-half-width",
          "cssText": ".section.masonry-layout .grid-half-width { grid-column: span 6; }",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section.masonry-layout .grid-span-1",
          "cssText": ".section.masonry-layout .grid-span-1 { grid-column: span 1; }",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section.masonry-layout .grid-span-2",
          "cssText": ".section.masonry-layout .grid-span-2 { grid-column: span 2; }",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section.masonry-layout .grid-span-3",
          "cssText": ".section.masonry-layout .grid-span-3 { grid-column: span 3; }",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section.masonry-layout .grid-span-4",
          "cssText": ".section.masonry-layout .grid-span-4 { grid-column: span 4; }",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section.masonry-layout .grid-span-5",
          "cssText": ".section.masonry-layout .grid-span-5 { grid-column: span 5; }",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section.masonry-layout .grid-span-6",
          "cssText": ".section.masonry-layout .grid-span-6 { grid-column: span 6; }",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section.masonry-layout .grid-span-7",
          "cssText": ".section.masonry-layout .grid-span-7 { grid-column: span 7; }",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section.masonry-layout .grid-span-8",
          "cssText": ".section.masonry-layout .grid-span-8 { grid-column: span 8; }",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section.masonry-layout .grid-span-9",
          "cssText": ".section.masonry-layout .grid-span-9 { grid-column: span 9; }",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section.masonry-layout .grid-span-10",
          "cssText": ".section.masonry-layout .grid-span-10 { grid-column: span 10; }",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section.masonry-layout .grid-span-11",
          "cssText": ".section.masonry-layout .grid-span-11 { grid-column: span 11; }",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section.has-background .mobile-only, .section.has-background .tablet-only, .section.has-background .desktop-only",
          "cssText": ".section.has-background .mobile-only, .section.has-background .tablet-only, .section.has-background .desktop-only { display: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (max-width: 599px) {\n  .section.has-background .mobile-only { display: block; }\n}",
          "urls": [],
          "group": "screen and (max-width: 599px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 599px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "599px",
                "599",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section.has-background .mobile-only",
          "cssText": ".section.has-background .mobile-only { display: block; }",
          "urls": [],
          "group": "screen and (max-width: 599px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 599px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "599px",
                "599",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 600px) and (max-width: 1199px) {\n  .section.has-background .tablet-only { display: block; }\n}",
          "urls": [],
          "group": "screen and (min-width: 600px) and (max-width: 1199px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px) and (max-width: 1199px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "max-width",
                "1199px",
                "600",
                "1199",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section.has-background .tablet-only",
          "cssText": ".section.has-background .tablet-only { display: block; }",
          "urls": [],
          "group": "screen and (min-width: 600px) and (max-width: 1199px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px) and (max-width: 1199px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "max-width",
                "1199px",
                "600",
                "1199",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 1200px) {\n  .section.has-background .desktop-only { display: block; }\n}",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section.has-background .desktop-only",
          "cssText": ".section.has-background .desktop-only { display: block; }",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        }
      ]
    },
    {
      "href": "https://www.adobe.com/libs/features/georoutingv2/georoutingv2.css",
      "rules": 32,
      "rulesList": [
        {
          "type": "CSSStyleRule",
          "selector": ".dialog-modal.locale-modal-v2",
          "cssText": ".dialog-modal.locale-modal-v2 { overflow: visible; font-family: \"Adobe Clean\", adobe-clean, \"Trebuchet MS\", sans-serif; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dialog-modal.locale-modal-v2 .dialog-close, .dialog-modal.locale-modal-v2 .georouting-wrapper",
          "cssText": ".dialog-modal.locale-modal-v2 .dialog-close, .dialog-modal.locale-modal-v2 .georouting-wrapper { display: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dialog-modal.locale-modal-v2 .georouting-wrapper",
          "cssText": ".dialog-modal.locale-modal-v2 .georouting-wrapper { padding: 56px 24px 40px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dialog-modal.locale-modal-v2 .georouting-bg",
          "cssText": ".dialog-modal.locale-modal-v2 .georouting-bg { position: absolute; overflow: hidden; inset: 0px; display: flex; justify-content: center; align-items: center; z-index: -1; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dialog-modal.locale-modal-v2 .picker",
          "cssText": ".dialog-modal.locale-modal-v2 .picker { position: fixed; margin-top: 2px; background: 0px 0px no-repeat padding-box padding-box rgb(255, 255, 255); box-shadow: rgba(0, 0, 0, 0.15) 0px 1px 4px; border: 1px solid rgb(177, 177, 177); border-radius: 4px; opacity: 1; padding-inline-start: 0px; min-width: 176px; margin-bottom: 8px; z-index: 10; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dialog-modal.locale-modal-v2 .picker.top",
          "cssText": ".dialog-modal.locale-modal-v2 .picker.top { bottom: 41px; position: absolute; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dialog-modal.locale-modal-v2 a:first-child",
          "cssText": ".dialog-modal.locale-modal-v2 a:first-child { margin-inline-end: 24px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dialog-modal.locale-modal-v2 a:last-child",
          "cssText": ".dialog-modal.locale-modal-v2 a:last-child { white-space: nowrap; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dialog-modal.locale-modal-v2 .picker li",
          "cssText": ".dialog-modal.locale-modal-v2 .picker li { list-style-type: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dialog-modal.locale-modal-v2 .picker li a",
          "cssText": ".dialog-modal.locale-modal-v2 .picker li a { width: calc(100% - 12px); display: block; padding-inline-start: 12px; color: rgb(34, 34, 34); font-size: 14px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dialog-modal.locale-modal-v2 .picker li a:hover",
          "cssText": ".dialog-modal.locale-modal-v2 .picker li a:hover { background-color: rgb(229, 229, 229); text-decoration: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dialog-modal.locale-modal-v2 h3",
          "cssText": ".dialog-modal.locale-modal-v2 h3 { margin: 16px 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dialog-modal.locale-modal-v2 .locale-text",
          "cssText": ".dialog-modal.locale-modal-v2 .locale-text { margin: 16px 0px 26px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dialog-modal.locale-modal-v2 .link-wrapper",
          "cssText": ".dialog-modal.locale-modal-v2 .link-wrapper { line-height: 48px; position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dialog-modal.locale-modal-v2 span.icon",
          "cssText": ".dialog-modal.locale-modal-v2 span.icon { vertical-align: middle; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dialog-modal.locale-modal-v2 img.icon-milo",
          "cssText": ".dialog-modal.locale-modal-v2 img.icon-milo { top: 1px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dialog-modal.locale-modal-v2 .icon-milo.down-arrow",
          "cssText": ".dialog-modal.locale-modal-v2 .icon-milo.down-arrow { float: right; margin-left: 4px; top: 3px; filter: brightness(0) invert(1); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dialog-modal.locale-modal-v2 .tabs div[role=\"tablist\"]",
          "cssText": ".dialog-modal.locale-modal-v2 .tabs div[role=\"tablist\"] { box-shadow: initial; background: initial; margin: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dialog-modal.locale-modal-v2 .tabs div[role=\"tablist\"] .tab-list-container",
          "cssText": ".dialog-modal.locale-modal-v2 .tabs div[role=\"tablist\"] .tab-list-container { padding: initial; margin: 2px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dialog-modal.locale-modal-v2 .tabs .paddle",
          "cssText": ".dialog-modal.locale-modal-v2 .tabs .paddle { margin: 2px 0px; background: var(--tabs-active-bg-color); border-width: 0px 0px 2px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dialog-modal.locale-modal-v2 .tabs.quiet div[role=\"tablist\"] button[aria-selected=\"true\"]",
          "cssText": ".dialog-modal.locale-modal-v2 .tabs.quiet div[role=\"tablist\"] button[aria-selected=\"true\"] { border-bottom-color: var(--tabs-active-text-color); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dialog-modal.locale-modal-v2 .tabs .paddle:disabled",
          "cssText": ".dialog-modal.locale-modal-v2 .tabs .paddle:disabled { display: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dialog-modal.locale-modal-v2 .tabs button",
          "cssText": ".dialog-modal.locale-modal-v2 .tabs button { border-radius: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dialog-modal.locale-modal-v2 .tabs button:focus-visible",
          "cssText": ".dialog-modal.locale-modal-v2 .tabs button:focus-visible { outline: 2px solid var(--color-accent-focus-ring); text-decoration: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dialog-modal.locale-modal-v2 .tabs.quiet div[role=\"tablist\"] button:not(:first-of-type)",
          "cssText": ".dialog-modal.locale-modal-v2 .tabs.quiet div[role=\"tablist\"] button:not(:first-of-type) { margin-inline-start: 24px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dialog-modal.locale-modal-v2 .tabs .tab-content",
          "cssText": ".dialog-modal.locale-modal-v2 .tabs .tab-content { border-bottom: initial; padding: initial; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (min-width: 600px) {\n  .dialog-modal.locale-modal-v2 .georouting-wrapper { padding: 56px 56px 40px; }\n  .dialog-modal.locale-modal-v2 { max-width: calc(100% - 2em - 6px); }\n}",
          "urls": [],
          "group": "(min-width: 600px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dialog-modal.locale-modal-v2 .georouting-wrapper",
          "cssText": ".dialog-modal.locale-modal-v2 .georouting-wrapper { padding: 56px 56px 40px; }",
          "urls": [],
          "group": "(min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dialog-modal.locale-modal-v2",
          "cssText": ".dialog-modal.locale-modal-v2 { max-width: calc(100% - 2em - 6px); }",
          "urls": [],
          "group": "(min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (min-width: 760px) {\n  .dialog-modal.locale-modal-v2 { max-width: 720px; }\n}",
          "urls": [],
          "group": "(min-width: 760px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 760px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "760px",
                "760",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dialog-modal.locale-modal-v2",
          "cssText": ".dialog-modal.locale-modal-v2 { max-width: 720px; }",
          "urls": [],
          "group": "(min-width: 760px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 760px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "760px",
                "760",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": "body:has(.dialog-modal:not(.locale-modal-v2)) #locale-modal-v2, body:has(.dialog-modal:not(.locale-modal-v2, .curtain-off)) #locale-modal-v2 + .modal-curtain.is-open",
          "cssText": "body:has(.dialog-modal:not(.locale-modal-v2)) #locale-modal-v2, body:has(.dialog-modal:not(.locale-modal-v2, .curtain-off)) #locale-modal-v2 + .modal-curtain.is-open { display: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        }
      ]
    },
    {
      "href": "https://www.adobe.com/libs/blocks/modal/modal.css",
      "rules": 99,
      "rulesList": [
        {
          "type": "CSSStyleRule",
          "selector": ":root",
          "cssText": ":root { --modal-focus-color: #109cde; --modal-max-height: calc((100vh - 6px) - 2em); --modal-max-height-mobile: calc((100% - 6px) - 2em); --modal-z-index: 102; --modal-z-index-curtain: 101; --modal-close-accent-color: #707070; --jarvis-z-index-override: 100; --tall-video-padding: var(--spacing-xl); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".branch-banner-is-active",
          "cssText": ".branch-banner-is-active { --modal-z-index: 100000; --modal-z-index-curtain: 99999; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dialog-modal",
          "cssText": ".dialog-modal { background: rgb(255, 255, 255); border-radius: 6px; margin: auto; position: fixed; inset: 0px; max-width: calc(100% - 2em - 6px); max-height: var(--modal-max-height); height: fit-content; width: 100%; user-select: text; visibility: visible; overflow: auto; z-index: var(--modal-z-index); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dialog-modal.upgrade-flow-modal, .dialog-modal.three-in-one",
          "cssText": ".dialog-modal.upgrade-flow-modal, .dialog-modal.three-in-one { height: 100%; width: 100%; max-height: 100%; max-width: 100%; overflow: hidden; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".upgrade-flow-modal .dialog-close, .dialog-modal.hide-close-button .dialog-close",
          "cssText": ".upgrade-flow-modal .dialog-close, .dialog-modal.hide-close-button .dialog-close { display: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".upgrade-flow-modal .upgrade-flow-iframe, .three-in-one .milo-iframe",
          "cssText": ".upgrade-flow-modal .upgrade-flow-iframe, .three-in-one .milo-iframe { overflow: hidden; height: 100%; width: 100%; box-sizing: border-box; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".three-in-one iframe",
          "cssText": ".three-in-one iframe { width: 100%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "#locale-modal-v2 .dialog-close, #locale-modal-v2 .georouting-wrapper",
          "cssText": "#locale-modal-v2 .dialog-close, #locale-modal-v2 .georouting-wrapper { display: block; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dialog-modal.commerce-frame",
          "cssText": ".dialog-modal.commerce-frame { z-index: 103; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dialog-modal.delayed-modal",
          "cssText": ".dialog-modal.delayed-modal { width: 300px; max-width: none; border-radius: var(--l-rounded-corners); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (min-width: 430px) and (orientation: portrait) {\n  .dialog-modal.delayed-modal { width: 370px; }\n}",
          "urls": [],
          "group": "(min-width: 430px) and (orientation: portrait)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 430px) and (orientation: portrait)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "430px",
                "orientation",
                "portrait",
                "430",
                "width"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "orientation",
              "semanticGroup": "geometry",
              "claim": "screen orientation",
              "excerpt": "(min-width: 430px) and (orientation: portrait)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "430px",
                "orientation",
                "portrait",
                "430",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dialog-modal.delayed-modal",
          "cssText": ".dialog-modal.delayed-modal { width: 370px; }",
          "urls": [],
          "group": "(min-width: 430px) and (orientation: portrait)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 430px) and (orientation: portrait)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "430px",
                "orientation",
                "portrait",
                "430",
                "width"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "orientation",
              "semanticGroup": "geometry",
              "claim": "screen orientation",
              "excerpt": "(min-width: 430px) and (orientation: portrait)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "430px",
                "orientation",
                "portrait",
                "430",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (min-width: 430px) and (orientation: landscape) {\n  .dialog-modal.delayed-modal { width: 600px; }\n}",
          "urls": [],
          "group": "(min-width: 430px) and (orientation: landscape)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 430px) and (orientation: landscape)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "430px",
                "orientation",
                "landscape",
                "430",
                "width"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "orientation",
              "semanticGroup": "geometry",
              "claim": "screen orientation",
              "excerpt": "(min-width: 430px) and (orientation: landscape)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "430px",
                "orientation",
                "landscape",
                "430",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dialog-modal.delayed-modal",
          "cssText": ".dialog-modal.delayed-modal { width: 600px; }",
          "urls": [],
          "group": "(min-width: 430px) and (orientation: landscape)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 430px) and (orientation: landscape)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "430px",
                "orientation",
                "landscape",
                "430",
                "width"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "orientation",
              "semanticGroup": "geometry",
              "claim": "screen orientation",
              "excerpt": "(min-width: 430px) and (orientation: landscape)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "430px",
                "orientation",
                "landscape",
                "430",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (min-width: 576px) and (orientation: portrait) {\n  .dialog-modal.delayed-modal { width: 516px; }\n}",
          "urls": [],
          "group": "(min-width: 576px) and (orientation: portrait)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 576px) and (orientation: portrait)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "576px",
                "orientation",
                "portrait",
                "576",
                "width"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "orientation",
              "semanticGroup": "geometry",
              "claim": "screen orientation",
              "excerpt": "(min-width: 576px) and (orientation: portrait)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "576px",
                "orientation",
                "portrait",
                "576",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dialog-modal.delayed-modal",
          "cssText": ".dialog-modal.delayed-modal { width: 516px; }",
          "urls": [],
          "group": "(min-width: 576px) and (orientation: portrait)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 576px) and (orientation: portrait)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "576px",
                "orientation",
                "portrait",
                "576",
                "width"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "orientation",
              "semanticGroup": "geometry",
              "claim": "screen orientation",
              "excerpt": "(min-width: 576px) and (orientation: portrait)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "576px",
                "orientation",
                "portrait",
                "576",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (min-width: 768px) {\n  .dialog-modal.delayed-modal { width: 600px; }\n}",
          "urls": [],
          "group": "(min-width: 768px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 768px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "768px",
                "768",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dialog-modal.delayed-modal",
          "cssText": ".dialog-modal.delayed-modal { width: 600px; }",
          "urls": [],
          "group": "(min-width: 768px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 768px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "768px",
                "768",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (min-width: 829px) {\n  .dialog-modal.delayed-modal { width: 800px; }\n}",
          "urls": [],
          "group": "(min-width: 829px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 829px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "829px",
                "829",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dialog-modal.delayed-modal",
          "cssText": ".dialog-modal.delayed-modal { width: 800px; }",
          "urls": [],
          "group": "(min-width: 829px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 829px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "829px",
                "829",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (min-width: 1366px) {\n  .dialog-modal.delayed-modal { width: 900px; }\n}",
          "urls": [],
          "group": "(min-width: 1366px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 1366px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1366px",
                "1366",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dialog-modal.delayed-modal",
          "cssText": ".dialog-modal.delayed-modal { width: 900px; }",
          "urls": [],
          "group": "(min-width: 1366px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 1366px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1366px",
                "1366",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".modal-curtain.is-open",
          "cssText": ".modal-curtain.is-open { position: fixed; inset: 0px; background: rgba(50, 50, 50, 0.8); z-index: var(--modal-z-index-curtain); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dialog-modal button.dialog-close",
          "cssText": ".dialog-modal button.dialog-close { border: 3px solid transparent; position: absolute; padding: 0px; cursor: pointer; background: none; border-radius: 50%; height: 26px; right: 5px; top: 5px; width: 26px; z-index: 1; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dialog-close circle",
          "cssText": ".dialog-close circle { fill: var(--modal-close-accent-color); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dialog-close line",
          "cssText": ".dialog-close line { stroke: var(--color-white); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dialog-close:focus-visible",
          "cssText": ".dialog-close:focus-visible { outline: 2px solid var(--modal-focus-color); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dialog-close:focus-visible circle",
          "cssText": ".dialog-close:focus-visible circle { fill: var(--color-white); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dialog-close:focus-visible line",
          "cssText": ".dialog-close:focus-visible line { stroke: var(--modal-close-accent-color); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dialog-focus-placeholder",
          "cssText": ".dialog-focus-placeholder { height: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dialog-modal .section > .content",
          "cssText": ".dialog-modal .section > .content { max-width: initial; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dialog-modal > .fragment > .section > .content > :last-child",
          "cssText": ".dialog-modal > .fragment > .section > .content > :last-child { margin-bottom: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dialog-modal > .fragment > .section > .content > :first-child:not(h1, h2, h3, h4, h5, h6)",
          "cssText": ".dialog-modal > .fragment > .section > .content > :first-child:not(h1, h2, h3, h4, h5, h6) { margin-top: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dialog-modal > .fragment > .section > .content > h1, .dialog-modal > .fragment > .section > .content > h2, .dialog-modal > .fragment > .section > .content > h3, .dialog-modal > .fragment > .section > .content > h4, .dialog-modal > .fragment > .section > .content > h5, .dialog-modal > .fragment > .section > .content > h6",
          "cssText": ".dialog-modal > .fragment > .section > .content > h1, .dialog-modal > .fragment > .section > .content > h2, .dialog-modal > .fragment > .section > .content > h3, .dialog-modal > .fragment > .section > .content > h4, .dialog-modal > .fragment > .section > .content > h5, .dialog-modal > .fragment > .section > .content > h6 { margin: 12px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".locale-modal",
          "cssText": ".locale-modal { text-align: center; padding: 48px 32px 30px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".locale-modal .text-wrapper",
          "cssText": ".locale-modal .text-wrapper { padding-top: 30px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".locale-modal p",
          "cssText": ".locale-modal p { font-size: 1rem; font-weight: 500; line-height: 1.25rem; margin-bottom: 1ex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".locale-modal a",
          "cssText": ".locale-modal a { font-size: 0.875rem; display: block; font-weight: 500; padding: 8px; cursor: pointer; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".locale-modal .world-icon",
          "cssText": ".locale-modal .world-icon { width: 3.429rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".region-selector > div > p, .region-selector > div > ul li",
          "cssText": ".region-selector > div > p, .region-selector > div > ul li { line-height: 1.7; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".region-selector > div > p",
          "cssText": ".region-selector > div > p { font-size: 16px; margin-bottom: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".region-selector-text",
          "cssText": ".region-selector-text { padding: 32px 32px 20px; font-size: 16px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".region-selector-text > div > p",
          "cssText": ".region-selector-text > div > p { margin: 0px 0px 4px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".region-selector-text > div > p:first-of-type",
          "cssText": ".region-selector-text > div > p:first-of-type { font-size: 24px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dialog-modal > .fragment > .section.region-selector-text > .content > p:last-of-type",
          "cssText": ".dialog-modal > .fragment > .section.region-selector-text > .content > p:last-of-type { margin-bottom: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".region-selector > div > ul li > a:focus-visible",
          "cssText": ".region-selector > div > ul li > a:focus-visible { text-decoration: underline; outline: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".region-selector",
          "cssText": ".region-selector { padding: 0px 32px 32px; font-size: 14px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".region-selector ul",
          "cssText": ".region-selector ul { list-style: none; padding-left: 0px; margin: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".region-selector .content",
          "cssText": ".region-selector .content { column-count: 1; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".commerce-modal-open",
          "cssText": ".commerce-modal-open { overflow: hidden; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dialog-modal.tall-video",
          "cssText": ".dialog-modal.tall-video { line-height: 0; width: fit-content; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dialog-modal.tall-video .milo-video",
          "cssText": ".dialog-modal.tall-video .milo-video { aspect-ratio: var(--aspect-ratio-tall); height: auto; max-height: calc(var(--modal-max-height) - 2 * var(--tall-video-padding)); padding-bottom: 0px; min-width: 90vw; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (min-width: 600px) {\n  .dialog-modal { max-width: 80vw; width: fit-content; }\n  .dialog-modal.three-in-one { width: 100%; }\n  .dialog-modal .embed-vimeo { min-width: 80vw; }\n  .dialog-modal .milo-video { padding-bottom: 0px; height: auto; aspect-ratio: var(--aspect-ratio-wide); max-height: var(--modal-max-height); }\n  .dialog-modal.tall-video { --modal-width-var: 50vw; max-width: var(--modal-width-var); padding: var(--tall-video-padding); }\n  .dialog-modal.tall-video .milo-video { min-width: var(--modal-width-var); }\n  .region-selector .content { column-count: 3; }\n  .upgrade-flow-modal .upgrade-flow-iframe { padding: 0px 0px 10px; }\n}",
          "urls": [],
          "group": "(min-width: 600px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dialog-modal",
          "cssText": ".dialog-modal { max-width: 80vw; width: fit-content; }",
          "urls": [],
          "group": "(min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dialog-modal.three-in-one",
          "cssText": ".dialog-modal.three-in-one { width: 100%; }",
          "urls": [],
          "group": "(min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dialog-modal .embed-vimeo",
          "cssText": ".dialog-modal .embed-vimeo { min-width: 80vw; }",
          "urls": [],
          "group": "(min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dialog-modal .milo-video",
          "cssText": ".dialog-modal .milo-video { padding-bottom: 0px; height: auto; aspect-ratio: var(--aspect-ratio-wide); max-height: var(--modal-max-height); }",
          "urls": [],
          "group": "(min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dialog-modal.tall-video",
          "cssText": ".dialog-modal.tall-video { --modal-width-var: 50vw; max-width: var(--modal-width-var); padding: var(--tall-video-padding); }",
          "urls": [],
          "group": "(min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dialog-modal.tall-video .milo-video",
          "cssText": ".dialog-modal.tall-video .milo-video { min-width: var(--modal-width-var); }",
          "urls": [],
          "group": "(min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".region-selector .content",
          "cssText": ".region-selector .content { column-count: 3; }",
          "urls": [],
          "group": "(min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".upgrade-flow-modal .upgrade-flow-iframe",
          "cssText": ".upgrade-flow-modal .upgrade-flow-iframe { padding: 0px 0px 10px; }",
          "urls": [],
          "group": "(min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (min-width: 600px) and (orientation: landscape) {\n  .dialog-modal.tall-video, .dialog-modal.tall-video .milo-video { --modal-width-var: 19vw; }\n}",
          "urls": [],
          "group": "(min-width: 600px) and (orientation: landscape)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 600px) and (orientation: landscape)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "orientation",
                "landscape",
                "600",
                "width"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "orientation",
              "semanticGroup": "geometry",
              "claim": "screen orientation",
              "excerpt": "(min-width: 600px) and (orientation: landscape)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "orientation",
                "landscape",
                "600",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dialog-modal.tall-video, .dialog-modal.tall-video .milo-video",
          "cssText": ".dialog-modal.tall-video, .dialog-modal.tall-video .milo-video { --modal-width-var: 19vw; }",
          "urls": [],
          "group": "(min-width: 600px) and (orientation: landscape)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 600px) and (orientation: landscape)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "orientation",
                "landscape",
                "600",
                "width"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "orientation",
              "semanticGroup": "geometry",
              "claim": "screen orientation",
              "excerpt": "(min-width: 600px) and (orientation: landscape)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "orientation",
                "landscape",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (min-width: 600px) and (min-height: 431px) and (orientation: landscape) {\n  .dialog-modal.tall-video, .dialog-modal.tall-video .milo-video { --modal-width-var: 35vw; }\n}",
          "urls": [],
          "group": "(min-width: 600px) and (min-height: 431px) and (orientation: landscape)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 600px) and (min-height: 431px) and (orientation: landscape)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "min-height",
                "431px",
                "orientation",
                "landscape",
                "600",
                "431",
                "width",
                "height"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "height",
              "semanticGroup": "geometry",
              "claim": "viewport height",
              "excerpt": "(min-width: 600px) and (min-height: 431px) and (orientation: landscape)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "min-height",
                "431px",
                "orientation",
                "landscape",
                "600",
                "431",
                "width",
                "height"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "orientation",
              "semanticGroup": "geometry",
              "claim": "screen orientation",
              "excerpt": "(min-width: 600px) and (min-height: 431px) and (orientation: landscape)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "min-height",
                "431px",
                "orientation",
                "landscape",
                "600",
                "431",
                "width",
                "height"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dialog-modal.tall-video, .dialog-modal.tall-video .milo-video",
          "cssText": ".dialog-modal.tall-video, .dialog-modal.tall-video .milo-video { --modal-width-var: 35vw; }",
          "urls": [],
          "group": "(min-width: 600px) and (min-height: 431px) and (orientation: landscape)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 600px) and (min-height: 431px) and (orientation: landscape)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "min-height",
                "431px",
                "orientation",
                "landscape",
                "600",
                "431",
                "width",
                "height"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "height",
              "semanticGroup": "geometry",
              "claim": "viewport height",
              "excerpt": "(min-width: 600px) and (min-height: 431px) and (orientation: landscape)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "min-height",
                "431px",
                "orientation",
                "landscape",
                "600",
                "431",
                "width",
                "height"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "orientation",
              "semanticGroup": "geometry",
              "claim": "screen orientation",
              "excerpt": "(min-width: 600px) and (min-height: 431px) and (orientation: landscape)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "min-height",
                "431px",
                "orientation",
                "landscape",
                "600",
                "431",
                "width",
                "height"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 1199px) {\n  .dialog-modal.commerce-frame { width: 100%; max-width: 100%; max-height: 100%; }\n  .dialog-modal.upgrade-flow-modal { border-radius: 0px; }\n  .dialog-modal:not(.tall-video, .three-in-one, .commerce-frame, .upgrade-flow-modal) { max-height: var(--modal-max-height-mobile); }\n  .dialog-modal.commerce-frame > .fragment, .dialog-modal.commerce-frame > .section, .dialog-modal.commerce-frame > .fragment > .section { height: 100vh; }\n  .dialog-modal.xl-size, .dialog-modal.xl-size > .fragment, .dialog-modal.xl-size > .fragment > .section { height: 100%; }\n  .dialog-modal.xl-size .milo-iframe { height: 100%; padding-bottom: 0px; }\n}",
          "urls": [],
          "group": "(max-width: 1199px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 1199px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "1199px",
                "1199",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dialog-modal.commerce-frame",
          "cssText": ".dialog-modal.commerce-frame { width: 100%; max-width: 100%; max-height: 100%; }",
          "urls": [],
          "group": "(max-width: 1199px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 1199px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "1199px",
                "1199",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dialog-modal.upgrade-flow-modal",
          "cssText": ".dialog-modal.upgrade-flow-modal { border-radius: 0px; }",
          "urls": [],
          "group": "(max-width: 1199px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 1199px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "1199px",
                "1199",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dialog-modal:not(.tall-video, .three-in-one, .commerce-frame, .upgrade-flow-modal)",
          "cssText": ".dialog-modal:not(.tall-video, .three-in-one, .commerce-frame, .upgrade-flow-modal) { max-height: var(--modal-max-height-mobile); }",
          "urls": [],
          "group": "(max-width: 1199px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 1199px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "1199px",
                "1199",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dialog-modal.commerce-frame > .fragment, .dialog-modal.commerce-frame > .section, .dialog-modal.commerce-frame > .fragment > .section",
          "cssText": ".dialog-modal.commerce-frame > .fragment, .dialog-modal.commerce-frame > .section, .dialog-modal.commerce-frame > .fragment > .section { height: 100vh; }",
          "urls": [],
          "group": "(max-width: 1199px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 1199px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "1199px",
                "1199",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dialog-modal.xl-size, .dialog-modal.xl-size > .fragment, .dialog-modal.xl-size > .fragment > .section",
          "cssText": ".dialog-modal.xl-size, .dialog-modal.xl-size > .fragment, .dialog-modal.xl-size > .fragment > .section { height: 100%; }",
          "urls": [],
          "group": "(max-width: 1199px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 1199px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "1199px",
                "1199",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dialog-modal.xl-size .milo-iframe",
          "cssText": ".dialog-modal.xl-size .milo-iframe { height: 100%; padding-bottom: 0px; }",
          "urls": [],
          "group": "(max-width: 1199px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 1199px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "1199px",
                "1199",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (min-width: 1200px) {\n  .dialog-modal.s-size { max-width: 650px; }\n  .region-selector .content { column-count: 5; }\n  .dialog-modal#langnav { width: 1200px; max-width: calc(100% - 2em - 6px); }\n  .dialog-modal.commerce-frame { width: 1024px; height: 850px; }\n  .dialog-modal.commerce-frame > .fragment, .dialog-modal.commerce-frame > .section, .dialog-modal.commerce-frame > .fragment > .section { height: 100%; }\n  .dialog-modal.dynamic-height > .fragment, .dialog-modal.dynamic-height > .section, .dialog-modal.dynamic-height > .fragment > .section { height: 100%; }\n  .dialog-modal.commerce-frame .milo-iframe, .dialog-modal.dynamic-height .milo-iframe { padding-bottom: 0px; height: 100%; }\n  .dialog-modal.commerce-frame.height-fit-content, .dialog-modal.dynamic-height.height-fit-content { height: auto; max-height: 850px; min-width: 1000px; }\n  .dialog-modal.commerce-frame.height-fit-content .milo-iframe, .dialog-modal.dynamic-height.height-fit-content .milo-iframe { height: 100%; max-height: 845px; }\n  .dialog-modal.commerce-frame .milo-iframe iframe { height: 0%; }\n  .dialog-modal.upgrade-flow-modal { height: 820px; max-width: 1100px; overflow: hidden; width: 80%; }\n  .dialog-modal.three-in-one { height: 820px; width: 80%; max-width: 1100px; overflow: hidden; }\n  .dialog-modal.tall-video, .dialog-modal.tall-video .milo-video { --modal-width-var: 35vw; }\n  .dialog-modal.manage-plan-cancel { max-width: 100%; width: 1280px; }\n}",
          "urls": [],
          "group": "(min-width: 1200px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dialog-modal.s-size",
          "cssText": ".dialog-modal.s-size { max-width: 650px; }",
          "urls": [],
          "group": "(min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".region-selector .content",
          "cssText": ".region-selector .content { column-count: 5; }",
          "urls": [],
          "group": "(min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dialog-modal#langnav",
          "cssText": ".dialog-modal#langnav { width: 1200px; max-width: calc(100% - 2em - 6px); }",
          "urls": [],
          "group": "(min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dialog-modal.commerce-frame",
          "cssText": ".dialog-modal.commerce-frame { width: 1024px; height: 850px; }",
          "urls": [],
          "group": "(min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dialog-modal.commerce-frame > .fragment, .dialog-modal.commerce-frame > .section, .dialog-modal.commerce-frame > .fragment > .section",
          "cssText": ".dialog-modal.commerce-frame > .fragment, .dialog-modal.commerce-frame > .section, .dialog-modal.commerce-frame > .fragment > .section { height: 100%; }",
          "urls": [],
          "group": "(min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dialog-modal.dynamic-height > .fragment, .dialog-modal.dynamic-height > .section, .dialog-modal.dynamic-height > .fragment > .section",
          "cssText": ".dialog-modal.dynamic-height > .fragment, .dialog-modal.dynamic-height > .section, .dialog-modal.dynamic-height > .fragment > .section { height: 100%; }",
          "urls": [],
          "group": "(min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dialog-modal.commerce-frame .milo-iframe, .dialog-modal.dynamic-height .milo-iframe",
          "cssText": ".dialog-modal.commerce-frame .milo-iframe, .dialog-modal.dynamic-height .milo-iframe { padding-bottom: 0px; height: 100%; }",
          "urls": [],
          "group": "(min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dialog-modal.commerce-frame.height-fit-content, .dialog-modal.dynamic-height.height-fit-content",
          "cssText": ".dialog-modal.commerce-frame.height-fit-content, .dialog-modal.dynamic-height.height-fit-content { height: auto; max-height: 850px; min-width: 1000px; }",
          "urls": [],
          "group": "(min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dialog-modal.commerce-frame.height-fit-content .milo-iframe, .dialog-modal.dynamic-height.height-fit-content .milo-iframe",
          "cssText": ".dialog-modal.commerce-frame.height-fit-content .milo-iframe, .dialog-modal.dynamic-height.height-fit-content .milo-iframe { height: 100%; max-height: 845px; }",
          "urls": [],
          "group": "(min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dialog-modal.commerce-frame .milo-iframe iframe",
          "cssText": ".dialog-modal.commerce-frame .milo-iframe iframe { height: 0%; }",
          "urls": [],
          "group": "(min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dialog-modal.upgrade-flow-modal",
          "cssText": ".dialog-modal.upgrade-flow-modal { height: 820px; max-width: 1100px; overflow: hidden; width: 80%; }",
          "urls": [],
          "group": "(min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dialog-modal.three-in-one",
          "cssText": ".dialog-modal.three-in-one { height: 820px; width: 80%; max-width: 1100px; overflow: hidden; }",
          "urls": [],
          "group": "(min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dialog-modal.tall-video, .dialog-modal.tall-video .milo-video",
          "cssText": ".dialog-modal.tall-video, .dialog-modal.tall-video .milo-video { --modal-width-var: 35vw; }",
          "urls": [],
          "group": "(min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dialog-modal.manage-plan-cancel",
          "cssText": ".dialog-modal.manage-plan-cancel { max-width: 100%; width: 1280px; }",
          "urls": [],
          "group": "(min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (min-width: 1200px) and (orientation: landscape) {\n  .dialog-modal.tall-video, .dialog-modal.tall-video .milo-video { --modal-width-var: 25vw; }\n}",
          "urls": [],
          "group": "(min-width: 1200px) and (orientation: landscape)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 1200px) and (orientation: landscape)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "orientation",
                "landscape",
                "1200",
                "width"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "orientation",
              "semanticGroup": "geometry",
              "claim": "screen orientation",
              "excerpt": "(min-width: 1200px) and (orientation: landscape)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "orientation",
                "landscape",
                "1200",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dialog-modal.tall-video, .dialog-modal.tall-video .milo-video",
          "cssText": ".dialog-modal.tall-video, .dialog-modal.tall-video .milo-video { --modal-width-var: 25vw; }",
          "urls": [],
          "group": "(min-width: 1200px) and (orientation: landscape)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 1200px) and (orientation: landscape)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "orientation",
                "landscape",
                "1200",
                "width"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "orientation",
              "semanticGroup": "geometry",
              "claim": "screen orientation",
              "excerpt": "(min-width: 1200px) and (orientation: landscape)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "orientation",
                "landscape",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (min-width: 1400px) {\n  .dialog-modal.tall-video, .dialog-modal.tall-video .milo-video { --modal-width-var: 25vw; }\n}",
          "urls": [],
          "group": "(min-width: 1400px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 1400px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1400px",
                "1400",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dialog-modal.tall-video, .dialog-modal.tall-video .milo-video",
          "cssText": ".dialog-modal.tall-video, .dialog-modal.tall-video .milo-video { --modal-width-var: 25vw; }",
          "urls": [],
          "group": "(min-width: 1400px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 1400px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1400px",
                "1400",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (min-width: 1400px) and (orientation: landscape) {\n  .dialog-modal.tall-video, .dialog-modal.tall-video .milo-video { --modal-width-var: 20vw; }\n}",
          "urls": [],
          "group": "(min-width: 1400px) and (orientation: landscape)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 1400px) and (orientation: landscape)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1400px",
                "orientation",
                "landscape",
                "1400",
                "width"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "orientation",
              "semanticGroup": "geometry",
              "claim": "screen orientation",
              "excerpt": "(min-width: 1400px) and (orientation: landscape)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1400px",
                "orientation",
                "landscape",
                "1400",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dialog-modal.tall-video, .dialog-modal.tall-video .milo-video",
          "cssText": ".dialog-modal.tall-video, .dialog-modal.tall-video .milo-video { --modal-width-var: 20vw; }",
          "urls": [],
          "group": "(min-width: 1400px) and (orientation: landscape)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 1400px) and (orientation: landscape)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1400px",
                "orientation",
                "landscape",
                "1400",
                "width"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "orientation",
              "semanticGroup": "geometry",
              "claim": "screen orientation",
              "excerpt": "(min-width: 1400px) and (orientation: landscape)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1400px",
                "orientation",
                "landscape",
                "1400",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (min-width: 2000px) {\n  .dialog-modal.tall-video, .dialog-modal.tall-video .milo-video { --modal-width-var: 22vw; }\n}",
          "urls": [],
          "group": "(min-width: 2000px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 2000px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "2000px",
                "2000",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dialog-modal.tall-video, .dialog-modal.tall-video .milo-video",
          "cssText": ".dialog-modal.tall-video, .dialog-modal.tall-video .milo-video { --modal-width-var: 22vw; }",
          "urls": [],
          "group": "(min-width: 2000px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 2000px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "2000px",
                "2000",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (min-width: 1500px) {\n  .dialog-modal.dynamic-height .milo-iframe { min-width: 1200px; }\n}",
          "urls": [],
          "group": "(min-width: 1500px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 1500px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1500px",
                "1500",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dialog-modal.dynamic-height .milo-iframe",
          "cssText": ".dialog-modal.dynamic-height .milo-iframe { min-width: 1200px; }",
          "urls": [],
          "group": "(min-width: 1500px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 1500px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1500px",
                "1500",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".disable-scroll",
          "cssText": ".disable-scroll { overflow: hidden; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "body:has(.dialog-modal) #adbMsgClientWrapper #adbmsgContainer > *",
          "cssText": "body:has(.dialog-modal) #adbMsgClientWrapper #adbmsgContainer > * { z-index: var(--jarvis-z-index-override); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        }
      ]
    },
    {
      "href": "https://www.adobe.com/homepage/blocks/homepage-brick/homepage-brick.css",
      "rules": 118,
      "rulesList": [
        {
          "type": "CSSStyleRule",
          "selector": ".marquee.mobile-high-contrast, .marquee.high-contrast",
          "cssText": ".marquee.mobile-high-contrast, .marquee.high-contrast { color: rgb(0, 0, 0); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 600px) {\n  .marquee.tablet-high-contrast { color: rgb(0, 0, 0); }\n}",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".marquee.tablet-high-contrast",
          "cssText": ".marquee.tablet-high-contrast { color: rgb(0, 0, 0); }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 1200px) {\n  .marquee.desktop-high-contrast { color: rgb(0, 0, 0); }\n}",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".marquee.desktop-high-contrast",
          "cssText": ".marquee.desktop-high-contrast { color: rgb(0, 0, 0); }",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section.border-radius-s > div, .section.border-radius-s > div .background, .section.border-radius-s > .homepage-brick.click a",
          "cssText": ".section.border-radius-s > div, .section.border-radius-s > div .background, .section.border-radius-s > .homepage-brick.click a { border-radius: 4px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section.border-radius-l > div, .section.border-radius-l > div .background, .section.border-radius-l > .homepage-brick.click a",
          "cssText": ".section.border-radius-l > div, .section.border-radius-l > div .background, .section.border-radius-l > .homepage-brick.click a { border-radius: 16px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section.no-border-radius > div, .section.no-border-radius > div .background",
          "cssText": ".section.no-border-radius > div, .section.no-border-radius > div .background { border-radius: 0px; padding: var(--spacing-l) 0; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section.masonry:not([class*=\"border-radius\"]) > div, .section.masonry:not([class*=\"border-radius\"]) .homepage-brick.click a, .section.masonry:not([class*=\"border-radius\"]) > div > div.fragment > div.section > div, .section.masonry:not([class*=\"border-radius\"]) > div .background, .section.masonry:not([class*=\"border-radius\"]) > div > div.fragment > div.section > div .background",
          "cssText": ".section.masonry:not([class*=\"border-radius\"]) > div, .section.masonry:not([class*=\"border-radius\"]) .homepage-brick.click a, .section.masonry:not([class*=\"border-radius\"]) > div > div.fragment > div.section > div, .section.masonry:not([class*=\"border-radius\"]) > div .background, .section.masonry:not([class*=\"border-radius\"]) > div > div.fragment > div.section > div .background { border-radius: 20px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section[class*=\"-up\"]",
          "cssText": ".section[class*=\"-up\"] { display: grid; grid-template-columns: repeat(auto-fit, minmax(276px, 1fr)); gap: var(--spacing-m); align-items: start; padding-left: var(--grid-margins-width); padding-right: var(--grid-margins-width); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section.masonry",
          "cssText": ".section.masonry { grid-template-columns: repeat(1, 1fr); margin-left: auto; margin-right: auto; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section.masonry > div:not([class]), .section.masonry > div:not([class]) > div.fragment, .section.masonry > div:not([class]) > div.fragment > div.section",
          "cssText": ".section.masonry > div:not([class]), .section.masonry > div:not([class]) > div.fragment, .section.masonry > div:not([class]) > div.fragment > div.section { display: grid; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section.masonry:not([class*=\"spacing\"])",
          "cssText": ".section.masonry:not([class*=\"spacing\"]) { align-items: stretch; padding: var(--spacing-m) var(--spacing-xl); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section.masonry:not([class*=\"spacing\"]):not([style])",
          "cssText": ".section.masonry:not([class*=\"spacing\"]):not([style]) { max-width: 1920px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section.masonry.small-top-padding:not([class*=\"spacing\"])",
          "cssText": ".section.masonry.small-top-padding:not([class*=\"spacing\"]) { padding-top: var(--spacing-s); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".homepage-brick.above-pods .foreground",
          "cssText": ".homepage-brick.above-pods .foreground { padding-top: var(--spacing-xs); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (max-width: 599px) {\n  .homepage-brick.above-pods .foreground > div { display: flex; flex-direction: column; }\n  .homepage-brick.above-pods .foreground > div .body-m { order: 3; }\n  .homepage-brick.above-pods .foreground > div .action-area { order: 2; margin-bottom: var(--spacing-s); display: flex; gap: var(--spacing-s); flex-flow: column wrap; align-items: stretch; }\n}",
          "urls": [],
          "group": "screen and (max-width: 599px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 599px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "599px",
                "599",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".homepage-brick.above-pods .foreground > div",
          "cssText": ".homepage-brick.above-pods .foreground > div { display: flex; flex-direction: column; }",
          "urls": [],
          "group": "screen and (max-width: 599px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 599px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "599px",
                "599",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".homepage-brick.above-pods .foreground > div .body-m",
          "cssText": ".homepage-brick.above-pods .foreground > div .body-m { order: 3; }",
          "urls": [],
          "group": "screen and (max-width: 599px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 599px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "599px",
                "599",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".homepage-brick.above-pods .foreground > div .action-area",
          "cssText": ".homepage-brick.above-pods .foreground > div .action-area { order: 2; margin-bottom: var(--spacing-s); display: flex; gap: var(--spacing-s); flex-flow: column wrap; align-items: stretch; }",
          "urls": [],
          "group": "screen and (max-width: 599px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 599px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "599px",
                "599",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 600px) and (max-width: 1199px) {\n  .section.masonry { grid-template-columns: repeat(2, 1fr); }\n  .section.masonry .full-grid { grid-column: span 2; }\n}",
          "urls": [],
          "group": "screen and (min-width: 600px) and (max-width: 1199px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px) and (max-width: 1199px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "max-width",
                "1199px",
                "600",
                "1199",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section.masonry",
          "cssText": ".section.masonry { grid-template-columns: repeat(2, 1fr); }",
          "urls": [],
          "group": "screen and (min-width: 600px) and (max-width: 1199px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px) and (max-width: 1199px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "max-width",
                "1199px",
                "600",
                "1199",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section.masonry .full-grid",
          "cssText": ".section.masonry .full-grid { grid-column: span 2; }",
          "urls": [],
          "group": "screen and (min-width: 600px) and (max-width: 1199px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px) and (max-width: 1199px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "max-width",
                "1199px",
                "600",
                "1199",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 1200px) {\n  .section.masonry { grid-template-columns: repeat(12, 1fr); }\n  .section.masonry > div { grid-column: span 4; }\n  .section.masonry .half-grid { grid-column: span 6; }\n  .section.masonry .two-thirds-grid { grid-column: span 8; }\n  .section.masonry [class*=\"full-grid\"] { grid-column: span 12; }\n  .section.masonry .homepage-brick.click[class*=\"full-grid\"] { padding-top: var(--spacing-xl-static); text-align: center; }\n  .section.masonry .homepage-brick.click.left-align-desktop[class*=\"full-grid\"] { text-align: left; }\n  .section.masonry .homepage-brick.click.right-align-desktop[class*=\"full-grid\"] { text-align: right; }\n  .homepage-brick.above-pods .foreground { max-width: 1000px; margin: 0px auto; padding-top: var(--spacing-m); }\n}",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section.masonry",
          "cssText": ".section.masonry { grid-template-columns: repeat(12, 1fr); }",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section.masonry > div",
          "cssText": ".section.masonry > div { grid-column: span 4; }",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section.masonry .half-grid",
          "cssText": ".section.masonry .half-grid { grid-column: span 6; }",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section.masonry .two-thirds-grid",
          "cssText": ".section.masonry .two-thirds-grid { grid-column: span 8; }",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section.masonry [class*=\"full-grid\"]",
          "cssText": ".section.masonry [class*=\"full-grid\"] { grid-column: span 12; }",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section.masonry .homepage-brick.click[class*=\"full-grid\"]",
          "cssText": ".section.masonry .homepage-brick.click[class*=\"full-grid\"] { padding-top: var(--spacing-xl-static); text-align: center; }",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section.masonry .homepage-brick.click.left-align-desktop[class*=\"full-grid\"]",
          "cssText": ".section.masonry .homepage-brick.click.left-align-desktop[class*=\"full-grid\"] { text-align: left; }",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section.masonry .homepage-brick.click.right-align-desktop[class*=\"full-grid\"]",
          "cssText": ".section.masonry .homepage-brick.click.right-align-desktop[class*=\"full-grid\"] { text-align: right; }",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".homepage-brick.above-pods .foreground",
          "cssText": ".homepage-brick.above-pods .foreground { max-width: 1000px; margin: 0px auto; padding-top: var(--spacing-m); }",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": "body:not([data-mep-highlight=\"true\"]) .section.masonry [data-removed-manifest-id]",
          "cssText": "body:not([data-mep-highlight=\"true\"]) .section.masonry [data-removed-manifest-id] { display: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".homepage-brick",
          "cssText": ".homepage-brick { position: relative; text-size-adjust: none; padding: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".homepage-brick:not(.above-pods) .foreground, .homepage-brick.link.split-background .foreground > div, .homepage-brick.news > div",
          "cssText": ".homepage-brick:not(.above-pods) .foreground, .homepage-brick.link.split-background .foreground > div, .homepage-brick.news > div { padding: var(--spacing-s); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".masonry .homepage-brick",
          "cssText": ".masonry .homepage-brick { min-height: 450px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".homepage-brick .background",
          "cssText": ".homepage-brick .background { inset: 0px; position: absolute; overflow: hidden; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".homepage-brick .first-background, .homepage-brick.split-background .foreground > :nth-child(2), .homepage-brick.news",
          "cssText": ".homepage-brick .first-background, .homepage-brick.split-background .foreground > :nth-child(2), .homepage-brick.news { background-color: rgb(237, 237, 237); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".homepage-brick.semi-transparent .first-background",
          "cssText": ".homepage-brick.semi-transparent .first-background { background: linear-gradient(130deg, rgba(255, 255, 255, 0.6), transparent); border: 2px solid rgb(255, 255, 255); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".homepage-brick .background > div",
          "cssText": ".homepage-brick .background > div { height: 100%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".homepage-brick .background img",
          "cssText": ".homepage-brick .background img { object-fit: cover; width: 100%; height: 100%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".homepage-brick .background img[style]",
          "cssText": ".homepage-brick .background img[style] { object-fit: contain; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".homepage-brick p, .homepage-brick [class^=\"body-\"]",
          "cssText": ".homepage-brick p, .homepage-brick [class^=\"body-\"] { margin: var(--spacing-xxs) 0; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".homepage-brick.link .background + .foreground > div:first-child",
          "cssText": ".homepage-brick.link .background + .foreground > div:first-child { margin-top: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".homepage-brick.link .background + .foreground > div:first-child h3",
          "cssText": ".homepage-brick.link .background + .foreground > div:first-child h3 { margin-top: var(--spacing-xxs); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".homepage-brick [class^=\"heading\"]",
          "cssText": ".homepage-brick [class^=\"heading\"] { margin: 0 0 var(--spacing-xxs) 0; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".homepage-brick.link [class^=\"heading\"]:not(:first-child)",
          "cssText": ".homepage-brick.link [class^=\"heading\"]:not(:first-child) { margin-top: var(--spacing-xs); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".homepage-brick.news [class^=\"heading\"]",
          "cssText": ".homepage-brick.news [class^=\"heading\"] { margin-bottom: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".homepage-brick.heading-xs p.body-m",
          "cssText": ".homepage-brick.heading-xs p.body-m { font-size: var(--type-body-s-size); line-height: var(--type-body-s-lh); margin: 4px 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".text.mashup .foreground .body-m:nth-child(3)",
          "cssText": ".text.mashup .foreground .body-m:nth-child(3) { font-size: var(--type-body-s-size); line-height: var(--type-body-s-lh); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".homepage-brick [class^=\"detail\"]",
          "cssText": ".homepage-brick [class^=\"detail\"] { margin: 0 0 var(--spacing-xs) 0; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".homepage-brick p.action-area",
          "cssText": ".homepage-brick p.action-area { margin-top: var(--spacing-s); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".homepage-brick.click p.action-area",
          "cssText": ".homepage-brick.click p.action-area { margin-top: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".homepage-brick div > :last-child",
          "cssText": ".homepage-brick div > :last-child { margin-bottom: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".grid .homepage-brick div > :last-child",
          "cssText": ".grid .homepage-brick div > :last-child { margin-bottom: var(--spacing-s); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".homepage-brick .foreground > div :first-child",
          "cssText": ".homepage-brick .foreground > div :first-child { margin-top: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".homepage-brick .foreground",
          "cssText": ".homepage-brick .foreground { margin: 0px auto; position: relative; z-index: 2; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".homepage-brick:not(.above-pods) .foreground",
          "cssText": ".homepage-brick:not(.above-pods) .foreground { max-width: var(--grid-container-width); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[class*=\"-up\"] .homepage-brick .foreground",
          "cssText": "[class*=\"-up\"] .homepage-brick .foreground { max-width: none; margin: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".homepage-brick .action-area",
          "cssText": ".homepage-brick .action-area { margin-top: var(--spacing-s); display: flex; gap: var(--spacing-s); flex-flow: column wrap; align-items: flex-start; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".homepage-brick.link .foreground > div",
          "cssText": ".homepage-brick.link .foreground > div { padding: var(--spacing-s) var(--spacing-s) 0 var(--spacing-s); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".homepage-brick.link:not(.split-background) .foreground > div",
          "cssText": ".homepage-brick.link:not(.split-background) .foreground > div { padding-bottom: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".homepage-brick.link:not(.split-background) .foreground:last-child > div",
          "cssText": ".homepage-brick.link:not(.split-background) .foreground:last-child > div { padding-top: var(--spacing-xs); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".homepage-brick.dark, .homepage-brick.split-background .foreground > div:first-child",
          "cssText": ".homepage-brick.dark, .homepage-brick.split-background .foreground > div:first-child { color: rgb(255, 255, 255); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".homepage-brick a, .homepage-brick.click div.click-link, .homepage-brick.link a:not(.con-button)",
          "cssText": ".homepage-brick a, .homepage-brick.click div.click-link, .homepage-brick.link a:not(.con-button) { color: inherit; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".homepage-brick:not(.click):not(.static-links) a:not([class*=\"button\"]), .homepage-brick.click div.click-link",
          "cssText": ".homepage-brick:not(.click):not(.static-links) a:not([class*=\"button\"]), .homepage-brick.click div.click-link { color: inherit; font-weight: 700; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".homepage-brick:not(.static-links) a:not([class*=\"button\"])",
          "cssText": ".homepage-brick:not(.static-links) a:not([class*=\"button\"]) { text-decoration: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".homepage-brick a:not([class*=\"button\"]):hover",
          "cssText": ".homepage-brick a:not([class*=\"button\"]):hover { text-decoration: underline; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".homepage-brick [class^=\"detail\"].icon-detail",
          "cssText": ".homepage-brick [class^=\"detail\"].icon-detail { margin-top: var(--spacing-xs) !important; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".homepage-brick [class^=\"detail\"].icon-detail picture img",
          "cssText": ".homepage-brick [class^=\"detail\"].icon-detail picture img { height: 35px; width: 35px; vertical-align: middle; margin-right: var(--spacing-xxs); margin-top: -5px !important; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".static-links a.foreground, .section.static-links .homepage-brick.click a:not([class*=\"button\"]), .homepage-brick.click a:hover",
          "cssText": ".static-links a.foreground, .section.static-links .homepage-brick.click a:not([class*=\"button\"]), .homepage-brick.click a:hover { text-decoration: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".homepage-brick.click:hover div.click-link",
          "cssText": ".homepage-brick.click:hover div.click-link { text-decoration: underline; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".homepage-brick.click .foreground p.detail-m:first-child",
          "cssText": ".homepage-brick.click .foreground p.detail-m:first-child { font-size: var(--type-detail-l-size); line-height: var(--type-detail-l-lh); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".homepage-brick.above-pods",
          "cssText": ".homepage-brick.above-pods { padding: var(--spacing-l); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".homepage-brick.click",
          "cssText": ".homepage-brick.click { padding: 0px; display: flex; cursor: pointer; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".homepage-brick.click > .foreground",
          "cssText": ".homepage-brick.click > .foreground { padding: var(--spacing-m) var(--spacing-s) var(--spacing-s); flex-grow: 1; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".homepage-brick.link, .homepage-brick.link .foreground",
          "cssText": ".homepage-brick.link, .homepage-brick.link .foreground { padding: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section:not(.no-border-radius) .homepage-brick .highlight-row, .section:not(.no-border-radius) .homepage-brick.homepage-brick.split-background .foreground > :first-child",
          "cssText": ".section:not(.no-border-radius) .homepage-brick .highlight-row, .section:not(.no-border-radius) .homepage-brick.homepage-brick.split-background .foreground > :first-child { border-radius: 16px 16px 0px 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section.border-radius-s .homepage-brick:not(.click) .foreground > div:first-child",
          "cssText": ".section.border-radius-s .homepage-brick:not(.click) .foreground > div:first-child { border-radius: 4px 4px 0px 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section:not(.no-border-radius) .homepage-brick.link.split-background .foreground > div:last-child",
          "cssText": ".section:not(.no-border-radius) .homepage-brick.link.split-background .foreground > div:last-child { border-radius: 0px 0px 16px 16px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".homepage-brick.news, .homepage-brick.link:not(.split-background)",
          "cssText": ".homepage-brick.news, .homepage-brick.link:not(.split-background) { padding: 0px !important; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".homepage-brick.link:not(.split-background) > :first-child",
          "cssText": ".homepage-brick.link:not(.split-background) > :first-child { padding: var(--spacing-xs); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".homepage-brick.link .highlight-row, .homepage-brick.link.split-background > .foreground > :first-child",
          "cssText": ".homepage-brick.link .highlight-row, .homepage-brick.link.split-background > .foreground > :first-child { color: rgb(255, 255, 255); background: linear-gradient(125deg, rgb(237, 5, 41) 0%, rgb(155, 0, 193) 50%, rgb(91, 0, 198) 100%); font-weight: 700; padding: var(--spacing-m) var(--spacing-s) var(--spacing-s); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".homepage-brick.news hr",
          "cssText": ".homepage-brick.news hr { margin: var(--spacing-xs) 0; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".homepage-brick.news .highlight-row",
          "cssText": ".homepage-brick.news .highlight-row { color: rgb(255, 255, 255); background: rgb(38, 37, 48); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".homepage-brick .positioned-background",
          "cssText": ".homepage-brick .positioned-background { background-repeat: no-repeat; background-size: contain; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".homepage-brick .positioned-background picture",
          "cssText": ".homepage-brick .positioned-background picture { display: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".homepage-brick .mobileOnly, .homepage-brick .tabletOnly, .homepage-brick .desktopOnly",
          "cssText": ".homepage-brick .mobileOnly, .homepage-brick .tabletOnly, .homepage-brick .desktopOnly { display: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".homepage-brick.click:hover .con-button:not(.blue):not(.fill)",
          "cssText": ".homepage-brick.click:hover .con-button:not(.blue):not(.fill) { background-color: var(--color-black); border-color: var(--color-black); color: var(--color-white); text-decoration: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (max-width: 1023px) {\n  .section.masonry:not([class*=\"spacing\"]) { padding: var(--spacing-s) var(--spacing-s); }\n  .homepage-brick .mobileOnly { display: block; }\n}",
          "urls": [],
          "group": "screen and (max-width: 1023px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 1023px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "1023px",
                "1023",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section.masonry:not([class*=\"spacing\"])",
          "cssText": ".section.masonry:not([class*=\"spacing\"]) { padding: var(--spacing-s) var(--spacing-s); }",
          "urls": [],
          "group": "screen and (max-width: 1023px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 1023px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "1023px",
                "1023",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".homepage-brick .mobileOnly",
          "cssText": ".homepage-brick .mobileOnly { display: block; }",
          "urls": [],
          "group": "screen and (max-width: 1023px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 1023px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "1023px",
                "1023",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 600px) and (max-width: 1199px) {\n  .homepage-brick .tabletOnly { display: block; }\n}",
          "urls": [],
          "group": "screen and (min-width: 600px) and (max-width: 1199px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px) and (max-width: 1199px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "max-width",
                "1199px",
                "600",
                "1199",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".homepage-brick .tabletOnly",
          "cssText": ".homepage-brick .tabletOnly { display: block; }",
          "urls": [],
          "group": "screen and (min-width: 600px) and (max-width: 1199px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px) and (max-width: 1199px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "max-width",
                "1199px",
                "600",
                "1199",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 600px) {\n  .masonry .homepage-brick { min-height: 500px; }\n  .homepage-brick .action-area { align-items: center; flex-direction: row; }\n}",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".masonry .homepage-brick",
          "cssText": ".masonry .homepage-brick { min-height: 500px; }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".homepage-brick .action-area",
          "cssText": ".homepage-brick .action-area { align-items: center; flex-direction: row; }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 1200px) {\n  .homepage-brick .desktopOnly { display: block; }\n  .homepage-brick.above-pods { text-align: center; }\n  .homepage-brick.above-pods .action-area { justify-content: center; }\n}",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".homepage-brick .desktopOnly",
          "cssText": ".homepage-brick .desktopOnly { display: block; }",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".homepage-brick.above-pods",
          "cssText": ".homepage-brick.above-pods { text-align: center; }",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".homepage-brick.above-pods .action-area",
          "cssText": ".homepage-brick.above-pods .action-area { justify-content: center; }",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".homepage-brick.center",
          "cssText": ".homepage-brick.center { text-align: center; align-items: center; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".homepage-brick.center .action-area",
          "cssText": ".homepage-brick.center .action-area { justify-content: center; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".homepage-brick.right",
          "cssText": ".homepage-brick.right { text-align: right; align-items: end; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".homepage-brick.right .action-area",
          "cssText": ".homepage-brick.right .action-area { justify-content: end; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".homepage-brick.stack .foreground",
          "cssText": ".homepage-brick.stack .foreground { display: flex; flex-direction: column; justify-content: space-between; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".homepage-brick.stack .background",
          "cssText": ".homepage-brick.stack .background { margin-top: 8px; align-self: center; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".homepage-brick.stack .background",
          "cssText": ".homepage-brick.stack .background { position: static; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".homepage-brick.stack .background img",
          "cssText": ".homepage-brick.stack .background img { object-fit: initial; width: initial; height: initial; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".homepage-brick.stack .background .desktopOnly img",
          "cssText": ".homepage-brick.stack .background .desktopOnly img { max-height: 287px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".homepage-brick.stack .background .tabletOnly img",
          "cssText": ".homepage-brick.stack .background .tabletOnly img { max-height: 267px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".homepage-brick.stack .background .mobileOnly img",
          "cssText": ".homepage-brick.stack .background .mobileOnly img { max-height: 214px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 600px) {\n  .homepage-brick .mobileOnly { display: none; }\n}",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".homepage-brick .mobileOnly",
          "cssText": ".homepage-brick .mobileOnly { display: none; }",
          "urls": [],
          "group": "screen and (min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 1200px) {\n  .homepage-brick.two-thirds-grid.stack .foreground { flex-direction: row; }\n  .homepage-brick.two-thirds-grid.stack .background .desktopOnly img { max-height: initial; }\n}",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".homepage-brick.two-thirds-grid.stack .foreground",
          "cssText": ".homepage-brick.two-thirds-grid.stack .foreground { flex-direction: row; }",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".homepage-brick.two-thirds-grid.stack .background .desktopOnly img",
          "cssText": ".homepage-brick.two-thirds-grid.stack .background .desktopOnly img { max-height: initial; }",
          "urls": [],
          "group": "screen and (min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        }
      ]
    },
    {
      "href": "https://www.adobe.com/libs/blocks/merch/merch.css",
      "rules": 25,
      "rulesList": [
        {
          "type": "CSSStyleRule",
          "selector": "span[is=\"inline-price\"], a[href^=\"/tools/ost\"]",
          "cssText": "span[is=\"inline-price\"], a[href^=\"/tools/ost\"] { visibility: hidden; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "span[data-wcs-osi]",
          "cssText": "span[data-wcs-osi] { display: inline-block; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "span.placeholder-resolved[data-template=\"strikethrough\"], span.price.price-strikethrough",
          "cssText": "span.placeholder-resolved[data-template=\"strikethrough\"], span.price.price-strikethrough { text-decoration: line-through; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".placeholder-resolved[data-wcs-osi]",
          "cssText": ".placeholder-resolved[data-wcs-osi] { visibility: inherit; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "a[is=\"checkout-link\"].con-button > span",
          "cssText": "a[is=\"checkout-link\"].con-button > span { display: inline-block; text-align: center; width: 100%; min-width: 66px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hidden-osi-trial-link",
          "cssText": ".hidden-osi-trial-link { display: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".price-unit-type:not(.disabled)::before, .price-tax-inclusivity:not(.disabled)::before",
          "cssText": ".price-unit-type:not(.disabled)::before, .price-tax-inclusivity:not(.disabled)::before { content: \" \"; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".three-in-one",
          "cssText": ".three-in-one { display: flex; height: 100%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".three-in-one .milo-iframe",
          "cssText": ".three-in-one .milo-iframe { padding-bottom: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".three-in-one .loading iframe",
          "cssText": ".three-in-one .loading iframe { visibility: hidden; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".error-wrapper",
          "cssText": ".error-wrapper { display: flex; justify-content: space-between; align-items: center; background-color: rgb(211, 21, 15); margin-top: 40px; padding: 0px 20px; color: rgb(255, 255, 255); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".icon-and-text",
          "cssText": ".icon-and-text { display: flex; align-items: center; gap: 14px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".try-again-btn",
          "cssText": ".try-again-btn { padding: 10px 16px; background-color: rgb(211, 21, 15); border: 2px solid rgb(255, 255, 255); border-radius: 20px; font-weight: bold; font-size: 16px; color: rgb(255, 255, 255); cursor: pointer; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 1199px) {\n  #checkout-link-modal { height: 100vh; border-radius: 0px; margin-top: 0px; margin-bottom: 0px; }\n}",
          "urls": [],
          "group": "(max-width: 1199px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 1199px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "1199px",
                "1199",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "#checkout-link-modal",
          "cssText": "#checkout-link-modal { height: 100vh; border-radius: 0px; margin-top: 0px; margin-bottom: 0px; }",
          "urls": [],
          "group": "(max-width: 1199px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 1199px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "1199px",
                "1199",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": "#checkout-link-modal",
          "cssText": "#checkout-link-modal { display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "#checkout-link-modal > .section",
          "cssText": "#checkout-link-modal > .section { width: 100%; height: auto; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (min-width: 1200px) {\n  #checkout-link-modal.twp, #checkout-link-modal.twp .milo-iframe, #checkout-link-modal.d2p, #checkout-link-modal.d2p .milo-iframe { height: 850px; }\n  #checkout-link-modal.crm, #checkout-link-modal.crm .milo-iframe { height: 640px; }\n}",
          "urls": [],
          "group": "(min-width: 1200px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "#checkout-link-modal.twp, #checkout-link-modal.twp .milo-iframe, #checkout-link-modal.d2p, #checkout-link-modal.d2p .milo-iframe",
          "cssText": "#checkout-link-modal.twp, #checkout-link-modal.twp .milo-iframe, #checkout-link-modal.d2p, #checkout-link-modal.d2p .milo-iframe { height: 850px; }",
          "urls": [],
          "group": "(min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": "#checkout-link-modal.crm, #checkout-link-modal.crm .milo-iframe",
          "cssText": "#checkout-link-modal.crm, #checkout-link-modal.crm .milo-iframe { height: 640px; }",
          "urls": [],
          "group": "(min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": "#checkout-link-modal iframe",
          "cssText": "#checkout-link-modal iframe { flex: 1 1 0%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "#checkout-link-modal iframe.twp, #checkout-link-modal iframe.d2p",
          "cssText": "#checkout-link-modal iframe.twp, #checkout-link-modal iframe.d2p { max-height: 850px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".upgrade-flow-content",
          "cssText": ".upgrade-flow-content { display: flex; height: 100%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".upgrade-flow-content .loading",
          "cssText": ".upgrade-flow-content .loading { visibility: hidden; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".upgrade-flow-content sp-theme",
          "cssText": ".upgrade-flow-content sp-theme { width: max-content; height: max-content; left: 50%; position: relative; top: 50%; transform: translate(-50%, -50%); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        }
      ]
    },
    {
      "href": "https://prod.adobeccstatic.com/unav/1.5/UniversalNav.css",
      "rules": "inaccessible",
      "rulesList": []
    },
    {
      "href": "https://www.adobe.com/libs/blocks/global-footer/global-footer.css",
      "rules": 71,
      "rulesList": [
        {
          "type": "CSSStyleRule",
          "selector": ".global-footer",
          "cssText": ".global-footer { padding: 20px 0px; display: flex; justify-content: center; font-size: 12px; background: var(--feds-background-footer); text-size-adjust: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-footer ul",
          "cssText": ".global-footer ul { list-style-type: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-footer a",
          "cssText": ".global-footer a { text-decoration: unset; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-footer a:hover",
          "cssText": ".global-footer a:hover { text-decoration: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-footer button",
          "cssText": ".global-footer button { background: none; cursor: pointer; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-footer-wrapper",
          "cssText": ".feds-footer-wrapper { width: 100%; max-width: var(--feds-maxWidth-nav); display: flex; flex-direction: column; color: var(--feds-color-headline); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-footer-wrapper ul",
          "cssText": ".feds-footer-wrapper ul { margin: 0px; padding: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-footer-icons",
          "cssText": ".feds-footer-icons { display: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-featuredProducts .feds-navLink",
          "cssText": ".feds-featuredProducts .feds-navLink { padding: 0px 32px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-footer-wrapper .feds-menu-headline",
          "cssText": ".feds-footer-wrapper .feds-menu-headline { font-size: 14px; line-height: 1.4; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-footer-wrapper .feds-menu-column",
          "cssText": ".feds-footer-wrapper .feds-menu-column { display: flex; flex-direction: column; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-footer-wrapper .feds-menu-content .feds-navLink",
          "cssText": ".feds-footer-wrapper .feds-menu-content .feds-navLink { padding-top: 0px; padding-bottom: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-footer-options, .feds-footer-miscLinks, .feds-regionPicker",
          "cssText": ".feds-footer-options, .feds-footer-miscLinks, .feds-regionPicker { display: flex; align-items: center; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-footer-options",
          "cssText": ".feds-footer-options { justify-content: space-between; align-items: flex-start; padding: 0 var(--feds-gutter-footer); flex-wrap: wrap; gap: 12px 40px; margin-top: 30px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-footer-miscLinks",
          "cssText": ".feds-footer-miscLinks { column-gap: 30px; flex-shrink: 0; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-regionPicker",
          "cssText": ".feds-regionPicker { column-gap: 10px; color: var(--feds-color-link); border-color: var(--feds-color-link); fill: var(--feds-color-link); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-regionPicker:hover",
          "cssText": ".feds-regionPicker:hover { color: var(--feds-color-link--hover); border-color: var(--feds-color-link--hover); fill: var(--feds-color-link--hover); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-regionPicker::after",
          "cssText": ".feds-regionPicker::after { width: 6px; height: 6px; border-width: 0px 1px 1px 0px; border-style: solid; border-color: inherit; transform-origin: 75% 75%; transform: rotateZ(45deg); transition: transform 0.1s; content: \"\"; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-regionPicker[aria-expanded=\"true\"]::after",
          "cssText": ".feds-regionPicker[aria-expanded=\"true\"]::after { transform: rotateZ(-135deg); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-regionPicker-globe",
          "cssText": ".feds-regionPicker-globe { width: 20px; height: 20px; fill: inherit; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-regionPicker-wrapper",
          "cssText": ".feds-regionPicker-wrapper { position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-regionPicker-wrapper > .fragment",
          "cssText": ".feds-regionPicker-wrapper > .fragment { position: absolute; bottom: calc(100% + 10px); left: 0px; display: none; padding: 20px; min-width: 130px; max-height: 300px; overflow-y: auto; background: var(--feds-background-nav); border: 1px solid var(--feds-borderColor); border-radius: 4px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[dir=\"rtl\"] .feds-regionPicker-wrapper > .fragment",
          "cssText": "[dir=\"rtl\"] .feds-regionPicker-wrapper > .fragment { left: auto; right: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-regionPicker[aria-expanded=\"true\"] + .fragment",
          "cssText": ".feds-regionPicker[aria-expanded=\"true\"] + .fragment { display: block; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-regionPicker-wrapper .fragment.link-block",
          "cssText": ".feds-regionPicker-wrapper .fragment.link-block { display: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-regionPicker-wrapper > .fragment .region-selector",
          "cssText": ".feds-regionPicker-wrapper > .fragment .region-selector { padding: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-regionPicker-wrapper > .fragment .content",
          "cssText": ".feds-regionPicker-wrapper > .fragment .content { display: flex; flex-direction: column; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-regionPicker-wrapper > .fragment p",
          "cssText": ".feds-regionPicker-wrapper > .fragment p { margin-top: 0px; margin-bottom: 10px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-regionPicker-wrapper > .fragment ul",
          "cssText": ".feds-regionPicker-wrapper > .fragment ul { margin: 0px -20px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-regionPicker-wrapper > .fragment a",
          "cssText": ".feds-regionPicker-wrapper > .fragment a { padding: 0px 20px; display: block; line-height: 2; color: var(--feds-color-link--hover); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-regionPicker-wrapper > .fragment a:hover",
          "cssText": ".feds-regionPicker-wrapper > .fragment a:hover { background: var(--feds-background-link--hover); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-social",
          "cssText": ".feds-social { display: flex; column-gap: 15px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-social-link",
          "cssText": ".feds-social-link { display: block; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-social-icon",
          "cssText": ".feds-social-icon { display: block; width: 20px; height: 20px; color: rgb(128, 128, 128); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-social-link:hover .feds-social-icon",
          "cssText": ".feds-social-link:hover .feds-social-icon { color: rgb(144, 144, 144); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".footer-logo-image svg",
          "cssText": ".footer-logo-image svg { width: 67px; height: 20px; display: block; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-footer-legalWrapper",
          "cssText": ".feds-footer-legalWrapper { display: flex; flex-direction: column; row-gap: 12px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-footer-privacySection",
          "cssText": ".feds-footer-privacySection { display: flex; flex-wrap: wrap; margin: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-footer-privacyLink",
          "cssText": ".feds-footer-privacyLink { display: inline-flex; column-gap: 5px; align-items: center; color: var(--feds-color-link); fill: var(--feds-color-link); vertical-align: bottom; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "span.feds-footer-privacyLink-divider",
          "cssText": "span.feds-footer-privacyLink-divider { display: inline-block; margin: 0px 5px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-footer-privacyLink:hover",
          "cssText": ".feds-footer-privacyLink:hover { color: var(--feds-color-link--hover); fill: var(--feds-color-link--hover); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-adChoices-icon",
          "cssText": ".feds-adChoices-icon { width: 12px; height: 12px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (min-width: 600px) {\n  dialog.feds-dialog { max-width: 80vw; width: fit-content; }\n}",
          "urls": [],
          "group": "(min-width: 600px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "dialog.feds-dialog",
          "cssText": "dialog.feds-dialog { max-width: 80vw; width: fit-content; }",
          "urls": [],
          "group": "(min-width: 600px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 600px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "600px",
                "600",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (min-width: 1200px) {\n  dialog.feds-dialog { width: 1200px; max-width: calc(100% - 2em - 6px); }\n}",
          "urls": [],
          "group": "(min-width: 1200px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "dialog.feds-dialog",
          "cssText": "dialog.feds-dialog { width: 1200px; max-width: calc(100% - 2em - 6px); }",
          "urls": [],
          "group": "(min-width: 1200px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 1200px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1200px",
                "1200",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 599px) {\n  .feds-footer-miscLinks { width: 100%; display: flex; flex-wrap: wrap; row-gap: 12px; }\n  .feds-regionPicker-wrapper { width: 100%; order: 1; }\n  .feds-social { order: 2; }\n  .feds-footer-miscLinks .footer-logo { order: 3; margin-left: auto; }\n  [dir=\"rtl\"] .feds-footer-miscLinks .footer-logo { margin-left: 0px; margin-right: auto; }\n}",
          "urls": [],
          "group": "(max-width: 599px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 599px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "599px",
                "599",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-footer-miscLinks",
          "cssText": ".feds-footer-miscLinks { width: 100%; display: flex; flex-wrap: wrap; row-gap: 12px; }",
          "urls": [],
          "group": "(max-width: 599px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 599px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "599px",
                "599",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-regionPicker-wrapper",
          "cssText": ".feds-regionPicker-wrapper { width: 100%; order: 1; }",
          "urls": [],
          "group": "(max-width: 599px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 599px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "599px",
                "599",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-social",
          "cssText": ".feds-social { order: 2; }",
          "urls": [],
          "group": "(max-width: 599px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 599px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "599px",
                "599",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-footer-miscLinks .footer-logo",
          "cssText": ".feds-footer-miscLinks .footer-logo { order: 3; margin-left: auto; }",
          "urls": [],
          "group": "(max-width: 599px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 599px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "599px",
                "599",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": "[dir=\"rtl\"] .feds-footer-miscLinks .footer-logo",
          "cssText": "[dir=\"rtl\"] .feds-footer-miscLinks .footer-logo { margin-left: 0px; margin-right: auto; }",
          "urls": [],
          "group": "(max-width: 599px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 599px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "599px",
                "599",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (min-width: 900px) {\n  .global-footer:not(.mobile) .feds-footer-wrapper { row-gap: 30px; }\n  .global-footer:not(.mobile) .feds-footer-wrapper .feds-menu-content { flex-wrap: wrap; width: auto; column-gap: 12px; }\n  .global-footer:not(.mobile) .feds-footer-wrapper .feds-menu-headline { border: none; }\n  .global-footer:not(.mobile) .feds-footer-wrapper .feds-menu-column { row-gap: 15px; }\n  .global-footer:not(.mobile) .feds-footer-wrapper .feds-menu-column:nth-child(-n+3):last-child { flex-grow: 1; }\n  .global-footer:not(.mobile) .feds-footer-wrapper .feds-menu-column:nth-last-child(-n+3):first-child .feds-menu-section, .global-footer:not(.mobile) .feds-footer-wrapper .feds-menu-column:nth-child(-n+3):last-child .feds-menu-section, .global-footer:not(.mobile) .feds-footer-wrapper .feds-menu-column:nth-child(2):nth-last-child(2) .feds-menu-section { width: fit-content; }\n  .global-footer:not(.mobile) .feds-footer-wrapper .feds-menu-column:nth-last-child(-n+3):first-child, .global-footer:not(.mobile) .feds-footer-wrapper .feds-menu-column:nth-child(2):nth-last-child(2) { min-width: 20%; }\n  .global-footer:not(.mobile) .feds-featuredProducts { display: flex; justify-content: center; align-items: center; padding: 8px 0px; margin: 0 var(--feds-gutter-footer); border-width: 1px 0px; border-style: solid; border-color: var(--feds-borderColor-featuredProducts); }\n  .global-footer:not(.mobile) .feds-featuredProducts .feds-menu-section { display: flex; column-gap: 8px; }\n  .global-footer:not(.mobile) .feds-featuredProducts .feds-menu-headline { flex-shrink: 0; font-size: 14px; fo...",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-footer:not(.mobile) .feds-footer-wrapper",
          "cssText": ".global-footer:not(.mobile) .feds-footer-wrapper { row-gap: 30px; }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-footer:not(.mobile) .feds-footer-wrapper .feds-menu-content",
          "cssText": ".global-footer:not(.mobile) .feds-footer-wrapper .feds-menu-content { flex-wrap: wrap; width: auto; column-gap: 12px; }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-footer:not(.mobile) .feds-footer-wrapper .feds-menu-headline",
          "cssText": ".global-footer:not(.mobile) .feds-footer-wrapper .feds-menu-headline { border: none; }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-footer:not(.mobile) .feds-footer-wrapper .feds-menu-column",
          "cssText": ".global-footer:not(.mobile) .feds-footer-wrapper .feds-menu-column { row-gap: 15px; }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-footer:not(.mobile) .feds-footer-wrapper .feds-menu-column:nth-child(-n+3):last-child",
          "cssText": ".global-footer:not(.mobile) .feds-footer-wrapper .feds-menu-column:nth-child(-n+3):last-child { flex-grow: 1; }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-footer:not(.mobile) .feds-footer-wrapper .feds-menu-column:nth-last-child(-n+3):first-child .feds-menu-section, .global-footer:not(.mobile) .feds-footer-wrapper .feds-menu-column:nth-child(-n+3):last-child .feds-menu-section, .global-footer:not(.mobile) .feds-footer-wrapper .feds-menu-column:nth-child(2):nth-last-child(2) .feds-menu-section",
          "cssText": ".global-footer:not(.mobile) .feds-footer-wrapper .feds-menu-column:nth-last-child(-n+3):first-child .feds-menu-section, .global-footer:not(.mobile) .feds-footer-wrapper .feds-menu-column:nth-child(-n+3):last-child .feds-menu-section, .global-footer:not(.mobile) .feds-footer-wrapper .feds-menu-column:nth-child(2):nth-last-child(2) .feds-menu-section { width: fit-content; }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-footer:not(.mobile) .feds-footer-wrapper .feds-menu-column:nth-last-child(-n+3):first-child, .global-footer:not(.mobile) .feds-footer-wrapper .feds-menu-column:nth-child(2):nth-last-child(2)",
          "cssText": ".global-footer:not(.mobile) .feds-footer-wrapper .feds-menu-column:nth-last-child(-n+3):first-child, .global-footer:not(.mobile) .feds-footer-wrapper .feds-menu-column:nth-child(2):nth-last-child(2) { min-width: 20%; }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-footer:not(.mobile) .feds-featuredProducts",
          "cssText": ".global-footer:not(.mobile) .feds-featuredProducts { display: flex; justify-content: center; align-items: center; padding: 8px 0px; margin: 0 var(--feds-gutter-footer); border-width: 1px 0px; border-style: solid; border-color: var(--feds-borderColor-featuredProducts); }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-footer:not(.mobile) .feds-featuredProducts .feds-menu-section",
          "cssText": ".global-footer:not(.mobile) .feds-featuredProducts .feds-menu-section { display: flex; column-gap: 8px; }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-footer:not(.mobile) .feds-featuredProducts .feds-menu-headline",
          "cssText": ".global-footer:not(.mobile) .feds-featuredProducts .feds-menu-headline { flex-shrink: 0; font-size: 14px; font-weight: 700; padding: 0px; margin: 0px; line-height: inherit; }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-footer:not(.mobile) .feds-featuredProducts .feds-menu-items ul",
          "cssText": ".global-footer:not(.mobile) .feds-featuredProducts .feds-menu-items ul { display: flex; column-gap: 12px; }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-footer:not(.mobile) .feds-featuredProducts .feds-navLink",
          "cssText": ".global-footer:not(.mobile) .feds-featuredProducts .feds-navLink { padding: 0px 12px; }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-footer:not(.mobile) .feds-footer-options",
          "cssText": ".global-footer:not(.mobile) .feds-footer-options { flex-wrap: nowrap; margin-top: 0px; }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-footer:not(.mobile) .feds-footer-legalWrapper",
          "cssText": ".global-footer:not(.mobile) .feds-footer-legalWrapper { align-items: flex-end; text-align: right; }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-footer:not(.mobile) .feds-footer-privacySection",
          "cssText": ".global-footer:not(.mobile) .feds-footer-privacySection { justify-content: flex-end; text-align: right; }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-footer:not(.mobile) span.feds-footer-privacyLink-divider, .feds-footer-privacyLink",
          "cssText": ".global-footer:not(.mobile) span.feds-footer-privacyLink-divider, .feds-footer-privacyLink { margin-left: 5px; margin-right: 0px; }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (min-width: 1504px) {\n  .feds-footer-wrapper { max-width: 1504px; }\n}",
          "urls": [],
          "group": "(min-width: 1504px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 1504px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1504px",
                "1504",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-footer-wrapper",
          "cssText": ".feds-footer-wrapper { max-width: 1504px; }",
          "urls": [],
          "group": "(min-width: 1504px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 1504px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1504px",
                "1504",
                "width"
              ]
            }
          ]
        }
      ]
    },
    {
      "href": "https://prod.adobeccstatic.com/unav/1.5/layout.bundle.css",
      "rules": "inaccessible",
      "rulesList": []
    },
    {
      "href": "https://prod.adobeccstatic.com/unav/1.5/popover.bundle.css",
      "rules": "inaccessible",
      "rulesList": []
    },
    {
      "href": "https://prod.adobeccstatic.com/unav/1.5/profile.bundle.css",
      "rules": "inaccessible",
      "rulesList": []
    },
    {
      "href": "https://www.adobe.com/libs/blocks/global-navigation/utilities/menu/menu.css",
      "rules": 59,
      "rulesList": [
        {
          "type": "CSSStyleRule",
          "selector": ".feds-menu-content .feds-navLink",
          "cssText": ".feds-menu-content .feds-navLink { padding: 6px 32px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-navLink--hoverCaret[aria-expanded=\"true\"] + .feds-popup, .feds-menu-headline[aria-expanded=\"true\"] + .feds-menu-items",
          "cssText": ".feds-navLink--hoverCaret[aria-expanded=\"true\"] + .feds-popup, .feds-menu-headline[aria-expanded=\"true\"] + .feds-menu-items { display: flex; flex-direction: column; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-navLink--hoverCaret[aria-expanded=\"true\"]::after, .feds-menu-headline[aria-expanded=\"true\"]::after",
          "cssText": ".feds-navLink--hoverCaret[aria-expanded=\"true\"]::after, .feds-menu-headline[aria-expanded=\"true\"]::after { transform: rotateZ(-135deg); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-menu-column .feds-cta-wrapper",
          "cssText": ".feds-menu-column .feds-cta-wrapper { padding: 6px 32px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-menu-column > ul",
          "cssText": ".feds-menu-column > ul { padding: 12px 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-menu-section > a:first-child",
          "cssText": ".feds-menu-section > a:first-child { margin-top: 12px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-menu-items",
          "cssText": ".feds-menu-items { display: none; padding: 12px 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-menu-column--group .feds-menu-column:not(:last-child)",
          "cssText": ".feds-menu-column--group .feds-menu-column:not(:last-child) { padding-bottom: 12px; margin-bottom: 12px; border-bottom: 1px solid var(--feds-borderColor-menu); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-menu-headline",
          "cssText": ".feds-menu-headline { position: relative; padding: 12px 44px 12px 32px; border-bottom: 1px solid var(--feds-borderColor-menu); color: var(--feds-color-headline); font-weight: 600; white-space: nowrap; cursor: pointer; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-footer:not(.mobile) .feds-menu-headline",
          "cssText": ".global-footer:not(.mobile) .feds-menu-headline { white-space: normal; display: block; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[dir=\"rtl\"] .feds-menu-headline",
          "cssText": "[dir=\"rtl\"] .feds-menu-headline { padding-right: 32px; padding-left: 44px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-menu-headline::after",
          "cssText": ".feds-menu-headline::after { position: absolute; right: 30px; top: 50%; display: flex; width: 6px; height: 6px; margin-top: -3px; border-width: 0px 1px 1px 0px; border-style: solid; border-color: var(--feds-color-link); transform-origin: 75% 75%; transform: rotateZ(45deg); transition: transform 0.1s; content: \"\"; box-sizing: content-box; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-localnav-items .feds-menu-headline::after",
          "cssText": ".feds-localnav-items .feds-menu-headline::after { right: 38px; top: 20px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[dir=\"rtl\"] .feds-menu-headline::after",
          "cssText": "[dir=\"rtl\"] .feds-menu-headline::after { right: unset; left: 30px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-menu-items",
          "cssText": ".feds-menu-items { border-bottom: solid 1px var(--feds-borderColor-menu); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-crossCloudMenu-wrapper",
          "cssText": ".feds-crossCloudMenu-wrapper { display: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-image-wrapper",
          "cssText": ".feds-image-wrapper { padding: 12px 38px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".gnav-image",
          "cssText": ".gnav-image { width: 316px; box-sizing: content-box; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-promo-wrapper",
          "cssText": ".feds-promo-wrapper { max-width: 260px; box-sizing: content-box; margin: 5px 0px 15px 10px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-promo",
          "cssText": ".feds-promo { display: flex; flex-direction: column; width: 100%; border: 1px solid var(--feds-borderColor); background: var(--feds-background-promo); white-space: normal; box-sizing: content-box; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-promo-header",
          "cssText": ".feds-promo-header { font-weight: bold; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-promo--dark",
          "cssText": ".feds-promo--dark { background: var(--feds-background-promo--dark); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-promo-image, .feds-promo picture, .feds-promo img",
          "cssText": ".feds-promo-image, .feds-promo picture, .feds-promo img { width: 100%; display: block; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-promo > div",
          "cssText": ".feds-promo > div { padding: 8px 32px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-promo div",
          "cssText": ".feds-promo div { display: flex; flex-direction: column; row-gap: 12px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-promo .feds-promo-image",
          "cssText": ".feds-promo .feds-promo-image { padding: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-promo .feds-cta-wrapper",
          "cssText": ".feds-promo .feds-cta-wrapper { padding: 0px; align-items: flex-start; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-promo a.feds-cta, .feds-promo a.feds-cta:hover",
          "cssText": ".feds-promo a.feds-cta, .feds-promo a.feds-cta:hover { text-decoration: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-promo--dark, .feds-promo--dark a:not(.feds-cta)",
          "cssText": ".feds-promo--dark, .feds-promo--dark a:not(.feds-cta) { color: var(--feds-background-nav); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-promo--dark a, .feds-promo--dark a:hover",
          "cssText": ".feds-promo--dark a, .feds-promo--dark a:hover { text-decoration: underline; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-promo-wrapper",
          "cssText": ".feds-promo-wrapper { display: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (min-width: 900px) {\n  .global-navigation .feds-menu-content { display: flex; justify-content: space-between; width: 100%; max-width: var(--feds-maxWidth-nav); }\n  .global-footer:not(.mobile) .feds-menu-content { display: grid; width: 100%; max-width: var(--feds-maxWidth-nav); grid-template-columns: repeat(auto-fit, minmax(min(230px, 100%), 1fr)); gap: 16px; }\n  .feds-navItem--section .feds-menu-content { column-gap: 12px; }\n  .feds-menu-column--wide { flex-grow: 1; max-width: 75%; }\n  .feds-menu-column--group .feds-menu-column:not(:last-child) { margin-bottom: 0px; padding-bottom: 0px; border-bottom: none; }\n  .feds-menu-section + .feds-menu-section { margin-top: 12px; }\n  .global-footer:not(.mobile) .feds-menu-section + .feds-menu-section { margin-top: 12px; }\n  .global-footer:not(.mobile) .feds-menu-headline { position: static; margin: 0px 32px; cursor: default; }\n  .global-footer:not(.mobile) .feds-menu-headline, .global-footer:not(.mobile) [dir=\"rtl\"] .feds-menu-headline { padding: 12px 0px; }\n  .global-navigation .feds-menu-headline, .global-navigation [dir=\"rtl\"] .feds-menu-headline { padding: 12px 0px; }\n  .global-navigation .feds-menu-headline { position: static; margin: 0px 32px; cursor: default; }\n  .feds-menu-column--group .feds-menu-headline { margin-left: 0px; margin-right: 0px; }\n  .feds-menu-column > ul { padding: 0px; }\n  .feds-menu-section > a:first-child { margin-top: 0px; }\n  .global-footer:not(.mobile) .feds-menu-headline::after { content: none; }\n  .global-navigation .feds-menu-headline::after { content: none; }\n  .global-footer:not(.mobile) .fe...",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-navigation .feds-menu-content",
          "cssText": ".global-navigation .feds-menu-content { display: flex; justify-content: space-between; width: 100%; max-width: var(--feds-maxWidth-nav); }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-footer:not(.mobile) .feds-menu-content",
          "cssText": ".global-footer:not(.mobile) .feds-menu-content { display: grid; width: 100%; max-width: var(--feds-maxWidth-nav); grid-template-columns: repeat(auto-fit, minmax(min(230px, 100%), 1fr)); gap: 16px; }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-navItem--section .feds-menu-content",
          "cssText": ".feds-navItem--section .feds-menu-content { column-gap: 12px; }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-menu-column--wide",
          "cssText": ".feds-menu-column--wide { flex-grow: 1; max-width: 75%; }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-menu-column--group .feds-menu-column:not(:last-child)",
          "cssText": ".feds-menu-column--group .feds-menu-column:not(:last-child) { margin-bottom: 0px; padding-bottom: 0px; border-bottom: none; }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-menu-section + .feds-menu-section",
          "cssText": ".feds-menu-section + .feds-menu-section { margin-top: 12px; }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-footer:not(.mobile) .feds-menu-section + .feds-menu-section",
          "cssText": ".global-footer:not(.mobile) .feds-menu-section + .feds-menu-section { margin-top: 12px; }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-footer:not(.mobile) .feds-menu-headline",
          "cssText": ".global-footer:not(.mobile) .feds-menu-headline { position: static; margin: 0px 32px; cursor: default; }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-footer:not(.mobile) .feds-menu-headline, .global-footer:not(.mobile) [dir=\"rtl\"] .feds-menu-headline",
          "cssText": ".global-footer:not(.mobile) .feds-menu-headline, .global-footer:not(.mobile) [dir=\"rtl\"] .feds-menu-headline { padding: 12px 0px; }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-navigation .feds-menu-headline, .global-navigation [dir=\"rtl\"] .feds-menu-headline",
          "cssText": ".global-navigation .feds-menu-headline, .global-navigation [dir=\"rtl\"] .feds-menu-headline { padding: 12px 0px; }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-navigation .feds-menu-headline",
          "cssText": ".global-navigation .feds-menu-headline { position: static; margin: 0px 32px; cursor: default; }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-menu-column--group .feds-menu-headline",
          "cssText": ".feds-menu-column--group .feds-menu-headline { margin-left: 0px; margin-right: 0px; }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-menu-column > ul",
          "cssText": ".feds-menu-column > ul { padding: 0px; }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-menu-section > a:first-child",
          "cssText": ".feds-menu-section > a:first-child { margin-top: 0px; }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-footer:not(.mobile) .feds-menu-headline::after",
          "cssText": ".global-footer:not(.mobile) .feds-menu-headline::after { content: none; }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-navigation .feds-menu-headline::after",
          "cssText": ".global-navigation .feds-menu-headline::after { content: none; }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-footer:not(.mobile) .feds-menu-headline + .feds-menu-items",
          "cssText": ".global-footer:not(.mobile) .feds-menu-headline + .feds-menu-items { display: flex; flex-direction: column; padding: 0px; border-bottom: none; }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".global-navigation .feds-menu-headline + .feds-menu-items",
          "cssText": ".global-navigation .feds-menu-headline + .feds-menu-items { display: flex; flex-direction: column; padding: 0px; border-bottom: none; }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-promo-wrapper",
          "cssText": ".feds-promo-wrapper { display: flex; width: 260px; padding: 0px 32px; margin: 0px; }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-crossCloudMenu-wrapper",
          "cssText": ".feds-crossCloudMenu-wrapper { width: 100%; display: flex; justify-content: center; border-top: solid 1px var(--feds-borderColor); background-color: var(--feds-background-nav); }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-crossCloudMenu",
          "cssText": ".feds-crossCloudMenu { width: 100%; max-width: var(--feds-maxWidth-nav); }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-crossCloudMenu ul",
          "cssText": ".feds-crossCloudMenu ul { padding: 20px 0px; display: flex; }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-crossCloudMenu-item:not(:last-child)::after",
          "cssText": ".feds-crossCloudMenu-item:not(:last-child)::after { content: \"|\"; }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-crossCloudMenu-item",
          "cssText": ".feds-crossCloudMenu-item { display: flex; align-items: center; list-style: none; }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-crossCloudMenu-item u",
          "cssText": ".feds-crossCloudMenu-item u { text-decoration: none; }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-crossCloudMenu .feds-navLink:hover",
          "cssText": ".feds-crossCloudMenu .feds-navLink:hover { background-color: transparent; }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".feds-crossCloudMenu .feds-navLink",
          "cssText": ".feds-crossCloudMenu .feds-navLink { padding: 0px 28px; }",
          "urls": [],
          "group": "(min-width: 900px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 900px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "900px",
                "900",
                "width"
              ]
            }
          ]
        }
      ]
    },
    {
      "href": "(inline <style>)",
      "rules": 1,
      "rulesList": [
        {
          "type": "CSSStyleRule",
          "selector": ".homepage-brick.news .highlight-row",
          "cssText": ".homepage-brick.news .highlight-row { background: rgb(0, 0, 0) !important; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        }
      ]
    },
    {
      "href": "(inline <style>)",
      "rules": 1,
      "rulesList": [
        {
          "type": "CSSStyleRule",
          "selector": ".homepage-brick.link.split-background > .foreground > :first-child",
          "cssText": ".homepage-brick.link.split-background > .foreground > :first-child { background: rgb(0, 0, 0) !important; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        }
      ]
    }
  ],
  "inaccessible": [
    "https://use.typekit.net/hah7vzn.css",
    "https://prod.adobeccstatic.com/unav/1.5/UniversalNav.css",
    "https://prod.adobeccstatic.com/unav/1.5/layout.bundle.css",
    "https://prod.adobeccstatic.com/unav/1.5/popover.bundle.css",
    "https://prod.adobeccstatic.com/unav/1.5/profile.bundle.css"
  ],
  "styleTags": 4,
  "inlineStyleCount": 28,
  "associations": [],
  "summary": {
    "sheetsAccessible": 17,
    "sheetsInaccessible": 5,
    "totalRulesScanned": 1346,
    "totalSinks": 2,
    "totalSources": 95,
    "totalAssociations": 0,
    "totalCapped": false
  },
  "likelyFingerprinting": false,
  "verdict": "likely not fingerprinting",
  "claims": [],
  "claimDetails": [],
  "riskScore": 0,
  "riskLevel": "none"
}