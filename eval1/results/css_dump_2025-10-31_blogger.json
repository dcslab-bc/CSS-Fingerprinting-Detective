{
  "page": "https://www.blogger.com/about/?bpli=1",
  "timestamp": 1761885294632,
  "sheets": [
    {
      "href": "https://www.blogger.com/about/css/styles.min.css?v=1476060772",
      "rules": 564,
      "rulesList": [
        {
          "type": "CSSStyleRule",
          "selector": "html",
          "cssText": "html { box-sizing: border-box; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "*, ::after, ::before",
          "cssText": "*, ::after, ::before { box-sizing: inherit; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "html",
          "cssText": "html { font-family: sans-serif; text-size-adjust: 100%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "body",
          "cssText": "body { margin: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "article, aside, details, figcaption, figure, footer, header, hgroup, main, menu, nav, section, summary",
          "cssText": "article, aside, details, figcaption, figure, footer, header, hgroup, main, menu, nav, section, summary { display: block; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "audio, canvas, progress, video",
          "cssText": "audio, canvas, progress, video { display: inline-block; vertical-align: baseline; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "audio:not([controls])",
          "cssText": "audio:not([controls]) { display: none; height: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[hidden], template",
          "cssText": "[hidden], template { display: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "a",
          "cssText": "a { background-color: transparent; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "a:active, a:hover",
          "cssText": "a:active, a:hover { outline: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "abbr[title]",
          "cssText": "abbr[title] { border-bottom: 1px dotted; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "b, strong",
          "cssText": "b, strong { font-weight: bold; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "dfn",
          "cssText": "dfn { font-style: italic; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "h1",
          "cssText": "h1 { font-size: 2em; margin: 0.67em 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "mark",
          "cssText": "mark { background: rgb(255, 255, 0); color: rgb(0, 0, 0); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "small",
          "cssText": "small { font-size: 80%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "sub, sup",
          "cssText": "sub, sup { font-size: 75%; line-height: 0; position: relative; vertical-align: baseline; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "sup",
          "cssText": "sup { top: -0.5em; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "sub",
          "cssText": "sub { bottom: -0.25em; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "img",
          "cssText": "img { border: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "svg:not(:root)",
          "cssText": "svg:not(:root) { overflow: hidden; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "figure",
          "cssText": "figure { margin: 1em 40px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "hr",
          "cssText": "hr { box-sizing: content-box; height: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "pre",
          "cssText": "pre { overflow: auto; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "code, kbd, pre, samp",
          "cssText": "code, kbd, pre, samp { font-family: monospace, monospace; font-size: 1em; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "button, input, optgroup, select, textarea",
          "cssText": "button, input, optgroup, select, textarea { color: inherit; font: inherit; margin: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "button",
          "cssText": "button { overflow: visible; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "button, select",
          "cssText": "button, select { text-transform: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "button, html input[type=\"button\"], input[type=\"reset\"], input[type=\"submit\"]",
          "cssText": "button, html input[type=\"button\"], input[type=\"reset\"], input[type=\"submit\"] { appearance: button; cursor: pointer; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "button[disabled], html input[disabled]",
          "cssText": "button[disabled], html input[disabled] { cursor: default; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "input",
          "cssText": "input { line-height: normal; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "input[type=\"checkbox\"], input[type=\"radio\"]",
          "cssText": "input[type=\"checkbox\"], input[type=\"radio\"] { box-sizing: border-box; padding: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "input[type=\"number\"]::-webkit-inner-spin-button, input[type=\"number\"]::-webkit-outer-spin-button",
          "cssText": "input[type=\"number\"]::-webkit-inner-spin-button, input[type=\"number\"]::-webkit-outer-spin-button { height: auto; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "input[type=\"search\"]",
          "cssText": "input[type=\"search\"] { appearance: textfield; box-sizing: content-box; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "input[type=\"search\"]::-webkit-search-cancel-button, input[type=\"search\"]::-webkit-search-decoration",
          "cssText": "input[type=\"search\"]::-webkit-search-cancel-button, input[type=\"search\"]::-webkit-search-decoration { appearance: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "fieldset",
          "cssText": "fieldset { border: 1px solid rgb(192, 192, 192); margin: 0px 2px; padding: 0.35em 0.625em 0.75em; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "legend",
          "cssText": "legend { border: 0px; padding: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "textarea",
          "cssText": "textarea { overflow: auto; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "optgroup",
          "cssText": "optgroup { font-weight: bold; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "table",
          "cssText": "table { border-collapse: collapse; border-spacing: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "td, th",
          "cssText": "td, th { padding: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".scrolldown",
          "cssText": ".scrolldown { appearance: none; background: transparent; padding: 0px; margin: 0px; border: 0px solid transparent; list-style: none; outline: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".header, .header--content, .header--content div, .header--content .cta, .hero .hero--header, .millions .millions--header, .scrolldown",
          "cssText": ".header, .header--content, .header--content div, .header--content .cta, .hero .hero--header, .millions .millions--header, .scrolldown { -webkit-box-align: center; align-items: center; display: flex; -webkit-box-orient: horizontal; -webkit-box-direction: normal; flex-direction: row; -webkit-box-pack: center; justify-content: center; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSFontFaceRule",
          "selector": "",
          "cssText": "@font-face { font-family: \"Noto Sans Ethiopic\"; src: url(\"../fonts/NotoSansEthiopic-Regular.ttf\") format(\"truetype\"); }",
          "urls": [
            "../fonts/notosansethiopic-regular.ttf"
          ],
          "group": "",
          "sources": [],
          "sinks": [
            {
              "reason": "url_sink",
              "urls": [
                "../fonts/notosansethiopic-regular.ttf"
              ]
            }
          ],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "h1, h2, h3, h4",
          "cssText": "h1, h2, h3, h4 { font-family: Roboto, sans-serif; font-weight: 100; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "html, .header--content .sign-in, .header--content .cta, .cta",
          "cssText": "html, .header--content .sign-in, .header--content .cta, .cta { font-family: Roboto, sans-serif; font-weight: 400; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "html[lang=\"am\"], [lang=\"am\"] body, [lang=\"am\"] h1, [lang=\"am\"] h2, [lang=\"am\"] h3, [lang=\"am\"] h4",
          "cssText": "html[lang=\"am\"], [lang=\"am\"] body, [lang=\"am\"] h1, [lang=\"am\"] h2, [lang=\"am\"] h3, [lang=\"am\"] h4 { font-family: \"Noto Sans Ethiopic\", Roboto; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "*",
          "cssText": "* { box-sizing: border-box; appearance: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "html, body",
          "cssText": "html, body { min-width: 20rem; -webkit-font-smoothing: antialiased; font-size: 100%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "html",
          "cssText": "html { touch-action: manipulation; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "html.no-scroll",
          "cssText": "html.no-scroll { overflow: hidden; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "body",
          "cssText": "body { background-color: rgb(47, 69, 79); color: rgb(47, 69, 79); font-size: 0.875rem; line-height: 1.66; font-weight: 400; position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 50rem) {\n  body { font-size: 1rem; line-height: 1.66; }\n}",
          "urls": [],
          "group": "screen and (min-width: 50rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 50rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "50rem",
                "50",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "body",
          "cssText": "body { font-size: 1rem; line-height: 1.66; }",
          "urls": [],
          "group": "screen and (min-width: 50rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 50rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "50rem",
                "50",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 60rem) {\n  body { font-size: 1.125rem; line-height: 1.66; }\n}",
          "urls": [],
          "group": "screen and (min-width: 60rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 60rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "60rem",
                "60",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "body",
          "cssText": "body { font-size: 1.125rem; line-height: 1.66; }",
          "urls": [],
          "group": "screen and (min-width: 60rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 60rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "60rem",
                "60",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": "body main, body header, body footer",
          "cssText": "body main, body header, body footer { color: rgb(255, 255, 255); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[type=\"search\"]",
          "cssText": "[type=\"search\"] { appearance: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "::-webkit-validation-bubble-message",
          "cssText": "::-webkit-validation-bubble-message { padding: 40px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "a",
          "cssText": "a { text-decoration: none; color: rgb(255, 255, 255); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "a:hover",
          "cssText": "a:hover { text-decoration: underline; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".link-underline",
          "cssText": ".link-underline { text-decoration: underline; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".rtl h2, .rtl p, .rtl a, .rtl select",
          "cssText": ".rtl h2, .rtl p, .rtl a, .rtl select { direction: rtl; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".header--content .sign-in, .header--content .cta, .cta",
          "cssText": ".header--content .sign-in, .header--content .cta, .cta { text-transform: uppercase; text-decoration: none; font-weight: 500; display: inline-block; border-radius: 0.1875rem; padding: 0.5rem 1rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".btn--primary",
          "cssText": ".btn--primary { background: rgb(255, 255, 0); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".btn--footer",
          "cssText": ".btn--footer { background: rgb(0, 0, 255); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".accessibility-skip",
          "cssText": ".accessibility-skip { position: absolute; display: block; opacity: 0; width: 1px; height: 1px; overflow: hidden; z-index: 100; padding: 0px; background: rgb(0, 0, 0); color: rgb(255, 255, 255); font-size: 14px; font-weight: 600; pointer-events: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".accessibility-skip:focus",
          "cssText": ".accessibility-skip:focus { opacity: 1; width: auto; height: auto; pointer-events: auto; padding: 14px 20px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "header, footer, .main",
          "cssText": "header, footer, .main { position: relative; width: 100%; z-index: 2; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".container, .main, .footer__wrapper, .section header, footer section, footer hr",
          "cssText": ".container, .main, .footer__wrapper, .section header, footer section, footer hr { margin: 0px auto; max-width: 84%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 50rem) {\n  .container, .main, .footer__wrapper, .section header, footer section, footer hr { max-width: 84%; }\n}",
          "urls": [],
          "group": "screen and (min-width: 50rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 50rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "50rem",
                "50",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".container, .main, .footer__wrapper, .section header, footer section, footer hr",
          "cssText": ".container, .main, .footer__wrapper, .section header, footer section, footer hr { max-width: 84%; }",
          "urls": [],
          "group": "screen and (min-width: 50rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 50rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "50rem",
                "50",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 60rem) {\n  .container, .main, .footer__wrapper, .section header, footer section, footer hr { max-width: 80%; }\n}",
          "urls": [],
          "group": "screen and (min-width: 60rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 60rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "60rem",
                "60",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".container, .main, .footer__wrapper, .section header, footer section, footer hr",
          "cssText": ".container, .main, .footer__wrapper, .section header, footer section, footer hr { max-width: 80%; }",
          "urls": [],
          "group": "screen and (min-width: 60rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 60rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "60rem",
                "60",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 75rem) {\n  .container, .main, .footer__wrapper, .section header, footer section, footer hr { max-width: 80%; }\n}",
          "urls": [],
          "group": "screen and (min-width: 75rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 75rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "75rem",
                "75",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".container, .main, .footer__wrapper, .section header, footer section, footer hr",
          "cssText": ".container, .main, .footer__wrapper, .section header, footer section, footer hr { max-width: 80%; }",
          "urls": [],
          "group": "screen and (min-width: 75rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 75rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "75rem",
                "75",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": "#goro, #goro *, #goro ::before, #goro ::after",
          "cssText": "#goro, #goro *, #goro ::before, #goro ::after { box-sizing: content-box; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".header",
          "cssText": ".header { position: fixed; top: 0px; left: 0px; width: 100%; height: 4rem; z-index: 10; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 37.5rem) {\n  .header { -webkit-box-pack: center; justify-content: center; }\n}",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".header",
          "cssText": ".header { -webkit-box-pack: center; justify-content: center; }",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".header--content",
          "cssText": ".header--content { -webkit-box-pack: justify; justify-content: space-between; position: relative; width: 100%; height: 4rem; z-index: 1; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".rtl .header--content",
          "cssText": ".rtl .header--content { -webkit-box-orient: horizontal; -webkit-box-direction: reverse; flex-direction: row-reverse; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".header--content div",
          "cssText": ".header--content div { height: 4rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".header--content .sign-in, .header--content .cta",
          "cssText": ".header--content .sign-in, .header--content .cta { font-size: 0.875rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".header--content .sign-in",
          "cssText": ".header--content .sign-in { transition: transform 0.2s cubic-bezier(0.645, 0.045, 0.355, 1), opacity 0.2s cubic-bezier(0.645, 0.045, 0.355, 1); position: absolute; top: 0.75rem; right: 0.75rem; margin-top: 0.0625rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".header--content .sign-in:hover",
          "cssText": ".header--content .sign-in:hover { opacity: 0.6; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".header--content .sign-in span",
          "cssText": ".header--content .sign-in span { vertical-align: middle; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".header--sticky .header--content .sign-in",
          "cssText": ".header--sticky .header--content .sign-in { opacity: 0; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".header--sticky .header--content .sign-in:hover",
          "cssText": ".header--sticky .header--content .sign-in:hover { opacity: 1; color: rgb(255, 128, 0); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 37.5rem) {\n  .header--sticky .header--content .sign-in { position: relative; top: 0px; right: 0px; opacity: 1; color: rgb(47, 69, 79); }\n}",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".header--sticky .header--content .sign-in",
          "cssText": ".header--sticky .header--content .sign-in { position: relative; top: 0px; right: 0px; opacity: 1; color: rgb(47, 69, 79); }",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".rtl .header--content .sign-in",
          "cssText": ".rtl .header--content .sign-in { right: inherit; left: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".rtl .header--buttons",
          "cssText": ".rtl .header--buttons { flex-direction: row-reverse; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".header--content .cta",
          "cssText": ".header--content .cta { transition: visibility 0.3s cubic-bezier(0.645, 0.045, 0.355, 1), transform 0.3s cubic-bezier(0.645, 0.045, 0.355, 1); transform: translateY(-120%); padding: 0.75rem 1rem; font-size: 0.75rem; margin-right: 0.5rem; visibility: hidden; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".rtl .header--content .cta",
          "cssText": ".rtl .header--content .cta { margin-left: 0.5rem; margin-right: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".header--sticky .header--content .cta",
          "cssText": ".header--sticky .header--content .cta { transform: translateY(0px); visibility: visible; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".header--content .cta:hover, .header--content .cta:focus",
          "cssText": ".header--content .cta:hover, .header--content .cta:focus { background: rgb(255, 146, 36); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 37.5rem) {\n  .header--content .cta { padding: 0.625rem 1rem; font-size: 0.875rem; }\n}",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".header--content .cta",
          "cssText": ".header--content .cta { padding: 0.625rem 1rem; font-size: 0.875rem; }",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".header--logo",
          "cssText": ".header--logo { margin-left: 1rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".header--logo.logo",
          "cssText": ".header--logo.logo { -webkit-box-flex: 1; flex: 1 0 auto; -webkit-box-pack: start; justify-content: flex-start; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".header--logo a",
          "cssText": ".header--logo a { display: block; text-decoration: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".header--logo a:hover",
          "cssText": ".header--logo a:hover { text-decoration: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".header--logo svg",
          "cssText": ".header--logo svg { height: 2rem; vertical-align: middle; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".rtl .header--logo svg:first-child",
          "cssText": ".rtl .header--logo svg:first-child { float: right; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".header--logo .logo-icon",
          "cssText": ".header--logo .logo-icon { width: 2rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".header--logo .logo-type",
          "cssText": ".header--logo .logo-type { transition: color 0.3s cubic-bezier(0.645, 0.045, 0.355, 1); width: 5rem; color: rgb(255, 255, 255); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".header--logo .logo-type use",
          "cssText": ".header--logo .logo-type use { fill: currentcolor; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".header--sticky .header--logo .logo-type",
          "cssText": ".header--sticky .header--logo .logo-type { color: rgb(51, 51, 51); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".rtl .header--logo",
          "cssText": ".rtl .header--logo { margin-left: 0px; margin-right: 1rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".rtl .header--logo.logo",
          "cssText": ".rtl .header--logo.logo { -webkit-box-pack: end; justify-content: flex-end; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".header--underlay",
          "cssText": ".header--underlay { transition: transform 0.3s cubic-bezier(0.645, 0.045, 0.355, 1); transform: translateY(-100%); position: absolute; top: 0px; left: 0px; width: 100%; height: 100%; z-index: 0; background: rgb(255, 255, 255); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".header--sticky .header--underlay",
          "cssText": ".header--sticky .header--underlay { transform: translateY(0px); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section.hero",
          "cssText": ".section.hero { -webkit-box-pack: center; justify-content: center; -webkit-box-orient: vertical; -webkit-box-direction: normal; flex-direction: column; height: 100vh; background: rgb(56, 141, 128); z-index: 2; overflow: visible; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 37.5rem) {\n  .section.hero { min-height: 33.75rem; -webkit-box-pack: start; justify-content: flex-start; }\n}",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section.hero",
          "cssText": ".section.hero { min-height: 33.75rem; -webkit-box-pack: start; justify-content: flex-start; }",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait) {\n  .section.hero { -webkit-box-pack: center; justify-content: center; }\n}",
          "urls": [],
          "group": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "max-width",
                "75rem",
                "orientation",
                "portrait",
                "37.5",
                "75",
                "width"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "orientation",
              "semanticGroup": "geometry",
              "claim": "screen orientation",
              "excerpt": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "max-width",
                "75rem",
                "orientation",
                "portrait",
                "37.5",
                "75",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section.hero",
          "cssText": ".section.hero { -webkit-box-pack: center; justify-content: center; }",
          "urls": [],
          "group": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "max-width",
                "75rem",
                "orientation",
                "portrait",
                "37.5",
                "75",
                "width"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "orientation",
              "semanticGroup": "geometry",
              "claim": "screen orientation",
              "excerpt": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "max-width",
                "75rem",
                "orientation",
                "portrait",
                "37.5",
                "75",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 50rem) {\n  .section.hero { min-height: 43.75rem; }\n}",
          "urls": [],
          "group": "screen and (min-width: 50rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 50rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "50rem",
                "50",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section.hero",
          "cssText": ".section.hero { min-height: 43.75rem; }",
          "urls": [],
          "group": "screen and (min-width: 50rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 50rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "50rem",
                "50",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 93.75rem) and (max-height: 56.25rem) {\n  .section.hero { min-height: 56.25rem; }\n}",
          "urls": [],
          "group": "screen and (min-width: 93.75rem) and (max-height: 56.25rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 93.75rem) and (max-height: 56.25rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "93.75rem",
                "max-height",
                "56.25rem",
                "93.75",
                "56.25",
                "width",
                "height"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "height",
              "semanticGroup": "geometry",
              "claim": "viewport height",
              "excerpt": "screen and (min-width: 93.75rem) and (max-height: 56.25rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "93.75rem",
                "max-height",
                "56.25rem",
                "93.75",
                "56.25",
                "width",
                "height"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section.hero",
          "cssText": ".section.hero { min-height: 56.25rem; }",
          "urls": [],
          "group": "screen and (min-width: 93.75rem) and (max-height: 56.25rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 93.75rem) and (max-height: 56.25rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "93.75rem",
                "max-height",
                "56.25rem",
                "93.75",
                "56.25",
                "width",
                "height"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "height",
              "semanticGroup": "geometry",
              "claim": "viewport height",
              "excerpt": "screen and (min-width: 93.75rem) and (max-height: 56.25rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "93.75rem",
                "max-height",
                "56.25rem",
                "93.75",
                "56.25",
                "width",
                "height"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 27.5rem) and (max-width: 50rem) and (max-height: 27.5rem) {\n  .section.hero { -webkit-box-pack: start; justify-content: flex-start; }\n}",
          "urls": [],
          "group": "screen and (min-width: 27.5rem) and (max-width: 50rem) and (max-height: 27.5rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 27.5rem) and (max-width: 50rem) and (max-height: 27.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "27.5rem",
                "max-width",
                "50rem",
                "max-height",
                "27.5",
                "50",
                "width",
                "height"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "height",
              "semanticGroup": "geometry",
              "claim": "viewport height",
              "excerpt": "screen and (min-width: 27.5rem) and (max-width: 50rem) and (max-height: 27.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "27.5rem",
                "max-width",
                "50rem",
                "max-height",
                "27.5",
                "50",
                "width",
                "height"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section.hero",
          "cssText": ".section.hero { -webkit-box-pack: start; justify-content: flex-start; }",
          "urls": [],
          "group": "screen and (min-width: 27.5rem) and (max-width: 50rem) and (max-height: 27.5rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 27.5rem) and (max-width: 50rem) and (max-height: 27.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "27.5rem",
                "max-width",
                "50rem",
                "max-height",
                "27.5",
                "50",
                "width",
                "height"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "height",
              "semanticGroup": "geometry",
              "claim": "viewport height",
              "excerpt": "screen and (min-width: 27.5rem) and (max-width: 50rem) and (max-height: 27.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "27.5rem",
                "max-width",
                "50rem",
                "max-height",
                "27.5",
                "50",
                "width",
                "height"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero .hero--header",
          "cssText": ".hero .hero--header { -webkit-box-orient: vertical; -webkit-box-direction: normal; flex-direction: column; margin-bottom: 4vw; text-align: center; width: 80%; max-width: inherit; z-index: 1; margin-top: 10vh; display: flex; -webkit-box-flex: 1; flex: 1 0 auto; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 37.5rem) {\n  .hero .hero--header { margin-bottom: 54vw; }\n}",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero .hero--header",
          "cssText": ".hero .hero--header { margin-bottom: 54vw; }",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 50rem) {\n  .hero .hero--header { margin-bottom: 48vw; }\n}",
          "urls": [],
          "group": "screen and (min-width: 50rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 50rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "50rem",
                "50",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero .hero--header",
          "cssText": ".hero .hero--header { margin-bottom: 48vw; }",
          "urls": [],
          "group": "screen and (min-width: 50rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 50rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "50rem",
                "50",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 60rem) {\n  .hero .hero--header { margin-bottom: 29vw; }\n}",
          "urls": [],
          "group": "screen and (min-width: 60rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 60rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "60rem",
                "60",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero .hero--header",
          "cssText": ".hero .hero--header { margin-bottom: 29vw; }",
          "urls": [],
          "group": "screen and (min-width: 60rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 60rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "60rem",
                "60",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 75rem) {\n  .hero .hero--header { margin-bottom: 24vw; }\n}",
          "urls": [],
          "group": "screen and (min-width: 75rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 75rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "75rem",
                "75",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero .hero--header",
          "cssText": ".hero .hero--header { margin-bottom: 24vw; }",
          "urls": [],
          "group": "screen and (min-width: 75rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 75rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "75rem",
                "75",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (max-height: 50rem) {\n  .hero .hero--header { margin-bottom: 0px; display: block; margin-top: 8vh; width: 90%; }\n}",
          "urls": [],
          "group": "screen and (max-height: 50rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "height",
              "semanticGroup": "geometry",
              "claim": "viewport height",
              "excerpt": "screen and (max-height: 50rem)",
              "requiresEcho": true,
              "echoTokens": [
                "max-height",
                "50rem",
                "50",
                "height"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero .hero--header",
          "cssText": ".hero .hero--header { margin-bottom: 0px; display: block; margin-top: 8vh; width: 90%; }",
          "urls": [],
          "group": "screen and (max-height: 50rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "height",
              "semanticGroup": "geometry",
              "claim": "viewport height",
              "excerpt": "screen and (max-height: 50rem)",
              "requiresEcho": true,
              "echoTokens": [
                "max-height",
                "50rem",
                "50",
                "height"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (max-height: 30rem) and (min-width: 60rem) {\n  .hero .hero--header { margin-top: 12vh; }\n}",
          "urls": [],
          "group": "screen and (max-height: 30rem) and (min-width: 60rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-height: 30rem) and (min-width: 60rem)",
              "requiresEcho": true,
              "echoTokens": [
                "max-height",
                "30rem",
                "min-width",
                "60rem",
                "30",
                "60",
                "width",
                "height"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "height",
              "semanticGroup": "geometry",
              "claim": "viewport height",
              "excerpt": "screen and (max-height: 30rem) and (min-width: 60rem)",
              "requiresEcho": true,
              "echoTokens": [
                "max-height",
                "30rem",
                "min-width",
                "60rem",
                "30",
                "60",
                "width",
                "height"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero .hero--header",
          "cssText": ".hero .hero--header { margin-top: 12vh; }",
          "urls": [],
          "group": "screen and (max-height: 30rem) and (min-width: 60rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-height: 30rem) and (min-width: 60rem)",
              "requiresEcho": true,
              "echoTokens": [
                "max-height",
                "30rem",
                "min-width",
                "60rem",
                "30",
                "60",
                "width",
                "height"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "height",
              "semanticGroup": "geometry",
              "claim": "viewport height",
              "excerpt": "screen and (max-height: 30rem) and (min-width: 60rem)",
              "requiresEcho": true,
              "echoTokens": [
                "max-height",
                "30rem",
                "min-width",
                "60rem",
                "30",
                "60",
                "width",
                "height"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 37.5rem) and (max-height: 610px) {\n  .hero .hero--header { margin-top: 0px; }\n}",
          "urls": [],
          "group": "screen and (min-width: 37.5rem) and (max-height: 610px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem) and (max-height: 610px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "max-height",
                "610px",
                "37.5",
                "610",
                "width",
                "height"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "height",
              "semanticGroup": "geometry",
              "claim": "viewport height",
              "excerpt": "screen and (min-width: 37.5rem) and (max-height: 610px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "max-height",
                "610px",
                "37.5",
                "610",
                "width",
                "height"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero .hero--header",
          "cssText": ".hero .hero--header { margin-top: 0px; }",
          "urls": [],
          "group": "screen and (min-width: 37.5rem) and (max-height: 610px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem) and (max-height: 610px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "max-height",
                "610px",
                "37.5",
                "610",
                "width",
                "height"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "height",
              "semanticGroup": "geometry",
              "claim": "viewport height",
              "excerpt": "screen and (min-width: 37.5rem) and (max-height: 610px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "max-height",
                "610px",
                "37.5",
                "610",
                "width",
                "height"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero .hero--header h2",
          "cssText": ".hero .hero--header h2 { margin-bottom: 0px; font-size: 1.6875rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 50rem) {\n  .hero .hero--header h2 { font-size: 2.625rem; }\n}",
          "urls": [],
          "group": "screen and (min-width: 50rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 50rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "50rem",
                "50",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero .hero--header h2",
          "cssText": ".hero .hero--header h2 { font-size: 2.625rem; }",
          "urls": [],
          "group": "screen and (min-width: 50rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 50rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "50rem",
                "50",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero .hero--header p",
          "cssText": ".hero .hero--header p { margin-top: 0.75rem; margin-bottom: 2.5rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 50rem) {\n  .hero .hero--header p { font-size: 1.25rem; }\n}",
          "urls": [],
          "group": "screen and (min-width: 50rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 50rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "50rem",
                "50",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero .hero--header p",
          "cssText": ".hero .hero--header p { font-size: 1.25rem; }",
          "urls": [],
          "group": "screen and (min-width: 50rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 50rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "50rem",
                "50",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero--background",
          "cssText": ".hero--background { position: absolute; z-index: 0; width: 100%; height: 100%; top: 0px; left: 0px; overflow: hidden; background-color: rgb(47, 69, 79); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero--background .theme",
          "cssText": ".hero--background .theme { transition: opacity 0.8s cubic-bezier(0.645, 0.045, 0.355, 1) 1.2s; position: absolute; width: 100%; height: 100%; top: 0px; left: 0px; opacity: 0; overflow: hidden; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero--background .theme.active",
          "cssText": ".hero--background .theme.active { opacity: 1; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".theme--layer",
          "cssText": ".theme--layer { transition: transform 1.4s cubic-bezier(0.645, 0.045, 0.355, 1); transform: translateY(100vh); position: absolute; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".active .theme--layer",
          "cssText": ".active .theme--layer { transform: translate3d(0px, 0px, 0px); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".theme--layer:nth-child(1)",
          "cssText": ".theme--layer:nth-child(1) { transition-delay: 0.25s; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".theme--layer:nth-child(2)",
          "cssText": ".theme--layer:nth-child(2) { transition-delay: 0.3s; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".theme--layer:nth-child(3)",
          "cssText": ".theme--layer:nth-child(3) { transition-delay: 0.35s; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".theme--layer:nth-child(4)",
          "cssText": ".theme--layer:nth-child(4) { transition-delay: 0.4s; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".theme--layer:nth-child(5)",
          "cssText": ".theme--layer:nth-child(5) { transition-delay: 0.45s; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".theme--layer:nth-child(6)",
          "cssText": ".theme--layer:nth-child(6) { transition-delay: 0.5s; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".theme--layer:nth-child(7)",
          "cssText": ".theme--layer:nth-child(7) { transition-delay: 0.55s; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".theme--layer:nth-child(8)",
          "cssText": ".theme--layer:nth-child(8) { transition-delay: 0.6s; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".theme--layer:nth-child(9)",
          "cssText": ".theme--layer:nth-child(9) { transition-delay: 0.65s; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".theme--layer:nth-child(10)",
          "cssText": ".theme--layer:nth-child(10) { transition-delay: 0.7s; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".theme--layer:nth-child(11)",
          "cssText": ".theme--layer:nth-child(11) { transition-delay: 0.75s; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".theme--layer:nth-child(12)",
          "cssText": ".theme--layer:nth-child(12) { transition-delay: 0.8s; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".theme--layer:nth-child(13)",
          "cssText": ".theme--layer:nth-child(13) { transition-delay: 0.85s; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".theme--layer:nth-child(14)",
          "cssText": ".theme--layer:nth-child(14) { transition-delay: 0.9s; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".theme--layer:nth-child(15)",
          "cssText": ".theme--layer:nth-child(15) { transition-delay: 0.95s; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".theme--layer:nth-child(16)",
          "cssText": ".theme--layer:nth-child(16) { transition-delay: 1s; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero--background .theme.green",
          "cssText": ".hero--background .theme.green { background: rgb(56, 141, 128); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".theme .vase",
          "cssText": ".theme .vase { bottom: 20%; left: -10%; width: 21%; display: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 37.5rem) {\n  .theme .vase { display: block; }\n}",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".theme .vase",
          "cssText": ".theme .vase { display: block; }",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait) {\n  .theme .vase { bottom: 20%; left: -10%; width: 30%; }\n}",
          "urls": [],
          "group": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "max-width",
                "75rem",
                "orientation",
                "portrait",
                "37.5",
                "75",
                "width"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "orientation",
              "semanticGroup": "geometry",
              "claim": "screen orientation",
              "excerpt": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "max-width",
                "75rem",
                "orientation",
                "portrait",
                "37.5",
                "75",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".theme .vase",
          "cssText": ".theme .vase { bottom: 20%; left: -10%; width: 30%; }",
          "urls": [],
          "group": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "max-width",
                "75rem",
                "orientation",
                "portrait",
                "37.5",
                "75",
                "width"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "orientation",
              "semanticGroup": "geometry",
              "claim": "screen orientation",
              "excerpt": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "max-width",
                "75rem",
                "orientation",
                "portrait",
                "37.5",
                "75",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".theme .tea",
          "cssText": ".theme .tea { bottom: 22%; left: -18%; width: 35%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 27.5rem) and (max-width: 50rem) and (max-height: 27.5rem) {\n  .theme .tea { bottom: -13%; left: -17%; width: 38%; }\n}",
          "urls": [],
          "group": "screen and (min-width: 27.5rem) and (max-width: 50rem) and (max-height: 27.5rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 27.5rem) and (max-width: 50rem) and (max-height: 27.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "27.5rem",
                "max-width",
                "50rem",
                "max-height",
                "27.5",
                "50",
                "width",
                "height"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "height",
              "semanticGroup": "geometry",
              "claim": "viewport height",
              "excerpt": "screen and (min-width: 27.5rem) and (max-width: 50rem) and (max-height: 27.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "27.5rem",
                "max-width",
                "50rem",
                "max-height",
                "27.5",
                "50",
                "width",
                "height"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".theme .tea",
          "cssText": ".theme .tea { bottom: -13%; left: -17%; width: 38%; }",
          "urls": [],
          "group": "screen and (min-width: 27.5rem) and (max-width: 50rem) and (max-height: 27.5rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 27.5rem) and (max-width: 50rem) and (max-height: 27.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "27.5rem",
                "max-width",
                "50rem",
                "max-height",
                "27.5",
                "50",
                "width",
                "height"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "height",
              "semanticGroup": "geometry",
              "claim": "viewport height",
              "excerpt": "screen and (min-width: 27.5rem) and (max-width: 50rem) and (max-height: 27.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "27.5rem",
                "max-width",
                "50rem",
                "max-height",
                "27.5",
                "50",
                "width",
                "height"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 37.5rem) and (max-width: 60rem) and (max-height: 37.5rem) {\n  .theme .tea { display: none; }\n}",
          "urls": [],
          "group": "screen and (min-width: 37.5rem) and (max-width: 60rem) and (max-height: 37.5rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem) and (max-width: 60rem) and (max-height: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "max-width",
                "60rem",
                "max-height",
                "37.5",
                "60",
                "width",
                "height"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "height",
              "semanticGroup": "geometry",
              "claim": "viewport height",
              "excerpt": "screen and (min-width: 37.5rem) and (max-width: 60rem) and (max-height: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "max-width",
                "60rem",
                "max-height",
                "37.5",
                "60",
                "width",
                "height"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".theme .tea",
          "cssText": ".theme .tea { display: none; }",
          "urls": [],
          "group": "screen and (min-width: 37.5rem) and (max-width: 60rem) and (max-height: 37.5rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem) and (max-width: 60rem) and (max-height: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "max-width",
                "60rem",
                "max-height",
                "37.5",
                "60",
                "width",
                "height"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "height",
              "semanticGroup": "geometry",
              "claim": "viewport height",
              "excerpt": "screen and (min-width: 37.5rem) and (max-width: 60rem) and (max-height: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "max-width",
                "60rem",
                "max-height",
                "37.5",
                "60",
                "width",
                "height"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 37.5rem) {\n  .theme .tea { bottom: 45%; left: 14%; width: 11%; }\n}",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".theme .tea",
          "cssText": ".theme .tea { bottom: 45%; left: 14%; width: 11%; }",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait) {\n  .theme .tea { bottom: 34%; left: 26%; width: 16%; }\n}",
          "urls": [],
          "group": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "max-width",
                "75rem",
                "orientation",
                "portrait",
                "37.5",
                "75",
                "width"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "orientation",
              "semanticGroup": "geometry",
              "claim": "screen orientation",
              "excerpt": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "max-width",
                "75rem",
                "orientation",
                "portrait",
                "37.5",
                "75",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".theme .tea",
          "cssText": ".theme .tea { bottom: 34%; left: 26%; width: 16%; }",
          "urls": [],
          "group": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "max-width",
                "75rem",
                "orientation",
                "portrait",
                "37.5",
                "75",
                "width"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "orientation",
              "semanticGroup": "geometry",
              "claim": "screen orientation",
              "excerpt": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "max-width",
                "75rem",
                "orientation",
                "portrait",
                "37.5",
                "75",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".theme .slipper",
          "cssText": ".theme .slipper { bottom: 23%; right: -5%; width: 15%; display: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 37.5rem) {\n  .theme .slipper { display: block; }\n}",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".theme .slipper",
          "cssText": ".theme .slipper { display: block; }",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait) {\n  .theme .slipper { bottom: 23%; right: -5%; width: 22%; }\n}",
          "urls": [],
          "group": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "max-width",
                "75rem",
                "orientation",
                "portrait",
                "37.5",
                "75",
                "width"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "orientation",
              "semanticGroup": "geometry",
              "claim": "screen orientation",
              "excerpt": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "max-width",
                "75rem",
                "orientation",
                "portrait",
                "37.5",
                "75",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".theme .slipper",
          "cssText": ".theme .slipper { bottom: 23%; right: -5%; width: 22%; }",
          "urls": [],
          "group": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "max-width",
                "75rem",
                "orientation",
                "portrait",
                "37.5",
                "75",
                "width"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "orientation",
              "semanticGroup": "geometry",
              "claim": "screen orientation",
              "excerpt": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "max-width",
                "75rem",
                "orientation",
                "portrait",
                "37.5",
                "75",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".theme .picture",
          "cssText": ".theme .picture { bottom: -3%; right: -17%; width: 55%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 27.5rem) and (max-width: 50rem) and (max-height: 27.5rem) {\n  .theme .picture { bottom: -16%; right: -14%; width: 45%; }\n}",
          "urls": [],
          "group": "screen and (min-width: 27.5rem) and (max-width: 50rem) and (max-height: 27.5rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 27.5rem) and (max-width: 50rem) and (max-height: 27.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "27.5rem",
                "max-width",
                "50rem",
                "max-height",
                "27.5",
                "50",
                "width",
                "height"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "height",
              "semanticGroup": "geometry",
              "claim": "viewport height",
              "excerpt": "screen and (min-width: 27.5rem) and (max-width: 50rem) and (max-height: 27.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "27.5rem",
                "max-width",
                "50rem",
                "max-height",
                "27.5",
                "50",
                "width",
                "height"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".theme .picture",
          "cssText": ".theme .picture { bottom: -16%; right: -14%; width: 45%; }",
          "urls": [],
          "group": "screen and (min-width: 27.5rem) and (max-width: 50rem) and (max-height: 27.5rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 27.5rem) and (max-width: 50rem) and (max-height: 27.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "27.5rem",
                "max-width",
                "50rem",
                "max-height",
                "27.5",
                "50",
                "width",
                "height"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "height",
              "semanticGroup": "geometry",
              "claim": "viewport height",
              "excerpt": "screen and (min-width: 27.5rem) and (max-width: 50rem) and (max-height: 27.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "27.5rem",
                "max-width",
                "50rem",
                "max-height",
                "27.5",
                "50",
                "width",
                "height"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 37.5rem) {\n  .theme .picture { bottom: 0px; right: 3%; width: 17%; }\n}",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".theme .picture",
          "cssText": ".theme .picture { bottom: 0px; right: 3%; width: 17%; }",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait) {\n  .theme .picture { bottom: 0px; right: -16%; width: 30%; }\n}",
          "urls": [],
          "group": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "max-width",
                "75rem",
                "orientation",
                "portrait",
                "37.5",
                "75",
                "width"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "orientation",
              "semanticGroup": "geometry",
              "claim": "screen orientation",
              "excerpt": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "max-width",
                "75rem",
                "orientation",
                "portrait",
                "37.5",
                "75",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".theme .picture",
          "cssText": ".theme .picture { bottom: 0px; right: -16%; width: 30%; }",
          "urls": [],
          "group": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "max-width",
                "75rem",
                "orientation",
                "portrait",
                "37.5",
                "75",
                "width"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "orientation",
              "semanticGroup": "geometry",
              "claim": "screen orientation",
              "excerpt": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "max-width",
                "75rem",
                "orientation",
                "portrait",
                "37.5",
                "75",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 75rem) {\n  .theme .picture { bottom: 0px; right: 3%; width: 17%; }\n}",
          "urls": [],
          "group": "screen and (min-width: 75rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 75rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "75rem",
                "75",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".theme .picture",
          "cssText": ".theme .picture { bottom: 0px; right: 3%; width: 17%; }",
          "urls": [],
          "group": "screen and (min-width: 75rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 75rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "75rem",
                "75",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".theme .letter-c, .theme .letter-b, .theme .letter-a",
          "cssText": ".theme .letter-c, .theme .letter-b, .theme .letter-a { width: 21%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 37.5rem) {\n  .theme .letter-c, .theme .letter-b, .theme .letter-a { width: 7%; }\n}",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".theme .letter-c, .theme .letter-b, .theme .letter-a",
          "cssText": ".theme .letter-c, .theme .letter-b, .theme .letter-a { width: 7%; }",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait) {\n  .theme .letter-c, .theme .letter-b, .theme .letter-a { width: 11%; }\n}",
          "urls": [],
          "group": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "max-width",
                "75rem",
                "orientation",
                "portrait",
                "37.5",
                "75",
                "width"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "orientation",
              "semanticGroup": "geometry",
              "claim": "screen orientation",
              "excerpt": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "max-width",
                "75rem",
                "orientation",
                "portrait",
                "37.5",
                "75",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".theme .letter-c, .theme .letter-b, .theme .letter-a",
          "cssText": ".theme .letter-c, .theme .letter-b, .theme .letter-a { width: 11%; }",
          "urls": [],
          "group": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "max-width",
                "75rem",
                "orientation",
                "portrait",
                "37.5",
                "75",
                "width"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "orientation",
              "semanticGroup": "geometry",
              "claim": "screen orientation",
              "excerpt": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "max-width",
                "75rem",
                "orientation",
                "portrait",
                "37.5",
                "75",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".theme .letter-c",
          "cssText": ".theme .letter-c { bottom: 13%; left: 20%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 27.5rem) and (max-width: 50rem) and (max-height: 27.5rem) {\n  .theme .letter-c { width: 18%; bottom: 16%; left: 12%; }\n}",
          "urls": [],
          "group": "screen and (min-width: 27.5rem) and (max-width: 50rem) and (max-height: 27.5rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 27.5rem) and (max-width: 50rem) and (max-height: 27.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "27.5rem",
                "max-width",
                "50rem",
                "max-height",
                "27.5",
                "50",
                "width",
                "height"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "height",
              "semanticGroup": "geometry",
              "claim": "viewport height",
              "excerpt": "screen and (min-width: 27.5rem) and (max-width: 50rem) and (max-height: 27.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "27.5rem",
                "max-width",
                "50rem",
                "max-height",
                "27.5",
                "50",
                "width",
                "height"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".theme .letter-c",
          "cssText": ".theme .letter-c { width: 18%; bottom: 16%; left: 12%; }",
          "urls": [],
          "group": "screen and (min-width: 27.5rem) and (max-width: 50rem) and (max-height: 27.5rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 27.5rem) and (max-width: 50rem) and (max-height: 27.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "27.5rem",
                "max-width",
                "50rem",
                "max-height",
                "27.5",
                "50",
                "width",
                "height"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "height",
              "semanticGroup": "geometry",
              "claim": "viewport height",
              "excerpt": "screen and (min-width: 27.5rem) and (max-width: 50rem) and (max-height: 27.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "27.5rem",
                "max-width",
                "50rem",
                "max-height",
                "27.5",
                "50",
                "width",
                "height"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 37.5rem) {\n  .theme .letter-c { bottom: 16%; left: 8%; }\n}",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".theme .letter-c",
          "cssText": ".theme .letter-c { bottom: 16%; left: 8%; }",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait) {\n  .theme .letter-c { bottom: 6%; left: 1%; }\n}",
          "urls": [],
          "group": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "max-width",
                "75rem",
                "orientation",
                "portrait",
                "37.5",
                "75",
                "width"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "orientation",
              "semanticGroup": "geometry",
              "claim": "screen orientation",
              "excerpt": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "max-width",
                "75rem",
                "orientation",
                "portrait",
                "37.5",
                "75",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".theme .letter-c",
          "cssText": ".theme .letter-c { bottom: 6%; left: 1%; }",
          "urls": [],
          "group": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "max-width",
                "75rem",
                "orientation",
                "portrait",
                "37.5",
                "75",
                "width"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "orientation",
              "semanticGroup": "geometry",
              "claim": "screen orientation",
              "excerpt": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "max-width",
                "75rem",
                "orientation",
                "portrait",
                "37.5",
                "75",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 75rem) {\n  .theme .letter-c { bottom: 16%; left: 8%; }\n}",
          "urls": [],
          "group": "screen and (min-width: 75rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 75rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "75rem",
                "75",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".theme .letter-c",
          "cssText": ".theme .letter-c { bottom: 16%; left: 8%; }",
          "urls": [],
          "group": "screen and (min-width: 75rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 75rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "75rem",
                "75",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".theme .letter-b",
          "cssText": ".theme .letter-b { bottom: 31%; right: 11%; display: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 37.5rem) {\n  .theme .letter-b { display: block; }\n}",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".theme .letter-b",
          "cssText": ".theme .letter-b { display: block; }",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait) {\n  .theme .letter-b { bottom: 32%; right: 22%; }\n}",
          "urls": [],
          "group": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "max-width",
                "75rem",
                "orientation",
                "portrait",
                "37.5",
                "75",
                "width"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "orientation",
              "semanticGroup": "geometry",
              "claim": "screen orientation",
              "excerpt": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "max-width",
                "75rem",
                "orientation",
                "portrait",
                "37.5",
                "75",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".theme .letter-b",
          "cssText": ".theme .letter-b { bottom: 32%; right: 22%; }",
          "urls": [],
          "group": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "max-width",
                "75rem",
                "orientation",
                "portrait",
                "37.5",
                "75",
                "width"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "orientation",
              "semanticGroup": "geometry",
              "claim": "screen orientation",
              "excerpt": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "max-width",
                "75rem",
                "orientation",
                "portrait",
                "37.5",
                "75",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".theme .letter-a",
          "cssText": ".theme .letter-a { bottom: 34%; right: -6%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 27.5rem) and (max-width: 50rem) and (max-height: 27.5rem) {\n  .theme .letter-a { display: none; }\n}",
          "urls": [],
          "group": "screen and (min-width: 27.5rem) and (max-width: 50rem) and (max-height: 27.5rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 27.5rem) and (max-width: 50rem) and (max-height: 27.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "27.5rem",
                "max-width",
                "50rem",
                "max-height",
                "27.5",
                "50",
                "width",
                "height"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "height",
              "semanticGroup": "geometry",
              "claim": "viewport height",
              "excerpt": "screen and (min-width: 27.5rem) and (max-width: 50rem) and (max-height: 27.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "27.5rem",
                "max-width",
                "50rem",
                "max-height",
                "27.5",
                "50",
                "width",
                "height"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".theme .letter-a",
          "cssText": ".theme .letter-a { display: none; }",
          "urls": [],
          "group": "screen and (min-width: 27.5rem) and (max-width: 50rem) and (max-height: 27.5rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 27.5rem) and (max-width: 50rem) and (max-height: 27.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "27.5rem",
                "max-width",
                "50rem",
                "max-height",
                "27.5",
                "50",
                "width",
                "height"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "height",
              "semanticGroup": "geometry",
              "claim": "viewport height",
              "excerpt": "screen and (min-width: 27.5rem) and (max-width: 50rem) and (max-height: 27.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "27.5rem",
                "max-width",
                "50rem",
                "max-height",
                "27.5",
                "50",
                "width",
                "height"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 37.5rem) {\n  .theme .letter-a { bottom: 45%; right: 18%; }\n}",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".theme .letter-a",
          "cssText": ".theme .letter-a { bottom: 45%; right: 18%; }",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait) {\n  .theme .letter-a { bottom: 37%; right: 36%; }\n}",
          "urls": [],
          "group": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "max-width",
                "75rem",
                "orientation",
                "portrait",
                "37.5",
                "75",
                "width"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "orientation",
              "semanticGroup": "geometry",
              "claim": "screen orientation",
              "excerpt": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "max-width",
                "75rem",
                "orientation",
                "portrait",
                "37.5",
                "75",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".theme .letter-a",
          "cssText": ".theme .letter-a { bottom: 37%; right: 36%; }",
          "urls": [],
          "group": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "max-width",
                "75rem",
                "orientation",
                "portrait",
                "37.5",
                "75",
                "width"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "orientation",
              "semanticGroup": "geometry",
              "claim": "screen orientation",
              "excerpt": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "max-width",
                "75rem",
                "orientation",
                "portrait",
                "37.5",
                "75",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".theme .football",
          "cssText": ".theme .football { bottom: -9%; left: 4%; width: 30%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 27.5rem) and (max-width: 50rem) and (max-height: 27.5rem) {\n  .theme .football { display: none; }\n}",
          "urls": [],
          "group": "screen and (min-width: 27.5rem) and (max-width: 50rem) and (max-height: 27.5rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 27.5rem) and (max-width: 50rem) and (max-height: 27.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "27.5rem",
                "max-width",
                "50rem",
                "max-height",
                "27.5",
                "50",
                "width",
                "height"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "height",
              "semanticGroup": "geometry",
              "claim": "viewport height",
              "excerpt": "screen and (min-width: 27.5rem) and (max-width: 50rem) and (max-height: 27.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "27.5rem",
                "max-width",
                "50rem",
                "max-height",
                "27.5",
                "50",
                "width",
                "height"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".theme .football",
          "cssText": ".theme .football { display: none; }",
          "urls": [],
          "group": "screen and (min-width: 27.5rem) and (max-width: 50rem) and (max-height: 27.5rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 27.5rem) and (max-width: 50rem) and (max-height: 27.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "27.5rem",
                "max-width",
                "50rem",
                "max-height",
                "27.5",
                "50",
                "width",
                "height"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "height",
              "semanticGroup": "geometry",
              "claim": "viewport height",
              "excerpt": "screen and (min-width: 27.5rem) and (max-width: 50rem) and (max-height: 27.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "27.5rem",
                "max-width",
                "50rem",
                "max-height",
                "27.5",
                "50",
                "width",
                "height"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 37.5rem) {\n  .theme .football { bottom: -13%; left: 0px; width: 15%; }\n}",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".theme .football",
          "cssText": ".theme .football { bottom: -13%; left: 0px; width: 15%; }",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait) {\n  .theme .football { display: none; }\n}",
          "urls": [],
          "group": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "max-width",
                "75rem",
                "orientation",
                "portrait",
                "37.5",
                "75",
                "width"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "orientation",
              "semanticGroup": "geometry",
              "claim": "screen orientation",
              "excerpt": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "max-width",
                "75rem",
                "orientation",
                "portrait",
                "37.5",
                "75",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".theme .football",
          "cssText": ".theme .football { display: none; }",
          "urls": [],
          "group": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "max-width",
                "75rem",
                "orientation",
                "portrait",
                "37.5",
                "75",
                "width"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "orientation",
              "semanticGroup": "geometry",
              "claim": "screen orientation",
              "excerpt": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "max-width",
                "75rem",
                "orientation",
                "portrait",
                "37.5",
                "75",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 75rem) {\n  .theme .football { bottom: -13%; left: 4%; width: 15%; }\n}",
          "urls": [],
          "group": "screen and (min-width: 75rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 75rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "75rem",
                "75",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".theme .football",
          "cssText": ".theme .football { bottom: -13%; left: 4%; width: 15%; }",
          "urls": [],
          "group": "screen and (min-width: 75rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 75rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "75rem",
                "75",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".theme .blog",
          "cssText": ".theme .blog { left: 15%; width: 70%; bottom: 0px; display: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 37.5rem) {\n  .theme .blog { display: block; }\n}",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".theme .blog",
          "cssText": ".theme .blog { display: block; }",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (max-width:800) and (orientation: portrait) {\n  .theme .blog { left: 5%; width: 90%; }\n}",
          "urls": [],
          "group": "screen and (max-width:800) and (orientation: portrait)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width:800) and (orientation: portrait)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "800",
                "orientation",
                "portrait",
                "width"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "orientation",
              "semanticGroup": "geometry",
              "claim": "screen orientation",
              "excerpt": "screen and (max-width:800) and (orientation: portrait)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "800",
                "orientation",
                "portrait",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".theme .blog",
          "cssText": ".theme .blog { left: 5%; width: 90%; }",
          "urls": [],
          "group": "screen and (max-width:800) and (orientation: portrait)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width:800) and (orientation: portrait)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "800",
                "orientation",
                "portrait",
                "width"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "orientation",
              "semanticGroup": "geometry",
              "claim": "screen orientation",
              "excerpt": "screen and (max-width:800) and (orientation: portrait)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "800",
                "orientation",
                "portrait",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 27.5rem) and (max-width: 50rem) and (max-height: 27.5rem) {\n  .theme .blog { display: none; }\n}",
          "urls": [],
          "group": "screen and (min-width: 27.5rem) and (max-width: 50rem) and (max-height: 27.5rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 27.5rem) and (max-width: 50rem) and (max-height: 27.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "27.5rem",
                "max-width",
                "50rem",
                "max-height",
                "27.5",
                "50",
                "width",
                "height"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "height",
              "semanticGroup": "geometry",
              "claim": "viewport height",
              "excerpt": "screen and (min-width: 27.5rem) and (max-width: 50rem) and (max-height: 27.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "27.5rem",
                "max-width",
                "50rem",
                "max-height",
                "27.5",
                "50",
                "width",
                "height"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".theme .blog",
          "cssText": ".theme .blog { display: none; }",
          "urls": [],
          "group": "screen and (min-width: 27.5rem) and (max-width: 50rem) and (max-height: 27.5rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 27.5rem) and (max-width: 50rem) and (max-height: 27.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "27.5rem",
                "max-width",
                "50rem",
                "max-height",
                "27.5",
                "50",
                "width",
                "height"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "height",
              "semanticGroup": "geometry",
              "claim": "viewport height",
              "excerpt": "screen and (min-width: 27.5rem) and (max-width: 50rem) and (max-height: 27.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "27.5rem",
                "max-width",
                "50rem",
                "max-height",
                "27.5",
                "50",
                "width",
                "height"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 60rem) {\n  .theme .blog { left: 20%; width: 60%; }\n}",
          "urls": [],
          "group": "screen and (min-width: 60rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 60rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "60rem",
                "60",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".theme .blog",
          "cssText": ".theme .blog { left: 20%; width: 60%; }",
          "urls": [],
          "group": "screen and (min-width: 60rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 60rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "60rem",
                "60",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 75rem) {\n  .theme .blog { left: 24%; width: 55%; }\n}",
          "urls": [],
          "group": "screen and (min-width: 75rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 75rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "75rem",
                "75",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".theme .blog",
          "cssText": ".theme .blog { left: 24%; width: 55%; }",
          "urls": [],
          "group": "screen and (min-width: 75rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 75rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "75rem",
                "75",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero--background .theme.red",
          "cssText": ".hero--background .theme.red { background: rgb(188, 56, 46); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".theme .spoon",
          "cssText": ".theme .spoon { bottom: -13%; left: -21%; width: 54%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 27.5rem) and (max-width: 50rem) and (max-height: 27.5rem) {\n  .theme .spoon { bottom: -28%; left: -7%; width: 35%; }\n}",
          "urls": [],
          "group": "screen and (min-width: 27.5rem) and (max-width: 50rem) and (max-height: 27.5rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 27.5rem) and (max-width: 50rem) and (max-height: 27.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "27.5rem",
                "max-width",
                "50rem",
                "max-height",
                "27.5",
                "50",
                "width",
                "height"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "height",
              "semanticGroup": "geometry",
              "claim": "viewport height",
              "excerpt": "screen and (min-width: 27.5rem) and (max-width: 50rem) and (max-height: 27.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "27.5rem",
                "max-width",
                "50rem",
                "max-height",
                "27.5",
                "50",
                "width",
                "height"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".theme .spoon",
          "cssText": ".theme .spoon { bottom: -28%; left: -7%; width: 35%; }",
          "urls": [],
          "group": "screen and (min-width: 27.5rem) and (max-width: 50rem) and (max-height: 27.5rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 27.5rem) and (max-width: 50rem) and (max-height: 27.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "27.5rem",
                "max-width",
                "50rem",
                "max-height",
                "27.5",
                "50",
                "width",
                "height"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "height",
              "semanticGroup": "geometry",
              "claim": "viewport height",
              "excerpt": "screen and (min-width: 27.5rem) and (max-width: 50rem) and (max-height: 27.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "27.5rem",
                "max-width",
                "50rem",
                "max-height",
                "27.5",
                "50",
                "width",
                "height"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 37.5rem) {\n  .theme .spoon { bottom: 31%; left: -9%; width: 21%; }\n}",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".theme .spoon",
          "cssText": ".theme .spoon { bottom: 31%; left: -9%; width: 21%; }",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait) {\n  .theme .spoon { bottom: 35%; left: -9%; width: 26%; }\n}",
          "urls": [],
          "group": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "max-width",
                "75rem",
                "orientation",
                "portrait",
                "37.5",
                "75",
                "width"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "orientation",
              "semanticGroup": "geometry",
              "claim": "screen orientation",
              "excerpt": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "max-width",
                "75rem",
                "orientation",
                "portrait",
                "37.5",
                "75",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".theme .spoon",
          "cssText": ".theme .spoon { bottom: 35%; left: -9%; width: 26%; }",
          "urls": [],
          "group": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "max-width",
                "75rem",
                "orientation",
                "portrait",
                "37.5",
                "75",
                "width"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "orientation",
              "semanticGroup": "geometry",
              "claim": "screen orientation",
              "excerpt": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "max-width",
                "75rem",
                "orientation",
                "portrait",
                "37.5",
                "75",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".theme .mixer",
          "cssText": ".theme .mixer { left: -31%; bottom: -4%; width: 54%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 27.5rem) and (max-width: 50rem) and (max-height: 27.5rem) {\n  .theme .mixer { left: -6%; bottom: -4%; width: 25%; }\n}",
          "urls": [],
          "group": "screen and (min-width: 27.5rem) and (max-width: 50rem) and (max-height: 27.5rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 27.5rem) and (max-width: 50rem) and (max-height: 27.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "27.5rem",
                "max-width",
                "50rem",
                "max-height",
                "27.5",
                "50",
                "width",
                "height"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "height",
              "semanticGroup": "geometry",
              "claim": "viewport height",
              "excerpt": "screen and (min-width: 27.5rem) and (max-width: 50rem) and (max-height: 27.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "27.5rem",
                "max-width",
                "50rem",
                "max-height",
                "27.5",
                "50",
                "width",
                "height"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".theme .mixer",
          "cssText": ".theme .mixer { left: -6%; bottom: -4%; width: 25%; }",
          "urls": [],
          "group": "screen and (min-width: 27.5rem) and (max-width: 50rem) and (max-height: 27.5rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 27.5rem) and (max-width: 50rem) and (max-height: 27.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "27.5rem",
                "max-width",
                "50rem",
                "max-height",
                "27.5",
                "50",
                "width",
                "height"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "height",
              "semanticGroup": "geometry",
              "claim": "viewport height",
              "excerpt": "screen and (min-width: 27.5rem) and (max-width: 50rem) and (max-height: 27.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "27.5rem",
                "max-width",
                "50rem",
                "max-height",
                "27.5",
                "50",
                "width",
                "height"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 37.5rem) {\n  .theme .mixer { left: -5%; bottom: 14%; width: 16%; }\n}",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".theme .mixer",
          "cssText": ".theme .mixer { left: -5%; bottom: 14%; width: 16%; }",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait) {\n  .theme .mixer { left: -7%; bottom: 13%; width: 26%; }\n}",
          "urls": [],
          "group": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "max-width",
                "75rem",
                "orientation",
                "portrait",
                "37.5",
                "75",
                "width"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "orientation",
              "semanticGroup": "geometry",
              "claim": "screen orientation",
              "excerpt": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "max-width",
                "75rem",
                "orientation",
                "portrait",
                "37.5",
                "75",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".theme .mixer",
          "cssText": ".theme .mixer { left: -7%; bottom: 13%; width: 26%; }",
          "urls": [],
          "group": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "max-width",
                "75rem",
                "orientation",
                "portrait",
                "37.5",
                "75",
                "width"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "orientation",
              "semanticGroup": "geometry",
              "claim": "screen orientation",
              "excerpt": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "max-width",
                "75rem",
                "orientation",
                "portrait",
                "37.5",
                "75",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".theme .eggs",
          "cssText": ".theme .eggs { display: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 37.5rem) {\n  .theme .eggs { display: block; bottom: -7%; left: -7%; width: 20%; }\n}",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".theme .eggs",
          "cssText": ".theme .eggs { display: block; bottom: -7%; left: -7%; width: 20%; }",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait) {\n  .theme .eggs { bottom: -10%; left: -12%; width: 27%; }\n}",
          "urls": [],
          "group": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "max-width",
                "75rem",
                "orientation",
                "portrait",
                "37.5",
                "75",
                "width"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "orientation",
              "semanticGroup": "geometry",
              "claim": "screen orientation",
              "excerpt": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "max-width",
                "75rem",
                "orientation",
                "portrait",
                "37.5",
                "75",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".theme .eggs",
          "cssText": ".theme .eggs { bottom: -10%; left: -12%; width: 27%; }",
          "urls": [],
          "group": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "max-width",
                "75rem",
                "orientation",
                "portrait",
                "37.5",
                "75",
                "width"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "orientation",
              "semanticGroup": "geometry",
              "claim": "screen orientation",
              "excerpt": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "max-width",
                "75rem",
                "orientation",
                "portrait",
                "37.5",
                "75",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 60rem) {\n  .theme .eggs { bottom: -10%; left: -5%; width: 21%; }\n}",
          "urls": [],
          "group": "screen and (min-width: 60rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 60rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "60rem",
                "60",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".theme .eggs",
          "cssText": ".theme .eggs { bottom: -10%; left: -5%; width: 21%; }",
          "urls": [],
          "group": "screen and (min-width: 60rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 60rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "60rem",
                "60",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".theme .cherries",
          "cssText": ".theme .cherries { width: 5%; bottom: 36%; left: 15%; display: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 37.5rem) {\n  .theme .cherries { display: block; }\n}",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".theme .cherries",
          "cssText": ".theme .cherries { display: block; }",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 27.5rem) and (max-width: 50rem) and (max-height: 27.5rem) {\n  .theme .cherries { display: none; }\n}",
          "urls": [],
          "group": "screen and (min-width: 27.5rem) and (max-width: 50rem) and (max-height: 27.5rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 27.5rem) and (max-width: 50rem) and (max-height: 27.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "27.5rem",
                "max-width",
                "50rem",
                "max-height",
                "27.5",
                "50",
                "width",
                "height"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "height",
              "semanticGroup": "geometry",
              "claim": "viewport height",
              "excerpt": "screen and (min-width: 27.5rem) and (max-width: 50rem) and (max-height: 27.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "27.5rem",
                "max-width",
                "50rem",
                "max-height",
                "27.5",
                "50",
                "width",
                "height"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".theme .cherries",
          "cssText": ".theme .cherries { display: none; }",
          "urls": [],
          "group": "screen and (min-width: 27.5rem) and (max-width: 50rem) and (max-height: 27.5rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 27.5rem) and (max-width: 50rem) and (max-height: 27.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "27.5rem",
                "max-width",
                "50rem",
                "max-height",
                "27.5",
                "50",
                "width",
                "height"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "height",
              "semanticGroup": "geometry",
              "claim": "viewport height",
              "excerpt": "screen and (min-width: 27.5rem) and (max-width: 50rem) and (max-height: 27.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "27.5rem",
                "max-width",
                "50rem",
                "max-height",
                "27.5",
                "50",
                "width",
                "height"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait) {\n  .theme .cherries { width: 9%; bottom: 35%; left: 30%; }\n}",
          "urls": [],
          "group": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "max-width",
                "75rem",
                "orientation",
                "portrait",
                "37.5",
                "75",
                "width"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "orientation",
              "semanticGroup": "geometry",
              "claim": "screen orientation",
              "excerpt": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "max-width",
                "75rem",
                "orientation",
                "portrait",
                "37.5",
                "75",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".theme .cherries",
          "cssText": ".theme .cherries { width: 9%; bottom: 35%; left: 30%; }",
          "urls": [],
          "group": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "max-width",
                "75rem",
                "orientation",
                "portrait",
                "37.5",
                "75",
                "width"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "orientation",
              "semanticGroup": "geometry",
              "claim": "screen orientation",
              "excerpt": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "max-width",
                "75rem",
                "orientation",
                "portrait",
                "37.5",
                "75",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".theme .rollover",
          "cssText": ".theme .rollover { right: -8%; bottom: 30%; width: 24%; display: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 37.5rem) {\n  .theme .rollover { display: block; }\n}",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".theme .rollover",
          "cssText": ".theme .rollover { display: block; }",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait) {\n  .theme .rollover { right: -12%; bottom: 35%; width: 28%; }\n}",
          "urls": [],
          "group": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "max-width",
                "75rem",
                "orientation",
                "portrait",
                "37.5",
                "75",
                "width"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "orientation",
              "semanticGroup": "geometry",
              "claim": "screen orientation",
              "excerpt": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "max-width",
                "75rem",
                "orientation",
                "portrait",
                "37.5",
                "75",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".theme .rollover",
          "cssText": ".theme .rollover { right: -12%; bottom: 35%; width: 28%; }",
          "urls": [],
          "group": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "max-width",
                "75rem",
                "orientation",
                "portrait",
                "37.5",
                "75",
                "width"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "orientation",
              "semanticGroup": "geometry",
              "claim": "screen orientation",
              "excerpt": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "max-width",
                "75rem",
                "orientation",
                "portrait",
                "37.5",
                "75",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".theme .shape",
          "cssText": ".theme .shape { right: 17%; bottom: 12%; width: 25%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 27.5rem) and (max-width: 50rem) and (max-height: 27.5rem) {\n  .theme .shape { right: 7%; bottom: -1%; width: 12%; }\n}",
          "urls": [],
          "group": "screen and (min-width: 27.5rem) and (max-width: 50rem) and (max-height: 27.5rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 27.5rem) and (max-width: 50rem) and (max-height: 27.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "27.5rem",
                "max-width",
                "50rem",
                "max-height",
                "27.5",
                "50",
                "width",
                "height"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "height",
              "semanticGroup": "geometry",
              "claim": "viewport height",
              "excerpt": "screen and (min-width: 27.5rem) and (max-width: 50rem) and (max-height: 27.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "27.5rem",
                "max-width",
                "50rem",
                "max-height",
                "27.5",
                "50",
                "width",
                "height"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".theme .shape",
          "cssText": ".theme .shape { right: 7%; bottom: -1%; width: 12%; }",
          "urls": [],
          "group": "screen and (min-width: 27.5rem) and (max-width: 50rem) and (max-height: 27.5rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 27.5rem) and (max-width: 50rem) and (max-height: 27.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "27.5rem",
                "max-width",
                "50rem",
                "max-height",
                "27.5",
                "50",
                "width",
                "height"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "height",
              "semanticGroup": "geometry",
              "claim": "viewport height",
              "excerpt": "screen and (min-width: 27.5rem) and (max-width: 50rem) and (max-height: 27.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "27.5rem",
                "max-width",
                "50rem",
                "max-height",
                "27.5",
                "50",
                "width",
                "height"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 37.5rem) {\n  .theme .shape { right: 2%; bottom: 21%; width: 9%; }\n}",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".theme .shape",
          "cssText": ".theme .shape { right: 2%; bottom: 21%; width: 9%; }",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait) {\n  .theme .shape { right: 22%; bottom: 32%; width: 12%; }\n}",
          "urls": [],
          "group": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "max-width",
                "75rem",
                "orientation",
                "portrait",
                "37.5",
                "75",
                "width"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "orientation",
              "semanticGroup": "geometry",
              "claim": "screen orientation",
              "excerpt": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "max-width",
                "75rem",
                "orientation",
                "portrait",
                "37.5",
                "75",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".theme .shape",
          "cssText": ".theme .shape { right: 22%; bottom: 32%; width: 12%; }",
          "urls": [],
          "group": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "max-width",
                "75rem",
                "orientation",
                "portrait",
                "37.5",
                "75",
                "width"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "orientation",
              "semanticGroup": "geometry",
              "claim": "screen orientation",
              "excerpt": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "max-width",
                "75rem",
                "orientation",
                "portrait",
                "37.5",
                "75",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 75rem) {\n  .theme .shape { right: 14%; bottom: 29%; width: 9%; }\n}",
          "urls": [],
          "group": "screen and (min-width: 75rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 75rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "75rem",
                "75",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".theme .shape",
          "cssText": ".theme .shape { right: 14%; bottom: 29%; width: 9%; }",
          "urls": [],
          "group": "screen and (min-width: 75rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 75rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "75rem",
                "75",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".theme .pie",
          "cssText": ".theme .pie { right: -50%; bottom: -15%; width: 78%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 27.5rem) and (max-width: 50rem) and (max-height: 27.5rem) {\n  .theme .pie { right: -25%; bottom: 8%; width: 35%; }\n}",
          "urls": [],
          "group": "screen and (min-width: 27.5rem) and (max-width: 50rem) and (max-height: 27.5rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 27.5rem) and (max-width: 50rem) and (max-height: 27.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "27.5rem",
                "max-width",
                "50rem",
                "max-height",
                "27.5",
                "50",
                "width",
                "height"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "height",
              "semanticGroup": "geometry",
              "claim": "viewport height",
              "excerpt": "screen and (min-width: 27.5rem) and (max-width: 50rem) and (max-height: 27.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "27.5rem",
                "max-width",
                "50rem",
                "max-height",
                "27.5",
                "50",
                "width",
                "height"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".theme .pie",
          "cssText": ".theme .pie { right: -25%; bottom: 8%; width: 35%; }",
          "urls": [],
          "group": "screen and (min-width: 27.5rem) and (max-width: 50rem) and (max-height: 27.5rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 27.5rem) and (max-width: 50rem) and (max-height: 27.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "27.5rem",
                "max-width",
                "50rem",
                "max-height",
                "27.5",
                "50",
                "width",
                "height"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "height",
              "semanticGroup": "geometry",
              "claim": "viewport height",
              "excerpt": "screen and (min-width: 27.5rem) and (max-width: 50rem) and (max-height: 27.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "27.5rem",
                "max-width",
                "50rem",
                "max-height",
                "27.5",
                "50",
                "width",
                "height"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 37.5rem) {\n  .theme .pie { right: -16%; bottom: -15%; width: 25%; }\n}",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".theme .pie",
          "cssText": ".theme .pie { right: -16%; bottom: -15%; width: 25%; }",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait) {\n  .theme .pie { right: -16%; bottom: 3%; width: 30%; }\n}",
          "urls": [],
          "group": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "max-width",
                "75rem",
                "orientation",
                "portrait",
                "37.5",
                "75",
                "width"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "orientation",
              "semanticGroup": "geometry",
              "claim": "screen orientation",
              "excerpt": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "max-width",
                "75rem",
                "orientation",
                "portrait",
                "37.5",
                "75",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".theme .pie",
          "cssText": ".theme .pie { right: -16%; bottom: 3%; width: 30%; }",
          "urls": [],
          "group": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "max-width",
                "75rem",
                "orientation",
                "portrait",
                "37.5",
                "75",
                "width"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "orientation",
              "semanticGroup": "geometry",
              "claim": "screen orientation",
              "excerpt": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "max-width",
                "75rem",
                "orientation",
                "portrait",
                "37.5",
                "75",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 60rem) {\n  .theme .pie { right: -10%; bottom: -15%; width: 25%; }\n}",
          "urls": [],
          "group": "screen and (min-width: 60rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 60rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "60rem",
                "60",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".theme .pie",
          "cssText": ".theme .pie { right: -10%; bottom: -15%; width: 25%; }",
          "urls": [],
          "group": "screen and (min-width: 60rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 60rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "60rem",
                "60",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hero--background .theme.blue",
          "cssText": ".hero--background .theme.blue { background: rgb(69, 131, 170); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".theme .drone",
          "cssText": ".theme .drone { bottom: 24%; left: -10%; width: 24%; display: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 37.5rem) {\n  .theme .drone { display: block; }\n}",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".theme .drone",
          "cssText": ".theme .drone { display: block; }",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait) {\n  .theme .drone { bottom: 27%; left: -10%; width: 33%; }\n}",
          "urls": [],
          "group": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "max-width",
                "75rem",
                "orientation",
                "portrait",
                "37.5",
                "75",
                "width"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "orientation",
              "semanticGroup": "geometry",
              "claim": "screen orientation",
              "excerpt": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "max-width",
                "75rem",
                "orientation",
                "portrait",
                "37.5",
                "75",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".theme .drone",
          "cssText": ".theme .drone { bottom: 27%; left: -10%; width: 33%; }",
          "urls": [],
          "group": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "max-width",
                "75rem",
                "orientation",
                "portrait",
                "37.5",
                "75",
                "width"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "orientation",
              "semanticGroup": "geometry",
              "claim": "screen orientation",
              "excerpt": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "max-width",
                "75rem",
                "orientation",
                "portrait",
                "37.5",
                "75",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".theme .phone1",
          "cssText": ".theme .phone1 { bottom: -8%; left: -9%; width: 39%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 27.5rem) and (max-width: 50rem) and (max-height: 27.5rem) {\n  .theme .phone1 { bottom: -23%; left: -12%; width: 37%; }\n}",
          "urls": [],
          "group": "screen and (min-width: 27.5rem) and (max-width: 50rem) and (max-height: 27.5rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 27.5rem) and (max-width: 50rem) and (max-height: 27.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "27.5rem",
                "max-width",
                "50rem",
                "max-height",
                "27.5",
                "50",
                "width",
                "height"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "height",
              "semanticGroup": "geometry",
              "claim": "viewport height",
              "excerpt": "screen and (min-width: 27.5rem) and (max-width: 50rem) and (max-height: 27.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "27.5rem",
                "max-width",
                "50rem",
                "max-height",
                "27.5",
                "50",
                "width",
                "height"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".theme .phone1",
          "cssText": ".theme .phone1 { bottom: -23%; left: -12%; width: 37%; }",
          "urls": [],
          "group": "screen and (min-width: 27.5rem) and (max-width: 50rem) and (max-height: 27.5rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 27.5rem) and (max-width: 50rem) and (max-height: 27.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "27.5rem",
                "max-width",
                "50rem",
                "max-height",
                "27.5",
                "50",
                "width",
                "height"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "height",
              "semanticGroup": "geometry",
              "claim": "viewport height",
              "excerpt": "screen and (min-width: 27.5rem) and (max-width: 50rem) and (max-height: 27.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "27.5rem",
                "max-width",
                "50rem",
                "max-height",
                "27.5",
                "50",
                "width",
                "height"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 37.5rem) {\n  .theme .phone1 { bottom: -16%; left: -5%; width: 16%; }\n}",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".theme .phone1",
          "cssText": ".theme .phone1 { bottom: -16%; left: -5%; width: 16%; }",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait) {\n  .theme .phone1 { bottom: 4%; left: -12%; width: 22%; }\n}",
          "urls": [],
          "group": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "max-width",
                "75rem",
                "orientation",
                "portrait",
                "37.5",
                "75",
                "width"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "orientation",
              "semanticGroup": "geometry",
              "claim": "screen orientation",
              "excerpt": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "max-width",
                "75rem",
                "orientation",
                "portrait",
                "37.5",
                "75",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".theme .phone1",
          "cssText": ".theme .phone1 { bottom: 4%; left: -12%; width: 22%; }",
          "urls": [],
          "group": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "max-width",
                "75rem",
                "orientation",
                "portrait",
                "37.5",
                "75",
                "width"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "orientation",
              "semanticGroup": "geometry",
              "claim": "screen orientation",
              "excerpt": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "max-width",
                "75rem",
                "orientation",
                "portrait",
                "37.5",
                "75",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 75rem) {\n  .theme .phone1 { bottom: -16%; left: -5%; width: 16%; }\n}",
          "urls": [],
          "group": "screen and (min-width: 75rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 75rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "75rem",
                "75",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".theme .phone1",
          "cssText": ".theme .phone1 { bottom: -16%; left: -5%; width: 16%; }",
          "urls": [],
          "group": "screen and (min-width: 75rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 75rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "75rem",
                "75",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".theme .temperature",
          "cssText": ".theme .temperature { bottom: -7%; right: -18%; width: 45%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 27.5rem) and (max-width: 50rem) and (max-height: 27.5rem) {\n  .theme .temperature { bottom: -27%; right: -1%; width: 36%; }\n}",
          "urls": [],
          "group": "screen and (min-width: 27.5rem) and (max-width: 50rem) and (max-height: 27.5rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 27.5rem) and (max-width: 50rem) and (max-height: 27.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "27.5rem",
                "max-width",
                "50rem",
                "max-height",
                "27.5",
                "50",
                "width",
                "height"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "height",
              "semanticGroup": "geometry",
              "claim": "viewport height",
              "excerpt": "screen and (min-width: 27.5rem) and (max-width: 50rem) and (max-height: 27.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "27.5rem",
                "max-width",
                "50rem",
                "max-height",
                "27.5",
                "50",
                "width",
                "height"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".theme .temperature",
          "cssText": ".theme .temperature { bottom: -27%; right: -1%; width: 36%; }",
          "urls": [],
          "group": "screen and (min-width: 27.5rem) and (max-width: 50rem) and (max-height: 27.5rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 27.5rem) and (max-width: 50rem) and (max-height: 27.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "27.5rem",
                "max-width",
                "50rem",
                "max-height",
                "27.5",
                "50",
                "width",
                "height"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "height",
              "semanticGroup": "geometry",
              "claim": "viewport height",
              "excerpt": "screen and (min-width: 27.5rem) and (max-width: 50rem) and (max-height: 27.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "27.5rem",
                "max-width",
                "50rem",
                "max-height",
                "27.5",
                "50",
                "width",
                "height"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 37.5rem) {\n  .theme .temperature { bottom: -7%; right: inherit; left: 11%; width: 11%; }\n}",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".theme .temperature",
          "cssText": ".theme .temperature { bottom: -7%; right: inherit; left: 11%; width: 11%; }",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait) {\n  .theme .temperature { bottom: -4%; left: -1%; width: 14%; }\n}",
          "urls": [],
          "group": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "max-width",
                "75rem",
                "orientation",
                "portrait",
                "37.5",
                "75",
                "width"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "orientation",
              "semanticGroup": "geometry",
              "claim": "screen orientation",
              "excerpt": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "max-width",
                "75rem",
                "orientation",
                "portrait",
                "37.5",
                "75",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".theme .temperature",
          "cssText": ".theme .temperature { bottom: -4%; left: -1%; width: 14%; }",
          "urls": [],
          "group": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "max-width",
                "75rem",
                "orientation",
                "portrait",
                "37.5",
                "75",
                "width"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "orientation",
              "semanticGroup": "geometry",
              "claim": "screen orientation",
              "excerpt": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "max-width",
                "75rem",
                "orientation",
                "portrait",
                "37.5",
                "75",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 75rem) {\n  .theme .temperature { bottom: -7%; right: inherit; left: 11%; width: 13%; }\n}",
          "urls": [],
          "group": "screen and (min-width: 75rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 75rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "75rem",
                "75",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".theme .temperature",
          "cssText": ".theme .temperature { bottom: -7%; right: inherit; left: 11%; width: 13%; }",
          "urls": [],
          "group": "screen and (min-width: 75rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 75rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "75rem",
                "75",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".theme .remote",
          "cssText": ".theme .remote { bottom: 31%; right: -6%; width: 17%; display: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 37.5rem) {\n  .theme .remote { display: block; }\n}",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".theme .remote",
          "cssText": ".theme .remote { display: block; }",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait) {\n  .theme .remote { bottom: 26%; right: -9%; width: 27%; }\n}",
          "urls": [],
          "group": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "max-width",
                "75rem",
                "orientation",
                "portrait",
                "37.5",
                "75",
                "width"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "orientation",
              "semanticGroup": "geometry",
              "claim": "screen orientation",
              "excerpt": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "max-width",
                "75rem",
                "orientation",
                "portrait",
                "37.5",
                "75",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".theme .remote",
          "cssText": ".theme .remote { bottom: 26%; right: -9%; width: 27%; }",
          "urls": [],
          "group": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "max-width",
                "75rem",
                "orientation",
                "portrait",
                "37.5",
                "75",
                "width"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "orientation",
              "semanticGroup": "geometry",
              "claim": "screen orientation",
              "excerpt": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "max-width",
                "75rem",
                "orientation",
                "portrait",
                "37.5",
                "75",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".theme .smartwatch",
          "cssText": ".theme .smartwatch { bottom: 9%; right: 30%; width: 33%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 27.5rem) and (max-width: 50rem) and (max-height: 27.5rem) {\n  .theme .smartwatch { bottom: 8%; right: -14%; width: 31%; }\n}",
          "urls": [],
          "group": "screen and (min-width: 27.5rem) and (max-width: 50rem) and (max-height: 27.5rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 27.5rem) and (max-width: 50rem) and (max-height: 27.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "27.5rem",
                "max-width",
                "50rem",
                "max-height",
                "27.5",
                "50",
                "width",
                "height"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "height",
              "semanticGroup": "geometry",
              "claim": "viewport height",
              "excerpt": "screen and (min-width: 27.5rem) and (max-width: 50rem) and (max-height: 27.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "27.5rem",
                "max-width",
                "50rem",
                "max-height",
                "27.5",
                "50",
                "width",
                "height"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".theme .smartwatch",
          "cssText": ".theme .smartwatch { bottom: 8%; right: -14%; width: 31%; }",
          "urls": [],
          "group": "screen and (min-width: 27.5rem) and (max-width: 50rem) and (max-height: 27.5rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 27.5rem) and (max-width: 50rem) and (max-height: 27.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "27.5rem",
                "max-width",
                "50rem",
                "max-height",
                "27.5",
                "50",
                "width",
                "height"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "height",
              "semanticGroup": "geometry",
              "claim": "viewport height",
              "excerpt": "screen and (min-width: 27.5rem) and (max-width: 50rem) and (max-height: 27.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "27.5rem",
                "max-width",
                "50rem",
                "max-height",
                "27.5",
                "50",
                "width",
                "height"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 37.5rem) {\n  .theme .smartwatch { bottom: 24%; right: 2%; width: 11%; }\n}",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".theme .smartwatch",
          "cssText": ".theme .smartwatch { bottom: 24%; right: 2%; width: 11%; }",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait) {\n  .theme .smartwatch { bottom: 32%; right: 23%; width: 16%; }\n}",
          "urls": [],
          "group": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "max-width",
                "75rem",
                "orientation",
                "portrait",
                "37.5",
                "75",
                "width"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "orientation",
              "semanticGroup": "geometry",
              "claim": "screen orientation",
              "excerpt": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "max-width",
                "75rem",
                "orientation",
                "portrait",
                "37.5",
                "75",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".theme .smartwatch",
          "cssText": ".theme .smartwatch { bottom: 32%; right: 23%; width: 16%; }",
          "urls": [],
          "group": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "max-width",
                "75rem",
                "orientation",
                "portrait",
                "37.5",
                "75",
                "width"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "orientation",
              "semanticGroup": "geometry",
              "claim": "screen orientation",
              "excerpt": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "max-width",
                "75rem",
                "orientation",
                "portrait",
                "37.5",
                "75",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 60rem) {\n  .theme .smartwatch { bottom: 24%; right: 5%; width: 11%; }\n}",
          "urls": [],
          "group": "screen and (min-width: 60rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 60rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "60rem",
                "60",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".theme .smartwatch",
          "cssText": ".theme .smartwatch { bottom: 24%; right: 5%; width: 11%; }",
          "urls": [],
          "group": "screen and (min-width: 60rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 60rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "60rem",
                "60",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".theme .actioncam",
          "cssText": ".theme .actioncam { bottom: -26%; right: -3%; width: 28%; display: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 37.5rem) {\n  .theme .actioncam { display: block; bottom: -18%; right: -11%; width: 28%; }\n}",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".theme .actioncam",
          "cssText": ".theme .actioncam { display: block; bottom: -18%; right: -11%; width: 28%; }",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait) {\n  .theme .actioncam { bottom: 1%; right: -11%; width: 24%; }\n}",
          "urls": [],
          "group": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "max-width",
                "75rem",
                "orientation",
                "portrait",
                "37.5",
                "75",
                "width"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "orientation",
              "semanticGroup": "geometry",
              "claim": "screen orientation",
              "excerpt": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "max-width",
                "75rem",
                "orientation",
                "portrait",
                "37.5",
                "75",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".theme .actioncam",
          "cssText": ".theme .actioncam { bottom: 1%; right: -11%; width: 24%; }",
          "urls": [],
          "group": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "max-width",
                "75rem",
                "orientation",
                "portrait",
                "37.5",
                "75",
                "width"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "orientation",
              "semanticGroup": "geometry",
              "claim": "screen orientation",
              "excerpt": "screen and (min-width: 37.5rem) and (max-width: 75rem) and (orientation: portrait)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "max-width",
                "75rem",
                "orientation",
                "portrait",
                "37.5",
                "75",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 60rem) {\n  .theme .actioncam { bottom: -19%; right: 2%; width: 21%; }\n}",
          "urls": [],
          "group": "screen and (min-width: 60rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 60rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "60rem",
                "60",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".theme .actioncam",
          "cssText": ".theme .actioncam { bottom: -19%; right: 2%; width: 21%; }",
          "urls": [],
          "group": "screen and (min-width: 60rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 60rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "60rem",
                "60",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section",
          "cssText": ".section { -webkit-box-align: start; align-items: flex-start; display: flex; -webkit-box-orient: horizontal; -webkit-box-direction: normal; flex-direction: row; -webkit-box-pack: start; justify-content: flex-start; position: relative; width: 100%; padding-top: 3.875rem; padding-bottom: 60%; overflow: hidden; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 20rem) {\n  .section { padding-bottom: 50%; }\n}",
          "urls": [],
          "group": "screen and (min-width: 20rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 20rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "20rem",
                "20",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section",
          "cssText": ".section { padding-bottom: 50%; }",
          "urls": [],
          "group": "screen and (min-width: 20rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 20rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "20rem",
                "20",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 37.5rem) {\n  .section { -webkit-box-align: center; align-items: center; padding-top: 5rem; padding-bottom: 5rem; }\n}",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section",
          "cssText": ".section { -webkit-box-align: center; align-items: center; padding-top: 5rem; padding-bottom: 5rem; }",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 60rem) {\n  .section { -webkit-box-align: center; align-items: center; padding-top: 0px; padding-bottom: 0px; min-height: 37.5rem; height: 80vh; }\n}",
          "urls": [],
          "group": "screen and (min-width: 60rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 60rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "60rem",
                "60",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section",
          "cssText": ".section { -webkit-box-align: center; align-items: center; padding-top: 0px; padding-bottom: 0px; min-height: 37.5rem; height: 80vh; }",
          "urls": [],
          "group": "screen and (min-width: 60rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 60rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "60rem",
                "60",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section:focus",
          "cssText": ".section:focus { outline: transparent solid 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section header > div",
          "cssText": ".section header > div { width: 100%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 37.5rem) {\n  .section header > div { width: 45%; }\n}",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section header > div",
          "cssText": ".section header > div { width: 45%; }",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".rtl .section header > div",
          "cssText": ".rtl .section header > div { text-align: right; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section .background",
          "cssText": ".section .background { position: absolute; top: 0px; left: 0px; width: 100%; height: 100%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section .background > *",
          "cssText": ".section .background > * { transition-property: transform; transition-timing-function: cubic-bezier(0.645, 0.045, 0.355, 1); position: absolute; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 37.5rem) {\n  .section.free-domain .background { transform-origin: 50% 50%; }\n}",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section.free-domain .background",
          "cssText": ".section.free-domain .background { transform-origin: 50% 50%; }",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section.active:not(.hero) .background--layer",
          "cssText": ".section.active:not(.hero) .background--layer { transform: translateX(0px); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section h2",
          "cssText": ".section h2 { font-size: 1.5rem; line-height: 1.1; width: 100%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[lang=\"ta\"] .section h2",
          "cssText": "[lang=\"ta\"] .section h2 { word-break: break-word; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 37.5rem) {\n  .section h2 { font-size: 1.5rem; }\n}",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section h2",
          "cssText": ".section h2 { font-size: 1.5rem; }",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 50rem) {\n  .section h2 { font-size: 2.25rem; }\n}",
          "urls": [],
          "group": "screen and (min-width: 50rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 50rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "50rem",
                "50",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section h2",
          "cssText": ".section h2 { font-size: 2.25rem; }",
          "urls": [],
          "group": "screen and (min-width: 50rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 50rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "50rem",
                "50",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 60rem) {\n  .section h2 { font-size: 2.75rem; }\n}",
          "urls": [],
          "group": "screen and (min-width: 60rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 60rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "60rem",
                "60",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section h2",
          "cssText": ".section h2 { font-size: 2.75rem; }",
          "urls": [],
          "group": "screen and (min-width: 60rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 60rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "60rem",
                "60",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section p",
          "cssText": ".section p { font-size: 1rem; width: 100%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 60rem) {\n  .section p { font-size: 1.125rem; }\n}",
          "urls": [],
          "group": "screen and (min-width: 60rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 60rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "60rem",
                "60",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section p",
          "cssText": ".section p { font-size: 1.125rem; }",
          "urls": [],
          "group": "screen and (min-width: 60rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 60rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "60rem",
                "60",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".know-your-audience",
          "cssText": ".know-your-audience { background: rgb(87, 119, 131); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 37.5rem) {\n  .know-your-audience .background { -webkit-box-align: center; align-items: center; display: flex; -webkit-box-orient: vertical; -webkit-box-direction: normal; flex-direction: column; -webkit-box-pack: center; justify-content: center; }\n}",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".know-your-audience .background",
          "cssText": ".know-your-audience .background { -webkit-box-align: center; align-items: center; display: flex; -webkit-box-orient: vertical; -webkit-box-direction: normal; flex-direction: column; -webkit-box-pack: center; justify-content: center; }",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".know-your-audience .background .background--layer",
          "cssText": ".know-your-audience .background .background--layer { transition-timing-function: cubic-bezier(0.645, 0.045, 0.355, 1); transition-property: opacity; transition-duration: 0.4s; position: relative; float: right; opacity: 0; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".know-your-audience.active .background .background--layer",
          "cssText": ".know-your-audience.active .background .background--layer { opacity: 1; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".know-your-audience .background > div",
          "cssText": ".know-your-audience .background > div { width: 100%; display: block; top: auto; bottom: 4%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".know-your-audience .background > div::after",
          "cssText": ".know-your-audience .background > div::after { content: \"\"; display: table; clear: both; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 37.5rem) {\n  .know-your-audience .background > div { transform: translateX(4em); position: relative; }\n}",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".know-your-audience .background > div",
          "cssText": ".know-your-audience .background > div { transform: translateX(4em); position: relative; }",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".know-your-audience .clear",
          "cssText": ".know-your-audience .clear { position: relative; width: 100%; height: 1px; background: transparent; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".know-your-audience .clear::after",
          "cssText": ".know-your-audience .clear::after { content: \"\"; display: table; clear: both; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".know-your-audience .background div .infomap",
          "cssText": ".know-your-audience .background div .infomap { position: absolute; width: 86%; margin-top: 17rem; right: -40%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 37.5rem) {\n  .know-your-audience .background div .infomap { position: relative; width: 41.8%; right: inherit; margin-top: 0px; }\n}",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".know-your-audience .background div .infomap",
          "cssText": ".know-your-audience .background div .infomap { position: relative; width: 41.8%; right: inherit; margin-top: 0px; }",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".know-your-audience .background div .graphs",
          "cssText": ".know-your-audience .background div .graphs { transition-delay: 0.2s; width: 52%; margin-top: 17.5rem; margin-right: -13%; float: left; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 37.5rem) {\n  .know-your-audience .background div .graphs { width: 25.7%; margin-top: 1%; margin-right: -13%; float: right; }\n}",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".know-your-audience .background div .graphs",
          "cssText": ".know-your-audience .background div .graphs { width: 25.7%; margin-top: 1%; margin-right: -13%; float: right; }",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".histogram",
          "cssText": ".histogram { transition-delay: 0.4s; width: 40%; margin-right: -1%; display: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 37.5rem) {\n  .histogram { display: block; margin-top: -5px; }\n}",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".histogram",
          "cssText": ".histogram { display: block; margin-top: -5px; }",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".chart",
          "cssText": ".chart { transition-delay: 0.6s; width: 35.5%; margin-right: -20%; margin-top: -0.4%; display: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 37.5rem) {\n  .chart { display: block; }\n}",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".chart",
          "cssText": ".chart { display: block; }",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".choose-design",
          "cssText": ".choose-design { background: rgb(255, 128, 0); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".tools",
          "cssText": ".tools { width: 32%; right: 20%; bottom: 64%; display: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 37.5rem) {\n  .tools { display: block; }\n}",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".tools",
          "cssText": ".tools { display: block; }",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".design1",
          "cssText": ".design1 { transform: translate3d(30%, 100%, 0px); transition-duration: 0.7s; transition-delay: 0.2s; width: 80%; right: 0px; bottom: 0px; max-width: 56.25rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 37.5rem) {\n  .design1 { width: 59%; }\n}",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".design1",
          "cssText": ".design1 { width: 59%; }",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section.active .background--layer.design1",
          "cssText": ".section.active .background--layer.design1 { transform: translate3d(16%, 20%, 0px); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".design2",
          "cssText": ".design2 { transform: translate3d(20%, 100%, 0px); transition-duration: 0.9s; transition-delay: 0.1s; width: 56%; right: 0px; bottom: 0px; max-width: 50rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 37.5rem) {\n  .design2 { width: 55%; }\n}",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".design2",
          "cssText": ".design2 { width: 55%; }",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".section.active .background--layer.design2",
          "cssText": ".section.active .background--layer.design2 { transform: translate3d(25%, 40%, 0px); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".free-domain",
          "cssText": ".free-domain { background: rgb(188, 56, 46); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".lettergroup1",
          "cssText": ".lettergroup1 { transform: translateX(125%); transition-duration: 1.4s; width: 135%; right: -49%; bottom: 7%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 37.5rem) {\n  .lettergroup1 { width: 65%; right: -15%; top: 40%; }\n}",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".lettergroup1",
          "cssText": ".lettergroup1 { width: 65%; right: -15%; top: 40%; }",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".lettergroup2",
          "cssText": ".lettergroup2 { transform: translateX(100%); transition-duration: 0.7s; transition-delay: 0.2s; width: 82%; right: -22%; bottom: -11%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 37.5rem) {\n  .lettergroup2 { width: 42%; right: -3%; top: 47%; }\n}",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".lettergroup2",
          "cssText": ".lettergroup2 { width: 42%; right: -3%; top: 47%; }",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".lettergroup3",
          "cssText": ".lettergroup3 { transform: translateX(100%); transition-duration: 0.7s; transition-delay: 0.3s; width: 47%; right: -25%; bottom: 15%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 37.5rem) {\n  .lettergroup3 { width: 22%; right: -2%; top: 29%; }\n}",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".lettergroup3",
          "cssText": ".lettergroup3 { width: 22%; right: -2%; top: 29%; }",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".lettergroup4",
          "cssText": ".lettergroup4 { transform: translateX(100%); transition-duration: 0.7s; transition-delay: 0.4s; width: 13%; right: -10%; top: 15%; display: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 37.5rem) {\n  .lettergroup4 { display: block; }\n}",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".lettergroup4",
          "cssText": ".lettergroup4 { display: block; }",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".memories",
          "cssText": ".memories { background: rgb(188, 56, 46); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 50rem) {\n  .memories .background { transform: scale(1.3); transform-origin: 80% 30%; }\n}",
          "urls": [],
          "group": "screen and (min-width: 50rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 50rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "50rem",
                "50",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".memories .background",
          "cssText": ".memories .background { transform: scale(1.3); transform-origin: 80% 30%; }",
          "urls": [],
          "group": "screen and (min-width: 50rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 50rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "50rem",
                "50",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".documents",
          "cssText": ".documents { transform: translate3d(-100%, 100%, 0px) rotate(16deg); transition-duration: 1s; width: 45%; right: 15%; bottom: -2%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 37.5rem) {\n  .documents { transform: translate3d(-5%, 10%, 0px) rotate(5deg); width: 17%; right: 1%; top: 20%; left: initial; bottom: initial; }\n}",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".documents",
          "cssText": ".documents { transform: translate3d(-5%, 10%, 0px) rotate(5deg); width: 17%; right: 1%; top: 20%; left: initial; bottom: initial; }",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".familyphotos",
          "cssText": ".familyphotos { transform: translate3d(-20%, 100%, 0px) rotate(16deg); transition-duration: 1s; width: 53%; right: 27%; bottom: 1%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 37.5rem) {\n  .familyphotos { transform: translate3d(26%, 18%, 0px) rotate(8deg); width: 23%; right: 13%; top: 14%; left: initial; bottom: initial; }\n}",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".familyphotos",
          "cssText": ".familyphotos { transform: translate3d(26%, 18%, 0px) rotate(8deg); width: 23%; right: 13%; top: 14%; left: initial; bottom: initial; }",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".playicon",
          "cssText": ".playicon { transform: translate3d(-10%, 100%, 0px) rotate(12deg); transition-duration: 1s; width: 43%; right: 53%; bottom: -6%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 37.5rem) {\n  .playicon { transform: translate3d(30%, -15%, 0px) rotate(6deg); width: 20%; right: 24%; top: 34%; }\n}",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".playicon",
          "cssText": ".playicon { transform: translate3d(30%, -15%, 0px) rotate(6deg); width: 20%; right: 24%; top: 34%; }",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".earn-money",
          "cssText": ".earn-money { background: rgb(56, 141, 128); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 37.5rem) {\n  .earn-money { padding-bottom: 10rem; }\n}",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".earn-money",
          "cssText": ".earn-money { padding-bottom: 10rem; }",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 60rem) {\n  .earn-money { padding-bottom: 0px; }\n}",
          "urls": [],
          "group": "screen and (min-width: 60rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 60rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "60rem",
                "60",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".earn-money",
          "cssText": ".earn-money { padding-bottom: 0px; }",
          "urls": [],
          "group": "screen and (min-width: 60rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 60rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "60rem",
                "60",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 37.5rem) {\n  .earn-money .background { -webkit-box-align: center; align-items: center; display: flex; -webkit-box-orient: horizontal; -webkit-box-direction: normal; flex-direction: row; -webkit-box-pack: start; justify-content: flex-start; }\n}",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".earn-money .background",
          "cssText": ".earn-money .background { -webkit-box-align: center; align-items: center; display: flex; -webkit-box-orient: horizontal; -webkit-box-direction: normal; flex-direction: row; -webkit-box-pack: start; justify-content: flex-start; }",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".earn-money header > div",
          "cssText": ".earn-money header > div { float: right; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 37.5rem) {\n  .earn-money header > div { margin-right: 6vw; }\n}",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".earn-money header > div",
          "cssText": ".earn-money header > div { margin-right: 6vw; }",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 60rem) {\n  .earn-money header > div { margin-right: 2vw; }\n}",
          "urls": [],
          "group": "screen and (min-width: 60rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 60rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "60rem",
                "60",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".earn-money header > div",
          "cssText": ".earn-money header > div { margin-right: 2vw; }",
          "urls": [],
          "group": "screen and (min-width: 60rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 60rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "60rem",
                "60",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 75rem) {\n  .earn-money header > div { margin-right: 10vw; }\n}",
          "urls": [],
          "group": "screen and (min-width: 75rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 75rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "75rem",
                "75",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".earn-money header > div",
          "cssText": ".earn-money header > div { margin-right: 10vw; }",
          "urls": [],
          "group": "screen and (min-width: 75rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 75rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "75rem",
                "75",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".calculator",
          "cssText": ".calculator { transform: translate3d(30%, 100%, 0px); transition-duration: 1s; transition-delay: 0.2s; width: 13.125rem; right: 24%; bottom: -16%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 37.5rem) {\n  .calculator { right: 1%; bottom: -25%; width: 11.25rem; }\n}",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".calculator",
          "cssText": ".calculator { right: 1%; bottom: -25%; width: 11.25rem; }",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 60rem) {\n  .calculator { right: -1%; bottom: -15%; width: 17.5rem; }\n}",
          "urls": [],
          "group": "screen and (min-width: 60rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 60rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "60rem",
                "60",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".calculator",
          "cssText": ".calculator { right: -1%; bottom: -15%; width: 17.5rem; }",
          "urls": [],
          "group": "screen and (min-width: 60rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 60rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "60rem",
                "60",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".card",
          "cssText": ".card { transform: translate3d(20%, 90%, 0px); transition-duration: 0.9s; transition-delay: 0.1s; width: 11.875rem; right: 60%; bottom: -4%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 37.5rem) {\n  .card { right: 16%; width: 9.0625rem; bottom: -10%; }\n}",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".card",
          "cssText": ".card { right: 16%; width: 9.0625rem; bottom: -10%; }",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 60rem) {\n  .card { right: 14%; width: 16.25rem; bottom: -9%; }\n}",
          "urls": [],
          "group": "screen and (min-width: 60rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 60rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "60rem",
                "60",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".card",
          "cssText": ".card { right: 14%; width: 16.25rem; bottom: -9%; }",
          "urls": [],
          "group": "screen and (min-width: 60rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 60rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "60rem",
                "60",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".cent",
          "cssText": ".cent { transform: translate3d(70%, 85%, 0px); transition-duration: 0.8s; width: 4.375rem; right: 15%; bottom: 25%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 37.5rem) {\n  .cent { width: 3.4375rem; right: 2%; bottom: 28%; }\n}",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".cent",
          "cssText": ".cent { width: 3.4375rem; right: 2%; bottom: 28%; }",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 60rem) {\n  .cent { right: 1%; bottom: 27%; width: 4.6875rem; }\n}",
          "urls": [],
          "group": "screen and (min-width: 60rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 60rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "60rem",
                "60",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".cent",
          "cssText": ".cent { right: 1%; bottom: 27%; width: 4.6875rem; }",
          "urls": [],
          "group": "screen and (min-width: 60rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 60rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "60rem",
                "60",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".earn-money .background .device",
          "cssText": ".earn-money .background .device { transform: translate3d(-10%, 0px, 0px); transition-duration: 0.8s; position: relative; display: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 37.5rem) {\n  .earn-money .background .device { display: block; max-height: 70%; max-width: 44%; }\n}",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".earn-money .background .device",
          "cssText": ".earn-money .background .device { display: block; max-height: 70%; max-width: 44%; }",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".millions",
          "cssText": ".millions { background: rgb(230, 116, 0); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 60rem) {\n  .millions { height: auto; }\n}",
          "urls": [],
          "group": "screen and (min-width: 60rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 60rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "60rem",
                "60",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".millions",
          "cssText": ".millions { height: auto; }",
          "urls": [],
          "group": "screen and (min-width: 60rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 60rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "60rem",
                "60",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".millions .millions--header",
          "cssText": ".millions .millions--header { -webkit-box-orient: vertical; -webkit-box-direction: normal; flex-direction: column; text-align: center; width: 80%; max-width: 37.5rem; margin-top: 2rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 37.5rem) {\n  .millions .millions--header { margin-top: 10rem; margin-bottom: 5rem; }\n}",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".millions .millions--header",
          "cssText": ".millions .millions--header { margin-top: 10rem; margin-bottom: 5rem; }",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".millions--header h2",
          "cssText": ".millions--header h2 { margin-bottom: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".millions--header p",
          "cssText": ".millions--header p { margin-bottom: 2rem; width: 100%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 37.5rem) {\n  .millions--header p { margin-bottom: 5rem; width: 80%; }\n}",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".millions--header p",
          "cssText": ".millions--header p { margin-bottom: 5rem; width: 80%; }",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".millions__background > div",
          "cssText": ".millions__background > div { position: absolute; left: 0px; width: 100%; height: 100%; background-size: 100%; background-position: center center; background-repeat: no-repeat; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (max-width: 37.4375rem) {\n  .millions__background > div { bottom: 0px; width: 100%; height: 40%; background-position: center bottom; }\n}",
          "urls": [],
          "group": "screen and (max-width: 37.4375rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 37.4375rem)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "37.4375rem",
                "37.4375",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".millions__background > div",
          "cssText": ".millions__background > div { bottom: 0px; width: 100%; height: 40%; background-position: center bottom; }",
          "urls": [],
          "group": "screen and (max-width: 37.4375rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 37.4375rem)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "37.4375rem",
                "37.4375",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 37.5rem) {\n  .millions__background > div { background-size: cover; }\n}",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".millions__background > div",
          "cssText": ".millions__background > div { background-size: cover; }",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (max-width: 37.4375rem) {\n  .millions__background div.millions--map { transition-duration: 0.6s; transform: translateY(100%); height: 15%; background-color: rgb(209, 111, 28); }\n  .active .millions__background div.millions--map { transform: translateY(0px); }\n}",
          "urls": [],
          "group": "screen and (max-width: 37.4375rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 37.4375rem)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "37.4375rem",
                "37.4375",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".millions__background div.millions--map",
          "cssText": ".millions__background div.millions--map { transition-duration: 0.6s; transform: translateY(100%); height: 15%; background-color: rgb(209, 111, 28); }",
          "urls": [],
          "group": "screen and (max-width: 37.4375rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 37.4375rem)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "37.4375rem",
                "37.4375",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".active .millions__background div.millions--map",
          "cssText": ".active .millions__background div.millions--map { transform: translateY(0px); }",
          "urls": [],
          "group": "screen and (max-width: 37.4375rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (max-width: 37.4375rem)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "37.4375rem",
                "37.4375",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 37.5rem) {\n  .millions__background div.millions--map { background-image: url(\"../img/sections/millions/millions-map_2x.png\"); }\n}",
          "urls": [
            "../img/sections/millions/millions-map_2x.png"
          ],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ],
          "sinks": [
            {
              "reason": "url_sink",
              "urls": [
                "../img/sections/millions/millions-map_2x.png"
              ]
            }
          ],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".millions__background div.millions--map",
          "cssText": ".millions__background div.millions--map { background-image: url(\"../img/sections/millions/millions-map_2x.png\"); }",
          "urls": [
            "../img/sections/millions/millions-map_2x.png"
          ],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [],
          "sinks": [
            {
              "reason": "url_sink",
              "urls": [
                "../img/sections/millions/millions-map_2x.png"
              ]
            }
          ],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".millions--markers",
          "cssText": ".millions--markers { background-image: url(\"../img/sections/millions/millions-mobile-markers_2x.png\"); }",
          "urls": [
            "../img/sections/millions/millions-mobile-markers_2x.png"
          ],
          "group": "",
          "sources": [],
          "sinks": [
            {
              "reason": "url_sink",
              "urls": [
                "../img/sections/millions/millions-mobile-markers_2x.png"
              ]
            }
          ],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 37.5rem) {\n  .millions--markers { background-image: url(\"../img/sections/millions/millions-markers_2x.png\"); }\n}",
          "urls": [
            "../img/sections/millions/millions-markers_2x.png"
          ],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ],
          "sinks": [
            {
              "reason": "url_sink",
              "urls": [
                "../img/sections/millions/millions-markers_2x.png"
              ]
            }
          ],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".millions--markers",
          "cssText": ".millions--markers { background-image: url(\"../img/sections/millions/millions-markers_2x.png\"); }",
          "urls": [
            "../img/sections/millions/millions-markers_2x.png"
          ],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [],
          "sinks": [
            {
              "reason": "url_sink",
              "urls": [
                "../img/sections/millions/millions-markers_2x.png"
              ]
            }
          ],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".active .millions--markers",
          "cssText": ".active .millions--markers { transform: translateX(0px); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".cta",
          "cssText": ".cta { padding: 0.875rem 1.25rem; background: rgb(255, 128, 0); font-weight: 500; font-size: 0.8125rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".cta.dark",
          "cssText": ".cta.dark { background: rgb(47, 69, 79); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".cta.dark:hover, .cta.dark:focus",
          "cssText": ".cta.dark:hover, .cta.dark:focus { background: rgb(64, 89, 101); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".cta:hover, .cta:focus",
          "cssText": ".cta:hover, .cta:focus { text-decoration: none; background: rgb(255, 146, 36); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[lang=\"zh-TW\"] .cta, [lang=\"te\"] .cta, [lang=\"kn\"] .cta",
          "cssText": "[lang=\"zh-TW\"] .cta, [lang=\"te\"] .cta, [lang=\"kn\"] .cta { font-size: 1rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[lang=\"ja\"] .cta, [lang=\"ml\"] .cta",
          "cssText": "[lang=\"ja\"] .cta, [lang=\"ml\"] .cta { font-size: 1.125rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[lang=\"fa\"] .cta, [lang=\"ur\"] .cta, [lang=\"ar\"] .cta",
          "cssText": "[lang=\"fa\"] .cta, [lang=\"ur\"] .cta, [lang=\"ar\"] .cta { font-size: 1.25rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".scrolldown",
          "cssText": ".scrolldown { transition: background 0.2s cubic-bezier(0.645, 0.045, 0.355, 1), box-shadow 0.2s cubic-bezier(0.645, 0.045, 0.355, 1); transform: translateY(50%) translateX(50%); position: absolute; z-index: 1; bottom: 4rem; right: 50%; width: 4rem; height: 4rem; box-shadow: rgba(0, 0, 0, 0.2) 0px 0.125rem 0.1875rem; border-radius: 2rem; background: rgb(255, 128, 0); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 37.5rem) {\n  .scrolldown { right: 4rem; transform: translateY(50%); }\n}",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".scrolldown",
          "cssText": ".scrolldown { right: 4rem; transform: translateY(50%); }",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 27.5rem) and (max-width: 50rem) and (max-height: 27.5rem) {\n  .scrolldown { display: none; }\n}",
          "urls": [],
          "group": "screen and (min-width: 27.5rem) and (max-width: 50rem) and (max-height: 27.5rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 27.5rem) and (max-width: 50rem) and (max-height: 27.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "27.5rem",
                "max-width",
                "50rem",
                "max-height",
                "27.5",
                "50",
                "width",
                "height"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "height",
              "semanticGroup": "geometry",
              "claim": "viewport height",
              "excerpt": "screen and (min-width: 27.5rem) and (max-width: 50rem) and (max-height: 27.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "27.5rem",
                "max-width",
                "50rem",
                "max-height",
                "27.5",
                "50",
                "width",
                "height"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".scrolldown",
          "cssText": ".scrolldown { display: none; }",
          "urls": [],
          "group": "screen and (min-width: 27.5rem) and (max-width: 50rem) and (max-height: 27.5rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 27.5rem) and (max-width: 50rem) and (max-height: 27.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "27.5rem",
                "max-width",
                "50rem",
                "max-height",
                "27.5",
                "50",
                "width",
                "height"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "height",
              "semanticGroup": "geometry",
              "claim": "viewport height",
              "excerpt": "screen and (min-width: 27.5rem) and (max-width: 50rem) and (max-height: 27.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "27.5rem",
                "max-width",
                "50rem",
                "max-height",
                "27.5",
                "50",
                "width",
                "height"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 20rem) {\n  .scrolldown { bottom: 3rem; }\n}",
          "urls": [],
          "group": "screen and (min-width: 20rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 20rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "20rem",
                "20",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".scrolldown",
          "cssText": ".scrolldown { bottom: 3rem; }",
          "urls": [],
          "group": "screen and (min-width: 20rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 20rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "20rem",
                "20",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".scrolldown:hover, .scrolldown:focus",
          "cssText": ".scrolldown:hover, .scrolldown:focus { box-shadow: rgba(0, 0, 0, 0.7) 0px 0.125rem 0.4375rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".scrolldown .icon",
          "cssText": ".scrolldown .icon { animation: 8s cubic-bezier(0.785, 0.135, 0.15, 0.86) 0s infinite normal none running bounceArrow; width: 1.25rem; height: 1.25rem; margin-top: 0.3125rem; color: rgb(255, 255, 255); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".scrolldown .icon use",
          "cssText": ".scrolldown .icon use { fill: currentcolor; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframesRule",
          "selector": "",
          "cssText": "@-webkit-keyframes bounceArrow { \n  0% { transform: translate3d(0px, 0px, 0px); }\n  5% { transform: translate3d(0px, 20%, 0px); }\n  10% { transform: translate3d(0px, -20%, 0px); }\n  15% { transform: translate3d(0px, 20%, 0px); }\n  20% { transform: translate3d(0px, -20%, 0px); }\n  25% { transform: translate3d(0px, 20%, 0px); }\n  30% { transform: translate3d(0px, 0px, 0px); }\n  100% { transform: translate3d(0px, 0px, 0px); }\n}",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "0% { transform: translate3d(0px, 0px, 0px); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "5% { transform: translate3d(0px, 20%, 0px); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "10% { transform: translate3d(0px, -20%, 0px); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "15% { transform: translate3d(0px, 20%, 0px); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "20% { transform: translate3d(0px, -20%, 0px); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "25% { transform: translate3d(0px, 20%, 0px); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "30% { transform: translate3d(0px, 0px, 0px); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "100% { transform: translate3d(0px, 0px, 0px); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframesRule",
          "selector": "",
          "cssText": "@keyframes bounceArrow { \n  0% { transform: translate3d(0px, 0px, 0px); }\n  5% { transform: translate3d(0px, 20%, 0px); }\n  10% { transform: translate3d(0px, -20%, 0px); }\n  15% { transform: translate3d(0px, 20%, 0px); }\n  20% { transform: translate3d(0px, -20%, 0px); }\n  25% { transform: translate3d(0px, 20%, 0px); }\n  30% { transform: translate3d(0px, 0px, 0px); }\n  100% { transform: translate3d(0px, 0px, 0px); }\n}",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "0% { transform: translate3d(0px, 0px, 0px); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "5% { transform: translate3d(0px, 20%, 0px); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "10% { transform: translate3d(0px, -20%, 0px); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "15% { transform: translate3d(0px, 20%, 0px); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "20% { transform: translate3d(0px, -20%, 0px); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "25% { transform: translate3d(0px, 20%, 0px); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "30% { transform: translate3d(0px, 0px, 0px); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "100% { transform: translate3d(0px, 0px, 0px); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "footer",
          "cssText": "footer { padding: 3rem 0px; color: rgb(203, 209, 211); background: rgb(29, 43, 52); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 50rem) {\n  footer { padding: 3rem 0px; }\n}",
          "urls": [],
          "group": "screen and (min-width: 50rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 50rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "50rem",
                "50",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "footer",
          "cssText": "footer { padding: 3rem 0px; }",
          "urls": [],
          "group": "screen and (min-width: 50rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 50rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "50rem",
                "50",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": "footer ul, footer li",
          "cssText": "footer ul, footer li { padding: 0px; margin: 0px; list-style: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "footer ul li h3",
          "cssText": "footer ul li h3 { font-weight: 500; color: rgb(255, 255, 255); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "footer ul li a",
          "cssText": "footer ul li a { color: rgb(203, 209, 211); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "footer ul li a:hover",
          "cssText": "footer ul li a:hover { color: rgb(255, 255, 255); text-decoration: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "footer ul li a:focus",
          "cssText": "footer ul li a:focus { color: rgb(255, 255, 255); background: rgba(0, 0, 0, 0.2); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "footer section",
          "cssText": "footer section { display: flex; flex-flow: wrap; -webkit-box-orient: horizontal; -webkit-box-direction: normal; -webkit-box-pack: start; justify-content: flex-start; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 30rem) {\n  footer section { flex-wrap: nowrap; }\n}",
          "urls": [],
          "group": "screen and (min-width: 30rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 30rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "30rem",
                "30",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "footer section",
          "cssText": "footer section { flex-wrap: nowrap; }",
          "urls": [],
          "group": "screen and (min-width: 30rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 30rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "30rem",
                "30",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".rtl footer section",
          "cssText": ".rtl footer section { -webkit-box-orient: horizontal; -webkit-box-direction: reverse; flex-direction: row-reverse; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "footer section.meta",
          "cssText": "footer section.meta { -webkit-box-pack: justify; justify-content: space-between; -webkit-box-orient: vertical; -webkit-box-direction: normal; flex-direction: column; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 87.5rem) {\n  footer section.meta { -webkit-box-orient: horizontal; -webkit-box-direction: normal; flex-direction: row; }\n}",
          "urls": [],
          "group": "screen and (min-width: 87.5rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 87.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "87.5rem",
                "87.5",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "footer section.meta",
          "cssText": "footer section.meta { -webkit-box-orient: horizontal; -webkit-box-direction: normal; flex-direction: row; }",
          "urls": [],
          "group": "screen and (min-width: 87.5rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 87.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "87.5rem",
                "87.5",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": "footer section.meta > div",
          "cssText": "footer section.meta > div { margin-top: 1rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 87.5rem) {\n  footer section.meta > div { margin-top: 0px; }\n}",
          "urls": [],
          "group": "screen and (min-width: 87.5rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 87.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "87.5rem",
                "87.5",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "footer section.meta > div",
          "cssText": "footer section.meta > div { margin-top: 0px; }",
          "urls": [],
          "group": "screen and (min-width: 87.5rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 87.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "87.5rem",
                "87.5",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".rtl footer section.meta",
          "cssText": ".rtl footer section.meta { -webkit-box-align: end; align-items: flex-end; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 87.5rem) {\n  .rtl footer section.meta { -webkit-box-orient: horizontal; -webkit-box-direction: reverse; flex-direction: row-reverse; -webkit-box-align: start; align-items: flex-start; }\n}",
          "urls": [],
          "group": "screen and (min-width: 87.5rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 87.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "87.5rem",
                "87.5",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".rtl footer section.meta",
          "cssText": ".rtl footer section.meta { -webkit-box-orient: horizontal; -webkit-box-direction: reverse; flex-direction: row-reverse; -webkit-box-align: start; align-items: flex-start; }",
          "urls": [],
          "group": "screen and (min-width: 87.5rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 87.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "87.5rem",
                "87.5",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": "footer section ul",
          "cssText": "footer section ul { display: block; width: 50%; margin-bottom: 1rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".rtl footer section ul",
          "cssText": ".rtl footer section ul { text-align: right; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 30rem) {\n  footer section ul { display: inline-block; width: 33.33%; margin-bottom: 0px; }\n}",
          "urls": [],
          "group": "screen and (min-width: 30rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 30rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "30rem",
                "30",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "footer section ul",
          "cssText": "footer section ul { display: inline-block; width: 33.33%; margin-bottom: 0px; }",
          "urls": [],
          "group": "screen and (min-width: 30rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 30rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "30rem",
                "30",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 37.5rem) {\n  footer section ul { width: 20%; }\n}",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "footer section ul",
          "cssText": "footer section ul { width: 20%; }",
          "urls": [],
          "group": "screen and (min-width: 37.5rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 37.5rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "37.5rem",
                "37.5",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": "footer .meta > span",
          "cssText": "footer .meta > span { color: rgb(203, 209, 211); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "footer .meta ul",
          "cssText": "footer .meta ul { display: flex; flex-flow: wrap; -webkit-box-orient: horizontal; -webkit-box-direction: normal; -webkit-box-pack: start; justify-content: flex-start; width: auto; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "footer .meta ul li",
          "cssText": "footer .meta ul li { padding: 0px 0.25rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "footer .meta ul li:first-child",
          "cssText": "footer .meta ul li:first-child { padding: 0px 0.25rem 0px 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "footer .meta ul li:first-child::before",
          "cssText": "footer .meta ul li:first-child::before { display: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".rtl footer .meta ul li",
          "cssText": ".rtl footer .meta ul li { -webkit-box-orient: horizontal; -webkit-box-direction: reverse; flex-direction: row-reverse; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".rtl footer .meta ul li:last-child",
          "cssText": ".rtl footer .meta ul li:last-child { padding-right: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "footer .meta ul li::before",
          "cssText": "footer .meta ul li::before { transform: translateX(-1.375rem) translateY(0.625rem); position: absolute; width: 0.125rem; height: 0.625rem; background: rgb(47, 69, 79); display: none; content: \"\"; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media screen and (min-width: 50rem) {\n  footer .meta ul li { padding: 0px 1.25rem; }\n  footer .meta ul li:first-child { padding: 0px 1.25rem 0px 0px; }\n  footer .meta ul li:first-child::before { display: none; }\n  footer .meta ul li::before { transform: translateX(-1.375rem) translateY(0.625rem); display: block; }\n}",
          "urls": [],
          "group": "screen and (min-width: 50rem)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 50rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "50rem",
                "50",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "footer .meta ul li",
          "cssText": "footer .meta ul li { padding: 0px 1.25rem; }",
          "urls": [],
          "group": "screen and (min-width: 50rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 50rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "50rem",
                "50",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": "footer .meta ul li:first-child",
          "cssText": "footer .meta ul li:first-child { padding: 0px 1.25rem 0px 0px; }",
          "urls": [],
          "group": "screen and (min-width: 50rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 50rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "50rem",
                "50",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": "footer .meta ul li:first-child::before",
          "cssText": "footer .meta ul li:first-child::before { display: none; }",
          "urls": [],
          "group": "screen and (min-width: 50rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 50rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "50rem",
                "50",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": "footer .meta ul li::before",
          "cssText": "footer .meta ul li::before { transform: translateX(-1.375rem) translateY(0.625rem); display: block; }",
          "urls": [],
          "group": "screen and (min-width: 50rem)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "screen and (min-width: 50rem)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "50rem",
                "50",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": "footer .copyright",
          "cssText": "footer .copyright { float: left; margin: 0px 1.25rem 1.25rem 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "footer hr",
          "cssText": "footer hr { margin-top: 3rem; margin-bottom: 3rem; border-width: 0px 0px 0.0625rem; border-style: solid; border-color: transparent transparent rgb(47, 69, 79); border-image: initial; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".language-switch",
          "cssText": ".language-switch { background-color: rgb(48, 62, 71); background-image: url(\"../img/ui/icon-arrow-down.png\"); background-size: 12px; background-position: 95% 50%; background-repeat: no-repeat; color: rgb(197, 201, 219); border: 0px solid transparent; width: 12.5rem; height: 2.25rem; margin-top: -0.1875rem; font-size: 15px; padding: 0px 2rem 0px 0.625rem; border-radius: 4px; cursor: pointer; }",
          "urls": [
            "../img/ui/icon-arrow-down.png"
          ],
          "group": "",
          "sources": [],
          "sinks": [
            {
              "reason": "url_sink",
              "urls": [
                "../img/ui/icon-arrow-down.png"
              ]
            }
          ],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".language-switch:hover",
          "cssText": ".language-switch:hover { background-color: rgb(49, 67, 78); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".language-switch:active, .language-switch:focus",
          "cssText": ".language-switch:active, .language-switch:focus { background-color: rgb(15, 21, 25); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".rtl .language-switch",
          "cssText": ".rtl .language-switch { padding: 0px 0.625rem 0px 2rem; background-position: 5% 50%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".additional-translations",
          "cssText": ".additional-translations { display: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        }
      ]
    },
    {
      "href": "https://fonts.googleapis.com/css?family=Roboto+Slab:400,700,300|Roboto:400,500,700,300,900&subset=latin,greek,greek-ext,vietnamese,cyrillic-ext,latin-ext,cyrillic",
      "rules": "inaccessible",
      "rulesList": []
    },
    {
      "href": "(inline <style>)",
      "rules": 3,
      "rulesList": [
        {
          "type": "CSSStyleRule",
          "selector": ".st0",
          "cssText": ".st0 { fill: url(\"#XMLID_2_\"); }",
          "urls": [
            "#xmlid_2_"
          ],
          "group": "",
          "sources": [],
          "sinks": [
            {
              "reason": "url_sink",
              "urls": [
                "#xmlid_2_"
              ]
            }
          ],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".st1",
          "cssText": ".st1 { fill: rgb(255, 255, 255); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".st2",
          "cssText": ".st2 { fill: url(\"#XMLID_3_\"); }",
          "urls": [
            "#xmlid_3_"
          ],
          "group": "",
          "sources": [],
          "sinks": [
            {
              "reason": "url_sink",
              "urls": [
                "#xmlid_3_"
              ]
            }
          ],
          "inheritedSources": []
        }
      ]
    },
    {
      "href": "(inline <style>)",
      "rules": 3,
      "rulesList": [
        {
          "type": "CSSStyleRule",
          "selector": ".st0",
          "cssText": ".st0 { fill: url(\"#gradientone\"); }",
          "urls": [
            "#gradientone"
          ],
          "group": "",
          "sources": [],
          "sinks": [
            {
              "reason": "url_sink",
              "urls": [
                "#gradientone"
              ]
            }
          ],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".st1",
          "cssText": ".st1 { fill: rgb(255, 255, 255); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".st2",
          "cssText": ".st2 { fill: url(\"#gradienttwo\"); }",
          "urls": [
            "#gradienttwo"
          ],
          "group": "",
          "sources": [],
          "sinks": [
            {
              "reason": "url_sink",
              "urls": [
                "#gradienttwo"
              ]
            }
          ],
          "inheritedSources": []
        }
      ]
    }
  ],
  "inaccessible": [
    "https://fonts.googleapis.com/css?family=Roboto+Slab:400,700,300|Roboto:400,500,700,300,900&subset=latin,greek,greek-ext,vietnamese,cyrillic-ext,latin-ext,cyrillic"
  ],
  "styleTags": 2,
  "inlineStyleCount": 1,
  "associations": [],
  "summary": {
    "sheetsAccessible": 3,
    "sheetsInaccessible": 1,
    "totalRulesScanned": 570,
    "totalSinks": 11,
    "totalSources": 197,
    "totalAssociations": 0,
    "totalCapped": false
  },
  "likelyFingerprinting": false,
  "verdict": "likely not fingerprinting",
  "claims": [],
  "claimDetails": [],
  "riskScore": 0,
  "riskLevel": "none"
}