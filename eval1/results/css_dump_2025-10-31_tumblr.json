{
  "page": "https://www.tumblr.com/",
  "timestamp": 1761885853733,
  "sheets": [
    {
      "href": "https://assets.tumblr.com/pop/css/main-610d52cc.css",
      "rules": "inaccessible",
      "rulesList": []
    },
    {
      "href": "https://assets.tumblr.com/pop/5196-7a75db85.css",
      "rules": "inaccessible",
      "rulesList": []
    },
    {
      "href": "https://assets.tumblr.com/pop/2884-ebe42f6b.css",
      "rules": "inaccessible",
      "rulesList": []
    },
    {
      "href": "https://assets.tumblr.com/pop/9850-9d08d10e.css",
      "rules": "inaccessible",
      "rulesList": []
    },
    {
      "href": "https://assets.tumblr.com/pop/async-mobile-navigation-622ecf1e.css",
      "rules": "inaccessible",
      "rulesList": []
    },
    {
      "href": "https://assets.tumblr.com/pop/3070-5dba3aea.css",
      "rules": "inaccessible",
      "rulesList": []
    },
    {
      "href": "https://assets.tumblr.com/pop/700-aa402726.css",
      "rules": "inaccessible",
      "rulesList": []
    },
    {
      "href": "https://assets.tumblr.com/pop/1840-081007f9.css",
      "rules": "inaccessible",
      "rulesList": []
    },
    {
      "href": "https://assets.tumblr.com/pop/landing-page-or-dashboard-picker-4b5e70a3.css",
      "rules": "inaccessible",
      "rulesList": []
    },
    {
      "href": "https://assets.tumblr.com/pop/69-622ecf1e.css",
      "rules": 928,
      "rulesList": [
        {
          "type": "CSSStyleRule",
          "selector": ".fxR1V, .W6hAv, .gAJ73, .KSkuV",
          "cssText": ".fxR1V, .W6hAv, .gAJ73, .KSkuV { box-sizing: border-box; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".fxR1V",
          "cssText": ".fxR1V { z-index: 101; border: 1px solid var(--modal-border); background-color: var(--modal); border-radius: 12px; grid-template: \"header\" \"content\" 1fr \"footer\" / 1fr; max-height: calc(-24px + 100vh); display: grid; position: fixed; top: 50%; left: 50%; transform: translate(-50%, -50%); box-shadow: rgba(0, 0, 0, 0.2) 0px 12px 32px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 560px) {\n  .fxR1V { max-height: calc(-16px + 100vh); }\n}",
          "urls": [],
          "group": "(max-width: 560px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 560px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "560px",
                "560",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".fxR1V",
          "cssText": ".fxR1V { max-height: calc(-16px + 100vh); }",
          "urls": [],
          "group": "(max-width: 560px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 560px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "560px",
                "560",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".fxR1V.LcX3k",
          "cssText": ".fxR1V.LcX3k { z-index: 102; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".W6hAv",
          "cssText": ".W6hAv { border-bottom: 1px solid var(--content-tint); font-size: 1.125rem; font-weight: 500; line-height: 1.75rem; font-family: var(--font-family-modern); color: var(--content-fg); grid-row: header; justify-content: space-between; align-items: center; gap: 12px; padding: 12px 12px 12px 20px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".gAJ73",
          "cssText": ".gAJ73 { font-size: 0.875rem; font-weight: 350; line-height: 1.25rem; font-family: var(--font-family-modern); color: var(--content-fg-tertiary); grid-row: content; overflow-y: auto; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".KSkuV",
          "cssText": ".KSkuV { border-top: 1px solid var(--content-tint); grid-row: footer; padding: 12px 20px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[data-backdrop]",
          "cssText": "[data-backdrop] { background-color: var(--overlay-tint-heavy); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".gex8i",
          "cssText": ".gex8i { width: 440px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 440px) {\n  .gex8i { width: fit-content; min-width: calc(100% - 16px); max-width: 420px; }\n}",
          "urls": [],
          "group": "(max-width: 440px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 440px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "440px",
                "440",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".gex8i",
          "cssText": ".gex8i { width: fit-content; min-width: calc(100% - 16px); max-width: 420px; }",
          "urls": [],
          "group": "(max-width: 440px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 440px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "440px",
                "440",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".DuRbe",
          "cssText": ".DuRbe { width: 480px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 480px) {\n  .DuRbe { width: fit-content; min-width: calc(100% - 16px); max-width: 460px; }\n}",
          "urls": [],
          "group": "(max-width: 480px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 480px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "480px",
                "480",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".DuRbe",
          "cssText": ".DuRbe { width: fit-content; min-width: calc(100% - 16px); max-width: 460px; }",
          "urls": [],
          "group": "(max-width: 480px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 480px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "480px",
                "480",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Q895s",
          "cssText": ".Q895s { width: 560px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 560px) {\n  .Q895s { width: fit-content; min-width: calc(100% - 16px); max-width: 540px; }\n}",
          "urls": [],
          "group": "(max-width: 560px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 560px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "560px",
                "560",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Q895s",
          "cssText": ".Q895s { width: fit-content; min-width: calc(100% - 16px); max-width: 540px; }",
          "urls": [],
          "group": "(max-width: 560px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 560px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "560px",
                "560",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".SQWMC",
          "cssText": ".SQWMC { height: calc(100% - 24px); left: 12px; transform: translateY(-50%); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 440px) {\n  .SQWMC.gex8i { right: unset; left: 50%; transform: translate(-50%, -50%); }\n}",
          "urls": [],
          "group": "(max-width: 440px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 440px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "440px",
                "440",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".SQWMC.gex8i",
          "cssText": ".SQWMC.gex8i { right: unset; left: 50%; transform: translate(-50%, -50%); }",
          "urls": [],
          "group": "(max-width: 440px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 440px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "440px",
                "440",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 480px) {\n  .SQWMC.DuRbe { right: unset; left: 50%; transform: translate(-50%, -50%); }\n}",
          "urls": [],
          "group": "(max-width: 480px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 480px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "480px",
                "480",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".SQWMC.DuRbe",
          "cssText": ".SQWMC.DuRbe { right: unset; left: 50%; transform: translate(-50%, -50%); }",
          "urls": [],
          "group": "(max-width: 480px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 480px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "480px",
                "480",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 560px) {\n  .SQWMC.Q895s { right: unset; left: 50%; transform: translate(-50%, -50%); }\n}",
          "urls": [],
          "group": "(max-width: 560px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 560px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "560px",
                "560",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".SQWMC.Q895s",
          "cssText": ".SQWMC.Q895s { right: unset; left: 50%; transform: translate(-50%, -50%); }",
          "urls": [],
          "group": "(max-width: 560px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 560px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "560px",
                "560",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".SQWMC .gAJ73",
          "cssText": ".SQWMC .gAJ73 { flex-grow: 1; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 560px) {\n  .SQWMC { height: calc(100% - 16px); }\n}",
          "urls": [],
          "group": "(max-width: 560px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 560px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "560px",
                "560",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".SQWMC",
          "cssText": ".SQWMC { height: calc(100% - 16px); }",
          "urls": [],
          "group": "(max-width: 560px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 560px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "560px",
                "560",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".RqV78",
          "cssText": ".RqV78 { right: 12px; left: unset; height: calc(100% - 24px); transform: translateY(-50%); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 440px) {\n  .RqV78.gex8i { right: unset; left: 50%; transform: translate(-50%, -50%); }\n}",
          "urls": [],
          "group": "(max-width: 440px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 440px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "440px",
                "440",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".RqV78.gex8i",
          "cssText": ".RqV78.gex8i { right: unset; left: 50%; transform: translate(-50%, -50%); }",
          "urls": [],
          "group": "(max-width: 440px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 440px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "440px",
                "440",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 480px) {\n  .RqV78.DuRbe { right: unset; left: 50%; transform: translate(-50%, -50%); }\n}",
          "urls": [],
          "group": "(max-width: 480px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 480px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "480px",
                "480",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".RqV78.DuRbe",
          "cssText": ".RqV78.DuRbe { right: unset; left: 50%; transform: translate(-50%, -50%); }",
          "urls": [],
          "group": "(max-width: 480px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 480px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "480px",
                "480",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 560px) {\n  .RqV78.Q895s { right: unset; left: 50%; transform: translate(-50%, -50%); }\n}",
          "urls": [],
          "group": "(max-width: 560px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 560px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "560px",
                "560",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".RqV78.Q895s",
          "cssText": ".RqV78.Q895s { right: unset; left: 50%; transform: translate(-50%, -50%); }",
          "urls": [],
          "group": "(max-width: 560px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 560px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "560px",
                "560",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".RqV78 .gAJ73",
          "cssText": ".RqV78 .gAJ73 { flex-grow: 1; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 560px) {\n  .RqV78 { height: calc(100% - 16px); }\n}",
          "urls": [],
          "group": "(max-width: 560px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 560px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "560px",
                "560",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".RqV78",
          "cssText": ".RqV78 { height: calc(100% - 16px); }",
          "urls": [],
          "group": "(max-width: 560px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 560px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "560px",
                "560",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Ut4iZ",
          "cssText": ".Ut4iZ { justify-content: center; width: 100%; display: flex; position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Ro4PU",
          "cssText": ".Ro4PU { width: 100%; height: 100%; display: block; position: absolute; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "._ON2X",
          "cssText": "._ON2X { width: 100%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".wmRou",
          "cssText": ".wmRou { overflow-wrap: break-word; hyphens: auto; vertical-align: middle; outline: none; flex-grow: 1; align-items: center; min-height: 43px; padding: 8px 10px; line-height: 1.2; text-decoration: none; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".wmRou .qgKw0",
          "cssText": ".wmRou .qgKw0 { margin-right: 11px; position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".wmRou .yElCb",
          "cssText": ".wmRou .yElCb { align-items: center; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".wmRou > span",
          "cssText": ".wmRou > span { width: 100%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".QK2Zh",
          "cssText": ".QK2Zh { position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".gLEkw, .fTJAC",
          "cssText": ".gLEkw, .fTJAC { text-align: left; word-break: break-word; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".gLEkw",
          "cssText": ".gLEkw { font-size: 0.875rem; font-weight: 700; line-height: 1.42857; font-family: var(--font-family); align-items: center; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".gLEkw .UulOO",
          "cssText": ".gLEkw .UulOO { text-overflow: ellipsis; word-break: break-all; overflow: hidden; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSSupportsRule",
          "selector": "",
          "cssText": "@supports (display:-webkit-box) and (-webkit-line-clamp:1) {\n  .gLEkw .UulOO { -webkit-line-clamp: 1; -webkit-box-orient: vertical; display: -webkit-box; }\n}",
          "urls": [],
          "group": "(display:-webkit-box) and (-webkit-line-clamp:1)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "(display:-webkit-box) and (-webkit-line-clamp:1)",
              "requiresEcho": true,
              "echoTokens": [
                "display",
                "-webkit-box",
                "-webkit-line-clamp",
                "1"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".gLEkw .UulOO",
          "cssText": ".gLEkw .UulOO { -webkit-line-clamp: 1; -webkit-box-orient: vertical; display: -webkit-box; }",
          "urls": [],
          "group": "(display:-webkit-box) and (-webkit-line-clamp:1)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "(display:-webkit-box) and (-webkit-line-clamp:1)",
              "requiresEcho": true,
              "echoTokens": [
                "display",
                "-webkit-box",
                "-webkit-line-clamp",
                "1"
              ]
            }
          ]
        },
        {
          "type": "CSSSupportsRule",
          "selector": "",
          "cssText": "@supports not ((display:-webkit-box) and (-webkit-line-clamp:1)) {\n  .gLEkw .UulOO { white-space: nowrap; }\n}",
          "urls": [],
          "group": "not ((display:-webkit-box) and (-webkit-line-clamp:1))",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "not ((display:-webkit-box) and (-webkit-line-clamp:1))",
              "requiresEcho": true,
              "echoTokens": [
                "not",
                "display",
                "-webkit-box",
                "-webkit-line-clamp",
                "1"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".gLEkw .UulOO",
          "cssText": ".gLEkw .UulOO { white-space: nowrap; }",
          "urls": [],
          "group": "not ((display:-webkit-box) and (-webkit-line-clamp:1))",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "not ((display:-webkit-box) and (-webkit-line-clamp:1))",
              "requiresEcho": true,
              "echoTokens": [
                "not",
                "display",
                "-webkit-box",
                "-webkit-line-clamp",
                "1"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".fTJAC",
          "cssText": ".fTJAC { font-size: 0.875rem; font-weight: 400; line-height: 1.42857; font-family: var(--font-family); text-overflow: ellipsis; overflow: hidden; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSSupportsRule",
          "selector": "",
          "cssText": "@supports (display:-webkit-box) and (-webkit-line-clamp:1) {\n  .fTJAC { -webkit-line-clamp: 1; -webkit-box-orient: vertical; display: -webkit-box; }\n}",
          "urls": [],
          "group": "(display:-webkit-box) and (-webkit-line-clamp:1)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "(display:-webkit-box) and (-webkit-line-clamp:1)",
              "requiresEcho": true,
              "echoTokens": [
                "display",
                "-webkit-box",
                "-webkit-line-clamp",
                "1"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".fTJAC",
          "cssText": ".fTJAC { -webkit-line-clamp: 1; -webkit-box-orient: vertical; display: -webkit-box; }",
          "urls": [],
          "group": "(display:-webkit-box) and (-webkit-line-clamp:1)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "(display:-webkit-box) and (-webkit-line-clamp:1)",
              "requiresEcho": true,
              "echoTokens": [
                "display",
                "-webkit-box",
                "-webkit-line-clamp",
                "1"
              ]
            }
          ]
        },
        {
          "type": "CSSSupportsRule",
          "selector": "",
          "cssText": "@supports not ((display:-webkit-box) and (-webkit-line-clamp:1)) {\n  .fTJAC { white-space: nowrap; }\n}",
          "urls": [],
          "group": "not ((display:-webkit-box) and (-webkit-line-clamp:1))",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "not ((display:-webkit-box) and (-webkit-line-clamp:1))",
              "requiresEcho": true,
              "echoTokens": [
                "not",
                "display",
                "-webkit-box",
                "-webkit-line-clamp",
                "1"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".fTJAC",
          "cssText": ".fTJAC { white-space: nowrap; }",
          "urls": [],
          "group": "not ((display:-webkit-box) and (-webkit-line-clamp:1))",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "not ((display:-webkit-box) and (-webkit-line-clamp:1))",
              "requiresEcho": true,
              "echoTokens": [
                "not",
                "display",
                "-webkit-box",
                "-webkit-line-clamp",
                "1"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".SbeG8",
          "cssText": ".SbeG8 { text-align: right; align-items: center; display: flex; position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".SbeG8:last-child",
          "cssText": ".SbeG8:last-child { padding-right: 16px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".SbeG8.Mk7yS svg use",
          "cssText": ".SbeG8.Mk7yS svg use { --icon-color-primary: var(--color-title); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".vu9JS, .isGvB, .Tk5rT",
          "cssText": ".vu9JS, .isGvB, .Tk5rT { margin-left: 5px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Tk5rT",
          "cssText": ".Tk5rT { color: RGB(var(--deprecated-accent)); font-weight: 400; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Ut4iZ:not(.veU9u):hover",
          "cssText": ".Ut4iZ:not(.veU9u):hover { background-color: rgba(var(--white-on-dark),.07); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Ut4iZ:not(.veU9u):focus-within",
          "cssText": ".Ut4iZ:not(.veU9u):focus-within { background-color: rgba(var(--white-on-dark),.07); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Ut4iZ:not(.veU9u) .fTJAC",
          "cssText": ".Ut4iZ:not(.veU9u) .fTJAC { color: rgba(var(--white-on-dark),.65); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Ut4iZ:not(.veU9u) .gLEkw",
          "cssText": ".Ut4iZ:not(.veU9u) .gLEkw { color: RGB(var(--white-on-dark)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".veU9u:hover, .veU9u .Ro4PU:focus + .wmRou + .SbeG8, .veU9u .Ro4PU:focus + .wmRou",
          "cssText": ".veU9u:hover, .veU9u .Ro4PU:focus + .wmRou + .SbeG8, .veU9u .Ro4PU:focus + .wmRou { background-color: RGB(var(--secondary-accent)); outline: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".veU9u .wmRou:focus, .veU9u .wmRou:hover, .veU9u .wmRou:focus + .SbeG8, .veU9u .wmRou:hover + .SbeG8",
          "cssText": ".veU9u .wmRou:focus, .veU9u .wmRou:hover, .veU9u .wmRou:focus + .SbeG8, .veU9u .wmRou:hover + .SbeG8 { background-color: RGB(var(--secondary-accent)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".veU9u .wmRou .gLEkw",
          "cssText": ".veU9u .wmRou .gLEkw { color: RGB(var(--black)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".veU9u .wmRou .fTJAC",
          "cssText": ".veU9u .wmRou .fTJAC { color: rgba(var(--black),.65); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ZOX9S:hover, .ZOX9S .Ro4PU:focus + .wmRou + .SbeG8, .ZOX9S .Ro4PU:focus + .wmRou",
          "cssText": ".ZOX9S:hover, .ZOX9S .Ro4PU:focus + .wmRou + .SbeG8, .ZOX9S .Ro4PU:focus + .wmRou { background-color: var(--blog-background-hover-color); outline: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ZOX9S .wmRou .gLEkw, .ZOX9S .wmRou .fTJAC",
          "cssText": ".ZOX9S .wmRou .gLEkw, .ZOX9S .wmRou .fTJAC { color: var(--blog-text-color); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".KXYTk .wmRou",
          "cssText": ".KXYTk .wmRou { padding-left: 16px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".KXYTk .QK2Zh",
          "cssText": ".KXYTk .QK2Zh { flex-direction: column; align-items: flex-start; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".KXYTk .gLEkw, .KXYTk .fTJAC",
          "cssText": ".KXYTk .gLEkw, .KXYTk .fTJAC { font-size: 1rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (pointer: fine) {\n  .KXYTk .gLEkw, .KXYTk .fTJAC { font-size: 0.875rem; }\n}",
          "urls": [],
          "group": "(pointer: fine)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "pointer",
              "semanticGroup": "input capability",
              "claim": "pointer accuracy",
              "excerpt": "(pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "pointer",
                "fine"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".KXYTk .gLEkw, .KXYTk .fTJAC",
          "cssText": ".KXYTk .gLEkw, .KXYTk .fTJAC { font-size: 0.875rem; }",
          "urls": [],
          "group": "(pointer: fine)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "pointer",
              "semanticGroup": "input capability",
              "claim": "pointer accuracy",
              "excerpt": "(pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "pointer",
                "fine"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Ut4iZ.Gef25 .wmRou, .Ut4iZ.Gef25 .SbeG8",
          "cssText": ".Ut4iZ.Gef25 .wmRou, .Ut4iZ.Gef25 .SbeG8 { padding: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Ut4iZ.Gef25 .SbeG8 button > span",
          "cssText": ".Ut4iZ.Gef25 .SbeG8 button > span { text-align: right; margin-right: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Ut4iZ.QQQHB:hover, .Ut4iZ.QQQHB .wmRou:hover, .Ut4iZ.QQQHB .wmRou:focus, .Ut4iZ.QQQHB .wmRou:hover + .SbeG8, .Ut4iZ.QQQHB .wmRou:focus + .SbeG8",
          "cssText": ".Ut4iZ.QQQHB:hover, .Ut4iZ.QQQHB .wmRou:hover, .Ut4iZ.QQQHB .wmRou:focus, .Ut4iZ.QQQHB .wmRou:hover + .SbeG8, .Ut4iZ.QQQHB .wmRou:focus + .SbeG8 { background-color: initial; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "._WHTS",
          "cssText": "._WHTS { cursor: grab; font-size: 1.3125rem; font-weight: 700; line-height: 1.52381; font-family: var(--font-family); padding-bottom: 4px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "._WHTS:active",
          "cssText": "._WHTS:active { cursor: grabbing; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".taG5E",
          "cssText": ".taG5E { flex-direction: row; align-self: stretch; gap: 12px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".taG5E button, .taG5E button > span",
          "cssText": ".taG5E button, .taG5E button > span { justify-content: center; align-items: center; min-width: 64px; min-height: 100%; margin-right: -16px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (pointer: fine) {\n  .taG5E button, .taG5E button > span { align-self: center; min-width: auto; min-height: auto; margin-right: 0px; }\n}",
          "urls": [],
          "group": "(pointer: fine)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "pointer",
              "semanticGroup": "input capability",
              "claim": "pointer accuracy",
              "excerpt": "(pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "pointer",
                "fine"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".taG5E button, .taG5E button > span",
          "cssText": ".taG5E button, .taG5E button > span { align-self: center; min-width: auto; min-height: auto; margin-right: 0px; }",
          "urls": [],
          "group": "(pointer: fine)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "pointer",
              "semanticGroup": "input capability",
              "claim": "pointer accuracy",
              "excerpt": "(pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "pointer",
                "fine"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".taG5E .R6sti",
          "cssText": ".taG5E .R6sti { color: rgba(var(--black),.65); padding-bottom: 0px; display: none; position: relative; top: -2px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".taG5E .R6sti:disabled",
          "cssText": ".taG5E .R6sti:disabled { visibility: hidden; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (pointer: fine) {\n  .taG5E .R6sti { display: block; position: absolute; }\n}",
          "urls": [],
          "group": "(pointer: fine)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "pointer",
              "semanticGroup": "input capability",
              "claim": "pointer accuracy",
              "excerpt": "(pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "pointer",
                "fine"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".taG5E .R6sti",
          "cssText": ".taG5E .R6sti { display: block; position: absolute; }",
          "urls": [],
          "group": "(pointer: fine)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "pointer",
              "semanticGroup": "input capability",
              "claim": "pointer accuracy",
              "excerpt": "(pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "pointer",
                "fine"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".taG5E .B70fk",
          "cssText": ".taG5E .B70fk { --icon-color-primary: rgba(var(--black),.65); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".taG5E .B70fk svg",
          "cssText": ".taG5E .B70fk svg { width: 16px; height: 16px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (pointer: fine) {\n  .taG5E .B70fk svg { width: 12px; height: 12px; }\n}",
          "urls": [],
          "group": "(pointer: fine)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "pointer",
              "semanticGroup": "input capability",
              "claim": "pointer accuracy",
              "excerpt": "(pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "pointer",
                "fine"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".taG5E .B70fk svg",
          "cssText": ".taG5E .B70fk svg { width: 12px; height: 12px; }",
          "urls": [],
          "group": "(pointer: fine)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "pointer",
              "semanticGroup": "input capability",
              "claim": "pointer accuracy",
              "excerpt": "(pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "pointer",
                "fine"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".SO7Py",
          "cssText": ".SO7Py { align-items: center; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".k6yLC",
          "cssText": ".k6yLC { display: flex; position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (min-width: 990px) and (pointer: fine) {\n  .k6yLC { margin-right: -16px; }\n}",
          "urls": [],
          "group": "(min-width: 990px) and (pointer: fine)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "pointer",
              "semanticGroup": "input capability",
              "claim": "pointer accuracy",
              "excerpt": "(min-width: 990px) and (pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "990px",
                "pointer",
                "fine",
                "990",
                "width"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 990px) and (pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "990px",
                "pointer",
                "fine",
                "990",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".k6yLC",
          "cssText": ".k6yLC { margin-right: -16px; }",
          "urls": [],
          "group": "(min-width: 990px) and (pointer: fine)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "pointer",
              "semanticGroup": "input capability",
              "claim": "pointer accuracy",
              "excerpt": "(min-width: 990px) and (pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "990px",
                "pointer",
                "fine",
                "990",
                "width"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 990px) and (pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "990px",
                "pointer",
                "fine",
                "990",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".R6sti",
          "cssText": ".R6sti { visibility: hidden; display: flex; position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (pointer: fine) {\n  .R6sti { position: absolute; }\n}",
          "urls": [],
          "group": "(pointer: fine)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "pointer",
              "semanticGroup": "input capability",
              "claim": "pointer accuracy",
              "excerpt": "(pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "pointer",
                "fine"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".R6sti",
          "cssText": ".R6sti { position: absolute; }",
          "urls": [],
          "group": "(pointer: fine)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "pointer",
              "semanticGroup": "input capability",
              "claim": "pointer accuracy",
              "excerpt": "(pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "pointer",
                "fine"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".R6sti.eevEr",
          "cssText": ".R6sti.eevEr { visibility: visible; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (pointer: fine) {\n  .R6sti.eevEr { position: inherit; }\n}",
          "urls": [],
          "group": "(pointer: fine)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "pointer",
              "semanticGroup": "input capability",
              "claim": "pointer accuracy",
              "excerpt": "(pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "pointer",
                "fine"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".R6sti.eevEr",
          "cssText": ".R6sti.eevEr { position: inherit; }",
          "urls": [],
          "group": "(pointer: fine)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "pointer",
              "semanticGroup": "input capability",
              "claim": "pointer accuracy",
              "excerpt": "(pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "pointer",
                "fine"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".msimc .wfY3U",
          "cssText": ".msimc .wfY3U { top: -20%; right: -15%; left: initial; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".msimc .Uqei4",
          "cssText": ".msimc .Uqei4 { top: initial; right: initial; border: 0px; position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (pointer: fine) {\n  .msimc .Uqei4 { right: 8px; }\n}",
          "urls": [],
          "group": "(pointer: fine)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "pointer",
              "semanticGroup": "input capability",
              "claim": "pointer accuracy",
              "excerpt": "(pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "pointer",
                "fine"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".msimc .Uqei4",
          "cssText": ".msimc .Uqei4 { right: 8px; }",
          "urls": [],
          "group": "(pointer: fine)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "pointer",
              "semanticGroup": "input capability",
              "claim": "pointer accuracy",
              "excerpt": "(pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "pointer",
                "fine"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (min-width: 990px) {\n  .msimc:hover .R6sti:enabled { visibility: visible; }\n  .msimc:hover .R6sti:enabled + .k6yLC { visibility: hidden; }\n}",
          "urls": [],
          "group": "(min-width: 990px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 990px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "990px",
                "990",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".msimc:hover .R6sti:enabled",
          "cssText": ".msimc:hover .R6sti:enabled { visibility: visible; }",
          "urls": [],
          "group": "(min-width: 990px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 990px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "990px",
                "990",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".msimc:hover .R6sti:enabled + .k6yLC",
          "cssText": ".msimc:hover .R6sti:enabled + .k6yLC { visibility: hidden; }",
          "urls": [],
          "group": "(min-width: 990px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 990px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "990px",
                "990",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".kbIQf",
          "cssText": ".kbIQf { font-size: 0.875rem; font-weight: 400; line-height: 1.42857; font-family: var(--font-family); margin: 0px 20px 0px 55px; padding: 0px; overflow: hidden; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".kbIQf li",
          "cssText": ".kbIQf li { list-style: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".kbIQf li:last-child",
          "cssText": ".kbIQf li:last-child { margin-bottom: 5px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".kbIQf li a",
          "cssText": ".kbIQf li a { box-sizing: border-box; width: 100%; color: RGB(var(--black)); flex-wrap: wrap; justify-content: space-between; align-items: center; padding: 3px 4px; text-decoration: none; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".kbIQf li a .dTeP6",
          "cssText": ".kbIQf li a .dTeP6 { color: rgba(var(--black),.65); text-align: right; margin-left: 5px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".kbIQf li a:hover, .kbIQf li a:focus",
          "cssText": ".kbIQf li a:hover, .kbIQf li a:focus { background-color: RGB(var(--secondary-accent)); outline: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".kbIQf .GxBzU",
          "cssText": ".kbIQf .GxBzU { font-size: 0.78125rem; font-weight: 700; line-height: 1.52; font-family: var(--font-family); background: RGB(var(--orange)); color: RGB(var(--white)); margin-right: -3px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".kbIQf .GxBzU:hover",
          "cssText": ".kbIQf .GxBzU:hover { background: RGB(var(--orange)); color: RGB(var(--white)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Z8ENW:hover .R6sti",
          "cssText": ".Z8ENW:hover .R6sti { opacity: 1; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Z8ENW:focus-within .R6sti",
          "cssText": ".Z8ENW:focus-within .R6sti { opacity: 1; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".XstzY .R6sti",
          "cssText": ".XstzY .R6sti { color: rgba(var(--white-on-dark),.65); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".XstzY:hover .R6sti",
          "cssText": ".XstzY:hover .R6sti { opacity: 1; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".XstzY:focus-within .R6sti",
          "cssText": ".XstzY:focus-within .R6sti { opacity: 1; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".XstzY .B70fk",
          "cssText": ".XstzY .B70fk { --icon-color-primary: rgba(var(--white-on-dark),.65); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".XstzY .B70fk.ysgOv",
          "cssText": ".XstzY .B70fk.ysgOv { --icon-color-primary: RGB(var(--white-on-dark)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".XstzY .kbIQf",
          "cssText": ".XstzY .kbIQf { margin: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".XstzY .kbIQf li a",
          "cssText": ".XstzY .kbIQf li a { box-sizing: border-box; min-height: 41px; font-size: 1.125rem; font-weight: 400; line-height: 1.33333; font-family: var(--font-family); color: rgba(var(--white-on-dark),.65); padding: 8px 16px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (pointer: fine) {\n  .XstzY .kbIQf li a { font-size: 1rem; font-weight: 400; line-height: 1.5; font-family: var(--font-family); min-height: 35px; padding: 4px 16px; }\n}",
          "urls": [],
          "group": "(pointer: fine)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "pointer",
              "semanticGroup": "input capability",
              "claim": "pointer accuracy",
              "excerpt": "(pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "pointer",
                "fine"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".XstzY .kbIQf li a",
          "cssText": ".XstzY .kbIQf li a { font-size: 1rem; font-weight: 400; line-height: 1.5; font-family: var(--font-family); min-height: 35px; padding: 4px 16px; }",
          "urls": [],
          "group": "(pointer: fine)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "pointer",
              "semanticGroup": "input capability",
              "claim": "pointer accuracy",
              "excerpt": "(pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "pointer",
                "fine"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (min-width: 990px) {\n  .XstzY .kbIQf li a { font-size: 1rem; font-weight: 400; line-height: 1.5; font-family: var(--font-family); }\n}",
          "urls": [],
          "group": "(min-width: 990px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 990px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "990px",
                "990",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".XstzY .kbIQf li a",
          "cssText": ".XstzY .kbIQf li a { font-size: 1rem; font-weight: 400; line-height: 1.5; font-family: var(--font-family); }",
          "urls": [],
          "group": "(min-width: 990px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 990px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "990px",
                "990",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".XstzY .kbIQf li a.jvoML",
          "cssText": ".XstzY .kbIQf li a.jvoML { color: RGB(var(--white-on-dark)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".XstzY .kbIQf li a:hover, .XstzY .kbIQf li a:focus",
          "cssText": ".XstzY .kbIQf li a:hover, .XstzY .kbIQf li a:focus { background-color: rgba(var(--white-on-dark),.07); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".XstzY .kbIQf li a .dTeP6",
          "cssText": ".XstzY .kbIQf li a .dTeP6 { color: rgba(var(--white-on-dark),.65); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Vp4ma",
          "cssText": ".Vp4ma { font: inherit; cursor: pointer; flex-direction: column; justify-content: center; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".PsDsm",
          "cssText": ".PsDsm { max-height: inherit; border-radius: 3px; flex-direction: column; display: flex; overflow: hidden auto; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".PsDsm .noQqZ",
          "cssText": ".PsDsm .noQqZ { margin: 0px; padding: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".PsDsm a",
          "cssText": ".PsDsm a { color: rgba(var(--black),.65); text-decoration: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".PsDsm .ZRl0t",
          "cssText": ".PsDsm .ZRl0t { background-color: RGB(var(--white)); list-style-type: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".PsDsm .ZRl0t + .ZRl0t",
          "cssText": ".PsDsm .ZRl0t + .ZRl0t { border-top: 1px solid rgba(var(--black),.13); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".PsDsm .rCo6i li:hover",
          "cssText": ".PsDsm .rCo6i li:hover { background-color: RGB(var(--secondary-accent)); outline: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".PsDsm .rCo6i li:focus-within",
          "cssText": ".PsDsm .rCo6i li:focus-within { background-color: RGB(var(--secondary-accent)); outline: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".PsDsm .rCo6i li:hover .fKSK_, .PsDsm .rCo6i li:hover .fKSK_::after, .PsDsm .rCo6i li:hover .fKSK_::before",
          "cssText": ".PsDsm .rCo6i li:hover .fKSK_, .PsDsm .rCo6i li:hover .fKSK_::after, .PsDsm .rCo6i li:hover .fKSK_::before { background-color: RGB(var(--secondary-accent)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".PsDsm .rCo6i li:focus-within .fKSK_",
          "cssText": ".PsDsm .rCo6i li:focus-within .fKSK_ { background-color: RGB(var(--secondary-accent)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".PsDsm .rCo6i li:focus-within .fKSK_::after",
          "cssText": ".PsDsm .rCo6i li:focus-within .fKSK_::after { background-color: RGB(var(--secondary-accent)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".PsDsm .rCo6i li:focus-within .fKSK_::before",
          "cssText": ".PsDsm .rCo6i li:focus-within .fKSK_::before { background-color: RGB(var(--secondary-accent)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".PsDsm .s1cla, .PsDsm .l463r",
          "cssText": ".PsDsm .s1cla, .PsDsm .l463r { color: rgba(var(--black),.65); flex-shrink: 0; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".PsDsm .s1cla",
          "cssText": ".PsDsm .s1cla { background-color: rgba(var(--black),.07); padding: 6px 4px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".PsDsm .l463r",
          "cssText": ".PsDsm .l463r { font-size: 0.875rem; font-weight: 400; line-height: 1.42857; font-family: var(--font-family); box-sizing: border-box; z-index: 1; background-color: RGB(var(--white)); justify-content: space-between; align-items: center; width: 100%; height: 35px; padding: 5px 20px 5px 10px; display: flex; position: sticky; top: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".PsDsm .l463r > h3, .PsDsm .l463r > button, .PsDsm .l463r > a",
          "cssText": ".PsDsm .l463r > h3, .PsDsm .l463r > button, .PsDsm .l463r > a { text-overflow: ellipsis; z-index: 1; overflow: hidden; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSSupportsRule",
          "selector": "",
          "cssText": "@supports (display:-webkit-box) and (-webkit-line-clamp:1) {\n  .PsDsm .l463r > h3, .PsDsm .l463r > button, .PsDsm .l463r > a { -webkit-line-clamp: 1; -webkit-box-orient: vertical; display: -webkit-box; }\n}",
          "urls": [],
          "group": "(display:-webkit-box) and (-webkit-line-clamp:1)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "(display:-webkit-box) and (-webkit-line-clamp:1)",
              "requiresEcho": true,
              "echoTokens": [
                "display",
                "-webkit-box",
                "-webkit-line-clamp",
                "1"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".PsDsm .l463r > h3, .PsDsm .l463r > button, .PsDsm .l463r > a",
          "cssText": ".PsDsm .l463r > h3, .PsDsm .l463r > button, .PsDsm .l463r > a { -webkit-line-clamp: 1; -webkit-box-orient: vertical; display: -webkit-box; }",
          "urls": [],
          "group": "(display:-webkit-box) and (-webkit-line-clamp:1)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "(display:-webkit-box) and (-webkit-line-clamp:1)",
              "requiresEcho": true,
              "echoTokens": [
                "display",
                "-webkit-box",
                "-webkit-line-clamp",
                "1"
              ]
            }
          ]
        },
        {
          "type": "CSSSupportsRule",
          "selector": "",
          "cssText": "@supports not ((display:-webkit-box) and (-webkit-line-clamp:1)) {\n  .PsDsm .l463r > h3, .PsDsm .l463r > button, .PsDsm .l463r > a { white-space: nowrap; }\n}",
          "urls": [],
          "group": "not ((display:-webkit-box) and (-webkit-line-clamp:1))",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "not ((display:-webkit-box) and (-webkit-line-clamp:1))",
              "requiresEcho": true,
              "echoTokens": [
                "not",
                "display",
                "-webkit-box",
                "-webkit-line-clamp",
                "1"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".PsDsm .l463r > h3, .PsDsm .l463r > button, .PsDsm .l463r > a",
          "cssText": ".PsDsm .l463r > h3, .PsDsm .l463r > button, .PsDsm .l463r > a { white-space: nowrap; }",
          "urls": [],
          "group": "not ((display:-webkit-box) and (-webkit-line-clamp:1))",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "not ((display:-webkit-box) and (-webkit-line-clamp:1))",
              "requiresEcho": true,
              "echoTokens": [
                "not",
                "display",
                "-webkit-box",
                "-webkit-line-clamp",
                "1"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".PsDsm .l463r::before",
          "cssText": ".PsDsm .l463r::before { background: rgba(var(--black),.07); content: \"\"; width: 100%; height: 35px; position: absolute; top: 0px; left: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".PsDsm .Oyvhq",
          "cssText": ".PsDsm .Oyvhq { font-size: 0.875rem; font-weight: 400; line-height: 1.42857; font-family: var(--font-family); text-align: right; display: inline-block; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (prefers-reduced-motion: no-preference) {\n  .PsDsm .fKSK_ { background-color: RGB(var(--white)); font-family: Courier, monospace; position: relative; }\n  .PsDsm .fKSK_::after, .PsDsm .fKSK_::before { background-color: RGB(var(--white)); content: attr(data-text); clip: rect(0px, 999px, 0px, 0px); position: absolute; top: 0px; overflow: hidden; }\n  @keyframes QiGGJ { \n  0% { clip: rect(23px, 999px, 41px, 0px); }\n  5% { clip: rect(41px, 999px, 34px, 0px); }\n  10% { clip: rect(33px, 999px, 2px, 0px); }\n  15% { clip: rect(42px, 999px, 37px, 0px); }\n  20% { clip: rect(42px, 999px, 10px, 0px); }\n  25% { clip: rect(39px, 999px, 12px, 0px); }\n  30% { clip: rect(28px, 999px, 14px, 0px); }\n  35% { clip: rect(4px, 999px, 50px, 0px); }\n  40% { clip: rect(33px, 999px, 36px, 0px); }\n  45% { clip: rect(25px, 999px, 41px, 0px); }\n  50% { clip: rect(14px, 999px, 27px, 0px); }\n  55% { clip: rect(48px, 999px, 14px, 0px); }\n  60% { clip: rect(20px, 999px, 45px, 0px); }\n  65% { clip: rect(9px, 999px, 17px, 0px); }\n  70% { clip: rect(47px, 999px, 47px, 0px); }\n  75% { clip: rect(37px, 999px, 23px, 0px); }\n  80% { clip: rect(19px, 999px, 6px, 0px); }\n  85% { clip: rect(42px, 999px, 48px, 0px); }\n  90% { clip: rect(24px, 999px, 40px, 0px); }\n  95% { clip: rect(39px, 999px, 21px, 0px); }\n  100% { clip: rect(14px, 999px, 16px, 0px); }\n}\n  @keyframes rwZ0T { \n  0% { clip: rect(19px, 999px, 32px, 0px); }\n  5% { clip: rect(36px, 999px, 28px, 0px); }\n  10% { clip: rect(22px, 999px, 9px, 0px); }\n  15% { clip: rect(19px, 999px, 43px, 0px); }\n  20% { clip: rect(21px, 999px, 14px, 0px); }\n  25% { clip...",
          "urls": [],
          "group": "(prefers-reduced-motion: no-preference)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "prefers-reduced-motion",
              "semanticGroup": "user preference",
              "claim": "reduced motion preference",
              "excerpt": "(prefers-reduced-motion: no-preference)",
              "requiresEcho": true,
              "echoTokens": [
                "prefers-reduced-motion",
                "no-preference"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".PsDsm .fKSK_",
          "cssText": ".PsDsm .fKSK_ { background-color: RGB(var(--white)); font-family: Courier, monospace; position: relative; }",
          "urls": [],
          "group": "(prefers-reduced-motion: no-preference)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "prefers-reduced-motion",
              "semanticGroup": "user preference",
              "claim": "reduced motion preference",
              "excerpt": "(prefers-reduced-motion: no-preference)",
              "requiresEcho": true,
              "echoTokens": [
                "prefers-reduced-motion",
                "no-preference"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".PsDsm .fKSK_::after, .PsDsm .fKSK_::before",
          "cssText": ".PsDsm .fKSK_::after, .PsDsm .fKSK_::before { background-color: RGB(var(--white)); content: attr(data-text); clip: rect(0px, 999px, 0px, 0px); position: absolute; top: 0px; overflow: hidden; }",
          "urls": [],
          "group": "(prefers-reduced-motion: no-preference)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "prefers-reduced-motion",
              "semanticGroup": "user preference",
              "claim": "reduced motion preference",
              "excerpt": "(prefers-reduced-motion: no-preference)",
              "requiresEcho": true,
              "echoTokens": [
                "prefers-reduced-motion",
                "no-preference"
              ]
            }
          ]
        },
        {
          "type": "CSSKeyframesRule",
          "selector": "",
          "cssText": "@keyframes QiGGJ { \n  0% { clip: rect(23px, 999px, 41px, 0px); }\n  5% { clip: rect(41px, 999px, 34px, 0px); }\n  10% { clip: rect(33px, 999px, 2px, 0px); }\n  15% { clip: rect(42px, 999px, 37px, 0px); }\n  20% { clip: rect(42px, 999px, 10px, 0px); }\n  25% { clip: rect(39px, 999px, 12px, 0px); }\n  30% { clip: rect(28px, 999px, 14px, 0px); }\n  35% { clip: rect(4px, 999px, 50px, 0px); }\n  40% { clip: rect(33px, 999px, 36px, 0px); }\n  45% { clip: rect(25px, 999px, 41px, 0px); }\n  50% { clip: rect(14px, 999px, 27px, 0px); }\n  55% { clip: rect(48px, 999px, 14px, 0px); }\n  60% { clip: rect(20px, 999px, 45px, 0px); }\n  65% { clip: rect(9px, 999px, 17px, 0px); }\n  70% { clip: rect(47px, 999px, 47px, 0px); }\n  75% { clip: rect(37px, 999px, 23px, 0px); }\n  80% { clip: rect(19px, 999px, 6px, 0px); }\n  85% { clip: rect(42px, 999px, 48px, 0px); }\n  90% { clip: rect(24px, 999px, 40px, 0px); }\n  95% { clip: rect(39px, 999px, 21px, 0px); }\n  100% { clip: rect(14px, 999px, 16px, 0px); }\n}",
          "urls": [],
          "group": "(prefers-reduced-motion: no-preference)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "prefers-reduced-motion",
              "semanticGroup": "user preference",
              "claim": "reduced motion preference",
              "excerpt": "(prefers-reduced-motion: no-preference)",
              "requiresEcho": true,
              "echoTokens": [
                "prefers-reduced-motion",
                "no-preference"
              ]
            }
          ]
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "0% { clip: rect(23px, 999px, 41px, 0px); }",
          "urls": [],
          "group": "(prefers-reduced-motion: no-preference)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "prefers-reduced-motion",
              "semanticGroup": "user preference",
              "claim": "reduced motion preference",
              "excerpt": "(prefers-reduced-motion: no-preference)",
              "requiresEcho": true,
              "echoTokens": [
                "prefers-reduced-motion",
                "no-preference"
              ]
            }
          ]
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "5% { clip: rect(41px, 999px, 34px, 0px); }",
          "urls": [],
          "group": "(prefers-reduced-motion: no-preference)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "prefers-reduced-motion",
              "semanticGroup": "user preference",
              "claim": "reduced motion preference",
              "excerpt": "(prefers-reduced-motion: no-preference)",
              "requiresEcho": true,
              "echoTokens": [
                "prefers-reduced-motion",
                "no-preference"
              ]
            }
          ]
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "10% { clip: rect(33px, 999px, 2px, 0px); }",
          "urls": [],
          "group": "(prefers-reduced-motion: no-preference)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "prefers-reduced-motion",
              "semanticGroup": "user preference",
              "claim": "reduced motion preference",
              "excerpt": "(prefers-reduced-motion: no-preference)",
              "requiresEcho": true,
              "echoTokens": [
                "prefers-reduced-motion",
                "no-preference"
              ]
            }
          ]
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "15% { clip: rect(42px, 999px, 37px, 0px); }",
          "urls": [],
          "group": "(prefers-reduced-motion: no-preference)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "prefers-reduced-motion",
              "semanticGroup": "user preference",
              "claim": "reduced motion preference",
              "excerpt": "(prefers-reduced-motion: no-preference)",
              "requiresEcho": true,
              "echoTokens": [
                "prefers-reduced-motion",
                "no-preference"
              ]
            }
          ]
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "20% { clip: rect(42px, 999px, 10px, 0px); }",
          "urls": [],
          "group": "(prefers-reduced-motion: no-preference)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "prefers-reduced-motion",
              "semanticGroup": "user preference",
              "claim": "reduced motion preference",
              "excerpt": "(prefers-reduced-motion: no-preference)",
              "requiresEcho": true,
              "echoTokens": [
                "prefers-reduced-motion",
                "no-preference"
              ]
            }
          ]
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "25% { clip: rect(39px, 999px, 12px, 0px); }",
          "urls": [],
          "group": "(prefers-reduced-motion: no-preference)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "prefers-reduced-motion",
              "semanticGroup": "user preference",
              "claim": "reduced motion preference",
              "excerpt": "(prefers-reduced-motion: no-preference)",
              "requiresEcho": true,
              "echoTokens": [
                "prefers-reduced-motion",
                "no-preference"
              ]
            }
          ]
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "30% { clip: rect(28px, 999px, 14px, 0px); }",
          "urls": [],
          "group": "(prefers-reduced-motion: no-preference)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "prefers-reduced-motion",
              "semanticGroup": "user preference",
              "claim": "reduced motion preference",
              "excerpt": "(prefers-reduced-motion: no-preference)",
              "requiresEcho": true,
              "echoTokens": [
                "prefers-reduced-motion",
                "no-preference"
              ]
            }
          ]
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "35% { clip: rect(4px, 999px, 50px, 0px); }",
          "urls": [],
          "group": "(prefers-reduced-motion: no-preference)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "prefers-reduced-motion",
              "semanticGroup": "user preference",
              "claim": "reduced motion preference",
              "excerpt": "(prefers-reduced-motion: no-preference)",
              "requiresEcho": true,
              "echoTokens": [
                "prefers-reduced-motion",
                "no-preference"
              ]
            }
          ]
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "40% { clip: rect(33px, 999px, 36px, 0px); }",
          "urls": [],
          "group": "(prefers-reduced-motion: no-preference)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "prefers-reduced-motion",
              "semanticGroup": "user preference",
              "claim": "reduced motion preference",
              "excerpt": "(prefers-reduced-motion: no-preference)",
              "requiresEcho": true,
              "echoTokens": [
                "prefers-reduced-motion",
                "no-preference"
              ]
            }
          ]
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "45% { clip: rect(25px, 999px, 41px, 0px); }",
          "urls": [],
          "group": "(prefers-reduced-motion: no-preference)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "prefers-reduced-motion",
              "semanticGroup": "user preference",
              "claim": "reduced motion preference",
              "excerpt": "(prefers-reduced-motion: no-preference)",
              "requiresEcho": true,
              "echoTokens": [
                "prefers-reduced-motion",
                "no-preference"
              ]
            }
          ]
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "50% { clip: rect(14px, 999px, 27px, 0px); }",
          "urls": [],
          "group": "(prefers-reduced-motion: no-preference)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "prefers-reduced-motion",
              "semanticGroup": "user preference",
              "claim": "reduced motion preference",
              "excerpt": "(prefers-reduced-motion: no-preference)",
              "requiresEcho": true,
              "echoTokens": [
                "prefers-reduced-motion",
                "no-preference"
              ]
            }
          ]
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "55% { clip: rect(48px, 999px, 14px, 0px); }",
          "urls": [],
          "group": "(prefers-reduced-motion: no-preference)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "prefers-reduced-motion",
              "semanticGroup": "user preference",
              "claim": "reduced motion preference",
              "excerpt": "(prefers-reduced-motion: no-preference)",
              "requiresEcho": true,
              "echoTokens": [
                "prefers-reduced-motion",
                "no-preference"
              ]
            }
          ]
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "60% { clip: rect(20px, 999px, 45px, 0px); }",
          "urls": [],
          "group": "(prefers-reduced-motion: no-preference)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "prefers-reduced-motion",
              "semanticGroup": "user preference",
              "claim": "reduced motion preference",
              "excerpt": "(prefers-reduced-motion: no-preference)",
              "requiresEcho": true,
              "echoTokens": [
                "prefers-reduced-motion",
                "no-preference"
              ]
            }
          ]
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "65% { clip: rect(9px, 999px, 17px, 0px); }",
          "urls": [],
          "group": "(prefers-reduced-motion: no-preference)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "prefers-reduced-motion",
              "semanticGroup": "user preference",
              "claim": "reduced motion preference",
              "excerpt": "(prefers-reduced-motion: no-preference)",
              "requiresEcho": true,
              "echoTokens": [
                "prefers-reduced-motion",
                "no-preference"
              ]
            }
          ]
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "70% { clip: rect(47px, 999px, 47px, 0px); }",
          "urls": [],
          "group": "(prefers-reduced-motion: no-preference)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "prefers-reduced-motion",
              "semanticGroup": "user preference",
              "claim": "reduced motion preference",
              "excerpt": "(prefers-reduced-motion: no-preference)",
              "requiresEcho": true,
              "echoTokens": [
                "prefers-reduced-motion",
                "no-preference"
              ]
            }
          ]
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "75% { clip: rect(37px, 999px, 23px, 0px); }",
          "urls": [],
          "group": "(prefers-reduced-motion: no-preference)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "prefers-reduced-motion",
              "semanticGroup": "user preference",
              "claim": "reduced motion preference",
              "excerpt": "(prefers-reduced-motion: no-preference)",
              "requiresEcho": true,
              "echoTokens": [
                "prefers-reduced-motion",
                "no-preference"
              ]
            }
          ]
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "80% { clip: rect(19px, 999px, 6px, 0px); }",
          "urls": [],
          "group": "(prefers-reduced-motion: no-preference)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "prefers-reduced-motion",
              "semanticGroup": "user preference",
              "claim": "reduced motion preference",
              "excerpt": "(prefers-reduced-motion: no-preference)",
              "requiresEcho": true,
              "echoTokens": [
                "prefers-reduced-motion",
                "no-preference"
              ]
            }
          ]
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "85% { clip: rect(42px, 999px, 48px, 0px); }",
          "urls": [],
          "group": "(prefers-reduced-motion: no-preference)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "prefers-reduced-motion",
              "semanticGroup": "user preference",
              "claim": "reduced motion preference",
              "excerpt": "(prefers-reduced-motion: no-preference)",
              "requiresEcho": true,
              "echoTokens": [
                "prefers-reduced-motion",
                "no-preference"
              ]
            }
          ]
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "90% { clip: rect(24px, 999px, 40px, 0px); }",
          "urls": [],
          "group": "(prefers-reduced-motion: no-preference)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "prefers-reduced-motion",
              "semanticGroup": "user preference",
              "claim": "reduced motion preference",
              "excerpt": "(prefers-reduced-motion: no-preference)",
              "requiresEcho": true,
              "echoTokens": [
                "prefers-reduced-motion",
                "no-preference"
              ]
            }
          ]
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "95% { clip: rect(39px, 999px, 21px, 0px); }",
          "urls": [],
          "group": "(prefers-reduced-motion: no-preference)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "prefers-reduced-motion",
              "semanticGroup": "user preference",
              "claim": "reduced motion preference",
              "excerpt": "(prefers-reduced-motion: no-preference)",
              "requiresEcho": true,
              "echoTokens": [
                "prefers-reduced-motion",
                "no-preference"
              ]
            }
          ]
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "100% { clip: rect(14px, 999px, 16px, 0px); }",
          "urls": [],
          "group": "(prefers-reduced-motion: no-preference)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "prefers-reduced-motion",
              "semanticGroup": "user preference",
              "claim": "reduced motion preference",
              "excerpt": "(prefers-reduced-motion: no-preference)",
              "requiresEcho": true,
              "echoTokens": [
                "prefers-reduced-motion",
                "no-preference"
              ]
            }
          ]
        },
        {
          "type": "CSSKeyframesRule",
          "selector": "",
          "cssText": "@keyframes rwZ0T { \n  0% { clip: rect(19px, 999px, 32px, 0px); }\n  5% { clip: rect(36px, 999px, 28px, 0px); }\n  10% { clip: rect(22px, 999px, 9px, 0px); }\n  15% { clip: rect(19px, 999px, 43px, 0px); }\n  20% { clip: rect(21px, 999px, 14px, 0px); }\n  25% { clip: rect(37px, 999px, 37px, 0px); }\n  30% { clip: rect(34px, 999px, 27px, 0px); }\n  35% { clip: rect(47px, 999px, 14px, 0px); }\n  40% { clip: rect(43px, 999px, 39px, 0px); }\n  45% { clip: rect(2px, 999px, 47px, 0px); }\n  50% { clip: rect(7px, 999px, 36px, 0px); }\n  55% { clip: rect(44px, 999px, 14px, 0px); }\n  60% { clip: rect(34px, 999px, 16px, 0px); }\n  65% { clip: rect(30px, 999px, 9px, 0px); }\n  70% { clip: rect(12px, 999px, 8px, 0px); }\n  75% { clip: rect(32px, 999px, 45px, 0px); }\n  80% { clip: rect(34px, 999px, 24px, 0px); }\n  85% { clip: rect(41px, 999px, 10px, 0px); }\n  90% { clip: rect(13px, 999px, 48px, 0px); }\n  95% { clip: rect(48px, 999px, 9px, 0px); }\n  100% { clip: rect(17px, 999px, 28px, 0px); }\n}",
          "urls": [],
          "group": "(prefers-reduced-motion: no-preference)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "prefers-reduced-motion",
              "semanticGroup": "user preference",
              "claim": "reduced motion preference",
              "excerpt": "(prefers-reduced-motion: no-preference)",
              "requiresEcho": true,
              "echoTokens": [
                "prefers-reduced-motion",
                "no-preference"
              ]
            }
          ]
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "0% { clip: rect(19px, 999px, 32px, 0px); }",
          "urls": [],
          "group": "(prefers-reduced-motion: no-preference)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "prefers-reduced-motion",
              "semanticGroup": "user preference",
              "claim": "reduced motion preference",
              "excerpt": "(prefers-reduced-motion: no-preference)",
              "requiresEcho": true,
              "echoTokens": [
                "prefers-reduced-motion",
                "no-preference"
              ]
            }
          ]
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "5% { clip: rect(36px, 999px, 28px, 0px); }",
          "urls": [],
          "group": "(prefers-reduced-motion: no-preference)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "prefers-reduced-motion",
              "semanticGroup": "user preference",
              "claim": "reduced motion preference",
              "excerpt": "(prefers-reduced-motion: no-preference)",
              "requiresEcho": true,
              "echoTokens": [
                "prefers-reduced-motion",
                "no-preference"
              ]
            }
          ]
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "10% { clip: rect(22px, 999px, 9px, 0px); }",
          "urls": [],
          "group": "(prefers-reduced-motion: no-preference)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "prefers-reduced-motion",
              "semanticGroup": "user preference",
              "claim": "reduced motion preference",
              "excerpt": "(prefers-reduced-motion: no-preference)",
              "requiresEcho": true,
              "echoTokens": [
                "prefers-reduced-motion",
                "no-preference"
              ]
            }
          ]
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "15% { clip: rect(19px, 999px, 43px, 0px); }",
          "urls": [],
          "group": "(prefers-reduced-motion: no-preference)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "prefers-reduced-motion",
              "semanticGroup": "user preference",
              "claim": "reduced motion preference",
              "excerpt": "(prefers-reduced-motion: no-preference)",
              "requiresEcho": true,
              "echoTokens": [
                "prefers-reduced-motion",
                "no-preference"
              ]
            }
          ]
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "20% { clip: rect(21px, 999px, 14px, 0px); }",
          "urls": [],
          "group": "(prefers-reduced-motion: no-preference)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "prefers-reduced-motion",
              "semanticGroup": "user preference",
              "claim": "reduced motion preference",
              "excerpt": "(prefers-reduced-motion: no-preference)",
              "requiresEcho": true,
              "echoTokens": [
                "prefers-reduced-motion",
                "no-preference"
              ]
            }
          ]
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "25% { clip: rect(37px, 999px, 37px, 0px); }",
          "urls": [],
          "group": "(prefers-reduced-motion: no-preference)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "prefers-reduced-motion",
              "semanticGroup": "user preference",
              "claim": "reduced motion preference",
              "excerpt": "(prefers-reduced-motion: no-preference)",
              "requiresEcho": true,
              "echoTokens": [
                "prefers-reduced-motion",
                "no-preference"
              ]
            }
          ]
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "30% { clip: rect(34px, 999px, 27px, 0px); }",
          "urls": [],
          "group": "(prefers-reduced-motion: no-preference)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "prefers-reduced-motion",
              "semanticGroup": "user preference",
              "claim": "reduced motion preference",
              "excerpt": "(prefers-reduced-motion: no-preference)",
              "requiresEcho": true,
              "echoTokens": [
                "prefers-reduced-motion",
                "no-preference"
              ]
            }
          ]
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "35% { clip: rect(47px, 999px, 14px, 0px); }",
          "urls": [],
          "group": "(prefers-reduced-motion: no-preference)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "prefers-reduced-motion",
              "semanticGroup": "user preference",
              "claim": "reduced motion preference",
              "excerpt": "(prefers-reduced-motion: no-preference)",
              "requiresEcho": true,
              "echoTokens": [
                "prefers-reduced-motion",
                "no-preference"
              ]
            }
          ]
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "40% { clip: rect(43px, 999px, 39px, 0px); }",
          "urls": [],
          "group": "(prefers-reduced-motion: no-preference)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "prefers-reduced-motion",
              "semanticGroup": "user preference",
              "claim": "reduced motion preference",
              "excerpt": "(prefers-reduced-motion: no-preference)",
              "requiresEcho": true,
              "echoTokens": [
                "prefers-reduced-motion",
                "no-preference"
              ]
            }
          ]
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "45% { clip: rect(2px, 999px, 47px, 0px); }",
          "urls": [],
          "group": "(prefers-reduced-motion: no-preference)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "prefers-reduced-motion",
              "semanticGroup": "user preference",
              "claim": "reduced motion preference",
              "excerpt": "(prefers-reduced-motion: no-preference)",
              "requiresEcho": true,
              "echoTokens": [
                "prefers-reduced-motion",
                "no-preference"
              ]
            }
          ]
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "50% { clip: rect(7px, 999px, 36px, 0px); }",
          "urls": [],
          "group": "(prefers-reduced-motion: no-preference)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "prefers-reduced-motion",
              "semanticGroup": "user preference",
              "claim": "reduced motion preference",
              "excerpt": "(prefers-reduced-motion: no-preference)",
              "requiresEcho": true,
              "echoTokens": [
                "prefers-reduced-motion",
                "no-preference"
              ]
            }
          ]
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "55% { clip: rect(44px, 999px, 14px, 0px); }",
          "urls": [],
          "group": "(prefers-reduced-motion: no-preference)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "prefers-reduced-motion",
              "semanticGroup": "user preference",
              "claim": "reduced motion preference",
              "excerpt": "(prefers-reduced-motion: no-preference)",
              "requiresEcho": true,
              "echoTokens": [
                "prefers-reduced-motion",
                "no-preference"
              ]
            }
          ]
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "60% { clip: rect(34px, 999px, 16px, 0px); }",
          "urls": [],
          "group": "(prefers-reduced-motion: no-preference)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "prefers-reduced-motion",
              "semanticGroup": "user preference",
              "claim": "reduced motion preference",
              "excerpt": "(prefers-reduced-motion: no-preference)",
              "requiresEcho": true,
              "echoTokens": [
                "prefers-reduced-motion",
                "no-preference"
              ]
            }
          ]
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "65% { clip: rect(30px, 999px, 9px, 0px); }",
          "urls": [],
          "group": "(prefers-reduced-motion: no-preference)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "prefers-reduced-motion",
              "semanticGroup": "user preference",
              "claim": "reduced motion preference",
              "excerpt": "(prefers-reduced-motion: no-preference)",
              "requiresEcho": true,
              "echoTokens": [
                "prefers-reduced-motion",
                "no-preference"
              ]
            }
          ]
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "70% { clip: rect(12px, 999px, 8px, 0px); }",
          "urls": [],
          "group": "(prefers-reduced-motion: no-preference)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "prefers-reduced-motion",
              "semanticGroup": "user preference",
              "claim": "reduced motion preference",
              "excerpt": "(prefers-reduced-motion: no-preference)",
              "requiresEcho": true,
              "echoTokens": [
                "prefers-reduced-motion",
                "no-preference"
              ]
            }
          ]
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "75% { clip: rect(32px, 999px, 45px, 0px); }",
          "urls": [],
          "group": "(prefers-reduced-motion: no-preference)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "prefers-reduced-motion",
              "semanticGroup": "user preference",
              "claim": "reduced motion preference",
              "excerpt": "(prefers-reduced-motion: no-preference)",
              "requiresEcho": true,
              "echoTokens": [
                "prefers-reduced-motion",
                "no-preference"
              ]
            }
          ]
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "80% { clip: rect(34px, 999px, 24px, 0px); }",
          "urls": [],
          "group": "(prefers-reduced-motion: no-preference)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "prefers-reduced-motion",
              "semanticGroup": "user preference",
              "claim": "reduced motion preference",
              "excerpt": "(prefers-reduced-motion: no-preference)",
              "requiresEcho": true,
              "echoTokens": [
                "prefers-reduced-motion",
                "no-preference"
              ]
            }
          ]
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "85% { clip: rect(41px, 999px, 10px, 0px); }",
          "urls": [],
          "group": "(prefers-reduced-motion: no-preference)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "prefers-reduced-motion",
              "semanticGroup": "user preference",
              "claim": "reduced motion preference",
              "excerpt": "(prefers-reduced-motion: no-preference)",
              "requiresEcho": true,
              "echoTokens": [
                "prefers-reduced-motion",
                "no-preference"
              ]
            }
          ]
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "90% { clip: rect(13px, 999px, 48px, 0px); }",
          "urls": [],
          "group": "(prefers-reduced-motion: no-preference)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "prefers-reduced-motion",
              "semanticGroup": "user preference",
              "claim": "reduced motion preference",
              "excerpt": "(prefers-reduced-motion: no-preference)",
              "requiresEcho": true,
              "echoTokens": [
                "prefers-reduced-motion",
                "no-preference"
              ]
            }
          ]
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "95% { clip: rect(48px, 999px, 9px, 0px); }",
          "urls": [],
          "group": "(prefers-reduced-motion: no-preference)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "prefers-reduced-motion",
              "semanticGroup": "user preference",
              "claim": "reduced motion preference",
              "excerpt": "(prefers-reduced-motion: no-preference)",
              "requiresEcho": true,
              "echoTokens": [
                "prefers-reduced-motion",
                "no-preference"
              ]
            }
          ]
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "100% { clip: rect(17px, 999px, 28px, 0px); }",
          "urls": [],
          "group": "(prefers-reduced-motion: no-preference)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "prefers-reduced-motion",
              "semanticGroup": "user preference",
              "claim": "reduced motion preference",
              "excerpt": "(prefers-reduced-motion: no-preference)",
              "requiresEcho": true,
              "echoTokens": [
                "prefers-reduced-motion",
                "no-preference"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".PsDsm .fKSK_::after",
          "cssText": ".PsDsm .fKSK_::after { text-shadow: rgb(255, 73, 48) -0.5px 0px; width: 100%; animation: 2s linear 0s infinite alternate-reverse none running QiGGJ; left: 1px; }",
          "urls": [],
          "group": "(prefers-reduced-motion: no-preference)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "prefers-reduced-motion",
              "semanticGroup": "user preference",
              "claim": "reduced motion preference",
              "excerpt": "(prefers-reduced-motion: no-preference)",
              "requiresEcho": true,
              "echoTokens": [
                "prefers-reduced-motion",
                "no-preference"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".PsDsm .fKSK_::before",
          "cssText": ".PsDsm .fKSK_::before { text-shadow: rgb(255, 73, 48) 0.5px 0px; width: 100%; animation: 3s linear 0s infinite alternate-reverse none running rwZ0T; left: -1px; }",
          "urls": [],
          "group": "(prefers-reduced-motion: no-preference)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "prefers-reduced-motion",
              "semanticGroup": "user preference",
              "claim": "reduced motion preference",
              "excerpt": "(prefers-reduced-motion: no-preference)",
              "requiresEcho": true,
              "echoTokens": [
                "prefers-reduced-motion",
                "no-preference"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".PsDsm .y0ODD",
          "cssText": ".PsDsm .y0ODD { max-width: 100px; font-size: 0.78125rem; font-weight: 700; line-height: 1.52; font-family: var(--font-family); background: RGB(var(--orange)); color: RGB(var(--white)); margin-right: -20px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".PsDsm .y0ODD:hover",
          "cssText": ".PsDsm .y0ODD:hover { background: RGB(var(--orange)); color: RGB(var(--white)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".PsDsm .eCIpW",
          "cssText": ".PsDsm .eCIpW { flex-flow: wrap; justify-content: space-between; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".zM2xK",
          "cssText": ".zM2xK { z-index: 100; pointer-events: none; width: 100%; height: 100%; position: fixed; top: 0px; left: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".G_65K",
          "cssText": ".G_65K { height: 320px; position: absolute; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".qYB4A",
          "cssText": ".qYB4A { box-sizing: border-box; z-index: 101; background-color: RGB(var(--white)); width: 100%; min-width: 359px; max-width: 540px; color: RGB(var(--black)); border-radius: 12px; flex-direction: column; gap: 8px; padding: 24px; display: flex; position: fixed; top: 50%; left: 50%; overflow: hidden; transform: translate(-50%, -50%); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 540px) {\n  .qYB4A { max-width: 90%; }\n}",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".qYB4A",
          "cssText": ".qYB4A { max-width: 90%; }",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".qYB4A.OPdSo",
          "cssText": ".qYB4A.OPdSo { background-color: RGB(var(--white)); color: RGB(var(--black)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".qYB4A.Cg4tf",
          "cssText": ".qYB4A.Cg4tf { background-color: var(--image-ui-fg); color: var(--brand-orange); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[data-backdrop]",
          "cssText": "[data-backdrop] { z-index: 100; background-color: rgba(var(--navy),.87); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".L5m3Q",
          "cssText": ".L5m3Q { font-size: 1rem; line-height: 1.5rem; font-family: var(--font-family); text-align: center; margin-top: 16px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".i820W",
          "cssText": ".i820W { font-size: 1.5rem; line-height: 2rem; font-family: var(--font-family); font-weight: 700; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".cYyad",
          "cssText": ".cYyad { font-size: 1rem; line-height: 1.5rem; font-family: var(--font-family); border-radius: 32px; align-self: center; padding: 12px 54px; font-weight: 350; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".cYyad:focus",
          "cssText": ".cYyad:focus { outline: rgb(0, 184, 255) auto; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".cYyad:focus > .Evj9j",
          "cssText": ".cYyad:focus > .Evj9j { outline: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".coRbX",
          "cssText": ".coRbX { color: rgb(255, 255, 255); background-color: rgb(124, 92, 255); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".coRbX.Cg4tf",
          "cssText": ".coRbX.Cg4tf { background-color: var(--brand-orange); color: rgb(0, 0, 0); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".WCnSw",
          "cssText": ".WCnSw { color: rgb(0, 184, 255); border-radius: 32px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".WCnSw.Cg4tf",
          "cssText": ".WCnSw.Cg4tf { color: var(--image-ui-fg-secondary); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".LinLf",
          "cssText": ".LinLf { color: rgba(var(--black),.4); position: absolute; right: 24px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".LinLf.Cg4tf",
          "cssText": ".LinLf.Cg4tf { color: var(--image-ui-fg-secondary); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".qUKL1",
          "cssText": ".qUKL1 { position: absolute; -webkit-user-drag: none !important; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".SXedv",
          "cssText": ".SXedv { opacity: 0.2; width: 99px; position: absolute; bottom: -140px; left: -32px; transform: rotate(30deg); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".oggFG",
          "cssText": ".oggFG { opacity: 0.2; width: 99px; top: 42px; right: -67px; transform: rotate(-45deg); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".b8VbU",
          "cssText": ".b8VbU { color: rgb(255, 73, 48); font-weight: 700; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".CyJFB",
          "cssText": ".CyJFB { color: rgb(124, 92, 255); font-weight: 700; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".BoVGf",
          "cssText": ".BoVGf { background-color: rgb(124, 92, 255) !important; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".zq7p5",
          "cssText": ".zq7p5 { background: 0px 0px; border-radius: 50%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".zq7p5 > span",
          "cssText": ".zq7p5 > span { padding: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hTwTJ",
          "cssText": ".hTwTJ { width: 40px; height: 40px; box-shadow: 0 2px 4px -2px rgba(var(--black),.8); border-radius: 50%; -webkit-user-drag: none !important; user-select: none !important; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".juYLo",
          "cssText": ".juYLo { color: rgb(124, 92, 255); font-weight: 700; line-height: 1rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".juYLo:hover, .juYLo:focus",
          "cssText": ".juYLo:hover, .juYLo:focus { outline: none; text-decoration: underline; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".qgS4W",
          "cssText": ".qgS4W { position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".A7cEM span",
          "cssText": ".A7cEM span { text-decoration: underline; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".V9FJD",
          "cssText": ".V9FJD { display: inline-block; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "._fH4T",
          "cssText": "._fH4T { color: rgb(255, 255, 255); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".VcWAj",
          "cssText": ".VcWAj { font-size: 0.78125rem; font-weight: 700; line-height: 1.52; font-family: var(--font-family); white-space: nowrap; border-radius: 4px; padding: 0px 4px; display: inline-block; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".WuiH9",
          "cssText": ".WuiH9 { vertical-align: middle; margin-left: 4px; position: relative; bottom: 1px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".vgL3J",
          "cssText": ".vgL3J { min-width: 200px; max-width: 298px; font-size: 1rem; font-weight: 350; line-height: 1.5rem; font-family: var(--font-family-modern); background-color: var(--education); color: var(--color-fg-light); text-align: center; cursor: pointer; border-radius: 8px; flex-direction: row; align-items: center; gap: 10px; padding: 8px 16px; display: flex; position: relative; box-shadow: rgba(0, 0, 0, 0.2) 0px 12px 32px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSSupportsRule",
          "selector": "",
          "cssText": "@supports (text-wrap:pretty) {\n  .vgL3J { text-wrap: pretty; }\n}",
          "urls": [],
          "group": "(text-wrap:pretty)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "(text-wrap:pretty)",
              "requiresEcho": true,
              "echoTokens": [
                "text-wrap",
                "pretty"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".vgL3J",
          "cssText": ".vgL3J { text-wrap: pretty; }",
          "urls": [],
          "group": "(text-wrap:pretty)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "(text-wrap:pretty)",
              "requiresEcho": true,
              "echoTokens": [
                "text-wrap",
                "pretty"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".vgL3J.l98yg",
          "cssText": ".vgL3J.l98yg { padding: 8px 8px 8px 16px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".xBAX7",
          "cssText": ".xBAX7 { align-self: flex-start; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".oMP8i[data-placement*=\"right\"]::after",
          "cssText": ".oMP8i[data-placement*=\"right\"]::after { border-right-color: var(--education); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".oMP8i[data-placement*=\"left\"]::after",
          "cssText": ".oMP8i[data-placement*=\"left\"]::after { border-left-color: var(--education); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".oMP8i[data-placement*=\"top\"]",
          "cssText": ".oMP8i[data-placement*=\"top\"] { bottom: -16px; left: 100px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".oMP8i[data-placement*=\"top\"].lkake",
          "cssText": ".oMP8i[data-placement*=\"top\"].lkake { left: 92px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".oMP8i[data-placement*=\"top\"]::after",
          "cssText": ".oMP8i[data-placement*=\"top\"]::after { border-top-color: var(--education); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".oMP8i[data-placement*=\"bottom\"]",
          "cssText": ".oMP8i[data-placement*=\"bottom\"] { top: -16px; left: 100px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".oMP8i[data-placement*=\"bottom\"].lkake",
          "cssText": ".oMP8i[data-placement*=\"bottom\"].lkake { left: 92px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".oMP8i[data-placement*=\"bottom\"]::after",
          "cssText": ".oMP8i[data-placement*=\"bottom\"]::after { border-bottom-color: var(--education); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".SW1rE",
          "cssText": ".SW1rE { color: rgb(74, 55, 153); background-color: rgb(235, 231, 255); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Id3fJ",
          "cssText": ".Id3fJ { color: rgb(1, 124, 32); background-color: rgb(217, 248, 225); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".palette--cement .XGAPj",
          "cssText": ".palette--cement .XGAPj { color: RGB(var(--deprecated-accent)); background-color: rgb(217, 217, 217); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".palette--canary .XGAPj",
          "cssText": ".palette--canary .XGAPj { color: RGB(var(--deprecated-accent)); background-color: rgb(229, 229, 174); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".palette--ghost .XGAPj",
          "cssText": ".palette--ghost .XGAPj { color: rgb(100, 100, 100); background-color: rgb(244, 244, 244); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".palette--darkMode .SW1rE",
          "cssText": ".palette--darkMode .SW1rE { color: rgb(155, 147, 255); background-color: rgb(59, 50, 98); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".palette--darkMode .Id3fJ, .palette--cybernetic .XGAPj",
          "cssText": ".palette--darkMode .Id3fJ, .palette--cybernetic .XGAPj { color: rgb(1, 207, 53); background-color: rgb(26, 74, 38); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".palette--lowContrastClassic .SW1rE",
          "cssText": ".palette--lowContrastClassic .SW1rE { color: rgb(161, 127, 190); background-color: rgb(38, 53, 72); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".palette--lowContrastClassic .Id3fJ",
          "cssText": ".palette--lowContrastClassic .Id3fJ { color: rgb(113, 186, 142); background-color: rgb(38, 53, 72); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".palette--gothRave .XGAPj",
          "cssText": ".palette--gothRave .XGAPj { color: rgb(139, 199, 227); background-color: rgb(35, 58, 94); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".palette--gothRave .Id3fJ",
          "cssText": ".palette--gothRave .Id3fJ { color: rgb(192, 78, 229); background-color: rgb(48, 50, 102); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".palette--snowBright .XGAPj",
          "cssText": ".palette--snowBright .XGAPj { color: RGB(var(--black)); background-color: rgb(237, 237, 237); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".palette--pumpkin .XGAPj",
          "cssText": ".palette--pumpkin .XGAPj { color: rgb(237, 110, 45); background-color: rgb(74, 42, 12); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".palette--vampire .XGAPj",
          "cssText": ".palette--vampire .XGAPj { color: rgb(236, 88, 63); background-color: rgb(50, 50, 50); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".palette--pride .XGAPj",
          "cssText": ".palette--pride .XGAPj { color: rgb(29, 77, 246); background-color: rgb(249, 209, 232); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".TZgeO",
          "cssText": ".TZgeO { font-size: 0.875rem; font-weight: 350; line-height: 1.25rem; font-family: var(--font-family-modern); gap: 12px; padding: 16px; display: flex; position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".TZgeO.Q9pIH",
          "cssText": ".TZgeO.Q9pIH { background-color: var(--unread-tint); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media not (min-width: 990px) {\n  .TZgeO { padding: 12px 16px; }\n}",
          "urls": [],
          "group": "not (min-width: 990px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "not (min-width: 990px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "990px",
                "990",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".TZgeO",
          "cssText": ".TZgeO { padding: 12px 16px; }",
          "urls": [],
          "group": "not (min-width: 990px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "not (min-width: 990px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "990px",
                "990",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".MFUX1.jdZxE.WG8QO:hover, .MFUX1:hover",
          "cssText": ".MFUX1.jdZxE.WG8QO:hover, .MFUX1:hover { background-color: var(--content-tint); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".MFUX1:focus-within",
          "cssText": ".MFUX1:focus-within { background-color: var(--content-tint); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".MFUX1.jdZxE.WG8QO:hover .GcYHh, .MFUX1:hover .GcYHh",
          "cssText": ".MFUX1.jdZxE.WG8QO:hover .GcYHh, .MFUX1:hover .GcYHh { opacity: 1; transform: scale(1); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".MFUX1:focus-within .GcYHh",
          "cssText": ".MFUX1:focus-within .GcYHh { opacity: 1; transform: scale(1); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".MFUX1.Q9pIH.jdZxE.WG8QO:hover, .MFUX1.Q9pIH:hover",
          "cssText": ".MFUX1.Q9pIH.jdZxE.WG8QO:hover, .MFUX1.Q9pIH:hover { background-color: var(--unread-tint-hover); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".MFUX1.Q9pIH:focus-within",
          "cssText": ".MFUX1.Q9pIH:focus-within { background-color: var(--unread-tint-hover); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".DLXwu",
          "cssText": ".DLXwu { position: absolute; inset: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".sUd0D > svg",
          "cssText": ".sUd0D > svg { border-radius: 3px; display: block; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".vMoNw",
          "cssText": ".vMoNw { width: 38px; height: 38px; position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".vMoNw .L9Dyd",
          "cssText": ".vMoNw .L9Dyd { border-width: 2px; border-style: solid; border-image: initial; border-color: var(--content-panel); border-radius: 100%; position: absolute; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".vMoNw .UUvug",
          "cssText": ".vMoNw .UUvug { top: 12px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".vMoNw .w2aY6",
          "cssText": ".vMoNw .w2aY6 { left: 12px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".vMoNw .SweT3",
          "cssText": ".vMoNw .SweT3 { position: absolute; top: 24px; left: 24px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".eToRo",
          "cssText": ".eToRo { color: var(--content-fg); flex: 1 1 0%; align-self: flex-start; padding-right: 12px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".eToRo a",
          "cssText": ".eToRo a { text-decoration: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".WbQbN",
          "cssText": ".WbQbN { align-self: center; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".D628P",
          "cssText": ".D628P { text-decoration: none; display: block; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".kQQQn",
          "cssText": ".kQQQn { padding-bottom: 1px; font-weight: 700; display: inline-block; position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".kQQQn a",
          "cssText": ".kQQQn a { text-decoration: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".YJypF",
          "cssText": ".YJypF { margin-right: 4px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".SN46Y",
          "cssText": ".SN46Y { margin-right: 10px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".kWoNo",
          "cssText": ".kWoNo { color: var(--content-fg-secondary); word-break: break-word; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ii4mk",
          "cssText": ".ii4mk { color: var(--content-fg-secondary); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".EOr4z",
          "cssText": ".EOr4z { border-left: 3px solid var(--content-fg-secondary); overflow-wrap: anywhere; padding-left: 10px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".EOr4z.GHgGx",
          "cssText": ".EOr4z.GHgGx { color: var(--content-fg); border-left: none; padding-left: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".WbSqD .p1Tks, .WbSqD .WN61D",
          "cssText": ".WbSqD .p1Tks, .WbSqD .WN61D { background-repeat: no-repeat; background-size: cover; background-color: var(--content-panel); cursor: pointer; border-radius: 3px; justify-content: center; align-items: center; width: 36px; height: 36px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".WbSqD ._2O8W",
          "cssText": ".WbSqD ._2O8W { background-image: url(\"https://64.media.tumblr.com/ee878ad56d5181454afc8e5c72c5208e/bb3f602a8a676965-7f/s500x750/2da77174d7f11cc6414a87a584585954a67dc3f5.jpg\"); background-position: 50% center; }",
          "urls": [
            "https://64.media.tumblr.com/ee878ad56d5181454afc8e5c72c5208e/bb3f602a8a676965-7f/s500x750/2da77174d7f11cc6414a87a584585954a67dc3f5.jpg"
          ],
          "group": "",
          "sources": [],
          "sinks": [
            {
              "reason": "url_sink",
              "urls": [
                "https://64.media.tumblr.com/ee878ad56d5181454afc8e5c72c5208e/bb3f602a8a676965-7f/s500x750/2da77174d7f11cc6414a87a584585954a67dc3f5.jpg"
              ]
            }
          ],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".WbSqD .S2Lt2",
          "cssText": ".WbSqD .S2Lt2 { background-image: url(\"https://64.media.tumblr.com/fb01d5baa341626cf60bc53b855710ec/d52a3b2d13ecb3fb-55/s100x200/0e08f91d6e3fe2440088cf3bf10e94eb535df1fa.pnj\"), linear-gradient(168deg, rgb(93, 70, 191) 0%, rgb(255, 98, 206) 100%); background-position: 50% center; }",
          "urls": [
            "https://64.media.tumblr.com/fb01d5baa341626cf60bc53b855710ec/d52a3b2d13ecb3fb-55/s100x200/0e08f91d6e3fe2440088cf3bf10e94eb535df1fa.pnj"
          ],
          "group": "",
          "sources": [],
          "sinks": [
            {
              "reason": "url_sink",
              "urls": [
                "https://64.media.tumblr.com/fb01d5baa341626cf60bc53b855710ec/d52a3b2d13ecb3fb-55/s100x200/0e08f91d6e3fe2440088cf3bf10e94eb535df1fa.pnj"
              ]
            }
          ],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".WbSqD .pD1KD, .WbSqD ._D598, .WbSqD .nY489",
          "cssText": ".WbSqD .pD1KD, .WbSqD ._D598, .WbSqD .nY489 { background-color: var(--content-fg); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".WbSqD .gaysk",
          "cssText": ".WbSqD .gaysk { background-color: RGB(var(--purple)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".WbSqD .e70MT",
          "cssText": ".WbSqD .e70MT { background-color: RGB(var(--deprecated-accent)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".WbSqD .i3OPA",
          "cssText": ".WbSqD .i3OPA { background-color: RGB(var(--green)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".WbSqD .lwy4l",
          "cssText": ".WbSqD .lwy4l { background-color: RGB(var(--orange)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".WbSqD .YnFEM",
          "cssText": ".WbSqD .YnFEM { background-color: rgb(116, 128, 137); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".WbSqD.IQ4eI",
          "cssText": ".WbSqD.IQ4eI { pointer-events: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".j7ftx",
          "cssText": ".j7ftx { position: relative; overflow: hidden; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".j7ftx::after",
          "cssText": ".j7ftx::after { backdrop-filter: blur(5px); content: \"\"; position: absolute; inset: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".TwhdJ",
          "cssText": ".TwhdJ { height: 36px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".TwhdJ + .WbSqD",
          "cssText": ".TwhdJ + .WbSqD { margin-left: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".GcYHh",
          "cssText": ".GcYHh { opacity: 0; transition: 0.25s ease-out 0.4s; position: relative; top: 4px; transform: scale(0) translateY(-50%); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".In0Yk, .LD6PV, .FiMj0",
          "cssText": ".In0Yk, .LD6PV, .FiMj0 { align-self: center; position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".In0Yk button, .LD6PV button, .FiMj0 button",
          "cssText": ".In0Yk button, .LD6PV button, .FiMj0 button { font-weight: 700; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".LD6PV button, .FiMj0 button",
          "cssText": ".LD6PV button, .FiMj0 button { color: var(--color-primary-link); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".LD6PV button:hover, .FiMj0 button:hover",
          "cssText": ".LD6PV button:hover, .FiMj0 button:hover { text-decoration: underline; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".o4Yql",
          "cssText": ".o4Yql { width: 14px; height: 14px; display: flex; position: absolute; bottom: -3px; right: -3px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ZnFlw",
          "cssText": ".ZnFlw { position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".V5AOf",
          "cssText": ".V5AOf { background-image: url(\"/pop/src/assets/images/avatar/anonymous_avatar_40-3af33dc0.png\"); background-size: 100% 100%; border-radius: 3px; position: relative; }",
          "urls": [
            "/pop/src/assets/images/avatar/anonymous_avatar_40-3af33dc0.png"
          ],
          "group": "",
          "sources": [],
          "sinks": [
            {
              "reason": "url_sink",
              "urls": [
                "/pop/src/assets/images/avatar/anonymous_avatar_40-3af33dc0.png"
              ]
            }
          ],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (-webkit-min-device-pixel-ratio: 1.3), (min-resolution: 1.3dppx) {\n  .V5AOf { background-image: url(\"/pop/src/assets/images/avatar/anonymous_avatar_96-223fabe0.png\"); }\n}",
          "urls": [
            "/pop/src/assets/images/avatar/anonymous_avatar_96-223fabe0.png"
          ],
          "group": "(-webkit-min-device-pixel-ratio: 1.3), (min-resolution: 1.3dppx)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "resolution",
              "semanticGroup": "display capability",
              "claim": "pixel density (dpi/dppx)",
              "excerpt": "(-webkit-min-device-pixel-ratio: 1.3), (min-resolution: 1.3dppx)",
              "requiresEcho": true,
              "echoTokens": [
                "-webkit-min-device-pixel-ratio",
                "1.3",
                "min-resolution",
                "1.3dppx",
                "resolution",
                "device-pixel-ratio"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "device-pixel-ratio",
              "semanticGroup": "display capability",
              "claim": "device pixel ratio (alias)",
              "excerpt": "(-webkit-min-device-pixel-ratio: 1.3), (min-resolution: 1.3dppx)",
              "requiresEcho": true,
              "echoTokens": [
                "-webkit-min-device-pixel-ratio",
                "1.3",
                "min-resolution",
                "1.3dppx",
                "resolution",
                "device-pixel-ratio"
              ]
            }
          ],
          "sinks": [
            {
              "reason": "url_sink",
              "urls": [
                "/pop/src/assets/images/avatar/anonymous_avatar_96-223fabe0.png"
              ]
            }
          ],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".V5AOf",
          "cssText": ".V5AOf { background-image: url(\"/pop/src/assets/images/avatar/anonymous_avatar_96-223fabe0.png\"); }",
          "urls": [
            "/pop/src/assets/images/avatar/anonymous_avatar_96-223fabe0.png"
          ],
          "group": "(-webkit-min-device-pixel-ratio: 1.3), (min-resolution: 1.3dppx)",
          "sources": [],
          "sinks": [
            {
              "reason": "url_sink",
              "urls": [
                "/pop/src/assets/images/avatar/anonymous_avatar_96-223fabe0.png"
              ]
            }
          ],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "resolution",
              "semanticGroup": "display capability",
              "claim": "pixel density (dpi/dppx)",
              "excerpt": "(-webkit-min-device-pixel-ratio: 1.3), (min-resolution: 1.3dppx)",
              "requiresEcho": true,
              "echoTokens": [
                "-webkit-min-device-pixel-ratio",
                "1.3",
                "min-resolution",
                "1.3dppx",
                "resolution",
                "device-pixel-ratio"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "device-pixel-ratio",
              "semanticGroup": "display capability",
              "claim": "device pixel ratio (alias)",
              "excerpt": "(-webkit-min-device-pixel-ratio: 1.3), (min-resolution: 1.3dppx)",
              "requiresEcho": true,
              "echoTokens": [
                "-webkit-min-device-pixel-ratio",
                "1.3",
                "min-resolution",
                "1.3dppx",
                "resolution",
                "device-pixel-ratio"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".IfMry",
          "cssText": ".IfMry { width: 36px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".El457",
          "cssText": ".El457 { border-radius: 50%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".oloQq",
          "cssText": ".oloQq { width: 100%; padding: 6px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".oloQq .G3ulV",
          "cssText": ".oloQq .G3ulV { border: 1px solid rgba(var(--black),.6); height: 40px; color: RGB(var(--black)); border-radius: 4px; justify-content: center; align-items: center; font-size: 14px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".oloQq .G3ulV:hover",
          "cssText": ".oloQq .G3ulV:hover { background: RGB(var(--secondary-accent)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".LMFDf",
          "cssText": ".LMFDf { background-color: var(--unread-tint); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Gt2Q9",
          "cssText": ".Gt2Q9 { font-size: 0.875rem; font-weight: 350; line-height: 1.25rem; font-family: var(--font-family-modern); color: var(--content-fg-secondary); justify-content: space-between; align-items: center; padding: 5px 15px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".k53ko",
          "cssText": ".k53ko { font-size: 0.875rem; font-weight: 400; line-height: 1.25rem; font-family: var(--font-family-modern); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".M_e0U",
          "cssText": ".M_e0U { font-size: 0.78125rem; font-weight: 400; line-height: 1.52; font-family: var(--font-family); color: rgba(var(--black),.65); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 540px) {\n  .M_e0U { font-size: 0.875rem; font-weight: 400; line-height: 1.42857; font-family: var(--font-family); }\n}",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".M_e0U",
          "cssText": ".M_e0U { font-size: 0.875rem; font-weight: 400; line-height: 1.42857; font-family: var(--font-family); }",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".AHkyw .N96N2 .KxZIc svg use, .AHkyw .KxZIc svg use",
          "cssText": ".AHkyw .N96N2 .KxZIc svg use, .AHkyw .KxZIc svg use { --icon-color-primary: RGB(var(--deprecated-accent)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".AHkyw",
          "cssText": ".AHkyw { text-align: left; align-items: center; width: 100%; padding: 6px 8px; font-size: 13px; text-decoration: none; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".AHkyw:hover",
          "cssText": ".AHkyw:hover { background: RGB(var(--secondary-accent)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".AHkyw.D_cxo",
          "cssText": ".AHkyw.D_cxo { width: auto; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".AHkyw.OfvnG",
          "cssText": ".AHkyw.OfvnG { border-bottom: 1px rgba(var(--black),.07)solid; text-align: left; padding: 6px 10px 8px 6px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".AHkyw:last-child",
          "cssText": ".AHkyw:last-child { border: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".AHkyw .N96N2",
          "cssText": ".AHkyw .N96N2 { align-items: center; width: 100%; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".AHkyw .OX4Jm",
          "cssText": ".AHkyw .OX4Jm { margin-right: 10px; position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".AHkyw .OX4Jm .iGp0T",
          "cssText": ".AHkyw .OX4Jm .iGp0T { position: absolute; top: -6px; right: 15px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".AHkyw .g3qmO",
          "cssText": ".AHkyw .g3qmO { flex-direction: column; flex: 1 1 0%; width: 1px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".AHkyw .g3qmO .Uyky3, .AHkyw .g3qmO .a5mFW",
          "cssText": ".AHkyw .g3qmO .Uyky3, .AHkyw .g3qmO .a5mFW { text-overflow: ellipsis; word-break: break-all; overflow: hidden; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSSupportsRule",
          "selector": "",
          "cssText": "@supports (display:-webkit-box) and (-webkit-line-clamp:1) {\n  .AHkyw .g3qmO .Uyky3, .AHkyw .g3qmO .a5mFW { -webkit-line-clamp: 1; -webkit-box-orient: vertical; display: -webkit-box; }\n}",
          "urls": [],
          "group": "(display:-webkit-box) and (-webkit-line-clamp:1)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "(display:-webkit-box) and (-webkit-line-clamp:1)",
              "requiresEcho": true,
              "echoTokens": [
                "display",
                "-webkit-box",
                "-webkit-line-clamp",
                "1"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".AHkyw .g3qmO .Uyky3, .AHkyw .g3qmO .a5mFW",
          "cssText": ".AHkyw .g3qmO .Uyky3, .AHkyw .g3qmO .a5mFW { -webkit-line-clamp: 1; -webkit-box-orient: vertical; display: -webkit-box; }",
          "urls": [],
          "group": "(display:-webkit-box) and (-webkit-line-clamp:1)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "(display:-webkit-box) and (-webkit-line-clamp:1)",
              "requiresEcho": true,
              "echoTokens": [
                "display",
                "-webkit-box",
                "-webkit-line-clamp",
                "1"
              ]
            }
          ]
        },
        {
          "type": "CSSSupportsRule",
          "selector": "",
          "cssText": "@supports not ((display:-webkit-box) and (-webkit-line-clamp:1)) {\n  .AHkyw .g3qmO .Uyky3, .AHkyw .g3qmO .a5mFW { white-space: nowrap; }\n}",
          "urls": [],
          "group": "not ((display:-webkit-box) and (-webkit-line-clamp:1))",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "not ((display:-webkit-box) and (-webkit-line-clamp:1))",
              "requiresEcho": true,
              "echoTokens": [
                "not",
                "display",
                "-webkit-box",
                "-webkit-line-clamp",
                "1"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".AHkyw .g3qmO .Uyky3, .AHkyw .g3qmO .a5mFW",
          "cssText": ".AHkyw .g3qmO .Uyky3, .AHkyw .g3qmO .a5mFW { white-space: nowrap; }",
          "urls": [],
          "group": "not ((display:-webkit-box) and (-webkit-line-clamp:1))",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "not ((display:-webkit-box) and (-webkit-line-clamp:1))",
              "requiresEcho": true,
              "echoTokens": [
                "not",
                "display",
                "-webkit-box",
                "-webkit-line-clamp",
                "1"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".AHkyw .g3qmO .Uyky3",
          "cssText": ".AHkyw .g3qmO .Uyky3 { font-size: 0.875rem; font-weight: 700; line-height: 1.42857; font-family: var(--font-family); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".AHkyw .g3qmO .a5mFW",
          "cssText": ".AHkyw .g3qmO .a5mFW { font-size: 0.875rem; font-weight: 400; line-height: 1.42857; font-family: var(--font-family); color: rgba(var(--black),.65); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".AHkyw .g3qmO .a5mFW.nd0kT",
          "cssText": ".AHkyw .g3qmO .a5mFW.nd0kT { white-space: pre; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".HUQRQ",
          "cssText": ".HUQRQ { width: 100%; height: 100%; display: block; position: absolute; top: 0px; left: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".YVQVW",
          "cssText": ".YVQVW { overflow: visible; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".YVQVW svg",
          "cssText": ".YVQVW svg { font-size: 0.78125rem; font-weight: 400; line-height: 1.52; font-family: var(--font-family); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".m6Aaa text, .x6vpr text",
          "cssText": ".m6Aaa text, .x6vpr text { font-size: 0.78125rem; font-weight: 400; line-height: 1.52; font-family: var(--font-family); fill: rgba(var(--white-on-dark),.65); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".x6vpr text",
          "cssText": ".x6vpr text { text-anchor: middle; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".UNfwm",
          "cssText": ".UNfwm { z-index: 1; position: absolute; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".tosY3",
          "cssText": ".tosY3 { width: 100%; overflow-y: auto; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".N4J0q",
          "cssText": ".N4J0q { cursor: not-allowed; opacity: 0.4; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".KO1zx",
          "cssText": ".KO1zx { padding: 16px; position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".TuTon",
          "cssText": ".TuTon { outline: 2px solid var(--content-panel); background-repeat: no-repeat; background-size: contain; background-color: var(--content-panel); border-radius: 9999px; justify-content: center; align-items: center; width: 100%; height: 100%; display: flex; position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".YuXNZ:hover",
          "cssText": ".YuXNZ:hover { background-color: var(--content-tint); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".YuXNZ:focus-within",
          "cssText": ".YuXNZ:focus-within { background-color: var(--content-tint); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Yj7A5",
          "cssText": ".Yj7A5 { background-color: var(--unread-tint); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Yj7A5:hover",
          "cssText": ".Yj7A5:hover { background-color: var(--unread-tint-hover); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Yj7A5:focus-within",
          "cssText": ".Yj7A5:focus-within { background-color: var(--unread-tint-hover); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "._YRou",
          "cssText": "._YRou { flex-shrink: 0; position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Bp_fl",
          "cssText": ".Bp_fl { position: absolute; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".V8xOn",
          "cssText": ".V8xOn { outline: 2px solid var(--content-panel); border-radius: 9999px; bottom: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ReU3F",
          "cssText": ".ReU3F { right: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".yhlF2",
          "cssText": ".yhlF2 { width: 16px; height: 16px; position: absolute; bottom: 0px; right: -4px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".chBvQ",
          "cssText": ".chBvQ { flex-direction: row; align-items: flex-start; gap: 12px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".chBvQ a",
          "cssText": ".chBvQ a { position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hOuk2",
          "cssText": ".hOuk2 { color: var(--content-fg); flex-grow: 1; overflow: hidden; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hOuk2.sT7aq",
          "cssText": ".hOuk2.sT7aq { align-self: center; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".n63mn",
          "cssText": ".n63mn { font-size: 0.875rem; font-weight: 350; line-height: 1.25rem; font-family: var(--font-family-modern); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".n63mn > div",
          "cssText": ".n63mn > div { display: inline; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".n63mn > div + div, .n63mn > div + time",
          "cssText": ".n63mn > div + div, .n63mn > div + time { margin-left: 4px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ta9OG, .Bn7r_",
          "cssText": ".ta9OG, .Bn7r_ { font-size: 0.875rem; font-weight: 500; line-height: 1.25rem; font-family: var(--font-family-modern); display: inline; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ta9OG > p, .Bn7r_ > p",
          "cssText": ".ta9OG > p, .Bn7r_ > p { display: inline; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ta9OG a, .ta9OG .R_O3I > span, .Bn7r_ a, .Bn7r_ .R_O3I > span",
          "cssText": ".ta9OG a, .ta9OG .R_O3I > span, .Bn7r_ a, .Bn7r_ .R_O3I > span { text-decoration: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".KWD4K",
          "cssText": ".KWD4K { color: var(--content-fg-secondary); position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".KWD4K::before",
          "cssText": ".KWD4K::before { content: \"·\"; margin-right: 4px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".OmZD7, .RSZnt",
          "cssText": ".OmZD7, .RSZnt { font-size: 0.875rem; font-weight: 350; line-height: 1.25rem; font-family: var(--font-family-modern); overflow-wrap: anywhere; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".jHqPC",
          "cssText": ".jHqPC { cursor: pointer; background-repeat: no-repeat; background-size: cover; border-radius: 2px; flex-shrink: 0; justify-content: center; align-items: center; width: 36px; height: 36px; display: flex; position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".jHqPC.lX66q",
          "cssText": ".jHqPC.lX66q { background-color: var(--content-fg); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "div.jHqPC",
          "cssText": "div.jHqPC { pointer-events: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".jxGuI",
          "cssText": ".jxGuI { position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".xU5FV",
          "cssText": ".xU5FV { border-left: 3px solid rgba(var(--black),.25); overflow-wrap: anywhere; padding-left: 8px; font-style: normal; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".miPEQ",
          "cssText": ".miPEQ { width: 100%; height: 100%; display: block; position: absolute; top: 0px; left: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".MjEPb",
          "cssText": ".MjEPb { box-sizing: border-box; border-radius: 8px; overflow: hidden; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 540px) {\n  .MjEPb { border-radius: 12px; }\n}",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".MjEPb",
          "cssText": ".MjEPb { border-radius: 12px; }",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".MjEPb.K9dA1",
          "cssText": ".MjEPb.K9dA1 { background-color: var(--content-panel); color: var(--content-fg); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".MjEPb.zu7fY",
          "cssText": ".MjEPb.zu7fY { background-color: var(--chrome-panel); color: var(--chrome-fg); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 540px) {\n  .TejTM { border-radius: 0px; }\n}",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".TejTM",
          "cssText": ".TejTM { border-radius: 0px; }",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".RRPPS",
          "cssText": ".RRPPS { width: 100%; height: 250px; margin-bottom: 20px; position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".RRPPS[role=\"button\"]",
          "cssText": ".RRPPS[role=\"button\"] { cursor: pointer; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".bjh13",
          "cssText": ".bjh13 { font-size: 0.875rem; font-weight: 700; line-height: 1.42857; font-family: var(--font-family); box-sizing: border-box; background: RGB(var(--white)); min-width: 150px; max-width: 200px; color: RGB(var(--black)); border-radius: 6px; flex-direction: column; padding: 16px; display: flex; box-shadow: rgba(0, 0, 0, 0.5) 0px 0px 15px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".jv0eS",
          "cssText": ".jv0eS { justify-content: space-between; padding-top: 8px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".jv0eS:first-child",
          "cssText": ".jv0eS:first-child { padding-top: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".jv0eS > :nth-child(2)",
          "cssText": ".jv0eS > :nth-child(2) { margin-left: 10px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".zwo86",
          "cssText": ".zwo86 { font-size: 0.875rem; font-weight: 400; line-height: 1.42857; font-family: var(--font-family); color: rgba(var(--black),.65); text-overflow: ellipsis; overflow: hidden; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSSupportsRule",
          "selector": "",
          "cssText": "@supports (display:-webkit-box) and (-webkit-line-clamp:1) {\n  .zwo86 { -webkit-line-clamp: 1; -webkit-box-orient: vertical; display: -webkit-box; }\n}",
          "urls": [],
          "group": "(display:-webkit-box) and (-webkit-line-clamp:1)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "(display:-webkit-box) and (-webkit-line-clamp:1)",
              "requiresEcho": true,
              "echoTokens": [
                "display",
                "-webkit-box",
                "-webkit-line-clamp",
                "1"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".zwo86",
          "cssText": ".zwo86 { -webkit-line-clamp: 1; -webkit-box-orient: vertical; display: -webkit-box; }",
          "urls": [],
          "group": "(display:-webkit-box) and (-webkit-line-clamp:1)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "(display:-webkit-box) and (-webkit-line-clamp:1)",
              "requiresEcho": true,
              "echoTokens": [
                "display",
                "-webkit-box",
                "-webkit-line-clamp",
                "1"
              ]
            }
          ]
        },
        {
          "type": "CSSSupportsRule",
          "selector": "",
          "cssText": "@supports not ((display:-webkit-box) and (-webkit-line-clamp:1)) {\n  .zwo86 { white-space: nowrap; }\n}",
          "urls": [],
          "group": "not ((display:-webkit-box) and (-webkit-line-clamp:1))",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "not ((display:-webkit-box) and (-webkit-line-clamp:1))",
              "requiresEcho": true,
              "echoTokens": [
                "not",
                "display",
                "-webkit-box",
                "-webkit-line-clamp",
                "1"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".zwo86",
          "cssText": ".zwo86 { white-space: nowrap; }",
          "urls": [],
          "group": "not ((display:-webkit-box) and (-webkit-line-clamp:1))",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "not ((display:-webkit-box) and (-webkit-line-clamp:1))",
              "requiresEcho": true,
              "echoTokens": [
                "not",
                "display",
                "-webkit-box",
                "-webkit-line-clamp",
                "1"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".unQb3",
          "cssText": ".unQb3 { border-radius: 3px; width: 24px; height: 24px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".lBOuH",
          "cssText": ".lBOuH { background: RGB(var(--navy)); border-radius: 6px; position: absolute; top: 50%; left: 50%; overflow: hidden; transform: translate(-50%) translateY(-50%); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".lBOuH .McSyH",
          "cssText": ".lBOuH .McSyH { font-size: 0.875rem; font-weight: 400; line-height: 1.42857; font-family: var(--font-family); background: rgba(var(--white-on-dark),.13); color: RGB(var(--white-on-dark)); text-align: center; padding: 15px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".CEvlk",
          "cssText": ".CEvlk { border-top: 1px solid var(--content-tint); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".GJ3sl",
          "cssText": ".GJ3sl { border: 1px solid rgba(var(--black),.4); border-radius: 999px; flex-shrink: 0; justify-content: center; align-self: stretch; align-items: center; height: 32px; margin: 8px 6px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".palette--trueBlue .GJ3sl",
          "cssText": ".palette--trueBlue .GJ3sl { border: 1px solid rgba(0, 0, 0, 0.1); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".iRY5I",
          "cssText": ".iRY5I { height: 32px; font-size: 0.875rem; font-weight: 700; line-height: 1.42857; font-family: var(--font-family); border-radius: 999px; flex: 1 0 0px; justify-content: center; align-items: center; padding: 8px 16px 8px 12px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".iRY5I:first-child",
          "cssText": ".iRY5I:first-child { border-top-right-radius: 0px; border-bottom-right-radius: 0px; gap: 8px; max-width: 45%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".iRY5I:last-child",
          "cssText": ".iRY5I:last-child { border-top-left-radius: 0px; border-bottom-left-radius: 0px; flex: 1 0 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".iRY5I[aria-selected=\"true\"]",
          "cssText": ".iRY5I[aria-selected=\"true\"] { background-color: RGB(var(--deprecated-accent)); color: RGB(var(--white)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".j0DgI",
          "cssText": ".j0DgI { flex-direction: column; align-items: flex-start; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".JBclZ",
          "cssText": ".JBclZ { align-self: stretch; align-items: center; gap: 8px; padding: 6px 8px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".JBclZ:hover",
          "cssText": ".JBclZ:hover { cursor: pointer; background-color: rgba(0, 0, 0, 0.1); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".lLCDv",
          "cssText": ".lLCDv { flex-direction: column; align-items: baseline; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".jWPJ5",
          "cssText": ".jWPJ5 { font-size: 0.875rem; font-weight: 700; line-height: 1.42857; font-family: var(--font-family); text-overflow: ellipsis; text-align: left; word-break: break-all; overflow: hidden; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSSupportsRule",
          "selector": "",
          "cssText": "@supports (display:-webkit-box) and (-webkit-line-clamp:1) {\n  .jWPJ5 { -webkit-line-clamp: 1; -webkit-box-orient: vertical; display: -webkit-box; }\n}",
          "urls": [],
          "group": "(display:-webkit-box) and (-webkit-line-clamp:1)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "(display:-webkit-box) and (-webkit-line-clamp:1)",
              "requiresEcho": true,
              "echoTokens": [
                "display",
                "-webkit-box",
                "-webkit-line-clamp",
                "1"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".jWPJ5",
          "cssText": ".jWPJ5 { -webkit-line-clamp: 1; -webkit-box-orient: vertical; display: -webkit-box; }",
          "urls": [],
          "group": "(display:-webkit-box) and (-webkit-line-clamp:1)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "(display:-webkit-box) and (-webkit-line-clamp:1)",
              "requiresEcho": true,
              "echoTokens": [
                "display",
                "-webkit-box",
                "-webkit-line-clamp",
                "1"
              ]
            }
          ]
        },
        {
          "type": "CSSSupportsRule",
          "selector": "",
          "cssText": "@supports not ((display:-webkit-box) and (-webkit-line-clamp:1)) {\n  .jWPJ5 { white-space: nowrap; }\n}",
          "urls": [],
          "group": "not ((display:-webkit-box) and (-webkit-line-clamp:1))",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "not ((display:-webkit-box) and (-webkit-line-clamp:1))",
              "requiresEcho": true,
              "echoTokens": [
                "not",
                "display",
                "-webkit-box",
                "-webkit-line-clamp",
                "1"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".jWPJ5",
          "cssText": ".jWPJ5 { white-space: nowrap; }",
          "urls": [],
          "group": "not ((display:-webkit-box) and (-webkit-line-clamp:1))",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "not ((display:-webkit-box) and (-webkit-line-clamp:1))",
              "requiresEcho": true,
              "echoTokens": [
                "not",
                "display",
                "-webkit-box",
                "-webkit-line-clamp",
                "1"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".cseiL",
          "cssText": ".cseiL { font-size: 0.78125rem; font-weight: 400; line-height: 1.52; font-family: var(--font-family); color: rgba(var(--black),.65); text-overflow: ellipsis; word-break: break-all; overflow: hidden; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSSupportsRule",
          "selector": "",
          "cssText": "@supports (display:-webkit-box) and (-webkit-line-clamp:1) {\n  .cseiL { -webkit-line-clamp: 1; -webkit-box-orient: vertical; display: -webkit-box; }\n}",
          "urls": [],
          "group": "(display:-webkit-box) and (-webkit-line-clamp:1)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "(display:-webkit-box) and (-webkit-line-clamp:1)",
              "requiresEcho": true,
              "echoTokens": [
                "display",
                "-webkit-box",
                "-webkit-line-clamp",
                "1"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".cseiL",
          "cssText": ".cseiL { -webkit-line-clamp: 1; -webkit-box-orient: vertical; display: -webkit-box; }",
          "urls": [],
          "group": "(display:-webkit-box) and (-webkit-line-clamp:1)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "(display:-webkit-box) and (-webkit-line-clamp:1)",
              "requiresEcho": true,
              "echoTokens": [
                "display",
                "-webkit-box",
                "-webkit-line-clamp",
                "1"
              ]
            }
          ]
        },
        {
          "type": "CSSSupportsRule",
          "selector": "",
          "cssText": "@supports not ((display:-webkit-box) and (-webkit-line-clamp:1)) {\n  .cseiL { white-space: nowrap; }\n}",
          "urls": [],
          "group": "not ((display:-webkit-box) and (-webkit-line-clamp:1))",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "not ((display:-webkit-box) and (-webkit-line-clamp:1))",
              "requiresEcho": true,
              "echoTokens": [
                "not",
                "display",
                "-webkit-box",
                "-webkit-line-clamp",
                "1"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".cseiL",
          "cssText": ".cseiL { white-space: nowrap; }",
          "urls": [],
          "group": "not ((display:-webkit-box) and (-webkit-line-clamp:1))",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "not ((display:-webkit-box) and (-webkit-line-clamp:1))",
              "requiresEcho": true,
              "echoTokens": [
                "not",
                "display",
                "-webkit-box",
                "-webkit-line-clamp",
                "1"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".xwL9a",
          "cssText": ".xwL9a { --icon-color-primary: RGB(var(--deprecated-accent)); margin-left: auto; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".nNbaS",
          "cssText": ".nNbaS { width: 100%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".tYyr9",
          "cssText": ".tYyr9 { background: RGB(var(--white)); color: RGB(var(--black)); border-radius: 6px; flex-direction: column; align-items: center; margin: auto; padding: 4px 0px; display: flex; position: relative; overflow-x: hidden; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".u1Tak",
          "cssText": ".u1Tak { width: 90vw; height: 50vh; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".y7LSP",
          "cssText": ".y7LSP { box-sizing: border-box; cursor: pointer; width: fit-content; min-width: 64px; font-size: 0.875rem; font-weight: 500; line-height: 1.25rem; font-family: var(--font-family-modern); border-radius: 9999px; outline: none; flex-shrink: 0; justify-content: center; align-items: center; padding: 10px 16px; text-decoration: none; display: inline-flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".y7LSP[data-focus-visible]",
          "cssText": ".y7LSP[data-focus-visible] { outline-offset: 2px; outline-width: 2px; outline-style: solid; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Sn8rD.NJkFM[aria-selected=\"true\"]",
          "cssText": ".Sn8rD.NJkFM[aria-selected=\"true\"] { background-color: var(--chrome-ui); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Sn8rD.NJkFM[aria-selected=\"true\"]:hover",
          "cssText": ".Sn8rD.NJkFM[aria-selected=\"true\"]:hover { background-color: var(--chrome-ui-hover); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Sn8rD.NJkFM[aria-selected=\"true\"]:active",
          "cssText": ".Sn8rD.NJkFM[aria-selected=\"true\"]:active { background-color: var(--chrome-ui-pressed); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Sn8rD.NJkFM[data-focus-visible]",
          "cssText": ".Sn8rD.NJkFM[data-focus-visible] { outline-color: var(--chrome-ui-focus); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dJyeE.NJkFM[aria-selected=\"true\"]",
          "cssText": ".dJyeE.NJkFM[aria-selected=\"true\"] { background-color: var(--content-ui); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dJyeE.NJkFM[aria-selected=\"true\"]:hover",
          "cssText": ".dJyeE.NJkFM[aria-selected=\"true\"]:hover { background-color: var(--content-ui-hover); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dJyeE.NJkFM[aria-selected=\"true\"]:active",
          "cssText": ".dJyeE.NJkFM[aria-selected=\"true\"]:active { background-color: var(--content-ui-pressed); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dJyeE.NJkFM[data-focus-visible]",
          "cssText": ".dJyeE.NJkFM[data-focus-visible] { outline-color: var(--content-ui-focus); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Sn8rD",
          "cssText": ".Sn8rD { color: var(--chrome-fg-secondary); background-color: transparent; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media not (min-width: 990px) {\n  .Sn8rD { background-color: var(--chrome-tint); }\n}",
          "urls": [],
          "group": "not (min-width: 990px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "not (min-width: 990px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "990px",
                "990",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Sn8rD",
          "cssText": ".Sn8rD { background-color: var(--chrome-tint); }",
          "urls": [],
          "group": "not (min-width: 990px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "not (min-width: 990px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "990px",
                "990",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Sn8rD:hover",
          "cssText": ".Sn8rD:hover { background-color: var(--chrome-tint); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Sn8rD:active",
          "cssText": ".Sn8rD:active { background-color: var(--chrome-tint-strong); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Sn8rD[aria-selected=\"true\"]",
          "cssText": ".Sn8rD[aria-selected=\"true\"] { color: var(--chrome-ui-fg); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Sn8rD[aria-disabled=\"true\"]",
          "cssText": ".Sn8rD[aria-disabled=\"true\"] { color: var(--chrome-fg-secondary); background-color: transparent; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Sn8rD[aria-disabled=\"true\"] .Ncp30",
          "cssText": ".Sn8rD[aria-disabled=\"true\"] .Ncp30 { opacity: 0.5; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Sn8rD[aria-selected=\"true\"][aria-disabled=\"true\"]",
          "cssText": ".Sn8rD[aria-selected=\"true\"][aria-disabled=\"true\"] { background-color: var(--chrome-tint); color: var(--chrome-fg-secondary); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Sn8rD[aria-selected=\"true\"][aria-disabled=\"true\"]:hover, .Sn8rD[aria-selected=\"true\"][aria-disabled=\"true\"]:active",
          "cssText": ".Sn8rD[aria-selected=\"true\"][aria-disabled=\"true\"]:hover, .Sn8rD[aria-selected=\"true\"][aria-disabled=\"true\"]:active { background-color: var(--chrome-tint); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dJyeE",
          "cssText": ".dJyeE { background-color: var(--content-tint); color: var(--content-fg-secondary); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dJyeE:hover",
          "cssText": ".dJyeE:hover { background-color: var(--content-tint-strong); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dJyeE:active",
          "cssText": ".dJyeE:active { background-color: var(--content-tint-heavy); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dJyeE[aria-selected=\"true\"]",
          "cssText": ".dJyeE[aria-selected=\"true\"] { background-color: var(--content-ui); color: var(--content-ui-fg); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dJyeE[aria-selected=\"true\"]:hover",
          "cssText": ".dJyeE[aria-selected=\"true\"]:hover { background-color: var(--content-ui-hover); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dJyeE[aria-selected=\"true\"]:active",
          "cssText": ".dJyeE[aria-selected=\"true\"]:active { background-color: var(--content-ui-pressed); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dJyeE[aria-disabled=\"true\"]",
          "cssText": ".dJyeE[aria-disabled=\"true\"] { color: var(--content-fg-secondary); background-color: transparent; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dJyeE[aria-disabled=\"true\"] .Ncp30",
          "cssText": ".dJyeE[aria-disabled=\"true\"] .Ncp30 { opacity: 0.5; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dJyeE[aria-selected=\"true\"][aria-disabled=\"true\"]",
          "cssText": ".dJyeE[aria-selected=\"true\"][aria-disabled=\"true\"] { background-color: var(--content-tint); color: var(--content-fg-secondary); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dJyeE[aria-selected=\"true\"][aria-disabled=\"true\"]:hover, .dJyeE[aria-selected=\"true\"][aria-disabled=\"true\"]:active",
          "cssText": ".dJyeE[aria-selected=\"true\"][aria-disabled=\"true\"]:hover, .dJyeE[aria-selected=\"true\"][aria-disabled=\"true\"]:active { background-color: var(--content-tint); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".iMbDn[aria-selected=\"true\"]",
          "cssText": ".iMbDn[aria-selected=\"true\"] { background-color: var(--brand-blue); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".iMbDn[aria-selected=\"true\"]:hover",
          "cssText": ".iMbDn[aria-selected=\"true\"]:hover { background-color: var(--brand-blue-hover); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".iMbDn[aria-selected=\"true\"]:active",
          "cssText": ".iMbDn[aria-selected=\"true\"]:active { background-color: var(--brand-blue-pressed); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".iMbDn[data-focus-visible]",
          "cssText": ".iMbDn[data-focus-visible] { outline-color: var(--brand-blue); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".IOzqC[aria-selected=\"true\"]",
          "cssText": ".IOzqC[aria-selected=\"true\"] { background-color: var(--brand-purple); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".IOzqC[aria-selected=\"true\"]:hover",
          "cssText": ".IOzqC[aria-selected=\"true\"]:hover { background-color: var(--brand-purple-hover); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".IOzqC[aria-selected=\"true\"]:active",
          "cssText": ".IOzqC[aria-selected=\"true\"]:active { background-color: var(--brand-purple-pressed); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".IOzqC[data-focus-visible]",
          "cssText": ".IOzqC[data-focus-visible] { outline-color: var(--brand-purple); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".uK3uY[aria-selected=\"true\"]",
          "cssText": ".uK3uY[aria-selected=\"true\"] { background-color: var(--brand-pink); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".uK3uY[aria-selected=\"true\"]:hover",
          "cssText": ".uK3uY[aria-selected=\"true\"]:hover { background-color: var(--brand-pink-hover); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".uK3uY[aria-selected=\"true\"]:active",
          "cssText": ".uK3uY[aria-selected=\"true\"]:active { background-color: var(--brand-pink-pressed); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".uK3uY[data-focus-visible]",
          "cssText": ".uK3uY[data-focus-visible] { outline-color: var(--brand-pink); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Ili_a[aria-selected=\"true\"]",
          "cssText": ".Ili_a[aria-selected=\"true\"] { background-color: var(--brand-red); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Ili_a[aria-selected=\"true\"]:hover",
          "cssText": ".Ili_a[aria-selected=\"true\"]:hover { background-color: var(--brand-red-hover); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Ili_a[aria-selected=\"true\"]:active",
          "cssText": ".Ili_a[aria-selected=\"true\"]:active { background-color: var(--brand-red-pressed); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Ili_a[data-focus-visible]",
          "cssText": ".Ili_a[data-focus-visible] { outline-color: var(--brand-red); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".XnHBL[aria-selected=\"true\"]",
          "cssText": ".XnHBL[aria-selected=\"true\"] { background-color: var(--brand-orange); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".XnHBL[aria-selected=\"true\"]:hover",
          "cssText": ".XnHBL[aria-selected=\"true\"]:hover { background-color: var(--brand-orange-hover); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".XnHBL[aria-selected=\"true\"]:active",
          "cssText": ".XnHBL[aria-selected=\"true\"]:active { background-color: var(--brand-orange-pressed); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".XnHBL[data-focus-visible]",
          "cssText": ".XnHBL[data-focus-visible] { outline-color: var(--brand-orange); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Uo1Wy[aria-selected=\"true\"]",
          "cssText": ".Uo1Wy[aria-selected=\"true\"] { background-color: var(--brand-yellow); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Uo1Wy[aria-selected=\"true\"]:hover",
          "cssText": ".Uo1Wy[aria-selected=\"true\"]:hover { background-color: var(--brand-yellow-hover); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Uo1Wy[aria-selected=\"true\"]:active",
          "cssText": ".Uo1Wy[aria-selected=\"true\"]:active { background-color: var(--brand-yellow-pressed); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Uo1Wy[data-focus-visible]",
          "cssText": ".Uo1Wy[data-focus-visible] { outline-color: var(--brand-yellow); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".KHdL0[aria-selected=\"true\"]",
          "cssText": ".KHdL0[aria-selected=\"true\"] { background-color: var(--brand-green); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".KHdL0[aria-selected=\"true\"]:hover",
          "cssText": ".KHdL0[aria-selected=\"true\"]:hover { background-color: var(--brand-green-hover); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".KHdL0[aria-selected=\"true\"]:active",
          "cssText": ".KHdL0[aria-selected=\"true\"]:active { background-color: var(--brand-green-pressed); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".KHdL0[data-focus-visible]",
          "cssText": ".KHdL0[data-focus-visible] { outline-color: var(--brand-green); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".pQPKq",
          "cssText": ".pQPKq { justify-content: center; align-items: center; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".zOAiO",
          "cssText": ".zOAiO { justify-content: center; align-items: center; width: auto; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".lHc1y",
          "cssText": ".lHc1y { width: 100%; color: inherit; cursor: pointer; justify-content: center; align-items: center; display: flex; position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".lHc1y svg",
          "cssText": ".lHc1y svg { margin-left: 5px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".gcKSf",
          "cssText": ".gcKSf { max-width: 200px; color: rgba(var(--black),.65); text-overflow: ellipsis; white-space: nowrap; flex: 1 1 0%; overflow: hidden; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".gcKSf.h6_FZ",
          "cssText": ".gcKSf.h6_FZ { color: rgba(var(--white-on-dark),.65); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".gcKSf.fw3Vq",
          "cssText": ".gcKSf.fw3Vq { max-width: 300px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".gcKSf.fw3Vq.h6_FZ",
          "cssText": ".gcKSf.fw3Vq.h6_FZ { max-width: 225px; color: rgba(var(--black),.65); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media not (min-width: 990px) {\n  .gcKSf.fw3Vq.h6_FZ { max-width: 300px; }\n}",
          "urls": [],
          "group": "not (min-width: 990px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "not (min-width: 990px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "990px",
                "990",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".gcKSf.fw3Vq.h6_FZ",
          "cssText": ".gcKSf.fw3Vq.h6_FZ { max-width: 300px; }",
          "urls": [],
          "group": "not (min-width: 990px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "not (min-width: 990px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "990px",
                "990",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".wxU_r",
          "cssText": ".wxU_r { justify-content: left; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".SERD7",
          "cssText": ".SERD7 { background-color: RGB(var(--deprecated-accent)); border-radius: 50%; width: 10px; height: 10px; margin-top: -12px; margin-left: -5px; transform: translateZ(0px); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Plisc",
          "cssText": ".Plisc { border-radius: 12px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".jxK8o",
          "cssText": ".jxK8o { background: RGB(var(--white)); color: RGB(var(--black)); border-radius: 6px; flex-direction: column; align-items: center; margin: auto; padding: 4px 0px; display: flex; position: relative; overflow-x: hidden; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".jxK8o .R0LzT",
          "cssText": ".jxK8o .R0LzT { font-size: 1.125rem; font-weight: 700; line-height: 1.33333; font-family: var(--font-family); border-bottom: 1px rgba(var(--black),.25)solid; justify-content: center; align-items: center; height: 40px; padding: 5px 0px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".lQdJP",
          "cssText": ".lQdJP { width: 90vw; height: 50vh; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ioiLf",
          "cssText": ".ioiLf { background-color: RGB(var(--white)); pointer-events: none; border-radius: 50%; justify-content: center; align-items: center; animation: 0.2s ease-in-out 0s 1 normal none running g1BYC; display: flex; position: absolute; bottom: -4px; right: -4px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframesRule",
          "selector": "",
          "cssText": "@keyframes g1BYC { \n  0% { transform: scale(0); }\n  100% { transform: scale(1); }\n}",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "0% { transform: scale(0); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "100% { transform: scale(1); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ioiLf > svg",
          "cssText": ".ioiLf > svg { margin: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".wKEBn",
          "cssText": ".wKEBn { margin-right: 10px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".wKEBn.LPh7a",
          "cssText": ".wKEBn.LPh7a { margin-right: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".C4gjZ",
          "cssText": ".C4gjZ { padding: 4px 8px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".C4gjZ .GOG3l",
          "cssText": ".C4gjZ .GOG3l { justify-content: center; align-items: center; height: 74px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 540px) {\n  .C4gjZ { margin: 0px; padding: 0px; }\n}",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".C4gjZ",
          "cssText": ".C4gjZ { margin: 0px; padding: 0px; }",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hmJK7",
          "cssText": ".hmJK7 { box-sizing: border-box; scrollbar-width: none; width: 100%; padding: 8px; overflow: hidden; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 540px) {\n  .hmJK7 { height: auto; }\n}",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hmJK7",
          "cssText": ".hmJK7 { height: auto; }",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".NIqOz",
          "cssText": ".NIqOz { scroll-behavior: smooth; scroll-snap-align: start; scroll-snap-type: x mandatory; overflow: scroll hidden; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".NIqOz::-webkit-scrollbar",
          "cssText": ".NIqOz::-webkit-scrollbar { display: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".AZJHD",
          "cssText": ".AZJHD { overscroll-behavior: none; flex-flow: row; align-items: center; gap: 8px; display: flex; overflow-x: visible; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".AZJHD::after",
          "cssText": ".AZJHD::after { content: \" \"; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".jBtpD",
          "cssText": ".jBtpD { flex-direction: column; height: 100%; max-height: min(620px, 90vh); display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".lUKCu header",
          "cssText": ".lUKCu header { font-size: 1rem; font-weight: 700; line-height: 1.5; font-family: var(--font-family); box-sizing: border-box; border-bottom: 1px var(--content-tint-strong)solid; background-color: var(--content-panel); border-radius: 3px 3px 0px 0px; justify-content: space-between; width: 100%; padding: 12px 12px 8px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".lUKCu .SAqxs",
          "cssText": ".lUKCu .SAqxs { flex-wrap: wrap; gap: 4px; padding: 8px 9px 12px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".lUKCu .SAqxs .BG5X8",
          "cssText": ".lUKCu .SAqxs .BG5X8 { font-size: 0.875rem; font-weight: 700; line-height: 1.42857; font-family: var(--font-family); color: rgba(var(--black),.65); flex: 1 1 0%; padding-top: 7px; padding-bottom: 7px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".lUKCu .SAqxs .BG5X8:focus, .lUKCu .SAqxs .BG5X8:hover",
          "cssText": ".lUKCu .SAqxs .BG5X8:focus, .lUKCu .SAqxs .BG5X8:hover { background-color: rgba(var(--black),.13); border-radius: 99px; outline: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".lUKCu .SAqxs .BG5X8[aria-selected=\"true\"]",
          "cssText": ".lUKCu .SAqxs .BG5X8[aria-selected=\"true\"] { background-color: RGB(var(--black)); color: RGB(var(--white)); border-radius: 99px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ePmxL",
          "cssText": ".ePmxL { border-bottom: 1px solid var(--content-tint-strong); padding: 4px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".rUdWg",
          "cssText": ".rUdWg { justify-content: center; align-items: center; height: 17px; margin: 5px 0px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".iRWlG",
          "cssText": ".iRWlG { display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".pclKV",
          "cssText": ".pclKV { flex: 1 1 0%; overflow: hidden auto; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".BMjTU",
          "cssText": ".BMjTU { font-size: 0.78125rem; font-weight: 400; line-height: 1.52; font-family: var(--font-family); box-sizing: border-box; background-color: var(--content-tint); --icon-color-primary: var(--content-fg-tertiary); flex-direction: column; justify-content: center; align-items: center; width: 100%; height: 100%; padding: 20px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".gNWJJ",
          "cssText": ".gNWJJ { font-size: 1rem; font-weight: 350; line-height: 1.5rem; font-family: var(--font-family-modern); color: var(--content-fg-secondary); text-align: center; margin: 24px 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".gNWJJ span",
          "cssText": ".gNWJJ span { font-size: 0.875rem; font-weight: 350; line-height: 1.25rem; font-family: var(--font-family-modern); margin-top: 8px; display: block; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".mCR4G",
          "cssText": ".mCR4G { border-top: 1px solid rgba(var(--black),.13); flex-shrink: 0; height: 30px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".mCR4G a",
          "cssText": ".mCR4G a { font-size: 0.78125rem; font-weight: 700; line-height: 1.52; font-family: var(--font-family); width: 100%; height: 100%; color: rgba(var(--black),.65); justify-content: center; align-items: center; text-decoration: none; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".OAANM",
          "cssText": ".OAANM { padding: 16px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".vlkFO",
          "cssText": ".vlkFO { height: 24px; padding-top: 12px; padding-bottom: 12px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".vlkFO a",
          "cssText": ".vlkFO a { color: RGB(var(--deprecated-accent)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".X2bNy",
          "cssText": ".X2bNy { gap: 2px; grid-template-rows: repeat(2, 1fr); grid-template-columns: repeat(2, 1fr); width: 100%; height: 100%; display: grid; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".tPOYE",
          "cssText": ".tPOYE { border-radius: 12px; overflow: hidden; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".QZw59",
          "cssText": ".QZw59 { border: solid 3px RGB(var(--navy)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".We8yW",
          "cssText": ".We8yW { width: 100%; height: 100%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".k8D0o",
          "cssText": ".k8D0o { background-color: rgba(var(--white-on-dark),.07); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".palette--darkMode .k8D0o, .palette--cybernetic .k8D0o, .palette--vampire .k8D0o, .palette--pumpkin .k8D0o, .palette--gothRave .k8D0o",
          "cssText": ".palette--darkMode .k8D0o, .palette--cybernetic .k8D0o, .palette--vampire .k8D0o, .palette--pumpkin .k8D0o, .palette--gothRave .k8D0o { background-color: RGB(var(--secondary-accent)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".p4uR3",
          "cssText": ".p4uR3 { overflow-wrap: break-word; hyphens: auto; vertical-align: middle; outline: none; flex-grow: 1; align-items: center; min-height: 43px; padding: 8px 10px; text-decoration: none; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".p4uR3 .zK_u7",
          "cssText": ".p4uR3 .zK_u7 { width: 37px; height: 37px; margin-right: 11px; position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".z1kLx",
          "cssText": ".z1kLx { position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".CtzHc, .c0Lia",
          "cssText": ".CtzHc, .c0Lia { text-align: left; word-break: break-word; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".CtzHc",
          "cssText": ".CtzHc { font-size: 0.875rem; font-weight: 700; line-height: 1.42857; font-family: var(--font-family); text-overflow: ellipsis; align-items: center; display: flex; overflow: hidden; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSSupportsRule",
          "selector": "",
          "cssText": "@supports (display:-webkit-box) and (-webkit-line-clamp:1) {\n  .CtzHc { -webkit-line-clamp: 1; -webkit-box-orient: vertical; display: -webkit-box; }\n}",
          "urls": [],
          "group": "(display:-webkit-box) and (-webkit-line-clamp:1)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "(display:-webkit-box) and (-webkit-line-clamp:1)",
              "requiresEcho": true,
              "echoTokens": [
                "display",
                "-webkit-box",
                "-webkit-line-clamp",
                "1"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".CtzHc",
          "cssText": ".CtzHc { -webkit-line-clamp: 1; -webkit-box-orient: vertical; display: -webkit-box; }",
          "urls": [],
          "group": "(display:-webkit-box) and (-webkit-line-clamp:1)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "(display:-webkit-box) and (-webkit-line-clamp:1)",
              "requiresEcho": true,
              "echoTokens": [
                "display",
                "-webkit-box",
                "-webkit-line-clamp",
                "1"
              ]
            }
          ]
        },
        {
          "type": "CSSSupportsRule",
          "selector": "",
          "cssText": "@supports not ((display:-webkit-box) and (-webkit-line-clamp:1)) {\n  .CtzHc { white-space: nowrap; }\n}",
          "urls": [],
          "group": "not ((display:-webkit-box) and (-webkit-line-clamp:1))",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "not ((display:-webkit-box) and (-webkit-line-clamp:1))",
              "requiresEcho": true,
              "echoTokens": [
                "not",
                "display",
                "-webkit-box",
                "-webkit-line-clamp",
                "1"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".CtzHc",
          "cssText": ".CtzHc { white-space: nowrap; }",
          "urls": [],
          "group": "not ((display:-webkit-box) and (-webkit-line-clamp:1))",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "not ((display:-webkit-box) and (-webkit-line-clamp:1))",
              "requiresEcho": true,
              "echoTokens": [
                "not",
                "display",
                "-webkit-box",
                "-webkit-line-clamp",
                "1"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".c0Lia",
          "cssText": ".c0Lia { font-weight: 400; line-height: 1.52; font-family: var(--font-family); text-overflow: ellipsis; font-size: 12.5px; overflow: hidden; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSSupportsRule",
          "selector": "",
          "cssText": "@supports (display:-webkit-box) and (-webkit-line-clamp:1) {\n  .c0Lia { -webkit-line-clamp: 1; -webkit-box-orient: vertical; display: -webkit-box; }\n}",
          "urls": [],
          "group": "(display:-webkit-box) and (-webkit-line-clamp:1)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "(display:-webkit-box) and (-webkit-line-clamp:1)",
              "requiresEcho": true,
              "echoTokens": [
                "display",
                "-webkit-box",
                "-webkit-line-clamp",
                "1"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".c0Lia",
          "cssText": ".c0Lia { -webkit-line-clamp: 1; -webkit-box-orient: vertical; display: -webkit-box; }",
          "urls": [],
          "group": "(display:-webkit-box) and (-webkit-line-clamp:1)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "(display:-webkit-box) and (-webkit-line-clamp:1)",
              "requiresEcho": true,
              "echoTokens": [
                "display",
                "-webkit-box",
                "-webkit-line-clamp",
                "1"
              ]
            }
          ]
        },
        {
          "type": "CSSSupportsRule",
          "selector": "",
          "cssText": "@supports not ((display:-webkit-box) and (-webkit-line-clamp:1)) {\n  .c0Lia { white-space: nowrap; }\n}",
          "urls": [],
          "group": "not ((display:-webkit-box) and (-webkit-line-clamp:1))",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "not ((display:-webkit-box) and (-webkit-line-clamp:1))",
              "requiresEcho": true,
              "echoTokens": [
                "not",
                "display",
                "-webkit-box",
                "-webkit-line-clamp",
                "1"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".c0Lia",
          "cssText": ".c0Lia { white-space: nowrap; }",
          "urls": [],
          "group": "not ((display:-webkit-box) and (-webkit-line-clamp:1))",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "not ((display:-webkit-box) and (-webkit-line-clamp:1))",
              "requiresEcho": true,
              "echoTokens": [
                "not",
                "display",
                "-webkit-box",
                "-webkit-line-clamp",
                "1"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ejtJf",
          "cssText": ".ejtJf { color: rgba(var(--white-on-dark),.65); padding-right: 14px; display: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (pointer: fine) {\n  .ejtJf { display: block; }\n}",
          "urls": [],
          "group": "(pointer: fine)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "pointer",
              "semanticGroup": "input capability",
              "claim": "pointer accuracy",
              "excerpt": "(pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "pointer",
                "fine"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ejtJf",
          "cssText": ".ejtJf { display: block; }",
          "urls": [],
          "group": "(pointer: fine)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "pointer",
              "semanticGroup": "input capability",
              "claim": "pointer accuracy",
              "excerpt": "(pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "pointer",
                "fine"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Q08tH",
          "cssText": ".Q08tH { display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Q08tH:hover",
          "cssText": ".Q08tH:hover { background-color: rgba(var(--white-on-dark),.07); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Q08tH:focus-within",
          "cssText": ".Q08tH:focus-within { background-color: rgba(var(--white-on-dark),.07); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Q08tH .c0Lia",
          "cssText": ".Q08tH .c0Lia { color: rgba(var(--white-on-dark),.65); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Q08tH .CtzHc",
          "cssText": ".Q08tH .CtzHc { color: RGB(var(--white-on-dark)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Q08tH:not(.Xak6I) .p4uR3:focus, .Q08tH:not(.Xak6I) .p4uR3:hover",
          "cssText": ".Q08tH:not(.Xak6I) .p4uR3:focus, .Q08tH:not(.Xak6I) .p4uR3:hover { background-color: RGB(var(--secondary-accent)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Q08tH:not(.Xak6I) .p4uR3 .CtzHc",
          "cssText": ".Q08tH:not(.Xak6I) .p4uR3 .CtzHc { color: RGB(var(--black)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Q08tH:not(.Xak6I) .p4uR3 .c0Lia",
          "cssText": ".Q08tH:not(.Xak6I) .p4uR3 .c0Lia { color: rgba(var(--black),.65); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Xak6I .p4uR3",
          "cssText": ".Xak6I .p4uR3 { padding-left: 16px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Xak6I .z1kLx",
          "cssText": ".Xak6I .z1kLx { flex-direction: column; align-items: flex-start; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".tpJIh",
          "cssText": ".tpJIh { max-height: inherit; border-radius: 3px; flex-direction: column; display: flex; overflow: hidden auto; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".tpJIh .RZBuC",
          "cssText": ".tpJIh .RZBuC { margin: 0px; padding: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".tpJIh a",
          "cssText": ".tpJIh a { color: rgba(var(--black),.65); text-decoration: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".tpJIh .BYhVs",
          "cssText": ".tpJIh .BYhVs { background-color: RGB(var(--white)); list-style-type: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".tpJIh .BYhVs + .BYhVs",
          "cssText": ".tpJIh .BYhVs + .BYhVs { border-top: 1px solid rgba(var(--black),.13); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".tpJIh .yQoFB li:hover",
          "cssText": ".tpJIh .yQoFB li:hover { background-color: RGB(var(--secondary-accent)); outline: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".tpJIh .yQoFB li:focus-within",
          "cssText": ".tpJIh .yQoFB li:focus-within { background-color: RGB(var(--secondary-accent)); outline: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".tpJIh .sehv1",
          "cssText": ".tpJIh .sehv1 { font-size: 0.875rem; font-weight: 400; line-height: 1.42857; font-family: var(--font-family); box-sizing: border-box; z-index: 1; background-color: RGB(var(--white)); width: 100%; height: 35px; color: rgba(var(--black),.65); flex-shrink: 0; justify-content: space-between; align-items: center; padding: 5px 20px 5px 10px; display: flex; position: sticky; top: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".tpJIh .sehv1 > h3",
          "cssText": ".tpJIh .sehv1 > h3 { text-overflow: ellipsis; z-index: 1; overflow: hidden; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSSupportsRule",
          "selector": "",
          "cssText": "@supports (display:-webkit-box) and (-webkit-line-clamp:1) {\n  .tpJIh .sehv1 > h3 { -webkit-line-clamp: 1; -webkit-box-orient: vertical; display: -webkit-box; }\n}",
          "urls": [],
          "group": "(display:-webkit-box) and (-webkit-line-clamp:1)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "(display:-webkit-box) and (-webkit-line-clamp:1)",
              "requiresEcho": true,
              "echoTokens": [
                "display",
                "-webkit-box",
                "-webkit-line-clamp",
                "1"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".tpJIh .sehv1 > h3",
          "cssText": ".tpJIh .sehv1 > h3 { -webkit-line-clamp: 1; -webkit-box-orient: vertical; display: -webkit-box; }",
          "urls": [],
          "group": "(display:-webkit-box) and (-webkit-line-clamp:1)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "(display:-webkit-box) and (-webkit-line-clamp:1)",
              "requiresEcho": true,
              "echoTokens": [
                "display",
                "-webkit-box",
                "-webkit-line-clamp",
                "1"
              ]
            }
          ]
        },
        {
          "type": "CSSSupportsRule",
          "selector": "",
          "cssText": "@supports not ((display:-webkit-box) and (-webkit-line-clamp:1)) {\n  .tpJIh .sehv1 > h3 { white-space: nowrap; }\n}",
          "urls": [],
          "group": "not ((display:-webkit-box) and (-webkit-line-clamp:1))",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "not ((display:-webkit-box) and (-webkit-line-clamp:1))",
              "requiresEcho": true,
              "echoTokens": [
                "not",
                "display",
                "-webkit-box",
                "-webkit-line-clamp",
                "1"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".tpJIh .sehv1 > h3",
          "cssText": ".tpJIh .sehv1 > h3 { white-space: nowrap; }",
          "urls": [],
          "group": "not ((display:-webkit-box) and (-webkit-line-clamp:1))",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "not ((display:-webkit-box) and (-webkit-line-clamp:1))",
              "requiresEcho": true,
              "echoTokens": [
                "not",
                "display",
                "-webkit-box",
                "-webkit-line-clamp",
                "1"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".tpJIh .sehv1 a",
          "cssText": ".tpJIh .sehv1 a { align-items: center; gap: 0.25em; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".tpJIh .sehv1:not(.uo2al)::before",
          "cssText": ".tpJIh .sehv1:not(.uo2al)::before { background: rgba(var(--black),.07); content: \"\"; width: 100%; height: 35px; position: absolute; top: 0px; left: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".tpJIh .sehv1.uo2al",
          "cssText": ".tpJIh .sehv1.uo2al { border-bottom: 1px solid rgba(var(--black),.07); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".HeiVk .UivaL a div div",
          "cssText": ".HeiVk .UivaL a div div { font-weight: 400; line-height: 1.52; font-family: var(--font-family); font-size: 12.5px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".HeiVk .UivaL a div div span",
          "cssText": ".HeiVk .UivaL a div div span { font-size: 0.875rem; font-weight: 700; line-height: 1.42857; font-family: var(--font-family); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".HeiVk .UivaL.OYF_E",
          "cssText": ".HeiVk .UivaL.OYF_E { opacity: 0.4; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".HeiVk .UivaL.OYF_E:hover",
          "cssText": ".HeiVk .UivaL.OYF_E:hover { opacity: 1; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".HeiVk.GNejS",
          "cssText": ".HeiVk.GNejS { border-bottom: 1px solid var(--chrome-tint-heavy); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".HeiVk.GNejS .UivaL a",
          "cssText": ".HeiVk.GNejS .UivaL a { box-sizing: border-box; min-height: 36px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 540px) {\n  .HeiVk.GNejS .UivaL a { padding: 12px 16px; }\n}",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".HeiVk.GNejS .UivaL a",
          "cssText": ".HeiVk.GNejS .UivaL a { padding: 12px 16px; }",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".HeiVk.GNejS .UivaL a span",
          "cssText": ".HeiVk.GNejS .UivaL a span { font-weight: 400; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".HeiVk.GNejS .UivaL a svg",
          "cssText": ".HeiVk.GNejS .UivaL a svg { display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media not (min-width: 990px) {\n  .HeiVk.GNejS .UivaL a svg { margin: 0.5px; }\n}",
          "urls": [],
          "group": "not (min-width: 990px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "not (min-width: 990px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "990px",
                "990",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".HeiVk.GNejS .UivaL a svg",
          "cssText": ".HeiVk.GNejS .UivaL a svg { margin: 0.5px; }",
          "urls": [],
          "group": "not (min-width: 990px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "not (min-width: 990px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "990px",
                "990",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".HeiVk.GNejS .UivaL a > div:first-child > div:first-child",
          "cssText": ".HeiVk.GNejS .UivaL a > div:first-child > div:first-child { margin-right: 12px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 540px) {\n  .HeiVk.GNejS .UivaL a > div:first-child > div:first-child { margin-right: 16px; }\n}",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".HeiVk.GNejS .UivaL a > div:first-child > div:first-child",
          "cssText": ".HeiVk.GNejS .UivaL a > div:first-child > div:first-child { margin-right: 16px; }",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".le9K8",
          "cssText": ".le9K8 { text-align: center; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".le9K8 span",
          "cssText": ".le9K8 span { width: 36px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".LZNW6",
          "cssText": ".LZNW6 { background-color: rgba(var(--white-on-dark),.07); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".palette--darkMode .LZNW6, .palette--cybernetic .LZNW6, .palette--vampire .LZNW6, .palette--pumpkin .LZNW6, .palette--gothRave .LZNW6",
          "cssText": ".palette--darkMode .LZNW6, .palette--cybernetic .LZNW6, .palette--vampire .LZNW6, .palette--pumpkin .LZNW6, .palette--gothRave .LZNW6 { background-color: RGB(var(--secondary-accent)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".BC4i0",
          "cssText": ".BC4i0 { max-height: inherit; border-radius: 3px; flex-direction: column; display: flex; overflow: hidden auto; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".BC4i0 .yVAMA",
          "cssText": ".BC4i0 .yVAMA { margin: 0px; padding: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".BC4i0 .yVAMA .Usslx:not(.uLfw3)",
          "cssText": ".BC4i0 .yVAMA .Usslx:not(.uLfw3) { --icon-color-primary: rgba(var(--black),.65); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".BC4i0 .yVAMA .Usslx:not(.uLfw3) a span",
          "cssText": ".BC4i0 .yVAMA .Usslx:not(.uLfw3) a span { color: rgba(var(--black),.65); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".BC4i0 a",
          "cssText": ".BC4i0 a { text-decoration: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".BC4i0 .EU9oD",
          "cssText": ".BC4i0 .EU9oD { background-color: RGB(var(--white)); list-style-type: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".BC4i0 .EU9oD + .EU9oD",
          "cssText": ".BC4i0 .EU9oD + .EU9oD { border-top: 1px solid rgba(var(--black),.13); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".BC4i0 .p4trf li:hover",
          "cssText": ".BC4i0 .p4trf li:hover { background-color: RGB(var(--secondary-accent)); outline: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".BC4i0 .p4trf li:focus-within",
          "cssText": ".BC4i0 .p4trf li:focus-within { background-color: RGB(var(--secondary-accent)); outline: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".BC4i0 .aYbr6, .BC4i0 .mKEeW",
          "cssText": ".BC4i0 .aYbr6, .BC4i0 .mKEeW { color: rgba(var(--black),.65); flex-shrink: 0; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".BC4i0 .aYbr6",
          "cssText": ".BC4i0 .aYbr6 { background-color: rgba(var(--black),.07); padding: 6px 4px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".BC4i0 .mKEeW",
          "cssText": ".BC4i0 .mKEeW { font-size: 0.875rem; font-weight: 400; line-height: 1.42857; font-family: var(--font-family); box-sizing: border-box; z-index: 1; background-color: RGB(var(--white)); justify-content: space-between; align-items: center; width: 100%; height: 35px; padding: 5px 20px 5px 10px; display: flex; position: sticky; top: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".BC4i0 .mKEeW > h3, .BC4i0 .mKEeW > button, .BC4i0 .mKEeW > a",
          "cssText": ".BC4i0 .mKEeW > h3, .BC4i0 .mKEeW > button, .BC4i0 .mKEeW > a { text-overflow: ellipsis; z-index: 1; overflow: hidden; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSSupportsRule",
          "selector": "",
          "cssText": "@supports (display:-webkit-box) and (-webkit-line-clamp:1) {\n  .BC4i0 .mKEeW > h3, .BC4i0 .mKEeW > button, .BC4i0 .mKEeW > a { -webkit-line-clamp: 1; -webkit-box-orient: vertical; display: -webkit-box; }\n}",
          "urls": [],
          "group": "(display:-webkit-box) and (-webkit-line-clamp:1)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "(display:-webkit-box) and (-webkit-line-clamp:1)",
              "requiresEcho": true,
              "echoTokens": [
                "display",
                "-webkit-box",
                "-webkit-line-clamp",
                "1"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".BC4i0 .mKEeW > h3, .BC4i0 .mKEeW > button, .BC4i0 .mKEeW > a",
          "cssText": ".BC4i0 .mKEeW > h3, .BC4i0 .mKEeW > button, .BC4i0 .mKEeW > a { -webkit-line-clamp: 1; -webkit-box-orient: vertical; display: -webkit-box; }",
          "urls": [],
          "group": "(display:-webkit-box) and (-webkit-line-clamp:1)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "(display:-webkit-box) and (-webkit-line-clamp:1)",
              "requiresEcho": true,
              "echoTokens": [
                "display",
                "-webkit-box",
                "-webkit-line-clamp",
                "1"
              ]
            }
          ]
        },
        {
          "type": "CSSSupportsRule",
          "selector": "",
          "cssText": "@supports not ((display:-webkit-box) and (-webkit-line-clamp:1)) {\n  .BC4i0 .mKEeW > h3, .BC4i0 .mKEeW > button, .BC4i0 .mKEeW > a { white-space: nowrap; }\n}",
          "urls": [],
          "group": "not ((display:-webkit-box) and (-webkit-line-clamp:1))",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "not ((display:-webkit-box) and (-webkit-line-clamp:1))",
              "requiresEcho": true,
              "echoTokens": [
                "not",
                "display",
                "-webkit-box",
                "-webkit-line-clamp",
                "1"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".BC4i0 .mKEeW > h3, .BC4i0 .mKEeW > button, .BC4i0 .mKEeW > a",
          "cssText": ".BC4i0 .mKEeW > h3, .BC4i0 .mKEeW > button, .BC4i0 .mKEeW > a { white-space: nowrap; }",
          "urls": [],
          "group": "not ((display:-webkit-box) and (-webkit-line-clamp:1))",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "not ((display:-webkit-box) and (-webkit-line-clamp:1))",
              "requiresEcho": true,
              "echoTokens": [
                "not",
                "display",
                "-webkit-box",
                "-webkit-line-clamp",
                "1"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".BC4i0 .mKEeW::before",
          "cssText": ".BC4i0 .mKEeW::before { background: rgba(var(--black),.07); content: \"\"; width: 100%; height: 35px; position: absolute; top: 0px; left: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".BC4i0 .WZRr1",
          "cssText": ".BC4i0 .WZRr1 { font-size: 0.875rem; font-weight: 400; line-height: 1.42857; font-family: var(--font-family); text-align: right; display: inline-block; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (min-width: 990px) {\n  .kjjAF { margin-left: 16px; }\n}",
          "urls": [],
          "group": "(min-width: 990px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 990px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "990px",
                "990",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".kjjAF",
          "cssText": ".kjjAF { margin-left: 16px; }",
          "urls": [],
          "group": "(min-width: 990px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 990px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "990px",
                "990",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".gqUco",
          "cssText": ".gqUco { border-radius: 50%; justify-content: center; align-items: center; width: 48px; height: 48px; display: flex; position: fixed; top: 8px; left: 8px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".HOjIH",
          "cssText": ".HOjIH { border: 1px solid RGB(var(--black)); background-color: RGB(var(--black)); text-align: left; cursor: pointer; border-radius: 6px; width: calc(100% - 16px); max-height: 36px; margin: 0px 0px 16px 8px; padding: 8px 12px; transition: border 0.25s ease-out, max-height 0.25s ease-out; display: block; overflow-y: hidden; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".HOjIH .L_SvM",
          "cssText": ".HOjIH .L_SvM { justify-content: space-between; margin-bottom: 8px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".HOjIH .NFDGM",
          "cssText": ".HOjIH .NFDGM { font-size: 0.875rem; font-weight: 400; line-height: 1.42857; font-family: var(--font-family); color: RGB(var(--white)); transition: color 0.25s ease-out; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".HOjIH .MLUVg",
          "cssText": ".HOjIH .MLUVg { font-size: 0.78125rem; font-weight: 700; line-height: 1.52; font-family: var(--font-family); color: RGB(var(--pink)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".HOjIH .CHF47",
          "cssText": ".HOjIH .CHF47 { font-size: 0.78125rem; font-weight: 400; line-height: 1.52; font-family: var(--font-family); color: RGB(var(--white)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".HOjIH:hover",
          "cssText": ".HOjIH:hover { border: 1px solid RGB(var(--pink)); max-height: 100px; transition: border 0.25s ease-in, max-height 0.25s ease-in; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".HOjIH:hover .NFDGM",
          "cssText": ".HOjIH:hover .NFDGM { color: RGB(var(--white)); transition: color 0.25s ease-in; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".palette--cybernetic .HOjIH .MLUVg, .palette--ghost .HOjIH .MLUVg, .palette--pumpkin .HOjIH .MLUVg, .palette--snowBright .HOjIH .MLUVg, .palette--gothRave .HOjIH .MLUVg, .palette--pride .HOjIH .MLUVg, .palette--lowContrastClassic .HOjIH .MLUVg",
          "cssText": ".palette--cybernetic .HOjIH .MLUVg, .palette--ghost .HOjIH .MLUVg, .palette--pumpkin .HOjIH .MLUVg, .palette--snowBright .HOjIH .MLUVg, .palette--gothRave .HOjIH .MLUVg, .palette--pride .HOjIH .MLUVg, .palette--lowContrastClassic .HOjIH .MLUVg { color: RGB(var(--white)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".QwqLh",
          "cssText": ".QwqLh { color: var(--color-primary-link); text-decoration: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hXNpI",
          "cssText": ".hXNpI { display: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (min-width: 1018px) {\n  .hXNpI { flex-direction: column; justify-content: center; align-items: center; gap: 4px; display: flex; }\n  .hXNpI .COENx { text-align: center; font-size: 0.75rem; }\n}",
          "urls": [],
          "group": "(min-width: 1018px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 1018px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1018px",
                "1018",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hXNpI",
          "cssText": ".hXNpI { flex-direction: column; justify-content: center; align-items: center; gap: 4px; display: flex; }",
          "urls": [],
          "group": "(min-width: 1018px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 1018px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1018px",
                "1018",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hXNpI .COENx",
          "cssText": ".hXNpI .COENx { text-align: center; font-size: 0.75rem; }",
          "urls": [],
          "group": "(min-width: 1018px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 1018px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1018px",
                "1018",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (min-width: 1162px) {\n  .hXNpI { flex-direction: row; }\n  .hXNpI .COENx { font-size: inherit; }\n}",
          "urls": [],
          "group": "(min-width: 1162px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 1162px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1162px",
                "1162",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hXNpI",
          "cssText": ".hXNpI { flex-direction: row; }",
          "urls": [],
          "group": "(min-width: 1162px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 1162px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1162px",
                "1162",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hXNpI .COENx",
          "cssText": ".hXNpI .COENx { font-size: inherit; }",
          "urls": [],
          "group": "(min-width: 1162px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 1162px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1162px",
                "1162",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".EZHUS",
          "cssText": ".EZHUS { pointer-events: none; min-width: 54px; font-size: 0.875rem; font-family: var(--font-family); color: rgb(255, 255, 255); text-align: center; background-color: rgb(0, 0, 0); border-radius: 4px; padding: 4px 8px; font-weight: 500; line-height: 20px; position: relative; box-shadow: rgba(0, 0, 0, 0.25) 0px 0px 4px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".EZHUS.pmD2_",
          "cssText": ".EZHUS.pmD2_ { background-color: RGB(var(--green)); color: RGB(var(--white)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".EZHUS.pMONo",
          "cssText": ".EZHUS.pMONo { background-color: RGB(var(--red)); color: RGB(var(--white)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".pMONo[data-placement*=\"right\"]::after",
          "cssText": ".pMONo[data-placement*=\"right\"]::after { border-right-color: RGB(var(--red)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".pMONo[data-placement*=\"left\"]::after",
          "cssText": ".pMONo[data-placement*=\"left\"]::after { border-left-color: RGB(var(--red)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".pMONo[data-placement*=\"top\"]::after",
          "cssText": ".pMONo[data-placement*=\"top\"]::after { border-top-color: RGB(var(--red)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".pMONo[data-placement*=\"bottom\"]::after",
          "cssText": ".pMONo[data-placement*=\"bottom\"]::after { border-bottom-color: RGB(var(--red)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".pmD2_[data-placement*=\"right\"]::after",
          "cssText": ".pmD2_[data-placement*=\"right\"]::after { border-right-color: RGB(var(--green)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".pmD2_[data-placement*=\"left\"]::after",
          "cssText": ".pmD2_[data-placement*=\"left\"]::after { border-left-color: RGB(var(--green)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".pmD2_[data-placement*=\"top\"]::after",
          "cssText": ".pmD2_[data-placement*=\"top\"]::after { border-top-color: RGB(var(--green)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".pmD2_[data-placement*=\"bottom\"]::after",
          "cssText": ".pmD2_[data-placement*=\"bottom\"]::after { border-bottom-color: RGB(var(--green)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".HbNY8.aAyWA",
          "cssText": ".HbNY8.aAyWA { filter: blur(20px); pointer-events: none; border-radius: 10px; width: 100%; height: 100%; transition: 0.25s ease-in-out; position: absolute; top: 0px; left: 0px; overflow: hidden; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".oh2Ph",
          "cssText": ".oh2Ph { }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (prefers-reduced-motion) {\n  .ifDTb.aAyWA, .WrBSR.aAyWA { transform: rotate(0deg) scale(1.75); }\n}",
          "urls": [],
          "group": "(prefers-reduced-motion)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "prefers-reduced-motion",
              "semanticGroup": "user preference",
              "claim": "reduced motion preference",
              "excerpt": "(prefers-reduced-motion)",
              "requiresEcho": true,
              "echoTokens": [
                "prefers-reduced-motion"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ifDTb.aAyWA, .WrBSR.aAyWA",
          "cssText": ".ifDTb.aAyWA, .WrBSR.aAyWA { transform: rotate(0deg) scale(1.75); }",
          "urls": [],
          "group": "(prefers-reduced-motion)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "prefers-reduced-motion",
              "semanticGroup": "user preference",
              "claim": "reduced motion preference",
              "excerpt": "(prefers-reduced-motion)",
              "requiresEcho": true,
              "echoTokens": [
                "prefers-reduced-motion"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (prefers-reduced-motion: no-preference) {\n  .ifDTb.aAyWA { animation: 18s ease 0s infinite normal none running coX3X; }\n  .WrBSR.aAyWA { animation: 19s ease 0s infinite normal none running coX3X; }\n}",
          "urls": [],
          "group": "(prefers-reduced-motion: no-preference)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "prefers-reduced-motion",
              "semanticGroup": "user preference",
              "claim": "reduced motion preference",
              "excerpt": "(prefers-reduced-motion: no-preference)",
              "requiresEcho": true,
              "echoTokens": [
                "prefers-reduced-motion",
                "no-preference"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ifDTb.aAyWA",
          "cssText": ".ifDTb.aAyWA { animation: 18s ease 0s infinite normal none running coX3X; }",
          "urls": [],
          "group": "(prefers-reduced-motion: no-preference)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "prefers-reduced-motion",
              "semanticGroup": "user preference",
              "claim": "reduced motion preference",
              "excerpt": "(prefers-reduced-motion: no-preference)",
              "requiresEcho": true,
              "echoTokens": [
                "prefers-reduced-motion",
                "no-preference"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".WrBSR.aAyWA",
          "cssText": ".WrBSR.aAyWA { animation: 19s ease 0s infinite normal none running coX3X; }",
          "urls": [],
          "group": "(prefers-reduced-motion: no-preference)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "prefers-reduced-motion",
              "semanticGroup": "user preference",
              "claim": "reduced motion preference",
              "excerpt": "(prefers-reduced-motion: no-preference)",
              "requiresEcho": true,
              "echoTokens": [
                "prefers-reduced-motion",
                "no-preference"
              ]
            }
          ]
        },
        {
          "type": "CSSKeyframesRule",
          "selector": "",
          "cssText": "@keyframes coX3X { \n  0% { transform: rotate(0deg) scale(1.75); }\n  50% { transform: rotate(30deg) scale(2); }\n  100% { transform: rotate(0deg) scale(1.75); }\n}",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "0% { transform: rotate(0deg) scale(1.75); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "50% { transform: rotate(30deg) scale(2); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "100% { transform: rotate(0deg) scale(1.75); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".nC4hC",
          "cssText": ".nC4hC { align-items: center; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".OEz91",
          "cssText": ".OEz91 { font-size: 0.875rem; font-weight: 700; line-height: 1.42857; font-family: var(--font-family); color: RGB(var(--black)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".NErP7",
          "cssText": ".NErP7 { background-size: 36px 24px; width: 36px; height: 24px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".YhC7x",
          "cssText": ".YhC7x { font-size: 0.875rem; font-weight: 400; line-height: 1.42857; font-family: var(--font-family); color: RGB(var(--black)); margin-left: 12px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".kELje",
          "cssText": ".kELje { background-image: url(\"/pop/src/assets/images/credit-cards/americanexpress-44ab6c93.png\"); }",
          "urls": [
            "/pop/src/assets/images/credit-cards/americanexpress-44ab6c93.png"
          ],
          "group": "",
          "sources": [],
          "sinks": [
            {
              "reason": "url_sink",
              "urls": [
                "/pop/src/assets/images/credit-cards/americanexpress-44ab6c93.png"
              ]
            }
          ],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (-webkit-min-device-pixel-ratio: 1.3), (min-resolution: 1.3dppx) {\n  .kELje { background-image: url(\"/pop/src/assets/images/credit-cards/americanexpress@2x-d4d94ad4.png\"); }\n}",
          "urls": [
            "/pop/src/assets/images/credit-cards/americanexpress@2x-d4d94ad4.png"
          ],
          "group": "(-webkit-min-device-pixel-ratio: 1.3), (min-resolution: 1.3dppx)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "resolution",
              "semanticGroup": "display capability",
              "claim": "pixel density (dpi/dppx)",
              "excerpt": "(-webkit-min-device-pixel-ratio: 1.3), (min-resolution: 1.3dppx)",
              "requiresEcho": true,
              "echoTokens": [
                "-webkit-min-device-pixel-ratio",
                "1.3",
                "min-resolution",
                "1.3dppx",
                "resolution",
                "device-pixel-ratio"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "device-pixel-ratio",
              "semanticGroup": "display capability",
              "claim": "device pixel ratio (alias)",
              "excerpt": "(-webkit-min-device-pixel-ratio: 1.3), (min-resolution: 1.3dppx)",
              "requiresEcho": true,
              "echoTokens": [
                "-webkit-min-device-pixel-ratio",
                "1.3",
                "min-resolution",
                "1.3dppx",
                "resolution",
                "device-pixel-ratio"
              ]
            }
          ],
          "sinks": [
            {
              "reason": "url_sink",
              "urls": [
                "/pop/src/assets/images/credit-cards/americanexpress@2x-d4d94ad4.png"
              ]
            }
          ],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".kELje",
          "cssText": ".kELje { background-image: url(\"/pop/src/assets/images/credit-cards/americanexpress@2x-d4d94ad4.png\"); }",
          "urls": [
            "/pop/src/assets/images/credit-cards/americanexpress@2x-d4d94ad4.png"
          ],
          "group": "(-webkit-min-device-pixel-ratio: 1.3), (min-resolution: 1.3dppx)",
          "sources": [],
          "sinks": [
            {
              "reason": "url_sink",
              "urls": [
                "/pop/src/assets/images/credit-cards/americanexpress@2x-d4d94ad4.png"
              ]
            }
          ],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "resolution",
              "semanticGroup": "display capability",
              "claim": "pixel density (dpi/dppx)",
              "excerpt": "(-webkit-min-device-pixel-ratio: 1.3), (min-resolution: 1.3dppx)",
              "requiresEcho": true,
              "echoTokens": [
                "-webkit-min-device-pixel-ratio",
                "1.3",
                "min-resolution",
                "1.3dppx",
                "resolution",
                "device-pixel-ratio"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "device-pixel-ratio",
              "semanticGroup": "display capability",
              "claim": "device pixel ratio (alias)",
              "excerpt": "(-webkit-min-device-pixel-ratio: 1.3), (min-resolution: 1.3dppx)",
              "requiresEcho": true,
              "echoTokens": [
                "-webkit-min-device-pixel-ratio",
                "1.3",
                "min-resolution",
                "1.3dppx",
                "resolution",
                "device-pixel-ratio"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".cXWjm",
          "cssText": ".cXWjm { background-image: url(\"/pop/src/assets/images/credit-cards/discover-ad660e52.png\"); }",
          "urls": [
            "/pop/src/assets/images/credit-cards/discover-ad660e52.png"
          ],
          "group": "",
          "sources": [],
          "sinks": [
            {
              "reason": "url_sink",
              "urls": [
                "/pop/src/assets/images/credit-cards/discover-ad660e52.png"
              ]
            }
          ],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (-webkit-min-device-pixel-ratio: 1.3), (min-resolution: 1.3dppx) {\n  .cXWjm { background-image: url(\"/pop/src/assets/images/credit-cards/discover@2x-736df352.png\"); }\n}",
          "urls": [
            "/pop/src/assets/images/credit-cards/discover@2x-736df352.png"
          ],
          "group": "(-webkit-min-device-pixel-ratio: 1.3), (min-resolution: 1.3dppx)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "resolution",
              "semanticGroup": "display capability",
              "claim": "pixel density (dpi/dppx)",
              "excerpt": "(-webkit-min-device-pixel-ratio: 1.3), (min-resolution: 1.3dppx)",
              "requiresEcho": true,
              "echoTokens": [
                "-webkit-min-device-pixel-ratio",
                "1.3",
                "min-resolution",
                "1.3dppx",
                "resolution",
                "device-pixel-ratio"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "device-pixel-ratio",
              "semanticGroup": "display capability",
              "claim": "device pixel ratio (alias)",
              "excerpt": "(-webkit-min-device-pixel-ratio: 1.3), (min-resolution: 1.3dppx)",
              "requiresEcho": true,
              "echoTokens": [
                "-webkit-min-device-pixel-ratio",
                "1.3",
                "min-resolution",
                "1.3dppx",
                "resolution",
                "device-pixel-ratio"
              ]
            }
          ],
          "sinks": [
            {
              "reason": "url_sink",
              "urls": [
                "/pop/src/assets/images/credit-cards/discover@2x-736df352.png"
              ]
            }
          ],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".cXWjm",
          "cssText": ".cXWjm { background-image: url(\"/pop/src/assets/images/credit-cards/discover@2x-736df352.png\"); }",
          "urls": [
            "/pop/src/assets/images/credit-cards/discover@2x-736df352.png"
          ],
          "group": "(-webkit-min-device-pixel-ratio: 1.3), (min-resolution: 1.3dppx)",
          "sources": [],
          "sinks": [
            {
              "reason": "url_sink",
              "urls": [
                "/pop/src/assets/images/credit-cards/discover@2x-736df352.png"
              ]
            }
          ],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "resolution",
              "semanticGroup": "display capability",
              "claim": "pixel density (dpi/dppx)",
              "excerpt": "(-webkit-min-device-pixel-ratio: 1.3), (min-resolution: 1.3dppx)",
              "requiresEcho": true,
              "echoTokens": [
                "-webkit-min-device-pixel-ratio",
                "1.3",
                "min-resolution",
                "1.3dppx",
                "resolution",
                "device-pixel-ratio"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "device-pixel-ratio",
              "semanticGroup": "display capability",
              "claim": "device pixel ratio (alias)",
              "excerpt": "(-webkit-min-device-pixel-ratio: 1.3), (min-resolution: 1.3dppx)",
              "requiresEcho": true,
              "echoTokens": [
                "-webkit-min-device-pixel-ratio",
                "1.3",
                "min-resolution",
                "1.3dppx",
                "resolution",
                "device-pixel-ratio"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".s5cFj",
          "cssText": ".s5cFj { background-image: url(\"/pop/src/assets/images/credit-cards/mastercard-2f575904.png\"); }",
          "urls": [
            "/pop/src/assets/images/credit-cards/mastercard-2f575904.png"
          ],
          "group": "",
          "sources": [],
          "sinks": [
            {
              "reason": "url_sink",
              "urls": [
                "/pop/src/assets/images/credit-cards/mastercard-2f575904.png"
              ]
            }
          ],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (-webkit-min-device-pixel-ratio: 1.3), (min-resolution: 1.3dppx) {\n  .s5cFj { background-image: url(\"/pop/src/assets/images/credit-cards/mastercard@2x-32077f67.png\"); }\n}",
          "urls": [
            "/pop/src/assets/images/credit-cards/mastercard@2x-32077f67.png"
          ],
          "group": "(-webkit-min-device-pixel-ratio: 1.3), (min-resolution: 1.3dppx)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "resolution",
              "semanticGroup": "display capability",
              "claim": "pixel density (dpi/dppx)",
              "excerpt": "(-webkit-min-device-pixel-ratio: 1.3), (min-resolution: 1.3dppx)",
              "requiresEcho": true,
              "echoTokens": [
                "-webkit-min-device-pixel-ratio",
                "1.3",
                "min-resolution",
                "1.3dppx",
                "resolution",
                "device-pixel-ratio"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "device-pixel-ratio",
              "semanticGroup": "display capability",
              "claim": "device pixel ratio (alias)",
              "excerpt": "(-webkit-min-device-pixel-ratio: 1.3), (min-resolution: 1.3dppx)",
              "requiresEcho": true,
              "echoTokens": [
                "-webkit-min-device-pixel-ratio",
                "1.3",
                "min-resolution",
                "1.3dppx",
                "resolution",
                "device-pixel-ratio"
              ]
            }
          ],
          "sinks": [
            {
              "reason": "url_sink",
              "urls": [
                "/pop/src/assets/images/credit-cards/mastercard@2x-32077f67.png"
              ]
            }
          ],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".s5cFj",
          "cssText": ".s5cFj { background-image: url(\"/pop/src/assets/images/credit-cards/mastercard@2x-32077f67.png\"); }",
          "urls": [
            "/pop/src/assets/images/credit-cards/mastercard@2x-32077f67.png"
          ],
          "group": "(-webkit-min-device-pixel-ratio: 1.3), (min-resolution: 1.3dppx)",
          "sources": [],
          "sinks": [
            {
              "reason": "url_sink",
              "urls": [
                "/pop/src/assets/images/credit-cards/mastercard@2x-32077f67.png"
              ]
            }
          ],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "resolution",
              "semanticGroup": "display capability",
              "claim": "pixel density (dpi/dppx)",
              "excerpt": "(-webkit-min-device-pixel-ratio: 1.3), (min-resolution: 1.3dppx)",
              "requiresEcho": true,
              "echoTokens": [
                "-webkit-min-device-pixel-ratio",
                "1.3",
                "min-resolution",
                "1.3dppx",
                "resolution",
                "device-pixel-ratio"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "device-pixel-ratio",
              "semanticGroup": "display capability",
              "claim": "device pixel ratio (alias)",
              "excerpt": "(-webkit-min-device-pixel-ratio: 1.3), (min-resolution: 1.3dppx)",
              "requiresEcho": true,
              "echoTokens": [
                "-webkit-min-device-pixel-ratio",
                "1.3",
                "min-resolution",
                "1.3dppx",
                "resolution",
                "device-pixel-ratio"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ve6Vt",
          "cssText": ".ve6Vt { background-image: url(\"/pop/src/assets/images/credit-cards/visa-ee4c2a72.png\"); }",
          "urls": [
            "/pop/src/assets/images/credit-cards/visa-ee4c2a72.png"
          ],
          "group": "",
          "sources": [],
          "sinks": [
            {
              "reason": "url_sink",
              "urls": [
                "/pop/src/assets/images/credit-cards/visa-ee4c2a72.png"
              ]
            }
          ],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (-webkit-min-device-pixel-ratio: 1.3), (min-resolution: 1.3dppx) {\n  .ve6Vt { background-image: url(\"/pop/src/assets/images/credit-cards/visa@2x-d440d416.png\"); }\n}",
          "urls": [
            "/pop/src/assets/images/credit-cards/visa@2x-d440d416.png"
          ],
          "group": "(-webkit-min-device-pixel-ratio: 1.3), (min-resolution: 1.3dppx)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "resolution",
              "semanticGroup": "display capability",
              "claim": "pixel density (dpi/dppx)",
              "excerpt": "(-webkit-min-device-pixel-ratio: 1.3), (min-resolution: 1.3dppx)",
              "requiresEcho": true,
              "echoTokens": [
                "-webkit-min-device-pixel-ratio",
                "1.3",
                "min-resolution",
                "1.3dppx",
                "resolution",
                "device-pixel-ratio"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "device-pixel-ratio",
              "semanticGroup": "display capability",
              "claim": "device pixel ratio (alias)",
              "excerpt": "(-webkit-min-device-pixel-ratio: 1.3), (min-resolution: 1.3dppx)",
              "requiresEcho": true,
              "echoTokens": [
                "-webkit-min-device-pixel-ratio",
                "1.3",
                "min-resolution",
                "1.3dppx",
                "resolution",
                "device-pixel-ratio"
              ]
            }
          ],
          "sinks": [
            {
              "reason": "url_sink",
              "urls": [
                "/pop/src/assets/images/credit-cards/visa@2x-d440d416.png"
              ]
            }
          ],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ve6Vt",
          "cssText": ".ve6Vt { background-image: url(\"/pop/src/assets/images/credit-cards/visa@2x-d440d416.png\"); }",
          "urls": [
            "/pop/src/assets/images/credit-cards/visa@2x-d440d416.png"
          ],
          "group": "(-webkit-min-device-pixel-ratio: 1.3), (min-resolution: 1.3dppx)",
          "sources": [],
          "sinks": [
            {
              "reason": "url_sink",
              "urls": [
                "/pop/src/assets/images/credit-cards/visa@2x-d440d416.png"
              ]
            }
          ],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "resolution",
              "semanticGroup": "display capability",
              "claim": "pixel density (dpi/dppx)",
              "excerpt": "(-webkit-min-device-pixel-ratio: 1.3), (min-resolution: 1.3dppx)",
              "requiresEcho": true,
              "echoTokens": [
                "-webkit-min-device-pixel-ratio",
                "1.3",
                "min-resolution",
                "1.3dppx",
                "resolution",
                "device-pixel-ratio"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "device-pixel-ratio",
              "semanticGroup": "display capability",
              "claim": "device pixel ratio (alias)",
              "excerpt": "(-webkit-min-device-pixel-ratio: 1.3), (min-resolution: 1.3dppx)",
              "requiresEcho": true,
              "echoTokens": [
                "-webkit-min-device-pixel-ratio",
                "1.3",
                "min-resolution",
                "1.3dppx",
                "resolution",
                "device-pixel-ratio"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Kz0DZ",
          "cssText": ".Kz0DZ { flex-flow: wrap; justify-content: space-between; align-items: center; padding: 8px 0px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Kz0DZ .Gy2oW",
          "cssText": ".Kz0DZ .Gy2oW { flex-direction: row; margin-top: -4px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Kz0DZ .Gy2oW .PoRzR",
          "cssText": ".Kz0DZ .Gy2oW .PoRzR { align-items: center; margin-bottom: 14px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Kz0DZ .Gy2oW .FcKVd",
          "cssText": ".Kz0DZ .Gy2oW .FcKVd { font-size: 0.875rem; font-weight: 400; line-height: 1.42857; font-family: var(--font-family); color: rgba(var(--black),.65); margin-left: 24px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Kz0DZ.QFzLH",
          "cssText": ".Kz0DZ.QFzLH { flex-direction: column; align-items: flex-start; padding: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Kz0DZ.QFzLH .Gy2oW",
          "cssText": ".Kz0DZ.QFzLH .Gy2oW { font-size: 1rem; font-weight: 400; line-height: 1.5; font-family: var(--font-family); color: RGB(var(--black)); flex-direction: column; margin-bottom: 12px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Kz0DZ.QFzLH .w__75",
          "cssText": ".Kz0DZ.QFzLH .w__75 { margin-right: 5px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Kz0DZ.QFzLH .PoRzR",
          "cssText": ".Kz0DZ.QFzLH .PoRzR { margin-top: 5px; margin-bottom: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Kz0DZ.QFzLH .FcKVd",
          "cssText": ".Kz0DZ.QFzLH .FcKVd { font-size: 0.875rem; font-weight: 400; line-height: 1.42857; font-family: var(--font-family); color: rgba(var(--black),.6); margin-left: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Kz0DZ.QFzLH .DmbDn",
          "cssText": ".Kz0DZ.QFzLH .DmbDn { margin-bottom: 12px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Kz0DZ.QFzLH .p6oSd",
          "cssText": ".Kz0DZ.QFzLH .p6oSd { color: rgba(var(--black),.6); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".clHno",
          "cssText": ".clHno { z-index: 101; backdrop-filter: blur(10px); color: rgb(255, 255, 255); background: linear-gradient(rgba(255, 255, 255, 0.01) 0%, rgba(255, 255, 255, 0.07) 100%); border-radius: 12px; flex-direction: column; width: 393px; max-width: 100%; min-height: 50vh; max-height: 90vh; display: flex; position: fixed; top: 50%; left: 50%; overflow-y: scroll; transform: translate(-50%, -50%); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media not (min-width: 990px) {\n  .V1KKK { width: 629px; }\n}",
          "urls": [],
          "group": "not (min-width: 990px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "not (min-width: 990px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "990px",
                "990",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".V1KKK",
          "cssText": ".V1KKK { width: 629px; }",
          "urls": [],
          "group": "not (min-width: 990px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "not (min-width: 990px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "990px",
                "990",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (min-width: 990px) {\n  .V1KKK { width: 960px; }\n}",
          "urls": [],
          "group": "(min-width: 990px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 990px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "990px",
                "990",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".V1KKK",
          "cssText": ".V1KKK { width: 960px; }",
          "urls": [],
          "group": "(min-width: 990px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 990px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "990px",
                "990",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".zStED[data-backdrop]",
          "cssText": ".zStED[data-backdrop] { z-index: 100; backdrop-filter: blur(4px); background-color: rgba(0, 25, 53, 0.9); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".gnxzg",
          "cssText": ".gnxzg { border-radius: 32px; padding: 12px 32px; font-weight: 350; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".NJb8l",
          "cssText": ".NJb8l { position: absolute; top: 8px; right: 8px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".R0Xlv",
          "cssText": ".R0Xlv { background: 0px 0px; border-radius: 32px; justify-content: center; align-items: center; width: 32px; height: 32px; padding: 8px; display: flex; position: absolute; top: 8px; right: 8px; box-shadow: rgba(0, 0, 0, 0.15) 0px 1px 1px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".R0Xlv:hover",
          "cssText": ".R0Xlv:hover { background-color: rgba(0, 0, 0, 0.1); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media not (min-width: 990px) {\n  .R0Xlv { right: 12px; }\n}",
          "urls": [],
          "group": "not (min-width: 990px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "not (min-width: 990px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "990px",
                "990",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".R0Xlv",
          "cssText": ".R0Xlv { right: 12px; }",
          "urls": [],
          "group": "not (min-width: 990px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "not (min-width: 990px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "990px",
                "990",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 540px) {\n  .R0Xlv { top: 32px; right: 12px; }\n}",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".R0Xlv",
          "cssText": ".R0Xlv { top: 32px; right: 12px; }",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".FTqYf",
          "cssText": ".FTqYf { color: rgb(255, 255, 255); font-size: 1.125rem; font-weight: 400; line-height: 1.33333; font-family: var(--font-family); box-sizing: border-box; z-index: 102; border-radius: 12px; flex-direction: column; gap: 16px; width: 100%; min-width: 359px; max-width: 400px; padding: 0px 2em; display: flex; position: fixed; top: 50%; left: 50%; overflow: hidden; transform: translate(-50%, -50%); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".N6Kf4",
          "cssText": ".N6Kf4 { position: absolute; top: 8px; right: 8px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".eWuI1",
          "cssText": ".eWuI1 { text-align: center; font-size: 32px; font-weight: 500; line-height: 1.25; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".CTYKm",
          "cssText": ".CTYKm { flex-direction: column; gap: 16px; font-size: 16px; line-height: 1.5; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Q53Gq",
          "cssText": ".Q53Gq { font-size: 1rem; line-height: 1.5; font-family: var(--font-family); text-align: center; flex-direction: column; align-self: center; gap: 10px; width: 100%; padding: 24px 48px; font-weight: 350; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".tGcvj",
          "cssText": ".tGcvj { color: rgb(255, 255, 255); background: rgb(255, 73, 48); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".LFCvP",
          "cssText": ".LFCvP { border: 1px solid rgba(255, 255, 255, 0.1); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".tGcvj, .LFCvP",
          "cssText": ".tGcvj, .LFCvP { padding: 12px 24px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ueVRR",
          "cssText": ".ueVRR { flex-direction: column; justify-content: center; gap: 50px; margin-top: -14px; font-weight: 350; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ueVRR._JVH1",
          "cssText": ".ueVRR._JVH1 { min-height: 90vh; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ueVRR a",
          "cssText": ".ueVRR a { text-decoration: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".IMMt_",
          "cssText": ".IMMt_ { border-radius: 32px; padding: 12px 32px; font-weight: 350; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ueDdc",
          "cssText": ".ueDdc { text-align: center; flex-direction: column; align-items: center; gap: 18px; padding: 40px 40px 0px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".znZtn",
          "cssText": ".znZtn { color: rgb(0, 0, 0); background: rgb(255, 73, 48); padding-bottom: 20px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".N0aPR",
          "cssText": ".N0aPR { font-size: 1.625rem; font-weight: 700; line-height: 1.30769; font-family: var(--font-family); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".j2j0M",
          "cssText": ".j2j0M { font-size: 1.125rem; line-height: 1.33333; font-family: var(--font-family); max-width: 377px; font-weight: 350; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".afgMB",
          "cssText": ".afgMB { color: rgba(255, 255, 255, 0.6); font-size: 0.78125rem; line-height: 1.52; font-family: var(--font-family); font-style: normal; font-weight: 350; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".GJsIB",
          "cssText": ".GJsIB { grid-template-columns: repeat(3, 1fr); align-items: flex-start; gap: 20px; padding: 0px 40px 20px; display: grid; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media not (min-width: 990px) {\n  .GJsIB { grid-template-columns: repeat(2, 1fr); }\n}",
          "urls": [],
          "group": "not (min-width: 990px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "not (min-width: 990px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "990px",
                "990",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".GJsIB",
          "cssText": ".GJsIB { grid-template-columns: repeat(2, 1fr); }",
          "urls": [],
          "group": "not (min-width: 990px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "not (min-width: 990px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "990px",
                "990",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 540px) {\n  .GJsIB { grid-template-columns: repeat(6, 280px); padding: 0px 32px 16px; overflow-x: scroll; }\n}",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".GJsIB",
          "cssText": ".GJsIB { grid-template-columns: repeat(6, 280px); padding: 0px 32px 16px; overflow-x: scroll; }",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".HqY8o",
          "cssText": ".HqY8o { font-size: 1rem; line-height: 1.5; font-family: var(--font-family); text-align: center; flex-direction: column; align-self: center; gap: 10px; padding: 0px 20px 32px; font-weight: 350; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".HqY8o .vVDFt",
          "cssText": ".HqY8o .vVDFt { min-width: 308px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".HqY8o.BuuXZ",
          "cssText": ".HqY8o.BuuXZ { padding-bottom: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 540px) {\n  .HqY8o { margin-bottom: 28px; }\n}",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".HqY8o",
          "cssText": ".HqY8o { margin-bottom: 28px; }",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".vVDFt",
          "cssText": ".vVDFt { background: rgba(0, 0, 0, 0.8); border-top: 1px solid rgba(255, 255, 255, 0.15); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "._Uk2U",
          "cssText": "._Uk2U { border: 1px solid rgba(0, 0, 0, 0.3); border-radius: 999px; padding: 12px 20px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".XIGRY.BkvLG",
          "cssText": ".XIGRY.BkvLG { background: rgba(255, 255, 255, 0.1); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".gQnWz",
          "cssText": ".gQnWz { color: rgba(255, 255, 255, 0.9); flex-grow: 1; align-items: center; gap: 12px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".LF0LO",
          "cssText": ".LF0LO { font-size: 0.875rem; line-height: 1.25rem; font-family: var(--font-family); color: rgb(255, 255, 255); background: rgba(0, 0, 0, 0.6); border-radius: 6px; flex-direction: column; max-width: 476px; padding: 12px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".LF0LO a",
          "cssText": ".LF0LO a { text-decoration: underline; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".v38by",
          "cssText": ".v38by { color: rgb(255, 255, 255); text-align: center; flex-direction: column; justify-content: space-around; align-self: center; align-items: center; gap: 18px; min-width: 308px; max-width: 616px; padding: 40px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".v38by .yo2iR",
          "cssText": ".v38by .yo2iR { flex-direction: column; justify-content: space-around; gap: 20px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".v38by .gSgTK",
          "cssText": ".v38by .gSgTK { font-size: 1rem; line-height: 1.5; font-family: var(--font-family); color: rgba(255, 255, 255, 0.6); font-weight: 350; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".v38by .anBPp",
          "cssText": ".v38by .anBPp { background: rgba(255, 255, 255, 0.1); justify-content: center; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".WadOH",
          "cssText": ".WadOH { width: 100%; display: inline-block; position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".sECH1",
          "cssText": ".sECH1 { font-size: 0.875rem; font-weight: 400; line-height: 1.42857; font-family: var(--font-family); border-radius: 4px; width: 100%; padding: 10px 15px 10px 10px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".sECH1.C_ENj",
          "cssText": ".sECH1.C_ENj { border-radius: 20px; padding-left: 20px; padding-right: 25px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".sECH1.cxxrq",
          "cssText": ".sECH1.cxxrq { border: 1px solid rgba(var(--black),.6); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".sECH1:hover",
          "cssText": ".sECH1:hover { background-color: RGB(var(--secondary-accent)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".LAF8V",
          "cssText": ".LAF8V { flex-direction: row; justify-content: space-between; align-items: center; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".SrF48",
          "cssText": ".SrF48 { box-sizing: border-box; z-index: 10; border: 1px solid rgba(var(--black),.07); background: RGB(var(--white)); width: 232px; box-shadow: 0px 1px 12px rgba(var(--black),.15); will-change: transform; border-radius: 4px; position: absolute; transform: translateY(10px); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".X_YtI",
          "cssText": ".X_YtI { margin-bottom: 0px; padding-left: 0px; font-size: 14px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".OIL2C",
          "cssText": ".OIL2C { flex-direction: row; align-items: center; padding: 14px 22px 14px 17px; list-style: none; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".OIL2C:hover",
          "cssText": ".OIL2C:hover { background-color: RGB(var(--secondary-accent)); cursor: pointer; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".jjHk8",
          "cssText": ".jjHk8 { position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ox5cL",
          "cssText": ".ox5cL { white-space: nowrap; padding-left: 23px; padding-right: 15px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".xAg_Z",
          "cssText": ".xAg_Z { width: 100%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".cs2zK",
          "cssText": ".cs2zK { border-radius: 32px; padding: 12px 32px; font-weight: 350; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframesRule",
          "selector": "",
          "cssText": "@keyframes AE0EU { \n  0% { opacity: 0; }\n  25% { opacity: 1; }\n  90% { opacity: 1; }\n  100% { opacity: 0; }\n}",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "0% { opacity: 0; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "25% { opacity: 1; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "90% { opacity: 1; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "100% { opacity: 0; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframesRule",
          "selector": "",
          "cssText": "@keyframes AFD8c { \n  0% { opacity: 0; }\n  100% { opacity: 1; }\n}",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "0% { opacity: 0; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "100% { opacity: 1; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".q801L",
          "cssText": ".q801L { width: 100%; color: RGB(var(--black)); transition: 1s; position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".q801L.RMBIC button",
          "cssText": ".q801L.RMBIC button { text-indent: 14px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".q801L .B6JRn",
          "cssText": ".q801L .B6JRn { position: absolute; top: 11px; left: 12px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".q801L .B6JRn.SxhgL",
          "cssText": ".q801L .B6JRn.SxhgL { animation: 4s ease 0s 1 normal none running AE0EU; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".q801L .B6JRn.TIUhz",
          "cssText": ".q801L .B6JRn.TIUhz { animation: 1s ease 0s 1 normal none running AFD8c; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".palette--darkMode .q801L",
          "cssText": ".palette--darkMode .q801L { color: rgb(0, 0, 0); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".palette--darkMode .q801L button",
          "cssText": ".palette--darkMode .q801L button { border: 1px solid rgba(0, 0, 0, 0.1); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".palette--darkMode .q801L button:hover",
          "cssText": ".palette--darkMode .q801L button:hover { background: rgba(0, 0, 0, 0.1); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".palette--lowContrastClassic .q801L",
          "cssText": ".palette--lowContrastClassic .q801L { color: rgb(0, 0, 0); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".palette--lowContrastClassic .q801L button",
          "cssText": ".palette--lowContrastClassic .q801L button { border: 1px solid rgba(0, 0, 0, 0.1); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".palette--lowContrastClassic .q801L button:hover",
          "cssText": ".palette--lowContrastClassic .q801L button:hover { background: rgba(0, 0, 0, 0.1); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".palette--vampire .q801L",
          "cssText": ".palette--vampire .q801L { color: rgb(0, 0, 0); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".palette--vampire .q801L button",
          "cssText": ".palette--vampire .q801L button { border: 1px solid rgba(0, 0, 0, 0.1); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".palette--vampire .q801L button:hover",
          "cssText": ".palette--vampire .q801L button:hover { background: rgba(0, 0, 0, 0.1); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".palette--cybernetic .q801L",
          "cssText": ".palette--cybernetic .q801L { color: rgb(0, 0, 0); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".palette--cybernetic .q801L button",
          "cssText": ".palette--cybernetic .q801L button { border: 1px solid rgba(0, 0, 0, 0.1); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".palette--cybernetic .q801L button:hover",
          "cssText": ".palette--cybernetic .q801L button:hover { background: rgba(0, 0, 0, 0.1); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".AKAFO",
          "cssText": ".AKAFO { color: rgb(0, 0, 0); background-color: rgb(255, 255, 255); border-radius: 16px; flex-direction: column; justify-content: space-between; align-items: center; gap: 20px; width: 240px; min-height: 306px; padding: 20px; display: flex; position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".AKAFO a",
          "cssText": ".AKAFO a { text-decoration: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".AKAFO.jphhY",
          "cssText": ".AKAFO.jphhY { background: rgb(179, 179, 179); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media not (min-width: 990px) {\n  .AKAFO { width: 224px; padding: 8px 16px; }\n}",
          "urls": [],
          "group": "not (min-width: 990px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "not (min-width: 990px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "990px",
                "990",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".AKAFO",
          "cssText": ".AKAFO { width: 224px; padding: 8px 16px; }",
          "urls": [],
          "group": "not (min-width: 990px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "not (min-width: 990px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "990px",
                "990",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 540px) {\n  .AKAFO { width: auto; padding: 12px 20px; }\n}",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".AKAFO",
          "cssText": ".AKAFO { width: auto; padding: 12px 20px; }",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".AKAFO .HgH6x",
          "cssText": ".AKAFO .HgH6x { background-position: 50% center; background-repeat: no-repeat; background-size: cover; border-radius: 5px; width: 100%; height: 110px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".AKAFO .zcrFn",
          "cssText": ".AKAFO .zcrFn { color: rgb(255, 255, 255); background: rgba(0, 0, 0, 0.6); border-radius: 5px; justify-content: center; align-items: center; gap: 5px; padding: 2px 8px; display: flex; position: absolute; top: 10px; right: 10px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".AKAFO .XCQVm",
          "cssText": ".AKAFO .XCQVm { text-align: center; flex-direction: column; align-items: center; gap: 8px; min-height: 100px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".AKAFO .puRej",
          "cssText": ".AKAFO .puRej { font-size: 1.125rem; font-weight: 500; line-height: 1.33333; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".AKAFO .bOGfF",
          "cssText": ".AKAFO .bOGfF { color: rgba(0, 0, 0, 0.9); font-weight: 350; line-height: 1.5; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".AKAFO .lI95L",
          "cssText": ".AKAFO .lI95L { text-align: center; width: 100%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".KmzDz",
          "cssText": ".KmzDz { color: rgb(255, 73, 48); text-align: center; font-size: 0.875rem; font-weight: 400; line-height: 1.42857; font-family: var(--font-family); background: rgba(255, 73, 48, 0.05); flex-direction: column; gap: 8px; padding: 12px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".KmzDz .hDlbj",
          "cssText": ".KmzDz .hDlbj { font-size: 0.875rem; font-weight: 700; line-height: 1.42857; font-family: var(--font-family); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".gNATz",
          "cssText": ".gNATz { flex-wrap: nowrap; width: 100%; height: 100%; display: flex; position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".pfeql",
          "cssText": ".pfeql { justify-content: center; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".rjkgF",
          "cssText": ".rjkgF { font-size: 1rem; font-weight: 500; line-height: 1.5rem; font-family: var(--font-family-modern); z-index: 2; color: rgba(255, 255, 255, 0.8); flex: 1 1 0%; padding: 8px 16px; transition: color 0.2s; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".rjkgF:focus, .rjkgF:hover",
          "cssText": ".rjkgF:focus, .rjkgF:hover { color: rgb(255, 255, 255); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".rjkgF.T_CfA",
          "cssText": ".rjkgF.T_CfA { color: rgb(0, 0, 0); outline: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".rjkgF.T_CfA:focus, .rjkgF.T_CfA:hover",
          "cssText": ".rjkgF.T_CfA:focus, .rjkgF.T_CfA:hover { color: rgb(0, 0, 0); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".rjkgF:first-child[aria-selected=\"true\"] ~ .zjiwC",
          "cssText": ".rjkgF:first-child[aria-selected=\"true\"] ~ .zjiwC { transform: translate(0%); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".rjkgF:nth-child(2)[aria-selected=\"true\"] ~ .zjiwC",
          "cssText": ".rjkgF:nth-child(2)[aria-selected=\"true\"] ~ .zjiwC { transform: translate(100%); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".rjkgF:nth-child(3)[aria-selected=\"true\"] ~ .zjiwC",
          "cssText": ".rjkgF:nth-child(3)[aria-selected=\"true\"] ~ .zjiwC { transform: translate(200%); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".rjkgF:nth-child(4)[aria-selected=\"true\"] ~ .zjiwC",
          "cssText": ".rjkgF:nth-child(4)[aria-selected=\"true\"] ~ .zjiwC { transform: translate(300%); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".rjkgF:nth-child(5)[aria-selected=\"true\"] ~ .zjiwC",
          "cssText": ".rjkgF:nth-child(5)[aria-selected=\"true\"] ~ .zjiwC { transform: translate(400%); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".rjkgF:nth-child(6)[aria-selected=\"true\"] ~ .zjiwC",
          "cssText": ".rjkgF:nth-child(6)[aria-selected=\"true\"] ~ .zjiwC { transform: translate(500%); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".rjkgF:nth-child(7)[aria-selected=\"true\"] ~ .zjiwC",
          "cssText": ".rjkgF:nth-child(7)[aria-selected=\"true\"] ~ .zjiwC { transform: translate(600%); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".rjkgF:nth-child(8)[aria-selected=\"true\"] ~ .zjiwC",
          "cssText": ".rjkgF:nth-child(8)[aria-selected=\"true\"] ~ .zjiwC { transform: translate(700%); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".rjkgF:nth-child(9)[aria-selected=\"true\"] ~ .zjiwC",
          "cssText": ".rjkgF:nth-child(9)[aria-selected=\"true\"] ~ .zjiwC { transform: translate(800%); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".zjiwC",
          "cssText": ".zjiwC { z-index: 1; background-color: rgb(255, 255, 255); border-radius: 99px; height: 100%; transition: transform 0.2s ease-out; position: absolute; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".C5OrQ",
          "cssText": ".C5OrQ { color: rgb(255, 255, 255); background: rgba(0, 25, 53, 0.8); border-radius: 30px; padding: 5px 10px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".NWfwL",
          "cssText": ".NWfwL { border-radius: 24px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".SDuYR",
          "cssText": ".SDuYR { padding-left: 48px; padding-right: 48px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".SDuYR:focus",
          "cssText": ".SDuYR:focus { outline: transparent; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".IhUJI",
          "cssText": ".IhUJI { z-index: 101; backdrop-filter: blur(10px); background: rgb(232, 215, 58); border-radius: 12px; flex-direction: column; gap: 16px; min-width: 476px; max-width: 100%; min-height: 476px; max-height: 90vh; display: flex; position: fixed; top: 50%; left: 50%; overflow-y: scroll; transform: translate(-50%, -50%); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 540px) {\n  .IhUJI { min-width: 100%; max-width: 100%; min-height: 50vh; margin: 0px; padding-bottom: 20px; }\n}",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".IhUJI",
          "cssText": ".IhUJI { min-width: 100%; max-width: 100%; min-height: 50vh; margin: 0px; padding-bottom: 20px; }",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".AiALR",
          "cssText": ".AiALR { flex-direction: column; justify-content: center; align-items: center; gap: 20px; padding: 32px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".AiALR .enHco",
          "cssText": ".AiALR .enHco { flex-direction: column; align-self: center; align-items: flex-start; gap: 16px; width: 476px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 540px) {\n  .AiALR .enHco { max-width: 335px; }\n}",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".AiALR .enHco",
          "cssText": ".AiALR .enHco { max-width: 335px; }",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".AiALR .enHco .FLeWn",
          "cssText": ".AiALR .enHco .FLeWn { font-size: 1.5rem; font-weight: 700; line-height: 2rem; font-family: var(--font-family-modern); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".AiALR .enHco .fgOG_",
          "cssText": ".AiALR .enHco .fgOG_ { font-size: 1rem; line-height: 1.5rem; font-family: var(--font-family-modern); font-weight: 350; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".AiALR .iK0Dh",
          "cssText": ".AiALR .iK0Dh { color: rgba(0, 0, 0, 0.6); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".AiALR .t4H8P",
          "cssText": ".AiALR .t4H8P { flex-direction: column; justify-content: center; align-items: center; gap: 10px; width: 335px; margin-top: 32px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".mYo2j",
          "cssText": ".mYo2j { background: rgba(255, 255, 255, 0.85); top: 16px; right: 16px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".pcoXz",
          "cssText": ".pcoXz { font-size: 0.875rem; font-weight: 400; line-height: 1.25rem; font-family: var(--font-family-modern); color: rgb(255, 255, 255); background: rgba(0, 0, 0, 0.6); border-radius: 6px; flex-direction: column; padding: 12px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".tvKKY",
          "cssText": ".tvKKY { backdrop-filter: blur(40px); background: linear-gradient(rgba(255, 255, 255, 0.01) 0%, rgba(255, 255, 255, 0.07) 100%); width: 440px; min-height: 40svh; max-height: 99svh; box-shadow: rgba(0, 0, 0, 0.3) 0px 10px 20px 5px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ctEoR",
          "cssText": ".ctEoR { box-sizing: border-box; flex-direction: column; justify-content: center; width: 100%; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".WSGbk",
          "cssText": ".WSGbk { background-color: transparent; padding: 8px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".WSGbk:hover",
          "cssText": ".WSGbk:hover { background-color: rgba(0, 0, 0, 0.1); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".vbEEx",
          "cssText": ".vbEEx { z-index: 1; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".g9qCM",
          "cssText": ".g9qCM { flex-direction: column; width: 100%; min-height: 616px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".C6mPN",
          "cssText": ".C6mPN { flex-direction: column; flex-grow: 1; justify-content: center; align-items: center; gap: 14px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media not (min-width: 990px) {\n  .C6mPN { width: 100%; }\n}",
          "urls": [],
          "group": "not (min-width: 990px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "not (min-width: 990px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "990px",
                "990",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".C6mPN",
          "cssText": ".C6mPN { width: 100%; }",
          "urls": [],
          "group": "not (min-width: 990px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "not (min-width: 990px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "990px",
                "990",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".uBOmv",
          "cssText": ".uBOmv { font-size: 1rem; font-weight: 400; line-height: 1.5rem; font-family: var(--font-family-modern); color: rgb(255, 255, 255); flex-direction: column; align-items: center; gap: 20px; padding: 40px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".mAUoH",
          "cssText": ".mAUoH { background: rgb(0, 25, 53); flex-direction: column; justify-content: start; align-items: center; gap: 24px; padding: 24px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Re2fk",
          "cssText": ".Re2fk { flex-direction: column; align-self: center; align-items: center; width: 100%; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".JxacZ",
          "cssText": ".JxacZ { color: rgb(255, 255, 255); background: linear-gradient(rgba(255, 255, 255, 0.01) 0%, rgba(255, 255, 255, 0.07) 100%); border-top: 1px solid rgba(255, 255, 255, 0.2); border-radius: 30px; justify-content: center; align-items: center; width: 100%; height: 40px; padding: 3px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".R4SZv",
          "cssText": ".R4SZv { align-items: center; gap: 10px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".nmfdY",
          "cssText": ".nmfdY { font-size: 1rem; font-weight: 350; line-height: 1.5rem; font-family: var(--font-family-modern); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".nmfdY.cZnz6",
          "cssText": ".nmfdY.cZnz6 { font-size: 1rem; font-weight: 500; line-height: 1.5rem; font-family: var(--font-family-modern); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".RRf6I",
          "cssText": ".RRf6I { font-size: 0.75rem; font-weight: 500; line-height: 1.125rem; font-family: var(--font-family-modern); color: rgb(0, 0, 0); white-space: nowrap; background: radial-gradient(71.96% 173.12% at 118.97% 119.15%, rgb(72, 193, 255) 0%, rgb(251, 177, 223) 37.5%, rgb(87, 216, 255) 100%); border-radius: 9999px; justify-content: center; align-items: center; gap: 8px; padding: 2px 8px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 540px) {\n  .RRf6I { display: none; }\n}",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".RRf6I",
          "cssText": ".RRf6I { display: none; }",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".LJgaS",
          "cssText": ".LJgaS { font-size: 1.5rem; font-weight: 700; line-height: 2rem; font-family: var(--font-family-modern); text-align: center; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Z4XHF",
          "cssText": ".Z4XHF { flex-direction: column; justify-content: center; align-items: center; gap: 16px; margin-top: 16px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media not (max-width: 540px) {\n  .Z4XHF { width: 100%; }\n}",
          "urls": [],
          "group": "not (max-width: 540px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "not (max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Z4XHF",
          "cssText": ".Z4XHF { width: 100%; }",
          "urls": [],
          "group": "not (max-width: 540px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "not (max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".FExlc",
          "cssText": ".FExlc { text-align: center; text-wrap: balance; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".jyal6",
          "cssText": ".jyal6 { font-size: 1rem; font-weight: 500; line-height: 1.5rem; font-family: var(--font-family-modern); color: rgba(255, 255, 255, 0.6); text-decoration: line-through; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".b24nY",
          "cssText": ".b24nY { font-size: 1rem; font-weight: 500; line-height: 1.5rem; font-family: var(--font-family-modern); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ITFxd",
          "cssText": ".ITFxd { font-size: 1rem; font-weight: 350; line-height: 1.5rem; font-family: var(--font-family-modern); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".oIc5V",
          "cssText": ".oIc5V { min-height: 46px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".akHhw",
          "cssText": ".akHhw { box-sizing: border-box; background: radial-gradient(71.96% 173.12% at 118.97% 119.15%, rgb(72, 193, 255) 0%, rgb(251, 177, 223) 37.5%, rgb(87, 216, 255) 100%); border-radius: 999px; flex-direction: row; flex: 1 1 0%; justify-content: center; align-items: center; gap: 8px; width: 100%; padding: 12px 20px 12px 16px; transition: 0.2s ease-in-out; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".akHhw > span",
          "cssText": ".akHhw > span { padding: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Le5P9",
          "cssText": ".Le5P9 { font-size: 0.75rem; font-weight: 400; line-height: 1.125rem; font-family: var(--font-family-modern); color: rgba(255, 255, 255, 0.8); text-align: center; text-wrap: balance; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".cTwc5",
          "cssText": ".cTwc5 { box-sizing: border-box; flex-direction: column; align-items: center; gap: 16px; width: 100%; max-height: 50svh; display: flex; overflow: auto; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 540px) {\n  .cTwc5 { max-height: max(64px,var(--dialog-viewport-height) - 490px); gap: 8px; }\n}",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".cTwc5",
          "cssText": ".cTwc5 { max-height: max(64px,var(--dialog-viewport-height) - 490px); gap: 8px; }",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media not (max-width: 540px) {\n  .cTwc5 { padding: 10px 0px; }\n}",
          "urls": [],
          "group": "not (max-width: 540px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "not (max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".cTwc5",
          "cssText": ".cTwc5 { padding: 10px 0px; }",
          "urls": [],
          "group": "not (max-width: 540px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "not (max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".HfAqf",
          "cssText": ".HfAqf { background: rgba(0, 25, 53, 0.4); flex-direction: column; flex: 1 0 0px; justify-content: space-around; align-items: center; gap: 50px; width: 100%; padding: 40px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media not (max-width: 540px) {\n  .HfAqf { background-color: rgb(0, 25, 53); align-items: center; padding: 0px; }\n}",
          "urls": [],
          "group": "not (max-width: 540px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "not (max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".HfAqf",
          "cssText": ".HfAqf { background-color: rgb(0, 25, 53); align-items: center; padding: 0px; }",
          "urls": [],
          "group": "not (max-width: 540px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "not (max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".VJsrY",
          "cssText": ".VJsrY { width: 48px; height: 48px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".fsIfG",
          "cssText": ".fsIfG { flex-direction: row; gap: 12px; width: 100%; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".mS_RM",
          "cssText": ".mS_RM { flex-direction: column; justify-content: center; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".TSBlV",
          "cssText": ".TSBlV { font-size: 1rem; font-weight: 500; line-height: 1.5rem; font-family: var(--font-family-modern); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Tf0xf",
          "cssText": ".Tf0xf { font-size: 0.875rem; font-weight: 350; line-height: 1.25rem; font-family: var(--font-family-modern); color: rgba(255, 255, 255, 0.8); text-wrap: pretty; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".YGy_k",
          "cssText": ".YGy_k { background: linear-gradient(rgba(255, 255, 255, 0.01) 0%, rgba(255, 255, 255, 0.07) 100%); border-top: 1px solid rgba(255, 255, 255, 0.15); border-radius: 10px; flex-direction: column; align-self: stretch; align-items: center; gap: 5px; padding: 15px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".QYzuG",
          "cssText": ".QYzuG { font-size: 1rem; font-weight: 500; line-height: 1.5rem; font-family: var(--font-family-modern); justify-content: center; align-items: center; gap: 8px; width: 100%; height: 100%; padding: 0px; text-decoration: none; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".MOOoB",
          "cssText": ".MOOoB { backdrop-filter: blur(5px); background-color: rgba(0, 25, 53, 0.9); padding-top: 30px; padding-bottom: 45px; position: sticky; bottom: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".gLEjz",
          "cssText": ".gLEjz { border-top: 1px solid rgba(var(--white-on-dark),.13); justify-content: center; align-items: center; padding: 16px 0px 0px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (min-width: 990px) {\n  .gLEjz { border-top: none; padding: 0px; }\n}",
          "urls": [],
          "group": "(min-width: 990px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 990px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "990px",
                "990",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".gLEjz",
          "cssText": ".gLEjz { border-top: none; padding: 0px; }",
          "urls": [],
          "group": "(min-width: 990px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 990px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "990px",
                "990",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".yVZYV",
          "cssText": ".yVZYV { flex-grow: 1; justify-content: center; align-items: center; gap: 8px; max-width: 250px; margin: 0px 16px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".nbnWq, .YjoFC",
          "cssText": ".nbnWq, .YjoFC { flex-grow: 1; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".VVqTC",
          "cssText": ".VVqTC { font-size: 1rem; font-weight: 700; line-height: 1.5; font-family: var(--font-family); box-sizing: border-box; border-bottom: none; border-radius: 999px; flex-direction: row; flex: 1 1 0%; justify-content: center; align-items: center; gap: 8px; max-width: 250px; padding: 8px 16px; transition: 0.2s ease-in-out; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".VVqTC.kITtw",
          "cssText": ".VVqTC.kITtw { color: rgb(255, 255, 255); background: linear-gradient(rgba(124, 92, 255, 0.1) 0%, rgba(124, 92, 255, 0.1) 100%); border-top: 1px solid transparent; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".VVqTC.kITtw:hover",
          "cssText": ".VVqTC.kITtw:hover { background: linear-gradient(rgba(124, 92, 255, 0.1) 0%, rgba(124, 92, 255, 0.25) 100%); border-top: 1px solid rgba(124, 92, 255, 0.2); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".VVqTC.HxaHT",
          "cssText": ".VVqTC.HxaHT { color: rgb(255, 255, 255); background: linear-gradient(rgba(255, 255, 255, 0.1) 0%, rgba(255, 255, 255, 0.1) 100%); border-top: 1px solid transparent; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".VVqTC.HxaHT:hover",
          "cssText": ".VVqTC.HxaHT:hover { background: linear-gradient(rgba(255, 255, 255, 0.1) 0%, rgba(255, 255, 255, 0.15) 100%); border-top: 1px solid rgba(255, 255, 255, 0.15); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".palette--canary .VVqTC.kITtw, .palette--cement .VVqTC.kITtw, .palette--snowBright .VVqTC.kITtw, .palette--ghost .VVqTC.kITtw, .palette--canary .VVqTC.HxaHT, .palette--cement .VVqTC.HxaHT, .palette--snowBright .VVqTC.HxaHT, .palette--ghost .VVqTC.HxaHT",
          "cssText": ".palette--canary .VVqTC.kITtw, .palette--cement .VVqTC.kITtw, .palette--snowBright .VVqTC.kITtw, .palette--ghost .VVqTC.kITtw, .palette--canary .VVqTC.HxaHT, .palette--cement .VVqTC.HxaHT, .palette--snowBright .VVqTC.HxaHT, .palette--ghost .VVqTC.HxaHT { color: rgb(0, 0, 0); background: rgba(0, 0, 0, 0.1); border-top: none; border-bottom: 1px solid transparent; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".palette--canary .VVqTC.kITtw:hover, .palette--cement .VVqTC.kITtw:hover, .palette--snowBright .VVqTC.kITtw:hover, .palette--ghost .VVqTC.kITtw:hover, .palette--canary .VVqTC.HxaHT:hover, .palette--cement .VVqTC.HxaHT:hover, .palette--snowBright .VVqTC.HxaHT:hover, .palette--ghost .VVqTC.HxaHT:hover",
          "cssText": ".palette--canary .VVqTC.kITtw:hover, .palette--cement .VVqTC.kITtw:hover, .palette--snowBright .VVqTC.kITtw:hover, .palette--ghost .VVqTC.kITtw:hover, .palette--canary .VVqTC.HxaHT:hover, .palette--cement .VVqTC.HxaHT:hover, .palette--snowBright .VVqTC.HxaHT:hover, .palette--ghost .VVqTC.HxaHT:hover { background: linear-gradient(rgba(0, 0, 0, 0.1) 0%, rgba(0, 0, 0, 0.15) 100%); border-top: none; border-bottom: 1px solid rgba(0, 0, 0, 0.15); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".VVqTC .vgGX_",
          "cssText": ".VVqTC .vgGX_ { flex-shrink: 0; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (min-width: 990px) {\n  .VVqTC { padding: 8px; }\n}",
          "urls": [],
          "group": "(min-width: 990px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 990px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "990px",
                "990",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".VVqTC",
          "cssText": ".VVqTC { padding: 8px; }",
          "urls": [],
          "group": "(min-width: 990px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 990px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "990px",
                "990",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (min-width: 1018px) {\n  .VVqTC { padding: 8px 16px; }\n}",
          "urls": [],
          "group": "(min-width: 1018px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 1018px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1018px",
                "1018",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".VVqTC",
          "cssText": ".VVqTC { padding: 8px 16px; }",
          "urls": [],
          "group": "(min-width: 1018px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 1018px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1018px",
                "1018",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (min-width: 1162px) {\n  .VVqTC { padding: 8px 16px; }\n}",
          "urls": [],
          "group": "(min-width: 1162px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 1162px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1162px",
                "1162",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".VVqTC",
          "cssText": ".VVqTC { padding: 8px 16px; }",
          "urls": [],
          "group": "(min-width: 1162px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 1162px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1162px",
                "1162",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".VVqTC .qrljl",
          "cssText": ".VVqTC .qrljl { text-align: left; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 540px) {\n  .VVqTC .qrljl { display: flex; }\n}",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".VVqTC .qrljl",
          "cssText": ".VVqTC .qrljl { display: flex; }",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (min-width: 990px) {\n  .VVqTC .qrljl { display: none; }\n}",
          "urls": [],
          "group": "(min-width: 990px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 990px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "990px",
                "990",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".VVqTC .qrljl",
          "cssText": ".VVqTC .qrljl { display: none; }",
          "urls": [],
          "group": "(min-width: 990px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 990px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "990px",
                "990",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (min-width: 1162px) {\n  .VVqTC .qrljl { display: flex; }\n}",
          "urls": [],
          "group": "(min-width: 1162px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 1162px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1162px",
                "1162",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".VVqTC .qrljl",
          "cssText": ".VVqTC .qrljl { display: flex; }",
          "urls": [],
          "group": "(min-width: 1162px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 1162px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1162px",
                "1162",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".LvzWn",
          "cssText": ".LvzWn { margin-left: auto; margin-right: auto; display: block; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".j4JOu",
          "cssText": ".j4JOu { font-family: Spleen; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".oT5Wy",
          "cssText": ".oT5Wy { letter-spacing: 1.76px; font-size: 22px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".RUngA",
          "cssText": ".RUngA { letter-spacing: 3.2px; font-size: 40px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".c9mvZ",
          "cssText": ".c9mvZ { cursor: pointer; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".kumUi",
          "cssText": ".kumUi { transition: opacity 0.5s; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".agua0",
          "cssText": ".agua0 { transform: translate(310px) translateY(0px) scaleX(-1); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".BEBL2",
          "cssText": ".BEBL2 { transform: translate(-7px) translateY(11px) rotate(-10deg); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".kumUi.JmLk4",
          "cssText": ".kumUi.JmLk4 { opacity: 0; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".lMHCS",
          "cssText": ".lMHCS { pointer-events: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".xqQIG",
          "cssText": ".xqQIG { z-index: 1; background-color: RGB(var(--navy)); position: sticky; top: 54px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        }
      ]
    },
    {
      "href": "https://assets.tumblr.com/pop/5863-5dba3aea.css",
      "rules": 1500,
      "rulesList": [
        {
          "type": "CSSStyleRule",
          "selector": ".cPL5a",
          "cssText": ".cPL5a { box-sizing: border-box; flex-direction: column; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".cPL5a.MI_Zz",
          "cssText": ".cPL5a.MI_Zz { flex-direction: column-reverse; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".cPL5a.Y97kW",
          "cssText": ".cPL5a.Y97kW { flex-direction: row; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".cPL5a.Y97kW > *",
          "cssText": ".cPL5a.Y97kW > * { flex: 1 1 0%; min-width: fit-content; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".cPL5a.Y97kW.MI_Zz",
          "cssText": ".cPL5a.Y97kW.MI_Zz { flex-direction: row-reverse; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".QCWsQ",
          "cssText": ".QCWsQ { width: 100%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ZLT6z",
          "cssText": ".ZLT6z { width: auto; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Iybob",
          "cssText": ".Iybob { width: fit-content; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".sLyx9",
          "cssText": ".sLyx9 { gap: 2px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Tp8Dd",
          "cssText": ".Tp8Dd { gap: 4px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Afu4V",
          "cssText": ".Afu4V { gap: 8px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".v6EB9",
          "cssText": ".v6EB9 { gap: 12px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".PtDvl",
          "cssText": ".PtDvl { gap: 16px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".OadNw",
          "cssText": ".OadNw { gap: 20px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".TLqEY",
          "cssText": ".TLqEY { gap: 24px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".GZkY1",
          "cssText": ".GZkY1 { gap: 28px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".m_mel",
          "cssText": ".m_mel { gap: 32px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".R2VSD",
          "cssText": ".R2VSD { flex-direction: column; align-items: center; padding: 32px 24px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".d35L4",
          "cssText": ".d35L4 { color: var(--content-fg); font-size: 1.125rem; font-weight: 500; line-height: 1.75rem; font-family: var(--font-family-modern); text-wrap: balance; text-align: center; margin-bottom: 8px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".q9P6T",
          "cssText": ".q9P6T { font-size: 1rem; font-weight: 350; line-height: 1.5rem; font-family: var(--font-family-modern); color: var(--content-fg-secondary); text-wrap: pretty; text-align: center; flex-direction: column; align-items: center; margin-bottom: 16px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 440px) {\n  .q9P6T { margin-bottom: 24px; }\n}",
          "urls": [],
          "group": "(max-width: 440px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 440px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "440px",
                "440",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".q9P6T",
          "cssText": ".q9P6T { margin-bottom: 24px; }",
          "urls": [],
          "group": "(max-width: 440px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 440px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "440px",
                "440",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".W5uYo",
          "cssText": ".W5uYo { justify-content: center; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".R5xCG",
          "cssText": ".R5xCG { z-index: calc(99); background: rgba(0, 0, 0, 0.8); width: 100vw; height: calc(-44px + 100vh); position: fixed; top: 44px; left: 0px; overflow: hidden; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (min-width: 990px) {\n  .R5xCG { height: 100vh; top: 0px; }\n}",
          "urls": [],
          "group": "(min-width: 990px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 990px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "990px",
                "990",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".R5xCG",
          "cssText": ".R5xCG { height: 100vh; top: 0px; }",
          "urls": [],
          "group": "(min-width: 990px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 990px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "990px",
                "990",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": "._OHHp",
          "cssText": "._OHHp { width: 200px; height: auto; position: absolute; top: calc(50% - 360px); left: calc(50% - 140px); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Q_Mpz",
          "cssText": ".Q_Mpz { animation-name: hGGIh; animation-timing-function: linear; animation-iteration-count: infinite; position: absolute; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (prefers-reduced-motion) {\n  .Q_Mpz { display: none; }\n}",
          "urls": [],
          "group": "(prefers-reduced-motion)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "prefers-reduced-motion",
              "semanticGroup": "user preference",
              "claim": "reduced motion preference",
              "excerpt": "(prefers-reduced-motion)",
              "requiresEcho": true,
              "echoTokens": [
                "prefers-reduced-motion"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Q_Mpz",
          "cssText": ".Q_Mpz { display: none; }",
          "urls": [],
          "group": "(prefers-reduced-motion)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "prefers-reduced-motion",
              "semanticGroup": "user preference",
              "claim": "reduced motion preference",
              "excerpt": "(prefers-reduced-motion)",
              "requiresEcho": true,
              "echoTokens": [
                "prefers-reduced-motion"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Z9CC5 ._OHHp",
          "cssText": ".Z9CC5 ._OHHp { top: calc(50% - 280px); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "._OHHp svg",
          "cssText": "._OHHp svg { z-index: calc(101); width: 100%; height: auto; position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hnU80",
          "cssText": ".hnU80 { transform-origin: 50% 50% 0px; opacity: 0; animation-name: MwgAh; animation-duration: 2s; animation-timing-function: linear; animation-iteration-count: infinite; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hnU80.Lyjvv",
          "cssText": ".hnU80.Lyjvv { animation-duration: 3s; animation-delay: 1s; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".w83t4.HLVUD",
          "cssText": ".w83t4.HLVUD { animation-duration: 5s; animation-delay: 1s; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".aMIf6",
          "cssText": ".aMIf6 { animation-name: hy7Ja; animation-duration: 3s; animation-timing-function: linear; animation-iteration-count: infinite; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".aMIf6.Lyjvv",
          "cssText": ".aMIf6.Lyjvv { animation-duration: 4s; animation-delay: 1s; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".aMIf6.HLVUD",
          "cssText": ".aMIf6.HLVUD { animation-duration: 3s; animation-delay: 2s; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".aMIf6.FKIz9",
          "cssText": ".aMIf6.FKIz9 { animation-duration: 2.1s; animation-delay: 3s; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".aMIf6.tiQnH",
          "cssText": ".aMIf6.tiQnH { animation-duration: 3.2s; animation-delay: 4s; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".aMIf6.udvLD",
          "cssText": ".aMIf6.udvLD { animation-duration: 2.5s; animation-delay: 5s; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframesRule",
          "selector": "",
          "cssText": "@keyframes hy7Ja { \n  50% { transform: scaleY(1.2) translateY(-30px) rotate(-2deg); }\n}",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "50% { transform: scaleY(1.2) translateY(-30px) rotate(-2deg); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframesRule",
          "selector": "",
          "cssText": "@keyframes MwgAh { \n  0% { transform: translate(0px) rotate(180deg); }\n  50% { opacity: 1; }\n  100% { opacity: 0; transform: translate(-20px, -100px) rotate(180deg); }\n}",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "0% { transform: translate(0px) rotate(180deg); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "50% { opacity: 1; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "100% { opacity: 0; transform: translate(-20px, -100px) rotate(180deg); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframesRule",
          "selector": "",
          "cssText": "@keyframes hGGIh { \n  0% { transform: translateY(-30px); }\n  100% { transform: translateY(var(--fire-container-height,2000px)); }\n}",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "0% { transform: translateY(-30px); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "100% { transform: translateY(var(--fire-container-height,2000px)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".s4g_h",
          "cssText": ".s4g_h { font-size: 0.875rem; line-height: 1.42857; font-family: var(--font-family); color: RGB(var(--black)); text-align: right; flex: 1 1 0%; margin-bottom: 12px; padding: 0px 10px; font-weight: 700; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".yXNX0",
          "cssText": ".yXNX0 { font-size: 0.875rem; font-weight: 400; line-height: 1.42857; font-family: var(--font-family); text-align: left; flex: 3 1 0%; margin-bottom: 12px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".pMpfW",
          "cssText": ".pMpfW { flex-direction: column; justify-content: center; min-height: 24px; margin-top: 10px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".HQcQr",
          "cssText": ".HQcQr { display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hrv3x",
          "cssText": ".hrv3x { z-index: 25; background: RGB(var(--green)); border-radius: 7px; height: 10px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".VgtfT",
          "cssText": ".VgtfT { background-color: rgba(0, 0, 0, 0.15); border-radius: 7px; height: 10px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".F2hg7",
          "cssText": ".F2hg7 { z-index: 1; background-color: rgba(0, 0, 0, 0.15); border-radius: 7px; height: 10px; margin-top: 20px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".rBSgB",
          "cssText": ".rBSgB { font-weight: 700; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".OIzSg",
          "cssText": ".OIzSg { text-align: center; margin-top: -4px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".YZnLZ",
          "cssText": ".YZnLZ { font-size: 2rem; font-weight: 400; line-height: 1.25; font-family: var(--font-family); color: rgb(255, 255, 255); text-align: center; background-color: rgb(255, 255, 255); padding-top: 10px; padding-bottom: 8px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".oQs98",
          "cssText": ".oQs98 { color: rgb(255, 255, 255); text-align: center; margin-top: 24px; margin-bottom: 24px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 540px) {\n  .oQs98 { margin-top: 16px; margin-bottom: 16px; }\n}",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".oQs98",
          "cssText": ".oQs98 { margin-top: 16px; margin-bottom: 16px; }",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".GzZtE .IOcGh",
          "cssText": ".GzZtE .IOcGh { row-gap: 0px; margin-bottom: 16px; display: grid; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".GzZtE .IOcGh .Ahq2Z",
          "cssText": ".GzZtE .IOcGh .Ahq2Z { width: 100%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 540px) {\n  .GzZtE .IOcGh .Ahq2Z { width: 100%; }\n}",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".GzZtE .IOcGh .Ahq2Z",
          "cssText": ".GzZtE .IOcGh .Ahq2Z { width: 100%; }",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".GzZtE .IOcGh label",
          "cssText": ".GzZtE .IOcGh label { font-weight: 400; line-height: 1.33333; font-family: var(--font-family); color: rgb(0, 0, 0); cursor: pointer; background: rgba(0, 0, 0, 0.04); border-radius: 12px; padding: 13px 12px 11px; font-size: 1rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".GzZtE .IOcGh input:checked ~ label",
          "cssText": ".GzZtE .IOcGh input:checked ~ label { opacity: 0.9; background-color: rgba(0, 184, 255, 0.1); border: 2px solid rgb(0, 184, 255); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".GzZtE .IOcGh input:focus ~ label",
          "cssText": ".GzZtE .IOcGh input:focus ~ label { outline: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".GzZtE .IOcGh > div",
          "cssText": ".GzZtE .IOcGh > div { margin-bottom: 8px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".GzZtE .IOcGh > div:last-child",
          "cssText": ".GzZtE .IOcGh > div:last-child { border-bottom: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Ahq2Z span:first-child",
          "cssText": ".Ahq2Z span:first-child { border-color: rgb(89, 89, 89); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".IOcGh .Ahq2Z input:checked ~ label span",
          "cssText": ".IOcGh .Ahq2Z input:checked ~ label span { border-color: rgb(0, 184, 255); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".IOcGh .Ahq2Z input:checked ~ label span svg use",
          "cssText": ".IOcGh .Ahq2Z input:checked ~ label span svg use { --icon-color-primary: #00b8ff; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".QXuBs",
          "cssText": ".QXuBs { justify-content: space-between; align-items: center; width: 100%; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 540px) {\n  .QXuBs { flex-direction: column; display: flex; }\n}",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".QXuBs",
          "cssText": ".QXuBs { flex-direction: column; display: flex; }",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".QXuBs .XezzS",
          "cssText": ".QXuBs .XezzS { display: block; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".QXuBs .XjFjI",
          "cssText": ".QXuBs .XjFjI { text-align: right; display: block; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 540px) {\n  .QXuBs .XjFjI { text-align: left; padding-top: 5px; }\n}",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".QXuBs .XjFjI",
          "cssText": ".QXuBs .XjFjI { text-align: left; padding-top: 5px; }",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".IwJZG p:last-child",
          "cssText": ".IwJZG p:last-child { margin-bottom: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".VVkpl",
          "cssText": ".VVkpl { color: rgb(0, 0, 0); background-color: rgb(255, 255, 255); border-radius: 14px; justify-content: space-between; padding: 16px 12px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".VVkpl .xx3Yj",
          "cssText": ".VVkpl .xx3Yj { font-size: 0.8rem; display: block; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".VVkpl .R15af",
          "cssText": ".VVkpl .R15af { justify-content: space-between; padding-top: 6px; font-size: 1rem; font-weight: 600; display: block; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".gStOF",
          "cssText": ".gStOF { color: RGB(var(--black)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 540px) {\n  .gStOF { text-align: center; margin-bottom: 14px; }\n}",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".gStOF",
          "cssText": ".gStOF { text-align: center; margin-bottom: 14px; }",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".gStOF a",
          "cssText": ".gStOF a { margin-top: 14px; font-size: 0.875rem; text-decoration: none; display: inline-block; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".gStOF a:hover",
          "cssText": ".gStOF a:hover { text-decoration: underline; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ILRkA span",
          "cssText": ".ILRkA span { background-color: RGB(var(--deprecated-accent)); color: RGB(var(--white)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "._vOn7",
          "cssText": "._vOn7 { color: rgba(0, 0, 0, 0.6); text-align: center; font-size: 0.875rem; font-weight: 400; line-height: 1.42857; font-family: var(--font-family); margin-top: 16px; margin-bottom: 64px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "._vOn7 span",
          "cssText": "._vOn7 span { display: block; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "._vOn7 a",
          "cssText": "._vOn7 a { text-decoration: underline; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".lU2pe",
          "cssText": ".lU2pe { font-size: 0.875rem; font-weight: 400; line-height: 1.42857; font-family: var(--font-family); background-color: rgba(0, 0, 0, 0.04); border-radius: 12px; align-items: center; gap: 12px; padding: 16px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".lU2pe .H2lJ5",
          "cssText": ".lU2pe .H2lJ5 { color: rgb(0, 207, 53); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".lU2pe .JXKrK",
          "cssText": ".lU2pe .JXKrK { font-size: 0.875rem; font-weight: 700; line-height: 1.42857; font-family: var(--font-family); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".lU2pe .MnNQg",
          "cssText": ".lU2pe .MnNQg { font-size: 0.875rem; font-weight: 400; line-height: 1.42857; font-family: var(--font-family); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".eE_V1",
          "cssText": ".eE_V1 { color: rgba(0, 0, 0, 0.6); text-align: center; margin-top: 24px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".k9mqe",
          "cssText": ".k9mqe { color: rgb(0, 0, 0); justify-content: space-between; margin-top: 24px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 540px) {\n  .k9mqe { flex-direction: column-reverse; margin-top: 16px; margin-bottom: 16px; }\n}",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".k9mqe",
          "cssText": ".k9mqe { flex-direction: column-reverse; margin-top: 16px; margin-bottom: 16px; }",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".a_6g9",
          "cssText": ".a_6g9 { background-color: rgb(255, 255, 255); justify-content: center; align-items: center; width: 100%; min-height: 104px; display: flex; position: sticky; bottom: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".a_6g9.i4aV4",
          "cssText": ".a_6g9.i4aV4 { filter: drop-shadow(rgba(0, 0, 0, 0.25) 0px 1px 4px); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".QgXyr",
          "cssText": ".QgXyr { flex-direction: row-reverse; width: 100%; max-width: 328px; margin-left: auto; margin-right: auto; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 540px) {\n  .QgXyr { justify-content: center; }\n}",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".QgXyr",
          "cssText": ".QgXyr { justify-content: center; }",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".rw1Ql span",
          "cssText": ".rw1Ql span { color: RGB(var(--black)); opacity: 0.6; border: 2px solid rgba(0, 0, 0, 0.6); border-radius: 16px; margin-right: 10px; padding: 6px 20px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".T6LPn",
          "cssText": ".T6LPn { opacity: 0.6; padding: 10px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 540px) {\n  .DPlCX .QgXyr { flex-grow: 1; }\n  .DPlCX .QgXyr button { width: 100%; }\n}",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".DPlCX .QgXyr",
          "cssText": ".DPlCX .QgXyr { flex-grow: 1; }",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".DPlCX .QgXyr button",
          "cssText": ".DPlCX .QgXyr button { width: 100%; }",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".amVpp",
          "cssText": ".amVpp { color: rgb(255, 255, 255); text-align: center; margin-bottom: 12px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ST0Bu",
          "cssText": ".ST0Bu { border-radius: 50px; position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ST0Bu .uJ6_Y, .ST0Bu .QJf1C",
          "cssText": ".ST0Bu .uJ6_Y, .ST0Bu .QJf1C { display: block; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ST0Bu .tiqnP",
          "cssText": ".ST0Bu .tiqnP { text-align: left; width: 100%; display: block; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ST0Bu .F0ual",
          "cssText": ".ST0Bu .F0ual { align-items: center; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ir1r5 .MarEW",
          "cssText": ".ir1r5 .MarEW { color: rgb(0, 0, 0); padding: 4px 0px 4px 10px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ir1r5 .MarEW button",
          "cssText": ".ir1r5 .MarEW button { text-align: left; padding: 9px 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ir1r5 .MarEW .sXniv",
          "cssText": ".ir1r5 .MarEW .sXniv { font-size: 0.875rem; font-weight: 700; line-height: 1.42857; font-family: var(--font-family); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ir1r5 .MarEW:hover, .ir1r5 .MarEW:focus",
          "cssText": ".ir1r5 .MarEW:hover, .ir1r5 .MarEW:focus { background-color: rgba(0, 0, 0, 0.07); border-radius: 10px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ir1r5 .MarEW:focus-within",
          "cssText": ".ir1r5 .MarEW:focus-within { background-color: rgba(0, 0, 0, 0.07); border-radius: 10px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ZD6so",
          "cssText": ".ZD6so { color: rgb(0, 0, 0); background-color: rgba(0, 0, 0, 0.04); border: 2px solid transparent; border-radius: 14px; justify-content: space-between; padding: 9px 16px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ZD6so .OTU6z",
          "cssText": ".ZD6so .OTU6z { font-size: 0.8rem; display: block; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ZD6so .Nfc7J",
          "cssText": ".ZD6so .Nfc7J { font-size: 1rem; font-weight: 350; line-height: 1.5rem; font-family: var(--font-family-modern); justify-content: space-between; display: block; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ZD6so .WxUJP",
          "cssText": ".ZD6so .WxUJP { align-items: center; gap: 8px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ZD6so .Z6Gnb",
          "cssText": ".ZD6so .Z6Gnb { border-radius: 50%; justify-content: center; align-items: center; width: 32px; height: 32px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".GDeB8",
          "cssText": ".GDeB8 { text-align: left; width: 100%; display: block; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".yzzBT",
          "cssText": ".yzzBT { background-color: rgb(255, 255, 255); border: 2px solid rgb(0, 184, 255); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".g_cxq .ir1r5",
          "cssText": ".g_cxq .ir1r5 { box-sizing: border-box; background-color: rgb(255, 255, 255); border: 1px solid rgba(0, 0, 0, 0.1); border-radius: 10px; padding: 10px; box-shadow: rgba(0, 0, 0, 0.25) 0px 4px 16px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".KRE3w",
          "cssText": ".KRE3w { font-weight: 700; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".nF_dx.GzZtE",
          "cssText": ".nF_dx.GzZtE { background-color: rgb(255, 255, 255); min-height: 580px; overflow-y: scroll; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".nF_dx.GzZtE .TZx4d .QMsVD",
          "cssText": ".nF_dx.GzZtE .TZx4d .QMsVD { background-image: linear-gradient(rgb(255, 57, 48), rgb(255, 138, 0), rgb(232, 215, 58), rgb(255, 255, 255)); flex-direction: column; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".nF_dx.GzZtE .TZx4d .QMsVD .TV0vm",
          "cssText": ".nF_dx.GzZtE .TZx4d .QMsVD .TV0vm { background-image: url(\"/pop/src/assets/images/blaze/modal-fire-bg-dddfc930.svg\"); background-position: 50% 50px; background-repeat: repeat-x; background-size: 100%; width: 90%; height: 150px; }",
          "urls": [
            "/pop/src/assets/images/blaze/modal-fire-bg-dddfc930.svg"
          ],
          "group": "",
          "sources": [],
          "sinks": [
            {
              "reason": "url_sink",
              "urls": [
                "/pop/src/assets/images/blaze/modal-fire-bg-dddfc930.svg"
              ]
            }
          ],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".nF_dx.GzZtE .TZx4d .QMsVD .cXidc",
          "cssText": ".nF_dx.GzZtE .TZx4d .QMsVD .cXidc { color: var(--color-fg); font-size: 1.125rem; font-weight: 500; line-height: 1.75rem; font-family: var(--font-family-modern); text-align: center; align-self: center; display: inline-block; position: relative; top: 25px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".nF_dx.GzZtE .SMAce",
          "cssText": ".nF_dx.GzZtE .SMAce { background-color: rgb(255, 255, 255); max-width: 328px; margin-left: auto; margin-right: auto; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".nF_dx.GzZtE .TVDzA",
          "cssText": ".nF_dx.GzZtE .TVDzA { font-size: 0.875rem; font-weight: 400; line-height: 1.42857; font-family: var(--font-family); color: rgba(0, 0, 0, 0.6); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 540px) {\n  .nF_dx.GzZtE { flex-direction: column; flex: 1 1 0%; min-height: auto; display: flex; }\n  .nF_dx.GzZtE .TZx4d { padding-bottom: 10%; }\n  .nF_dx.GzZtE .SMAce { background-color: rgb(255, 255, 255); max-width: none; height: 100%; margin-left: 0px; margin-right: 0px; padding: 0px 5%; }\n}",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".nF_dx.GzZtE",
          "cssText": ".nF_dx.GzZtE { flex-direction: column; flex: 1 1 0%; min-height: auto; display: flex; }",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".nF_dx.GzZtE .TZx4d",
          "cssText": ".nF_dx.GzZtE .TZx4d { padding-bottom: 10%; }",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".nF_dx.GzZtE .SMAce",
          "cssText": ".nF_dx.GzZtE .SMAce { background-color: rgb(255, 255, 255); max-width: none; height: 100%; margin-left: 0px; margin-right: 0px; padding: 0px 5%; }",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".nF_dx.GzZtE.ycvbE, .nF_dx.GzZtE.ycvbE img",
          "cssText": ".nF_dx.GzZtE.ycvbE, .nF_dx.GzZtE.ycvbE img { visibility: hidden; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 540px) {\n  .nF_dx.GzZtE.ycvbE { visibility: visible; }\n  .nF_dx.GzZtE.ycvbE .achKX, .nF_dx.GzZtE.ycvbE .SMAce > div, .nF_dx.GzZtE.ycvbE .SMAce > fieldset { visibility: hidden; }\n}",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".nF_dx.GzZtE.ycvbE",
          "cssText": ".nF_dx.GzZtE.ycvbE { visibility: visible; }",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".nF_dx.GzZtE.ycvbE .achKX, .nF_dx.GzZtE.ycvbE .SMAce > div, .nF_dx.GzZtE.ycvbE .SMAce > fieldset",
          "cssText": ".nF_dx.GzZtE.ycvbE .achKX, .nF_dx.GzZtE.ycvbE .SMAce > div, .nF_dx.GzZtE.ycvbE .SMAce > fieldset { visibility: hidden; }",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".nF_dx .OIzSg img",
          "cssText": ".nF_dx .OIzSg img { width: 60px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".nF_dx .YZnLZ",
          "cssText": ".nF_dx .YZnLZ { font-size: 1.625rem; font-weight: 700; line-height: 1.30769; font-family: var(--font-family); color: rgb(0, 0, 0); text-align: center; padding-left: 45px; padding-right: 45px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".nF_dx .achKX",
          "cssText": ".nF_dx .achKX { align-items: center; margin-bottom: 32px; display: flex; position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".nF_dx .achKX .oQs98",
          "cssText": ".nF_dx .achKX .oQs98 { font-size: 1rem; font-weight: 400; line-height: 1.5; font-family: var(--font-family); color: rgb(0, 0, 0); text-align: center; width: 100%; max-width: 280px; margin: 0px auto; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 540px) {\n  .nF_dx .achKX { width: inherit; margin-bottom: 0px; }\n  .nF_dx .achKX.SKewB { margin-bottom: 20px; }\n}",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".nF_dx .achKX",
          "cssText": ".nF_dx .achKX { width: inherit; margin-bottom: 0px; }",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".nF_dx .achKX.SKewB",
          "cssText": ".nF_dx .achKX.SKewB { margin-bottom: 20px; }",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".nF_dx .achKX .nhE3L",
          "cssText": ".nF_dx .achKX .nhE3L { position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".nF_dx .achKX .nhE3L .te1Ur",
          "cssText": ".nF_dx .achKX .nhE3L .te1Ur { text-align: center; border-radius: 6px; flex: 0 0 auto; width: 100px; height: 100px; max-height: 100px; padding: 0px; overflow: hidden; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 540px) {\n  .nF_dx .achKX .nhE3L .te1Ur { width: 80px; max-height: 80px; }\n}",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".nF_dx .achKX .nhE3L .te1Ur",
          "cssText": ".nF_dx .achKX .nhE3L .te1Ur { width: 80px; max-height: 80px; }",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".nF_dx .achKX .nhE3L .uhqpA",
          "cssText": ".nF_dx .achKX .nhE3L .uhqpA { border: 4px solid rgb(238, 181, 57); border-radius: 5px; position: absolute; bottom: -25px; right: -25px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 540px) {\n  .nF_dx .achKX .nhE3L .uhqpA { border: 4px solid rgb(236, 195, 57); }\n  .nF_dx .VVkpl { border: 1px solid rgba(0, 0, 0, 0.1); }\n}",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".nF_dx .achKX .nhE3L .uhqpA",
          "cssText": ".nF_dx .achKX .nhE3L .uhqpA { border: 4px solid rgb(236, 195, 57); }",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".nF_dx .VVkpl",
          "cssText": ".nF_dx .VVkpl { border: 1px solid rgba(0, 0, 0, 0.1); }",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".nF_dx .k9mqe",
          "cssText": ".nF_dx .k9mqe { padding-top: 24px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 540px) {\n  .nF_dx .k9mqe { flex-direction: column; padding: 15px 0px; }\n  .nF_dx .DPlCX { background: rgb(255, 255, 255); padding-top: 0px; position: sticky; bottom: 0px; }\n}",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".nF_dx .k9mqe",
          "cssText": ".nF_dx .k9mqe { flex-direction: column; padding: 15px 0px; }",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".nF_dx .DPlCX",
          "cssText": ".nF_dx .DPlCX { background: rgb(255, 255, 255); padding-top: 0px; position: sticky; bottom: 0px; }",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".nF_dx .DPlCX .ILRkA span",
          "cssText": ".nF_dx .DPlCX .ILRkA span { color: rgb(255, 255, 255); background-color: rgb(123, 97, 255); border: 4px solid rgb(0, 0, 0); border-radius: 100px; min-width: 150px; margin: 0px 5px 5px 0px; box-shadow: rgb(0, 0, 0) 4px 4px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 540px) {\n  .nF_dx .DPlCX .ILRkA span { box-shadow: none; border: none; line-height: 25px; }\n}",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".nF_dx .DPlCX .ILRkA span",
          "cssText": ".nF_dx .DPlCX .ILRkA span { box-shadow: none; border: none; line-height: 25px; }",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".nF_dx .ST0Bu",
          "cssText": ".nF_dx .ST0Bu { padding-top: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".nF_dx .ST0Bu .F0ual",
          "cssText": ".nF_dx .ST0Bu .F0ual { background-color: rgba(0, 0, 0, 0.07); border-radius: 50%; justify-content: center; width: 32px; height: 32px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".nF_dx .ncS4r",
          "cssText": ".nF_dx .ncS4r { background-image: radial-gradient(55% 155% at 25% 106%, rgb(204, 241, 255), rgb(255, 223, 245), rgb(176, 157, 255), rgb(102, 212, 255)); border-radius: 12px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 540px) {\n  .nF_dx .QXuBs { flex-direction: row; justify-content: space-between; display: flex; }\n}",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".nF_dx .QXuBs",
          "cssText": ".nF_dx .QXuBs { flex-direction: row; justify-content: space-between; display: flex; }",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".nF_dx .QXuBs .XjFjI",
          "cssText": ".nF_dx .QXuBs .XjFjI { font-size: 1rem; font-weight: 700; line-height: 1.5; font-family: var(--font-family); flex-direction: column; padding-top: 0px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".nF_dx .QXuBs .XjFjI span",
          "cssText": ".nF_dx .QXuBs .XjFjI span { color: rgba(0, 0, 0, 0.87); margin-right: 5px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".nF_dx .QXuBs .jmG7D",
          "cssText": ".nF_dx .QXuBs .jmG7D { font-size: 0.875rem; font-weight: 400; line-height: 1.42857; font-family: var(--font-family); align-self: flex-start; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".nF_dx .QXuBs .XezzS b",
          "cssText": ".nF_dx .QXuBs .XezzS b { color: rgb(0, 0, 0); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".nF_dx .QXuBs .XezzS.m23e8",
          "cssText": ".nF_dx .QXuBs .XezzS.m23e8 { font-style: italic; text-decoration: line-through; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".SWOvi",
          "cssText": ".SWOvi { text-decoration: underline; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".wKz4d",
          "cssText": ".wKz4d { justify-content: center; align-items: center; width: 100%; height: 80%; display: flex; position: absolute; top: 60px; left: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".wKz4d .amVpp",
          "cssText": ".wKz4d .amVpp { color: rgb(0, 0, 0); width: 300px; font-size: 1.75rem; font-weight: 700; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".J0B8j",
          "cssText": ".J0B8j { justify-content: space-between; margin-bottom: 8px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".NPvAb",
          "cssText": ".NPvAb { box-sizing: border-box; background-color: rgb(255, 255, 255); border: 1px solid rgba(0, 0, 0, 0.1); border-radius: 10px; max-width: 328px; height: 100%; min-height: 242px; max-height: 30vh; padding: 10px; overflow-y: scroll; box-shadow: rgba(0, 0, 0, 0.25) 0px 4px 16px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".NPvAb .MarEW:focus, .NPvAb .MarEW:hover",
          "cssText": ".NPvAb .MarEW:focus, .NPvAb .MarEW:hover { background-color: rgba(0, 0, 0, 0.07); border-radius: 10px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".NPvAb .MarEW:focus-within",
          "cssText": ".NPvAb .MarEW:focus-within { background-color: rgba(0, 0, 0, 0.07); border-radius: 10px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".NPvAb .MOwAM",
          "cssText": ".NPvAb .MOwAM { color: rgba(0, 0, 0, 0.6); font-size: 0.875rem; font-weight: 400; line-height: 1.42857; font-family: var(--font-family); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".NPvAb.VgbiW",
          "cssText": ".NPvAb.VgbiW { justify-content: center; align-items: center; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".NPvAb .lc4gS",
          "cssText": ".NPvAb .lc4gS { font-size: 0.875rem; font-weight: 400; line-height: 1.42857; font-family: var(--font-family); color: rgba(0, 0, 0, 0.6); text-align: center; max-width: 220px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".W5NBP",
          "cssText": ".W5NBP { color: rgba(0, 0, 0, 0.87); background-color: rgb(255, 255, 255); border-radius: 50%; justify-content: center; align-items: center; width: 24px; height: 24px; font-size: 12px; font-weight: 500; line-height: 22px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".W5NBP.Rgrzy",
          "cssText": ".W5NBP.Rgrzy { color: rgb(255, 255, 255); background-color: rgb(255, 138, 0); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".SN3pO",
          "cssText": ".SN3pO { font-size: 0.875rem; font-weight: 700; line-height: 1.42857; font-family: var(--font-family); color: rgba(0, 0, 0, 0.87); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Xy88p",
          "cssText": ".Xy88p { flex-direction: column; gap: 1px; max-width: 494px; margin: 0px auto; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".xwAlz",
          "cssText": ".xwAlz { background: rgba(0, 0, 0, 0.04); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".xwAlz:first-child",
          "cssText": ".xwAlz:first-child { border-radius: 8px 8px 0px 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".xwAlz:last-child",
          "cssText": ".xwAlz:last-child { border-radius: 0px 0px 8px 8px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".RSejs",
          "cssText": ".RSejs { background-color: transparent; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".QDKSS",
          "cssText": ".QDKSS { margin-left: 52px; margin-right: 24px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".QDKSS ul",
          "cssText": ".QDKSS ul { padding-left: 1.2em; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".QDKSS li:not(:last-child)",
          "cssText": ".QDKSS li:not(:last-child) { margin-bottom: 3px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".enbwI",
          "cssText": ".enbwI { flex-direction: row; justify-content: center; align-items: center; gap: 16px; margin-bottom: 48px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".enbwI.bsMAH",
          "cssText": ".enbwI.bsMAH { margin-bottom: 24px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".pV1Zd",
          "cssText": ".pV1Zd { flex-direction: column; align-items: center; max-width: 90px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".VHYIk",
          "cssText": ".VHYIk { color: rgb(0, 0, 0); text-align: center; font-size: 0.875rem; font-weight: 700; line-height: 1.42857; font-family: var(--font-family); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".C9hJo",
          "cssText": ".C9hJo { font-size: 1.3125rem; font-weight: 700; line-height: 1.52381; font-family: var(--font-family); text-align: center; margin-bottom: 16px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".h2o6n",
          "cssText": ".h2o6n { font-size: 0.78125rem; font-weight: 400; line-height: 1.52; font-family: var(--font-family); color: rgba(0, 0, 0, 0.6); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".x5SuW",
          "cssText": ".x5SuW { font-size: 0.78125rem; font-weight: 400; line-height: 1.52; font-family: var(--font-family); color: rgba(0, 0, 0, 0.6); text-align: center; margin-bottom: 42px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Bd_XU",
          "cssText": ".Bd_XU { margin-bottom: 24px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ri5eP",
          "cssText": ".ri5eP { font-size: 1.125rem; font-weight: 700; line-height: 1.33333; font-family: var(--font-family); text-align: center; background-color: rgb(255, 138, 0); border-radius: 25px; max-width: 143px; margin: 0px auto 64px; padding: 12px 0px; text-decoration: none; display: block; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".RyfGF",
          "cssText": ".RyfGF { border: 1px solid rgba(0, 0, 0, 0.07); border-radius: 50%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".xP9Ip .ebil_",
          "cssText": ".xP9Ip .ebil_ { padding: 4px 0px 4px 10px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".xP9Ip .ebil_ button",
          "cssText": ".xP9Ip .ebil_ button { text-align: left; padding: 10px 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".xP9Ip .ebil_:hover, .xP9Ip .ebil_:focus",
          "cssText": ".xP9Ip .ebil_:hover, .xP9Ip .ebil_:focus { background-color: rgba(0, 0, 0, 0.07); border-radius: 10px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".xP9Ip .ebil_:focus-within",
          "cssText": ".xP9Ip .ebil_:focus-within { background-color: rgba(0, 0, 0, 0.07); border-radius: 10px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Aew3t .xP9Ip",
          "cssText": ".Aew3t .xP9Ip { box-sizing: border-box; color: rgb(0, 0, 0); background-color: rgb(255, 255, 255); border: 1px solid rgba(0, 0, 0, 0.1); border-radius: 10px; padding: 10px; box-shadow: rgba(0, 0, 0, 0.25) 0px 4px 16px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Zo900",
          "cssText": ".Zo900 { padding-bottom: 16px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".wLIxd button, .wLIxd .t6PAt",
          "cssText": ".wLIxd button, .wLIxd .t6PAt { padding: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".wLIxd .ebil_",
          "cssText": ".wLIxd .ebil_ { padding: 4px 0px 4px 6px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".DKjfg:not(:last-child)",
          "cssText": ".DKjfg:not(:last-child) { padding-bottom: 8px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".DKjfg",
          "cssText": ".DKjfg { align-items: center; gap: 8px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".DKjfg ._8DeZd",
          "cssText": ".DKjfg ._8DeZd { text-align: left; flex-direction: column; justify-content: center; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".DKjfg .pv2zo",
          "cssText": ".DKjfg .pv2zo { font-size: 0.875rem; font-weight: 700; line-height: 1.42857; font-family: var(--font-family); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".DKjfg .kR4k3",
          "cssText": ".DKjfg .kR4k3 { color: rgba(0, 0, 0, 0.6); font-size: 0.78125rem; font-weight: 400; line-height: 1.52; font-family: var(--font-family); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".DKjfg .RyfGF",
          "cssText": ".DKjfg .RyfGF { border: 1px solid rgba(0, 0, 0, 0.07); border-radius: 50%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".k0Bm3",
          "cssText": ".k0Bm3 { font-size: 1rem; font-weight: 700; line-height: 1.5; font-family: var(--font-family); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hO4Gs",
          "cssText": ".hO4Gs { color: rgba(0, 0, 0, 0.6); font-size: 0.875rem; font-weight: 400; line-height: 1.42857; font-family: var(--font-family); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".kEGuS",
          "cssText": ".kEGuS { background-color: rgb(255, 255, 255); border: 2px solid rgb(0, 184, 255); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".XKw_n",
          "cssText": ".XKw_n { justify-content: center; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".rGgIn",
          "cssText": ".rGgIn { color: rgba(0, 0, 0, 0.6); text-align: center; font-size: 0.78125rem; font-weight: 400; line-height: 1.52; font-family: var(--font-family); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".QLdrl",
          "cssText": ".QLdrl { cursor: pointer; margin-left: 4px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".X0kwN",
          "cssText": ".X0kwN { box-sizing: border-box; justify-content: center; align-items: center; width: 24px; height: 24px; margin: 0px 11px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".snP5T",
          "cssText": ".snP5T { border: 2px solid rgba(0, 0, 0, 0.4); border-radius: 50%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".kX_oQ",
          "cssText": ".kX_oQ { z-index: 50; max-width: min(-16px + 100vw, 248px); font-size: 0.875rem; font-weight: 400; line-height: 1.42857; font-family: var(--font-family); color: rgba(0, 0, 0, 0.6); background: rgb(255, 255, 255); border: 1px solid rgba(0, 0, 0, 0.1); border-radius: 4px; margin-top: 4px; padding: 16px; box-shadow: rgba(0, 0, 0, 0.25) 0px 4px 16px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".gto4H",
          "cssText": ".gto4H { white-space: pre-wrap; flex-direction: column; align-items: center; gap: 10px; margin: 0px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".sPb5P",
          "cssText": ".sPb5P { font-size: 1rem; font-weight: 400; line-height: 1.5; font-family: var(--font-family); color: rgb(0, 0, 0); text-align: center; padding: 0px 12px 32px 26px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".o2DB9",
          "cssText": ".o2DB9 { flex-direction: column; gap: 12px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".rZSv_",
          "cssText": ".rZSv_ { color: rgba(0, 0, 0, 0.6); text-align: center; width: 328px; font-size: 1.125rem; font-weight: 700; line-height: 1.33333; font-family: var(--font-family); background-color: rgba(0, 0, 0, 0.07); border-radius: 25px; padding: 16px 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".x_pLk",
          "cssText": ".x_pLk { color: rgb(0, 184, 255); background-color: rgba(0, 184, 255, 0.11); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".gWDT8",
          "cssText": ".gWDT8 { border-radius: 50%; justify-content: center; align-items: center; width: 36px; height: 36px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".AZ5K5",
          "cssText": ".AZ5K5 { background-color: rgb(0, 207, 53); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".vpC8N",
          "cssText": ".vpC8N { background-color: rgb(255, 73, 48); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".yvLyG",
          "cssText": ".yvLyG { background-color: rgb(124, 92, 255); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".VUaL_ .tObXK:hover",
          "cssText": ".VUaL_ .tObXK:hover { background-color: rgb(245, 245, 245); border-radius: 4px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".VUaL_ .tObXK:focus-within",
          "cssText": ".VUaL_ .tObXK:focus-within { background-color: rgb(245, 245, 245); border-radius: 4px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".VUaL_ .rdwxF",
          "cssText": ".VUaL_ .rdwxF { flex-direction: row; align-items: center; gap: 20px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".VUaL_ .HMTsP",
          "cssText": ".VUaL_ .HMTsP { font-size: 0.875rem; font-weight: 700; line-height: 1.42857; font-family: var(--font-family); color: rgb(0, 0, 0); text-align: left; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".VUaL_ .l3NE9",
          "cssText": ".VUaL_ .l3NE9 { color: rgb(89, 89, 89); text-align: left; font-size: 14px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".So6RQ",
          "cssText": ".So6RQ { margin-bottom: 16px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 540px) {\n  .So6RQ { margin-bottom: 8px; }\n}",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".So6RQ",
          "cssText": ".So6RQ { margin-bottom: 8px; }",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".So6RQ:focus > .ge_yK",
          "cssText": ".So6RQ:focus > .ge_yK { box-shadow: 0 0 3px 3px RGB(var(--deprecated-accent)); border-radius: 3px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".So6RQ.YSitt",
          "cssText": ".So6RQ.YSitt { --post-padding: 16px; --post-header-vertical-padding: 16px; margin-bottom: 16px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".So6RQ.YSitt.a5_oh",
          "cssText": ".So6RQ.YSitt.a5_oh { margin: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 540px) {\n  .So6RQ.YSitt { --post-padding: 10px; margin-bottom: 8px; }\n}",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".So6RQ.YSitt",
          "cssText": ".So6RQ.YSitt { --post-padding: 10px; margin-bottom: 8px; }",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".So6RQ.YSitt[data-id] > .ge_yK",
          "cssText": ".So6RQ.YSitt[data-id] > .ge_yK { border-radius: 8px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".So6RQ, .ge_yK",
          "cssText": ".So6RQ, .ge_yK { outline: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".gODLh",
          "cssText": ".gODLh { width: 100%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".gODLh .So6RQ",
          "cssText": ".gODLh .So6RQ { margin-bottom: 2px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".rCRIW",
          "cssText": ".rCRIW { overflow: hidden; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".tCZnl",
          "cssText": ".tCZnl { margin: 0px 1px 2px; position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media not (max-width: 540px) {\n  .tCZnl:first-of-type .rCRIW { border-top-left-radius: 6px; }\n  .tCZnl:nth-of-type(3) .rCRIW { border-top-right-radius: 6px; }\n}",
          "urls": [],
          "group": "not (max-width: 540px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "not (max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".tCZnl:first-of-type .rCRIW",
          "cssText": ".tCZnl:first-of-type .rCRIW { border-top-left-radius: 6px; }",
          "urls": [],
          "group": "not (max-width: 540px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "not (max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".tCZnl:nth-of-type(3) .rCRIW",
          "cssText": ".tCZnl:nth-of-type(3) .rCRIW { border-top-right-radius: 6px; }",
          "urls": [],
          "group": "not (max-width: 540px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "not (max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ojpYJ",
          "cssText": ".ojpYJ { content: \"\"; pointer-events: none; width: 100%; height: 100%; display: block; position: absolute; inset: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ojpYJ.aRqkN",
          "cssText": ".ojpYJ.aRqkN { background-color: rgba(0, 0, 0, 0.25); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ojpYJ.aRqkN::after",
          "cssText": ".ojpYJ.aRqkN::after { z-index: 1; border-top: 12px solid RGB(var(--navy)); content: \"\"; border-left: 10px solid transparent; border-right: 10px solid transparent; display: block; position: absolute; top: 100%; left: 50%; transform: translate(-50%); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Yxz86",
          "cssText": ".Yxz86 { cursor: pointer; width: 100%; height: 100%; display: block; position: absolute; inset: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Yxz86:focus",
          "cssText": ".Yxz86:focus { outline: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Yxz86:focus .ojpYJ",
          "cssText": ".Yxz86:focus .ojpYJ { background-color: RGB(var(--deprecated-accent)); opacity: 0.4; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ju4hw",
          "cssText": ".ju4hw { width: 100%; height: 100%; display: block; position: absolute; inset: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ju4hw:focus",
          "cssText": ".ju4hw:focus { outline: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".c79Av",
          "cssText": ".c79Av { position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".qj1WD",
          "cssText": ".qj1WD { z-index: 9; min-height: 100%; position: absolute; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Z0Knh",
          "cssText": ".Z0Knh { z-index: 9; width: 1px; min-height: 100%; position: absolute; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".XJ0js",
          "cssText": ".XJ0js { width: 1px; height: 1px; position: absolute; top: 50%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".jYrjr",
          "cssText": ".jYrjr { animation: 0.3s ease-out 0s 1 normal forwards running EAhje; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframesRule",
          "selector": "",
          "cssText": "@keyframes EAhje { \n  0% { opacity: 1; transform: translate(0px); }\n  100% { opacity: 0; transform: translate(-100%); }\n}",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "0% { opacity: 1; transform: translate(0px); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "100% { opacity: 0; transform: translate(-100%); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".i4aRn",
          "cssText": ".i4aRn { margin-bottom: 5px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".RFqS2",
          "cssText": ".RFqS2 { display: block; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".osIkK",
          "cssText": ".osIkK { margin-bottom: 200px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ej5px",
          "cssText": ".ej5px { border: 3px solid rgb(255, 73, 48); border-radius: 8px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".t_hPc",
          "cssText": ".t_hPc { flex-flow: wrap; justify-content: center; gap: 8px; width: 415px; margin-top: 6px; display: flex; position: relative; left: -50px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 540px) {\n  .t_hPc { justify-content: left; width: 100%; position: static; }\n}",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".t_hPc",
          "cssText": ".t_hPc { justify-content: left; width: 100%; position: static; }",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Kh31R",
          "cssText": ".Kh31R { white-space: nowrap; font-size: 1rem; font-weight: 700; line-height: 1.5; font-family: var(--font-family); box-sizing: border-box; background-color: rgb(245, 245, 245); border: 2px solid rgb(245, 245, 245); border-radius: 100px; padding: 2px 10px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Kh31R.jdv6J",
          "cssText": ".Kh31R.jdv6J { background-color: rgb(255, 255, 255); border: 2px solid rgb(0, 184, 255); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".xjnUC",
          "cssText": ".xjnUC { width: 100%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".oV1aS",
          "cssText": ".oV1aS { box-sizing: border-box; background-color: rgba(0, 0, 0, 0.04); border: 2px solid rgba(0, 0, 0, 0.07); border-radius: 8px; outline: none; width: 100%; height: 48px; padding: 0px 10px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".oV1aS:focus",
          "cssText": ".oV1aS:focus { border: 2px solid rgb(0, 184, 255); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".oV1aS.LYqXD",
          "cssText": ".oV1aS.LYqXD { border-color: rgb(255, 73, 48); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".gRH0R",
          "cssText": ".gRH0R { font-size: 1rem; font-weight: 400; line-height: 1.5; font-family: var(--font-family); color: rgb(255, 73, 48); margin-top: 8px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".LzrSn",
          "cssText": ".LzrSn { justify-content: center; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Ek0jg",
          "cssText": ".Ek0jg { flex-direction: column; gap: 18px; margin-bottom: 16px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Ek0jg .VVL75",
          "cssText": ".Ek0jg .VVL75 { text-align: left; font-size: 1rem; font-weight: 700; line-height: 1.5; font-family: var(--font-family); border: 1px solid rgba(0, 25, 53, 0.1); border-radius: 12px; gap: 14px; padding: 12px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Ek0jg .VVL75 .B_5sb",
          "cssText": ".Ek0jg .VVL75 .B_5sb { margin-top: 10px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".eWQxY",
          "cssText": ".eWQxY { font-size: 0.875rem; font-weight: 500; line-height: 1.25rem; font-family: var(--font-family-modern); color: var(--color-fg); margin-bottom: 2px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".nvfzE",
          "cssText": ".nvfzE { font-size: 0.875rem; font-weight: 350; line-height: 1.25rem; font-family: var(--font-family-modern); color: var(--color-fg-secondary); margin-bottom: 4px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".loKTz",
          "cssText": ".loKTz { background-color: rgb(255, 255, 255); max-width: 328px; height: 100%; min-height: 242px; max-height: 30vh; overflow-y: scroll; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".loKTz .C3Zeo:focus, .loKTz .C3Zeo:hover",
          "cssText": ".loKTz .C3Zeo:focus, .loKTz .C3Zeo:hover { background-color: rgba(0, 0, 0, 0.07); border-radius: 10px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".loKTz .C3Zeo:focus-within",
          "cssText": ".loKTz .C3Zeo:focus-within { background-color: rgba(0, 0, 0, 0.07); border-radius: 10px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".loKTz .G37vG",
          "cssText": ".loKTz .G37vG { color: rgba(0, 0, 0, 0.6); font-size: 0.875rem; font-weight: 400; line-height: 1.42857; font-family: var(--font-family); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".loKTz.qS6kb",
          "cssText": ".loKTz.qS6kb { justify-content: center; align-items: center; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".loKTz .zN7tb",
          "cssText": ".loKTz .zN7tb { font-size: 0.875rem; font-weight: 400; line-height: 1.42857; font-family: var(--font-family); color: rgba(0, 0, 0, 0.6); text-align: center; max-width: 220px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".IgP1e",
          "cssText": ".IgP1e { word-break: break-word; background-color: rgba(0, 0, 0, 0.04); flex-wrap: wrap; align-items: center; max-width: 100%; padding: 6px; display: flex; position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".IgP1e .Tn4eg",
          "cssText": ".IgP1e .Tn4eg { display: grid; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".IgP1e .Tn4eg::after",
          "cssText": ".IgP1e .Tn4eg::after { visibility: hidden; content: attr(data-value)\" \"; white-space: pre-wrap; font-size: 1rem; font-weight: 400; font-family: var(--font-family); border: none; grid-area: 1 / 1 / 2 / 2; width: auto; padding: 6px 10px; line-height: 1.25; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".IgP1e .Jsugk .rIHzD",
          "cssText": ".IgP1e .Jsugk .rIHzD { font-size: 1rem; font-weight: 700; line-height: 1.5; font-family: var(--font-family); background-color: rgb(231, 231, 231); border-radius: 4px; margin: 0px 4px 4px 0px; padding: 4px 9px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".IgP1e .sP9AB",
          "cssText": ".IgP1e .sP9AB { font-size: 1rem; font-weight: 400; font-family: var(--font-family); box-sizing: border-box; color: rgba(0, 0, 0, 0.87); resize: none; background: rgba(255, 255, 255, 0); border: none; grid-area: 1 / 1 / 2 / 2; width: auto; padding: 6px 10px; line-height: 1.25; overflow: hidden; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".IgP1e .sP9AB:hover:not(:focus)",
          "cssText": ".IgP1e .sP9AB:hover:not(:focus) { cursor: pointer; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".IgP1e .sP9AB::placeholder",
          "cssText": ".IgP1e .sP9AB::placeholder { text-overflow: ellipsis; white-space: nowrap; opacity: 0.6; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".IgP1e .sP9AB:focus",
          "cssText": ".IgP1e .sP9AB:focus { outline: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".JyzY3",
          "cssText": ".JyzY3 { font-size: 0.78125rem; font-weight: 400; line-height: 1.52; font-family: var(--font-family); color: rgb(255, 73, 48); padding-left: 4px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".LScGv",
          "cssText": ".LScGv { border: 2px solid rgba(0, 0, 0, 0.07); border-radius: 12px; position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".LScGv:focus-within",
          "cssText": ".LScGv:focus-within { border: 2px solid rgb(0, 184, 255); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".LaNUG",
          "cssText": ".LaNUG { position: relative; overflow: hidden; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSSupportsRule",
          "selector": "",
          "cssText": "@supports (overflow:clip) {\n  .LaNUG { overflow: clip; }\n}",
          "urls": [],
          "group": "(overflow:clip)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "(overflow:clip)",
              "requiresEcho": true,
              "echoTokens": [
                "overflow",
                "clip"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".LaNUG",
          "cssText": ".LaNUG { overflow: clip; }",
          "urls": [],
          "group": "(overflow:clip)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "(overflow:clip)",
              "requiresEcho": true,
              "echoTokens": [
                "overflow",
                "clip"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".uR3i7",
          "cssText": ".uR3i7 { box-sizing: border-box; background: linear-gradient(to bottom,rgba(var(--white),.8)0%,RGB(var(--white))99%); width: 100%; color: RGB(var(--black)); text-shadow: 0px 0px 4px RGB(var(--white)); justify-content: center; align-items: center; padding: 25px; font-weight: 700; display: flex; position: absolute; bottom: 0px; box-shadow: rgba(0, 0, 0, 0.1) 0px -2px 20px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".LrOId",
          "cssText": ".LrOId { font-size: 1rem; font-weight: 700; line-height: 1.5; font-family: var(--font-family); cursor: pointer; white-space: nowrap; border-radius: 3px; justify-content: center; align-items: center; margin: 20px; padding: 10px 0px; text-decoration: none; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 540px) {\n  .LrOId { margin: 17px 10px; }\n}",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".LrOId",
          "cssText": ".LrOId { margin: 17px 10px; }",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".LrOId button",
          "cssText": ".LrOId button { width: 100%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".squP2",
          "cssText": ".squP2 { height: 28px; margin-right: 8px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media not (min-width: 990px) {\n  .squP2 { padding-top: 6px; }\n}",
          "urls": [],
          "group": "not (min-width: 990px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "not (min-width: 990px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "990px",
                "990",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".squP2",
          "cssText": ".squP2 { padding-top: 6px; }",
          "urls": [],
          "group": "not (min-width: 990px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "not (min-width: 990px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "990px",
                "990",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".squP2 div",
          "cssText": ".squP2 div { margin-left: 12px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".squP2 .gc3fY",
          "cssText": ".squP2 .gc3fY { margin-left: 20px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".squP2 .gc3fY button svg",
          "cssText": ".squP2 .gc3fY button svg { --icon-color-primary: rgba(var(--black),.65); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".squP2 .gc3fY button:disabled",
          "cssText": ".squP2 .gc3fY button:disabled { cursor: not-allowed; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".squP2 .gc3fY button:disabled svg",
          "cssText": ".squP2 .gc3fY button:disabled svg { --icon-color-primary: rgba(var(--black),.25); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".squP2 .fDUq4",
          "cssText": ".squP2 .fDUq4 { display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".AImO6",
          "cssText": ".AImO6 { border: 2px solid rgba(var(--black),.25); width: 100%; box-shadow: rgba(var(--black),.25)3px 3px 0; text-align: left; border-radius: 15px; padding: 10px 15px; position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".AImO6 .sOyZs",
          "cssText": ".AImO6 .sOyZs { border-right: 8px solid transparent; border-bottom: 8px solid rgba(var(--black),.25); border-left: 8px solid transparent; width: 0px; height: 0px; position: absolute; top: -10px; left: 30px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".AImO6 .TlhRk",
          "cssText": ".AImO6 .TlhRk { border-right: 8px solid transparent; border-bottom: 8px solid RGB(var(--white)); border-left: 8px solid transparent; width: 0px; height: 0px; position: absolute; top: -7px; left: 30px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".tpZ8V",
          "cssText": ".tpZ8V { width: 40px; margin-top: 5px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".tpZ8V a:focus",
          "cssText": ".tpZ8V a:focus { outline: rgb(0, 184, 255) auto; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".JYxnY",
          "cssText": ".JYxnY { flex: 1 1 0%; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".JYxnY > div",
          "cssText": ".JYxnY > div { pointer-events: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".kEusV",
          "cssText": ".kEusV { flex: 1 1 0%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".kEusV .Qne7x",
          "cssText": ".kEusV .Qne7x { flex-wrap: wrap; margin-bottom: 5px; font-weight: 700; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".kEusV .Qne7x .AXdIl",
          "cssText": ".kEusV .Qne7x .AXdIl { color: RGB(var(--black)); margin-right: 5px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".kEusV .Qne7x .KvHCB",
          "cssText": ".kEusV .Qne7x .KvHCB { color: rgba(var(--black),.65); display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".kEusV .Qne7x .KvHCB .tkkxL",
          "cssText": ".kEusV .Qne7x .KvHCB .tkkxL { align-items: center; margin-right: 5px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".WW8zi",
          "cssText": ".WW8zi { display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".WW8zi > :nth-child(2)",
          "cssText": ".WW8zi > :nth-child(2) { margin-left: 15px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".WW8zi .S6wzy",
          "cssText": ".WW8zi .S6wzy { font-size: 0.875rem; font-weight: 400; line-height: 1.42857; font-family: var(--font-family); text-overflow: ellipsis; overflow-wrap: anywhere; flex: 1 1 0%; overflow: hidden; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSSupportsRule",
          "selector": "",
          "cssText": "@supports (display:-webkit-box) and (-webkit-line-clamp:2) {\n  .WW8zi .S6wzy { -webkit-line-clamp: 2; -webkit-box-orient: vertical; display: -webkit-box; }\n}",
          "urls": [],
          "group": "(display:-webkit-box) and (-webkit-line-clamp:2)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "(display:-webkit-box) and (-webkit-line-clamp:2)",
              "requiresEcho": true,
              "echoTokens": [
                "display",
                "-webkit-box",
                "-webkit-line-clamp",
                "2"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".WW8zi .S6wzy",
          "cssText": ".WW8zi .S6wzy { -webkit-line-clamp: 2; -webkit-box-orient: vertical; display: -webkit-box; }",
          "urls": [],
          "group": "(display:-webkit-box) and (-webkit-line-clamp:2)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "(display:-webkit-box) and (-webkit-line-clamp:2)",
              "requiresEcho": true,
              "echoTokens": [
                "display",
                "-webkit-box",
                "-webkit-line-clamp",
                "2"
              ]
            }
          ]
        },
        {
          "type": "CSSSupportsRule",
          "selector": "",
          "cssText": "@supports not ((display:-webkit-box) and (-webkit-line-clamp:2)) {\n  .WW8zi .S6wzy { white-space: nowrap; }\n}",
          "urls": [],
          "group": "not ((display:-webkit-box) and (-webkit-line-clamp:2))",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "not ((display:-webkit-box) and (-webkit-line-clamp:2))",
              "requiresEcho": true,
              "echoTokens": [
                "not",
                "display",
                "-webkit-box",
                "-webkit-line-clamp",
                "2"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".WW8zi .S6wzy",
          "cssText": ".WW8zi .S6wzy { white-space: nowrap; }",
          "urls": [],
          "group": "not ((display:-webkit-box) and (-webkit-line-clamp:2))",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "not ((display:-webkit-box) and (-webkit-line-clamp:2))",
              "requiresEcho": true,
              "echoTokens": [
                "not",
                "display",
                "-webkit-box",
                "-webkit-line-clamp",
                "2"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".WW8zi .gGpxL",
          "cssText": ".WW8zi .gGpxL { font-size: 0.875rem; font-weight: 400; line-height: 1.42857; font-family: var(--font-family); text-overflow: ellipsis; overflow-wrap: anywhere; flex: 1 1 0%; overflow: hidden; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSSupportsRule",
          "selector": "",
          "cssText": "@supports (display:-webkit-box) and (-webkit-line-clamp:2) {\n  .WW8zi .gGpxL { -webkit-line-clamp: 2; -webkit-box-orient: vertical; display: -webkit-box; }\n}",
          "urls": [],
          "group": "(display:-webkit-box) and (-webkit-line-clamp:2)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "(display:-webkit-box) and (-webkit-line-clamp:2)",
              "requiresEcho": true,
              "echoTokens": [
                "display",
                "-webkit-box",
                "-webkit-line-clamp",
                "2"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".WW8zi .gGpxL",
          "cssText": ".WW8zi .gGpxL { -webkit-line-clamp: 2; -webkit-box-orient: vertical; display: -webkit-box; }",
          "urls": [],
          "group": "(display:-webkit-box) and (-webkit-line-clamp:2)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "(display:-webkit-box) and (-webkit-line-clamp:2)",
              "requiresEcho": true,
              "echoTokens": [
                "display",
                "-webkit-box",
                "-webkit-line-clamp",
                "2"
              ]
            }
          ]
        },
        {
          "type": "CSSSupportsRule",
          "selector": "",
          "cssText": "@supports not ((display:-webkit-box) and (-webkit-line-clamp:2)) {\n  .WW8zi .gGpxL { white-space: nowrap; }\n}",
          "urls": [],
          "group": "not ((display:-webkit-box) and (-webkit-line-clamp:2))",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "not ((display:-webkit-box) and (-webkit-line-clamp:2))",
              "requiresEcho": true,
              "echoTokens": [
                "not",
                "display",
                "-webkit-box",
                "-webkit-line-clamp",
                "2"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".WW8zi .gGpxL",
          "cssText": ".WW8zi .gGpxL { white-space: nowrap; }",
          "urls": [],
          "group": "not ((display:-webkit-box) and (-webkit-line-clamp:2))",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "not ((display:-webkit-box) and (-webkit-line-clamp:2))",
              "requiresEcho": true,
              "echoTokens": [
                "not",
                "display",
                "-webkit-box",
                "-webkit-line-clamp",
                "2"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".WW8zi .gGpxL > span",
          "cssText": ".WW8zi .gGpxL > span { margin-right: 10px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".WW8zi .r4WcW",
          "cssText": ".WW8zi .r4WcW { font-size: 0.875rem; font-weight: 400; line-height: 1.42857; font-family: var(--font-family); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".WW8zi .AZonl",
          "cssText": ".WW8zi .AZonl { font-size: 0.875rem; font-weight: 700; line-height: 1.42857; font-family: var(--font-family); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".WW8zi .ObSCE",
          "cssText": ".WW8zi .ObSCE { border-radius: 3px; width: 40px; height: 40px; overflow: hidden; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".WW8zi .ObSCE .gzn4G",
          "cssText": ".WW8zi .ObSCE .gzn4G { justify-content: center; align-items: center; width: 100%; height: 100%; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".WW8zi .ObSCE .gzn4G[data-media-type$=\"video\"]",
          "cssText": ".WW8zi .ObSCE .gzn4G[data-media-type$=\"video\"] { background-color: RGB(var(--pink)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".WW8zi .ObSCE .gzn4G[data-media-type$=\"audio\"]",
          "cssText": ".WW8zi .ObSCE .gzn4G[data-media-type$=\"audio\"] { background-color: RGB(var(--purple)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".WW8zi .ObSCE .gzn4G[data-media-type$=\"link\"]",
          "cssText": ".WW8zi .ObSCE .gzn4G[data-media-type$=\"link\"] { background-color: RGB(var(--green)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".WW8zi .ObSCE .gzn4G[data-media-type$=\"poll\"]",
          "cssText": ".WW8zi .ObSCE .gzn4G[data-media-type$=\"poll\"] { background-color: RGB(var(--blue)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".oozSP",
          "cssText": ".oozSP { font-size: 0.875rem; font-weight: 700; line-height: 1.42857; font-family: var(--font-family); margin-top: 5px; margin-left: 40px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".vE6sH",
          "cssText": ".vE6sH { box-sizing: border-box; border: 1px solid rgba(var(--black),.15); border-radius: 18px; flex-grow: 1; flex-shrink: 0; align-items: center; width: 100%; height: 36px; padding: 6px 16px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 540px) {\n  .vE6sH { border-radius: 15px; height: 30px; padding: 3px 16px; }\n}",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".vE6sH",
          "cssText": ".vE6sH { border-radius: 15px; height: 30px; padding: 3px 16px; }",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".lJK40",
          "cssText": ".lJK40 { color: RGB(var(--black)); font-weight: 700; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".xu5ZG",
          "cssText": ".xu5ZG { overflow-wrap: anywhere; font-weight: 400; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".BzZTO",
          "cssText": ".BzZTO { background: RGB(var(--deprecated-accent)); height: 30px; color: RGB(var(--white)); border-radius: 15px; justify-content: center; align-items: center; padding: 0px 12px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".mc7Rk",
          "cssText": ".mc7Rk { text-decoration: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Lssfa, .XyjT5",
          "cssText": ".Lssfa, .XyjT5 { height: 16px; display: inline-block; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".HiALI",
          "cssText": ".HiALI { height: 100%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".HiALI .ftMh_",
          "cssText": ".HiALI .ftMh_ { width: 100%; height: 80px; position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".HiALI .ExLtT",
          "cssText": ".HiALI .ExLtT { box-sizing: border-box; border: 2px rgba(var(--black),.1)solid; background: RGB(var(--white)); border-radius: 8px; width: 56px; height: 56px; display: inline-block; position: absolute; bottom: -28px; left: 62px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".HiALI .zQQ1t",
          "cssText": ".HiALI .zQQ1t { box-sizing: border-box; padding: 32px 8px 8px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".HiALI .eS7H5",
          "cssText": ".HiALI .eS7H5 { font-size: 0.875rem; font-weight: 700; line-height: 1.42857; font-family: var(--font-family); text-align: center; word-break: break-word; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".HiALI .gY71t",
          "cssText": ".HiALI .gY71t { font-size: 0.78125rem; font-weight: 400; line-height: 1.52; font-family: var(--font-family); text-align: center; word-break: break-word; margin-bottom: 8px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".HiALI .vlhpM",
          "cssText": ".HiALI .vlhpM { justify-content: center; align-items: center; gap: 8px; width: 100%; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".HiALI .oLcVd",
          "cssText": ".HiALI .oLcVd { font-size: 0.875rem; font-weight: 700; line-height: 1.42857; font-family: var(--font-family); box-sizing: border-box; background: rgba(var(--deprecated-accent),.15); height: 32px; color: RGB(var(--deprecated-accent)); border-radius: 18px; justify-content: center; align-items: center; padding: 7px 10px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".HiALI .oLcVd.GU7ne",
          "cssText": ".HiALI .oLcVd.GU7ne { padding: 5px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".HiALI .oLcVd.Qppi3 svg",
          "cssText": ".HiALI .oLcVd.Qppi3 svg { width: 14px; height: 14px; margin-right: 5px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".lDyCD",
          "cssText": ".lDyCD { width: 100%; height: 100%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".cnNot",
          "cssText": ".cnNot { align-items: center; display: flex; position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".cnNot .y56NR",
          "cssText": ".cnNot .y56NR { font-size: 1rem; font-weight: 700; line-height: 1.5; font-family: var(--font-family); color: rgba(var(--black),.65); margin-left: 2px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".e0Nag",
          "cssText": ".e0Nag { margin-bottom: 12px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".GIEHd",
          "cssText": ".GIEHd { display: inline-block; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".R7jci",
          "cssText": ".R7jci { box-sizing: border-box; width: calc(var(--badges-total)*(var(--badge-size) + var(--badge-spacing)) - var(--badge-spacing)); min-width: var(--badge-size); max-width: 400px; height: var(--badge-size); flex-wrap: nowrap; justify-content: center; align-items: center; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 540px) {\n  .R7jci { max-width: 100%; }\n}",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".R7jci",
          "cssText": ".R7jci { max-width: 100%; }",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".R7jci .rJLvK:not(:last-child)",
          "cssText": ".R7jci .rJLvK:not(:last-child) { margin-right: var(--badge-spacing); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".R7jci .rJLvK, .R7jci .sdOCZ",
          "cssText": ".R7jci .rJLvK, .R7jci .sdOCZ { width: var(--badge-size); height: var(--badge-size); display: inline-block; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".R7jci.zSqhJ",
          "cssText": ".R7jci.zSqhJ { position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".R7jci.zSqhJ .rJLvK",
          "cssText": ".R7jci.zSqhJ .rJLvK { top: 0px; left: calc(100%*var(--badges-index)/var(--badges-total)); transform: translateX(calc(-100%*var(--badges-index)/var(--badges-total))); position: absolute; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".R7jci.zSqhJ .rJLvK, .R7jci.zSqhJ .sdOCZ",
          "cssText": ".R7jci.zSqhJ .rJLvK, .R7jci.zSqhJ .sdOCZ { margin-right: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "._GPua",
          "cssText": "._GPua { flex: initial; justify-content: center; align-items: center; margin-bottom: 4px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".a0aud",
          "cssText": ".a0aud { flex: initial; border-radius: 6px; justify-content: center; align-items: center; margin: 0px auto 8px; padding: 4px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".kmZxu",
          "cssText": ".kmZxu { max-width: max-content; max-height: max-content; color: var(--badge-icon); border-radius: 9999px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".kmZxu.JNTqK",
          "cssText": ".kmZxu.JNTqK { outline: 2px solid var(--chrome-panel); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".kmZxu.AJeeZ",
          "cssText": ".kmZxu.AJeeZ { outline: 2px solid var(--content-panel); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".kmZxu svg",
          "cssText": ".kmZxu svg { border-radius: inherit; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSSupportsRule",
          "selector": "",
          "cssText": "@supports ((-webkit-mask-image:none) or (mask-image:none)) {\n  .kmZxu.JNTqK, .kmZxu.AJeeZ { outline: none; }\n}",
          "urls": [],
          "group": "((-webkit-mask-image:none) or (mask-image:none))",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "((-webkit-mask-image:none) or (mask-image:none))",
              "requiresEcho": true,
              "echoTokens": [
                "-webkit-mask-image",
                "none",
                "mask-image"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".kmZxu.JNTqK, .kmZxu.AJeeZ",
          "cssText": ".kmZxu.JNTqK, .kmZxu.AJeeZ { outline: none; }",
          "urls": [],
          "group": "((-webkit-mask-image:none) or (mask-image:none))",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "((-webkit-mask-image:none) or (mask-image:none))",
              "requiresEcho": true,
              "echoTokens": [
                "-webkit-mask-image",
                "none",
                "mask-image"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".lTPXG",
          "cssText": ".lTPXG { justify-content: center; align-items: center; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".NmEJh",
          "cssText": ".NmEJh { border-radius: var(--border-radius); position: relative; overflow: visible; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".NmEJh.NpLHM",
          "cssText": ".NmEJh.NpLHM { background-color: var(--chrome-panel); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".NmEJh.WHBEq",
          "cssText": ".NmEJh.WHBEq { background-color: var(--content-panel); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".NmEJh.pPM64",
          "cssText": ".NmEJh.pPM64 { --border-radius: 9999px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".NmEJh.KPDSx.aQwSl, .NmEJh.KPDSx.r2VNz",
          "cssText": ".NmEJh.KPDSx.aQwSl, .NmEJh.KPDSx.r2VNz { --border-radius: 8px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".NmEJh.KPDSx.ja4cu, .NmEJh.KPDSx.fgUre, .NmEJh.KPDSx.IdTf7, .NmEJh.KPDSx.wCmYf, .NmEJh.KPDSx.gLSgz, .NmEJh.KPDSx.bfhuq, .NmEJh.KPDSx.W7o_B, .NmEJh.KPDSx.dBgV8",
          "cssText": ".NmEJh.KPDSx.ja4cu, .NmEJh.KPDSx.fgUre, .NmEJh.KPDSx.IdTf7, .NmEJh.KPDSx.wCmYf, .NmEJh.KPDSx.gLSgz, .NmEJh.KPDSx.bfhuq, .NmEJh.KPDSx.W7o_B, .NmEJh.KPDSx.dBgV8 { --border-radius: 4px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".NmEJh.KPDSx.VsZv7",
          "cssText": ".NmEJh.KPDSx.VsZv7 { --border-radius: 2px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".DPB5d",
          "cssText": ".DPB5d { width: inherit; height: inherit; border-radius: inherit; overflow: hidden; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".DPB5d :focus-visible",
          "cssText": ".DPB5d :focus-visible { outline: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".S8Dii",
          "cssText": ".S8Dii { border-radius: var(--border-radius); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".NpLHM .X2RVO",
          "cssText": ".NpLHM .X2RVO { outline: 2px solid var(--chrome-panel); background-color: var(--chrome-panel); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".WHBEq .X2RVO",
          "cssText": ".WHBEq .X2RVO { outline: 2px solid var(--content-panel); background-color: var(--content-panel); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".X2RVO, .YwcFx",
          "cssText": ".X2RVO, .YwcFx { border-radius: 9999px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".iIlsP",
          "cssText": ".iIlsP { pointer-events: none; position: absolute; bottom: 0px; right: -4px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".wCmYf .iIlsP, .bfhuq .iIlsP",
          "cssText": ".wCmYf .iIlsP, .bfhuq .iIlsP { bottom: -2px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".iIlsP:empty",
          "cssText": ".iIlsP:empty { display: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".iIlsP a, .iIlsP button",
          "cssText": ".iIlsP a, .iIlsP button { pointer-events: all; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".iIlsP :focus-visible",
          "cssText": ".iIlsP :focus-visible { outline: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".DPB5d :focus-visible .S8Dii",
          "cssText": ".DPB5d :focus-visible .S8Dii { outline: 2px solid var(--accent); outline-offset: -2px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".iIlsP :focus-visible .YwcFx",
          "cssText": ".iIlsP :focus-visible .YwcFx { outline: 2px solid var(--accent); outline-offset: -2px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".iIlsP :focus-visible svg",
          "cssText": ".iIlsP :focus-visible svg { outline: 2px solid var(--accent); outline-offset: -2px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSSupportsRule",
          "selector": "",
          "cssText": "@supports ((-webkit-mask-image:none) or (mask-image:none)) {\n  .NmEJh.NpLHM, .NmEJh.WHBEq { background-color: transparent; }\n  .IdTf7.Xlq_h .DPB5d { mask-image: radial-gradient(12px at right 6px bottom 10px, transparent 99%, rgb(255, 255, 255) 100%); }\n  .wCmYf.Xlq_h .DPB5d { mask-image: radial-gradient(12px at right 6px bottom 8px, transparent 99%, rgb(255, 255, 255) 100%); }\n  .gLSgz.Xlq_h .DPB5d { mask-image: radial-gradient(10px at right 4px bottom 8px, transparent 99%, rgb(255, 255, 255) 100%); }\n  .bfhuq.Xlq_h .DPB5d { mask-image: radial-gradient(10px at right 4px bottom 6px, transparent 99%, rgb(255, 255, 255) 100%); }\n  .iIlsP .X2RVO { background-color: transparent; outline: none; }\n}",
          "urls": [],
          "group": "((-webkit-mask-image:none) or (mask-image:none))",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "((-webkit-mask-image:none) or (mask-image:none))",
              "requiresEcho": true,
              "echoTokens": [
                "-webkit-mask-image",
                "none",
                "mask-image"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".NmEJh.NpLHM, .NmEJh.WHBEq",
          "cssText": ".NmEJh.NpLHM, .NmEJh.WHBEq { background-color: transparent; }",
          "urls": [],
          "group": "((-webkit-mask-image:none) or (mask-image:none))",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "((-webkit-mask-image:none) or (mask-image:none))",
              "requiresEcho": true,
              "echoTokens": [
                "-webkit-mask-image",
                "none",
                "mask-image"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".IdTf7.Xlq_h .DPB5d",
          "cssText": ".IdTf7.Xlq_h .DPB5d { mask-image: radial-gradient(12px at right 6px bottom 10px, transparent 99%, rgb(255, 255, 255) 100%); }",
          "urls": [],
          "group": "((-webkit-mask-image:none) or (mask-image:none))",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "((-webkit-mask-image:none) or (mask-image:none))",
              "requiresEcho": true,
              "echoTokens": [
                "-webkit-mask-image",
                "none",
                "mask-image"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".wCmYf.Xlq_h .DPB5d",
          "cssText": ".wCmYf.Xlq_h .DPB5d { mask-image: radial-gradient(12px at right 6px bottom 8px, transparent 99%, rgb(255, 255, 255) 100%); }",
          "urls": [],
          "group": "((-webkit-mask-image:none) or (mask-image:none))",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "((-webkit-mask-image:none) or (mask-image:none))",
              "requiresEcho": true,
              "echoTokens": [
                "-webkit-mask-image",
                "none",
                "mask-image"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".gLSgz.Xlq_h .DPB5d",
          "cssText": ".gLSgz.Xlq_h .DPB5d { mask-image: radial-gradient(10px at right 4px bottom 8px, transparent 99%, rgb(255, 255, 255) 100%); }",
          "urls": [],
          "group": "((-webkit-mask-image:none) or (mask-image:none))",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "((-webkit-mask-image:none) or (mask-image:none))",
              "requiresEcho": true,
              "echoTokens": [
                "-webkit-mask-image",
                "none",
                "mask-image"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".bfhuq.Xlq_h .DPB5d",
          "cssText": ".bfhuq.Xlq_h .DPB5d { mask-image: radial-gradient(10px at right 4px bottom 6px, transparent 99%, rgb(255, 255, 255) 100%); }",
          "urls": [],
          "group": "((-webkit-mask-image:none) or (mask-image:none))",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "((-webkit-mask-image:none) or (mask-image:none))",
              "requiresEcho": true,
              "echoTokens": [
                "-webkit-mask-image",
                "none",
                "mask-image"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".iIlsP .X2RVO",
          "cssText": ".iIlsP .X2RVO { background-color: transparent; outline: none; }",
          "urls": [],
          "group": "((-webkit-mask-image:none) or (mask-image:none))",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "((-webkit-mask-image:none) or (mask-image:none))",
              "requiresEcho": true,
              "echoTokens": [
                "-webkit-mask-image",
                "none",
                "mask-image"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".KVX8S",
          "cssText": ".KVX8S { font-size: 0.875rem; font-weight: 350; line-height: 1.25rem; font-family: var(--font-family-modern); color: var(--danger); align-items: flex-start; gap: 8px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".cEAyD",
          "cssText": ".cEAyD { padding-top: 2px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".WXF6Z",
          "cssText": ".WXF6Z { position: absolute; top: -62px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".WXF6Z.y_8_Y",
          "cssText": ".WXF6Z.y_8_Y { animation: 0.8s ease-out 0s 1 normal none running kvrGC; left: -24px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".WXF6Z.y_8_Y > svg use",
          "cssText": ".WXF6Z.y_8_Y > svg use { --icon-color-primary: RGB(var(--red)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".WXF6Z.WQE_S",
          "cssText": ".WXF6Z.WQE_S { left: 8px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".WXF6Z.WQE_S .zTFrW, .WXF6Z.WQE_S .C281d",
          "cssText": ".WXF6Z.WQE_S .zTFrW, .WXF6Z.WQE_S .C281d { height: 100%; display: block; position: absolute; top: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".WXF6Z.WQE_S .zTFrW use, .WXF6Z.WQE_S .C281d use",
          "cssText": ".WXF6Z.WQE_S .zTFrW use, .WXF6Z.WQE_S .C281d use { --icon-color-primary: #748089; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".WXF6Z.WQE_S .C281d",
          "cssText": ".WXF6Z.WQE_S .C281d { transform-origin: 26px 54px; margin-left: -29px; animation: 0.8s ease-out 0s 1 normal none running tIQio; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".WXF6Z.WQE_S .zTFrW",
          "cssText": ".WXF6Z.WQE_S .zTFrW { transform-origin: 0px 54px; margin-left: 3px; animation: 0.8s ease-out 0s 1 normal none running Q6bsg; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframesRule",
          "selector": "",
          "cssText": "@keyframes kvrGC { \n  0% { opacity: 0; transform: rotate(0deg); }\n  25% { opacity: 1; transform: rotate(-20deg); }\n  75% { transform: rotate(20deg); }\n  100% { opacity: 0; margin-top: -80px; transform: rotate(0deg); }\n}",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "0% { opacity: 0; transform: rotate(0deg); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "25% { opacity: 1; transform: rotate(-20deg); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "75% { transform: rotate(20deg); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "100% { opacity: 0; margin-top: -80px; transform: rotate(0deg); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframesRule",
          "selector": "",
          "cssText": "@keyframes tIQio { \n  0% { opacity: 1; margin-top: -80px; transform: rotate(0deg); }\n  30% { opacity: 1; margin-top: -80px; }\n  80% { opacity: 0; margin-top: 0px; transform: rotate(-10deg); }\n  100% { opacity: 0; margin-top: 0px; transform: rotate(-10deg); }\n}",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "0% { opacity: 1; margin-top: -80px; transform: rotate(0deg); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "30% { opacity: 1; margin-top: -80px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "80% { opacity: 0; margin-top: 0px; transform: rotate(-10deg); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "100% { opacity: 0; margin-top: 0px; transform: rotate(-10deg); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframesRule",
          "selector": "",
          "cssText": "@keyframes Q6bsg { \n  0% { opacity: 1; margin-top: -80px; transform: rotate(0deg); }\n  30% { opacity: 1; margin-top: -80px; }\n  80% { opacity: 0; margin-top: 0px; transform: rotate(10deg); }\n  100% { opacity: 0; margin-top: 0px; transform: rotate(10deg); }\n}",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "0% { opacity: 1; margin-top: -80px; transform: rotate(0deg); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "30% { opacity: 1; margin-top: -80px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "80% { opacity: 0; margin-top: 0px; transform: rotate(10deg); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "100% { opacity: 0; margin-top: 0px; transform: rotate(10deg); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".rIj_0",
          "cssText": ".rIj_0 { font-size: 0.75rem; font-weight: 400; line-height: 1.125rem; font-family: var(--font-family-modern); color: var(--content-fg-tertiary); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".rPK5v",
          "cssText": ".rPK5v { color: var(--danger); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ztpfZ > svg use",
          "cssText": ".ztpfZ > svg use { --icon-color-primary: RGB(var(--red)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".B1Z5w",
          "cssText": ".B1Z5w { position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".YCZ8P:hover",
          "cssText": ".YCZ8P:hover { cursor: not-allowed; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".NvGc_",
          "cssText": ".NvGc_ { flex-direction: column; gap: 8px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Q7uTT",
          "cssText": ".Q7uTT { justify-content: space-between; align-items: flex-end; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Q7uTT .ebkCg",
          "cssText": ".Q7uTT .ebkCg { align-items: flex-end; gap: 4px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Q7uTT p",
          "cssText": ".Q7uTT p { margin: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".yU0Nb",
          "cssText": ".yU0Nb { font-size: 0.875rem; font-weight: 500; line-height: 1.25rem; font-family: var(--font-family-modern); color: var(--content-fg); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".e8znE",
          "cssText": ".e8znE { font-size: 0.75rem; font-weight: 400; line-height: 1.125rem; font-family: var(--font-family-modern); color: var(--content-fg-tertiary); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ZRkRa",
          "cssText": ".ZRkRa { font-size: 0.875rem; font-weight: 350; line-height: 1.25rem; font-family: var(--font-family-modern); color: var(--content-fg-secondary); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".nHHcZ",
          "cssText": ".nHHcZ { position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Fp6pt",
          "cssText": ".Fp6pt { color: var(--content-fg-tertiary); position: absolute; top: 12px; left: 12px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".M7emv",
          "cssText": ".M7emv { position: absolute; top: 6px; right: 6px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".F0gXR",
          "cssText": ".F0gXR { box-sizing: border-box; background-color: var(--content-tint); width: 100%; color: var(--content-fg); font-size: 1rem; font-weight: 350; line-height: 1.5rem; font-family: var(--font-family-modern); border: 0px; border-radius: 8px; outline: transparent solid 4px; padding: 12px 16px; transition: outline 0.1s ease-in-out; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".F0gXR.xqEzo",
          "cssText": ".F0gXR.xqEzo { padding-inline-start: 42px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".F0gXR.xqEzo:not(:-webkit-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)))",
          "cssText": ".F0gXR.xqEzo:not(:-webkit-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi))) { padding-left: 42px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".F0gXR.xqEzo:not(:is(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)))",
          "cssText": ".F0gXR.xqEzo:not(:is(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi))) { padding-left: 42px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".F0gXR.xqEzo:-webkit-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi))",
          "cssText": ".F0gXR.xqEzo:-webkit-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)) { padding-right: 42px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".F0gXR.xqEzo:is(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi))",
          "cssText": ".F0gXR.xqEzo:is(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)) { padding-right: 42px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".F0gXR.uG5r7",
          "cssText": ".F0gXR.uG5r7 { padding-inline-end: 54px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".F0gXR.uG5r7:not(:-webkit-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)))",
          "cssText": ".F0gXR.uG5r7:not(:-webkit-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi))) { padding-right: 54px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".F0gXR.uG5r7:not(:is(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)))",
          "cssText": ".F0gXR.uG5r7:not(:is(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi))) { padding-right: 54px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".F0gXR.uG5r7:-webkit-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi))",
          "cssText": ".F0gXR.uG5r7:-webkit-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)) { padding-left: 54px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".F0gXR.uG5r7:is(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi))",
          "cssText": ".F0gXR.uG5r7:is(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)) { padding-left: 54px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".F0gXR::placeholder",
          "cssText": ".F0gXR::placeholder { color: var(--content-fg-secondary); opacity: 1; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".F0gXR:focus-visible",
          "cssText": ".F0gXR:focus-visible { outline: var(--accent)solid 2px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".F0gXR[disabled]",
          "cssText": ".F0gXR[disabled] { color: var(--content-fg-secondary); opacity: 0.5; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".F0gXR[aria-invalid]",
          "cssText": ".F0gXR[aria-invalid] { outline: var(--danger)solid 2px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".m2Bdx",
          "cssText": ".m2Bdx { flex-direction: row; justify-content: space-between; align-items: flex-start; column-gap: 4px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".l4Qpd",
          "cssText": ".l4Qpd { flex-direction: row; flex: 1 1 0%; align-items: flex-start; column-gap: 12px; display: flex; overflow: hidden; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".y8wKa",
          "cssText": ".y8wKa { align-items: center; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".deHVW .y8wKa, .deHVW .zmkgk, .deHVW .RIcm_",
          "cssText": ".deHVW .y8wKa, .deHVW .zmkgk, .deHVW .RIcm_ { min-height: 40px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".cJ1ik .y8wKa, .PCzZt .y8wKa, .cJ1ik .zmkgk, .PCzZt .zmkgk, .cJ1ik .RIcm_, .PCzZt .RIcm_",
          "cssText": ".cJ1ik .y8wKa, .PCzZt .y8wKa, .cJ1ik .zmkgk, .PCzZt .zmkgk, .cJ1ik .RIcm_, .PCzZt .RIcm_ { min-height: 44px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".L2HBn .y8wKa, .n_fvx .y8wKa, .L2HBn .zmkgk, .n_fvx .zmkgk, .L2HBn .RIcm_, .n_fvx .RIcm_",
          "cssText": ".L2HBn .y8wKa, .n_fvx .y8wKa, .L2HBn .zmkgk, .n_fvx .zmkgk, .L2HBn .RIcm_, .n_fvx .RIcm_ { min-height: 48px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".zmkgk",
          "cssText": ".zmkgk { justify-content: center; overflow: hidden; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".W0XIT",
          "cssText": ".W0XIT { flex-direction: row; align-items: center; column-gap: 4px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".W0XIT, .x66yu",
          "cssText": ".W0XIT, .x66yu { text-overflow: ellipsis; white-space: nowrap; max-width: 100%; overflow: hidden; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".W0XIT a, .x66yu a",
          "cssText": ".W0XIT a, .x66yu a { text-decoration: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".W0XIT a:focus-visible",
          "cssText": ".W0XIT a:focus-visible { text-decoration: 2px underline var(--accent); outline: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".x66yu a:focus-visible",
          "cssText": ".x66yu a:focus-visible { text-decoration: 2px underline var(--accent); outline: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".d7ZC6",
          "cssText": ".d7ZC6 { flex-shrink: 1; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hd9yU .d7ZC6",
          "cssText": ".hd9yU .d7ZC6 { color: var(--chrome-fg); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".pLL0g .d7ZC6",
          "cssText": ".pLL0g .d7ZC6 { color: var(--content-fg); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".deHVW .d7ZC6",
          "cssText": ".deHVW .d7ZC6 { font-size: 0.875rem; font-weight: 500; line-height: 1.25rem; font-family: var(--font-family-modern); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".L2HBn .d7ZC6, .n_fvx .d7ZC6, .cJ1ik .d7ZC6, .PCzZt .d7ZC6",
          "cssText": ".L2HBn .d7ZC6, .n_fvx .d7ZC6, .cJ1ik .d7ZC6, .PCzZt .d7ZC6 { font-size: 1rem; font-weight: 500; line-height: 1.5rem; font-family: var(--font-family-modern); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".d7ZC6, .d7ZC6 a, .d7ZC6 span",
          "cssText": ".d7ZC6, .d7ZC6 a, .d7ZC6 span { max-width: 100%; overflow: inherit; text-overflow: inherit; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".W0XIT .Kkrh1",
          "cssText": ".W0XIT .Kkrh1 { min-width: 0px; flex-wrap: wrap; flex: 1 1 0%; justify-content: flex-start; align-items: flex-start; max-width: max-content; position: relative; overflow: hidden; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".W0XIT .Kkrh1 .dS8W1",
          "cssText": ".W0XIT .Kkrh1 .dS8W1 { box-sizing: border-box; padding: 1px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".W0XIT .Kkrh1 span, .W0XIT .Kkrh1 img",
          "cssText": ".W0XIT .Kkrh1 span, .W0XIT .Kkrh1 img { max-width: 100%; max-height: 100%; display: inline-flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".beV_K",
          "cssText": ".beV_K { flex-shrink: 0; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".x66yu",
          "cssText": ".x66yu { flex-direction: row; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".x66yu .NB_7e",
          "cssText": ".x66yu .NB_7e { display: inherit; flex-direction: inherit; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".x66yu .NB_7e, .x66yu .Fuxs_",
          "cssText": ".x66yu .NB_7e, .x66yu .Fuxs_ { max-width: inherit; overflow: inherit; text-overflow: inherit; flex-shrink: 1; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".x66yu .CtNGM",
          "cssText": ".x66yu .CtNGM { flex-direction: row; justify-content: flex-end; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".x66yu .CtNGM::before",
          "cssText": ".x66yu .CtNGM::before { content: \" · \"; white-space: pre; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".x66yu .Fuxs_:empty + .CtNGM",
          "cssText": ".x66yu .Fuxs_:empty + .CtNGM { display: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".x66yu .CtNGM, .x66yu .QOpFt",
          "cssText": ".x66yu .CtNGM, .x66yu .QOpFt { max-width: inherit; overflow: inherit; text-overflow: inherit; flex-shrink: 0; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hd9yU .x66yu, .hd9yU .pLL0g",
          "cssText": ".hd9yU .x66yu, .hd9yU .pLL0g { color: var(--chrome-fg-secondary); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".pLL0g .x66yu, .pLL0g .pLL0g",
          "cssText": ".pLL0g .x66yu, .pLL0g .pLL0g { color: var(--content-fg-secondary); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".deHVW .x66yu, .cJ1ik .x66yu, .PCzZt .x66yu, .deHVW .pLL0g, .cJ1ik .pLL0g, .PCzZt .pLL0g",
          "cssText": ".deHVW .x66yu, .cJ1ik .x66yu, .PCzZt .x66yu, .deHVW .pLL0g, .cJ1ik .pLL0g, .PCzZt .pLL0g { font-size: 0.875rem; font-weight: 350; line-height: 1.25rem; font-family: var(--font-family-modern); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".L2HBn .x66yu, .n_fvx .x66yu, .L2HBn .pLL0g, .n_fvx .pLL0g",
          "cssText": ".L2HBn .x66yu, .n_fvx .x66yu, .L2HBn .pLL0g, .n_fvx .pLL0g { font-size: 1rem; font-weight: 350; line-height: 1.5rem; font-family: var(--font-family-modern); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".deHVW .x66yu a, .cJ1ik .x66yu a, .PCzZt .x66yu a, .deHVW .x66yu strong, .cJ1ik .x66yu strong, .PCzZt .x66yu strong",
          "cssText": ".deHVW .x66yu a, .cJ1ik .x66yu a, .PCzZt .x66yu a, .deHVW .x66yu strong, .cJ1ik .x66yu strong, .PCzZt .x66yu strong { font-size: 0.875rem; font-weight: 500; line-height: 1.25rem; font-family: var(--font-family-modern); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".L2HBn .x66yu a, .n_fvx .x66yu a, .L2HBn .x66yu strong, .n_fvx .x66yu strong",
          "cssText": ".L2HBn .x66yu a, .n_fvx .x66yu a, .L2HBn .x66yu strong, .n_fvx .x66yu strong { font-size: 1rem; font-weight: 500; line-height: 1.5rem; font-family: var(--font-family-modern); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".RIcm_",
          "cssText": ".RIcm_ { flex-direction: row; flex-grow: 0; flex-shrink: 0; align-items: center; column-gap: 4px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".y8wKa:empty, .eafbD:empty, .d7ZC6:empty, .beV_K:empty, .x66yu:empty, .Fuxs_:empty, .QOpFt:empty, .pLL0g:empty, .RIcm_:empty",
          "cssText": ".y8wKa:empty, .eafbD:empty, .d7ZC6:empty, .beV_K:empty, .x66yu:empty, .Fuxs_:empty, .QOpFt:empty, .pLL0g:empty, .RIcm_:empty { display: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".uM1xi",
          "cssText": ".uM1xi { margin: 15px 8px 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".uM1xi, .uM1xi > span",
          "cssText": ".uM1xi, .uM1xi > span { box-sizing: border-box; background: RGB(var(--deprecated-accent)); color: RGB(var(--navy)); border-radius: 3px; justify-content: center; align-items: center; text-decoration: none; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".uM1xi > span, .uM1xi > span > span",
          "cssText": ".uM1xi > span, .uM1xi > span > span { font-size: 1rem; font-weight: 700; line-height: 1.5; font-family: var(--font-family); padding: 6px 15px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".o6JAm",
          "cssText": ".o6JAm { z-index: 2; border-radius: 50%; width: 130px; height: 130px; padding: 25px; list-style: none; display: flex; position: absolute; transform: translate(-45%, -45%); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".o6JAm > *",
          "cssText": ".o6JAm > * { --rot: 0deg; width: 50px; height: 50px; margin: -25px; display: block; position: absolute; top: 50%; left: 50%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".o6JAm > :first-child",
          "cssText": ".o6JAm > :first-child { --rot: 70*1deg; transform: rotate(calc(var(--rot)*-1))translate(65px)rotate(calc(var(--rot)*-1*-1))scale(1); animation: 0.3s ease 0s 1 normal none running pkKyB; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframesRule",
          "selector": "",
          "cssText": "@keyframes pkKyB { \n  0% { transform: rotate(calc(var(--rot)*-1*1.5))translate(0px)rotate(calc(var(--rot)*-1*-1.5))scale(0); }\n  100% { transform: rotate(calc(var(--rot)*-1))translate(65px)rotate(calc(var(--rot)*-1*-1))scale(1); }\n}",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "0% { transform: rotate(calc(var(--rot)*-1*1.5))translate(0px)rotate(calc(var(--rot)*-1*-1.5))scale(0); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "100% { transform: rotate(calc(var(--rot)*-1))translate(65px)rotate(calc(var(--rot)*-1*-1))scale(1); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".o6JAm > :nth-child(2)",
          "cssText": ".o6JAm > :nth-child(2) { --rot: 121.429*1deg; transform: rotate(calc(var(--rot)*-1))translate(65px)rotate(calc(var(--rot)*-1*-1))scale(1); animation: 0.3s ease 0s 1 normal none running pkKyB; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".o6JAm > :nth-child(3)",
          "cssText": ".o6JAm > :nth-child(3) { --rot: 172.857*1deg; transform: rotate(calc(var(--rot)*-1))translate(65px)rotate(calc(var(--rot)*-1*-1))scale(1); animation: 0.3s ease 0s 1 normal none running pkKyB; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".o6JAm > :nth-child(4)",
          "cssText": ".o6JAm > :nth-child(4) { --rot: 224.286*1deg; transform: rotate(calc(var(--rot)*-1))translate(65px)rotate(calc(var(--rot)*-1*-1))scale(1); animation: 0.3s ease 0s 1 normal none running pkKyB; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".o6JAm > :nth-child(5)",
          "cssText": ".o6JAm > :nth-child(5) { --rot: 275.714*1deg; transform: rotate(calc(var(--rot)*-1))translate(65px)rotate(calc(var(--rot)*-1*-1))scale(1); animation: 0.3s ease 0s 1 normal none running pkKyB; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".o6JAm > :nth-child(6)",
          "cssText": ".o6JAm > :nth-child(6) { --rot: 327.143*1deg; transform: rotate(calc(var(--rot)*-1))translate(65px)rotate(calc(var(--rot)*-1*-1))scale(1); animation: 0.3s ease 0s 1 normal none running pkKyB; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".o6JAm > :nth-child(7)",
          "cssText": ".o6JAm > :nth-child(7) { --rot: 378.571*1deg; transform: rotate(calc(var(--rot)*-1))translate(65px)rotate(calc(var(--rot)*-1*-1))scale(1); animation: 0.3s ease 0s 1 normal none running pkKyB; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".o6JAm .LpPf2",
          "cssText": ".o6JAm .LpPf2 { border-radius: 50%; position: absolute; box-shadow: rgba(0, 0, 0, 0.5) 0px 0px 7px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".o6JAm .LpPf2:first-child > span",
          "cssText": ".o6JAm .LpPf2:first-child > span { box-shadow: 0px 0px 0px 2px RGB(var(--deprecated-accent)); border-radius: 50%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".o6JAm .LpPf2:hover:not(:last-child) > span, .o6JAm .LpPf2:focus:not(:last-child) > span",
          "cssText": ".o6JAm .LpPf2:hover:not(:last-child) > span, .o6JAm .LpPf2:focus:not(:last-child) > span { animation: 1s ease-in-out 0s infinite normal none running U6jnP; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframesRule",
          "selector": "",
          "cssText": "@keyframes U6jnP { \n  0% { transform: scale(1.1) rotate(0deg); }\n  30% { transform: scale(1.1) rotate(15deg); }\n  60% { transform: scale(1.1) rotate(-15deg); }\n  90% { transform: scale(1.1) rotate(0deg); }\n  100% { transform: scale(1.1) rotate(0deg); }\n}",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "0% { transform: scale(1.1) rotate(0deg); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "30% { transform: scale(1.1) rotate(15deg); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "60% { transform: scale(1.1) rotate(-15deg); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "90% { transform: scale(1.1) rotate(0deg); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "100% { transform: scale(1.1) rotate(0deg); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".o6JAm .LpPf2:last-child::after",
          "cssText": ".o6JAm .LpPf2:last-child::after { z-index: -1; content: \"\"; width: 50px; height: 50px; display: block; position: relative; transform: translateY(-50%); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".o6JAm .LpPf2 .ALkTz",
          "cssText": ".o6JAm .LpPf2 .ALkTz { background: RGB(var(--deprecated-accent)); border-radius: 50%; justify-content: center; align-items: center; width: 50px; height: 50px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".o6JAm .LpPf2 .ALkTz:hover, .o6JAm .LpPf2 .ALkTz:focus",
          "cssText": ".o6JAm .LpPf2 .ALkTz:hover, .o6JAm .LpPf2 .ALkTz:focus { background: RGB(var(--secondary-accent)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".o6JAm + a",
          "cssText": ".o6JAm + a { z-index: 1; position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".n8L1c",
          "cssText": ".n8L1c { transform-origin: center bottom; opacity: 0; animation: 0.8s ease-out 0s 1 normal none running cPD9v; position: absolute; top: -25px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframesRule",
          "selector": "",
          "cssText": "@keyframes cPD9v { \n  0% { opacity: 0; transform: scale(1); }\n  25% { opacity: 1; }\n  100% { opacity: 0; transform: scale3d(3, 3, 3); }\n}",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "0% { opacity: 0; transform: scale(1); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "25% { opacity: 1; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "100% { opacity: 0; transform: scale3d(3, 3, 3); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".xBp2v",
          "cssText": ".xBp2v { font-size: 0.875rem; font-weight: 400; line-height: 1.42857; font-family: var(--font-family); border-radius: 10px; padding: 30px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 540px) {\n  .xBp2v { width: 85vw; height: 100vw; }\n}",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".xBp2v",
          "cssText": ".xBp2v { width: 85vw; height: 100vw; }",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".xBp2v .r6wxb",
          "cssText": ".xBp2v .r6wxb { overflow-y: auto; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".zhKOj",
          "cssText": ".zhKOj { border: 1px solid rgba(var(--black),.25); border-collapse: separate; border-radius: 8px; width: 100%; margin: 20px 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".DN4md",
          "cssText": ".DN4md { color: rgba(var(--black),.65); padding: 10px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".UL7nR",
          "cssText": ".UL7nR { padding: 10px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Od7LS:hover",
          "cssText": ".Od7LS:hover { cursor: not-allowed; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".CsHnt",
          "cssText": ".CsHnt { font-size: 1rem; font-weight: 350; line-height: 1.5rem; font-family: var(--font-family-modern); background-color: var(--education-tint); color: var(--content-education); border-radius: 8px; padding: 12px 16px; display: block; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".v2JIl",
          "cssText": ".v2JIl { position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".qcYGf",
          "cssText": ".qcYGf { box-sizing: border-box; width: 100%; height: 60px; padding: 0px 16px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (min-width: 990px) {\n  .qcYGf { padding: 0px 10px; }\n}",
          "urls": [],
          "group": "(min-width: 990px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 990px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "990px",
                "990",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".qcYGf",
          "cssText": ".qcYGf { padding: 0px 10px; }",
          "urls": [],
          "group": "(min-width: 990px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 990px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "990px",
                "990",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Gdn85",
          "cssText": ".Gdn85 { flex: 1 1 0%; margin-right: 5px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".qcYGf, .Gdn85",
          "cssText": ".qcYGf, .Gdn85 { font-size: 1rem; font-weight: 700; line-height: 1.5; font-family: var(--font-family); cursor: pointer; justify-content: flex-start; align-items: center; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".qcYGf.asnZc, .Gdn85.asnZc",
          "cssText": ".qcYGf.asnZc, .Gdn85.asnZc { align-items: flex-start; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".qcYGf .yX3XS, .Gdn85 .yX3XS",
          "cssText": ".qcYGf .yX3XS, .Gdn85 .yX3XS { flex-direction: column; align-items: flex-start; margin-left: 10px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".qcYGf .pT6VO, .Gdn85 .pT6VO",
          "cssText": ".qcYGf .pT6VO, .Gdn85 .pT6VO { font-size: 0.78125rem; font-weight: 400; line-height: 1.52; font-family: var(--font-family); color: rgba(var(--black),.4); text-overflow: ellipsis; text-align: left; word-break: break-all; overflow: hidden; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSSupportsRule",
          "selector": "",
          "cssText": "@supports (display:-webkit-box) and (-webkit-line-clamp:1) {\n  .qcYGf .pT6VO, .Gdn85 .pT6VO { -webkit-line-clamp: 1; -webkit-box-orient: vertical; display: -webkit-box; }\n}",
          "urls": [],
          "group": "(display:-webkit-box) and (-webkit-line-clamp:1)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "(display:-webkit-box) and (-webkit-line-clamp:1)",
              "requiresEcho": true,
              "echoTokens": [
                "display",
                "-webkit-box",
                "-webkit-line-clamp",
                "1"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".qcYGf .pT6VO, .Gdn85 .pT6VO",
          "cssText": ".qcYGf .pT6VO, .Gdn85 .pT6VO { -webkit-line-clamp: 1; -webkit-box-orient: vertical; display: -webkit-box; }",
          "urls": [],
          "group": "(display:-webkit-box) and (-webkit-line-clamp:1)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "(display:-webkit-box) and (-webkit-line-clamp:1)",
              "requiresEcho": true,
              "echoTokens": [
                "display",
                "-webkit-box",
                "-webkit-line-clamp",
                "1"
              ]
            }
          ]
        },
        {
          "type": "CSSSupportsRule",
          "selector": "",
          "cssText": "@supports not ((display:-webkit-box) and (-webkit-line-clamp:1)) {\n  .qcYGf .pT6VO, .Gdn85 .pT6VO { white-space: nowrap; }\n}",
          "urls": [],
          "group": "not ((display:-webkit-box) and (-webkit-line-clamp:1))",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "not ((display:-webkit-box) and (-webkit-line-clamp:1))",
              "requiresEcho": true,
              "echoTokens": [
                "not",
                "display",
                "-webkit-box",
                "-webkit-line-clamp",
                "1"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".qcYGf .pT6VO, .Gdn85 .pT6VO",
          "cssText": ".qcYGf .pT6VO, .Gdn85 .pT6VO { white-space: nowrap; }",
          "urls": [],
          "group": "not ((display:-webkit-box) and (-webkit-line-clamp:1))",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "not ((display:-webkit-box) and (-webkit-line-clamp:1))",
              "requiresEcho": true,
              "echoTokens": [
                "not",
                "display",
                "-webkit-box",
                "-webkit-line-clamp",
                "1"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".qcYGf .nT5UJ, .qcYGf .cP0pN, .Gdn85 .nT5UJ, .Gdn85 .cP0pN",
          "cssText": ".qcYGf .nT5UJ, .qcYGf .cP0pN, .Gdn85 .nT5UJ, .Gdn85 .cP0pN { justify-content: flex-start; align-items: center; width: 22px; margin-right: 10px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".qcYGf .QgXdE, .Gdn85 .QgXdE",
          "cssText": ".qcYGf .QgXdE, .Gdn85 .QgXdE { text-overflow: ellipsis; white-space: nowrap; margin-right: 10px; overflow: hidden; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".qcYGf .kt8zB, .Gdn85 .kt8zB",
          "cssText": ".qcYGf .kt8zB, .Gdn85 .kt8zB { flex: 1 1 0%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".qcYGf .kt8zB.iGLok, .Gdn85 .kt8zB.iGLok",
          "cssText": ".qcYGf .kt8zB.iGLok, .Gdn85 .kt8zB.iGLok { font-size: 0.875rem; font-weight: 700; line-height: 1.42857; font-family: var(--font-family); margin-left: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".qcYGf .QgXdE, .qcYGf .kt8zB, .qcYGf .OPqLY, .Gdn85 .QgXdE, .Gdn85 .kt8zB, .Gdn85 .OPqLY",
          "cssText": ".qcYGf .QgXdE, .qcYGf .kt8zB, .qcYGf .OPqLY, .Gdn85 .QgXdE, .Gdn85 .kt8zB, .Gdn85 .OPqLY { color: rgba(var(--black),.65); text-align: left; white-space: nowrap; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".qcYGf .OPqLY, .Gdn85 .OPqLY",
          "cssText": ".qcYGf .OPqLY, .Gdn85 .OPqLY { font-size: 0.78125rem; font-weight: 400; line-height: 1.52; font-family: var(--font-family); margin-left: 20px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".qcYGf .OPqLY > span, .Gdn85 .OPqLY > span",
          "cssText": ".qcYGf .OPqLY > span, .Gdn85 .OPqLY > span { background-color: rgba(var(--black),.07); border-radius: 3px; padding: 1px 3px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".M9Ov7",
          "cssText": ".M9Ov7 { height: 60px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".M9Ov7 .crS1E",
          "cssText": ".M9Ov7 .crS1E { padding-top: 0px; padding-bottom: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".YqkCK",
          "cssText": ".YqkCK { flex-shrink: 0; margin-left: auto; transform: rotate(0deg); transition: transform 0.2s !important; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".n1exf .YqkCK",
          "cssText": ".n1exf .YqkCK { transform: rotate(180deg); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".CGCzZ:hover",
          "cssText": ".CGCzZ:hover { cursor: not-allowed; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".JloGo",
          "cssText": ".JloGo { box-sizing: border-box; background-color: RGB(var(--white)); max-width: 90%; max-height: 90%; color: RGB(var(--black)); border-radius: 6px; flex-direction: column; margin: auto; padding: 4px 0px; display: flex; position: relative; overflow-x: hidden; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".DP33z",
          "cssText": ".DP33z { justify-content: center; align-items: center; width: 36px; height: 36px; transition: transform 0.25s cubic-bezier(0.68, -0.55, 0.27, 1.55); display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".AYiEs .DP33z",
          "cssText": ".AYiEs .DP33z { transform: rotate(90deg); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Ohe4v",
          "cssText": ".Ohe4v { width: 100%; overflow-y: auto; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".jOW7m",
          "cssText": ".jOW7m { box-sizing: border-box; background: RGB(var(--white)); cursor: pointer; align-items: center; width: 100%; text-decoration: none; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".jOW7m:hover",
          "cssText": ".jOW7m:hover { background: RGB(var(--secondary-accent)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".jOW7m.gbd0F",
          "cssText": ".jOW7m.gbd0F { width: auto; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".jOW7m.IQS1M",
          "cssText": ".jOW7m.IQS1M { border-bottom: 1px rgba(var(--black),.07)solid; text-align: left; padding: 6px 10px 8px 6px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".jOW7m:last-child",
          "cssText": ".jOW7m:last-child { border: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ram4w",
          "cssText": ".ram4w { justify-content: space-between; align-items: center; width: 100%; padding: 10px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ram4w > svg",
          "cssText": ".ram4w > svg { margin-left: 5px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ram4w > svg use",
          "cssText": ".ram4w > svg use { --icon-color-primary: RGB(var(--deprecated-accent)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".lAM6N",
          "cssText": ".lAM6N { font-size: 1.125rem; font-weight: 700; line-height: 1.33333; font-family: var(--font-family); border-bottom: 1px rgba(var(--black),.25)solid; justify-content: center; align-items: center; height: 40px; padding: 5px 0px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".tc6fQ:hover, .yDfZA:hover",
          "cssText": ".tc6fQ:hover, .yDfZA:hover { cursor: not-allowed; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".gqiH6",
          "cssText": ".gqiH6 { background-color: var(--overlay-tint-strong); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".jQvHi",
          "cssText": ".jQvHi { z-index: 101; background-color: var(--modal); width: auto; height: 100%; color: var(--content-fg); border-radius: 16px 16px 0px 0px; flex-direction: column; display: flex; position: fixed; inset: 0px; box-shadow: rgba(0, 0, 0, 0.1) 0px -8px 20px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".gBZcD",
          "cssText": ".gBZcD { box-sizing: border-box; flex-direction: column; width: 100%; max-height: 100%; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".gBZcD .dAws5",
          "cssText": ".gBZcD .dAws5 { touch-action: none; flex-shrink: 0; height: 34px; position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".gBZcD .dAws5::before",
          "cssText": ".gBZcD .dAws5::before { background-color: var(--content-tint-heavy); content: \"\"; border-radius: 9999px; width: 45px; height: 5px; position: absolute; top: 5px; left: 50%; transform: translate(-50%); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".jql34",
          "cssText": ".jql34 { box-sizing: border-box; height: 100%; overflow-y: scroll; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".jql34.U1HEu",
          "cssText": ".jql34.U1HEu { padding-block-end: 34px; width: 100%; padding-bottom: 34px; padding-left: 16px; padding-right: 16px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".jql34.U1HEu.tVCa7",
          "cssText": ".jql34.U1HEu.tVCa7 { padding-block-end: 0px; padding-bottom: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".sfdJR",
          "cssText": ".sfdJR { box-sizing: border-box; width: 100%; padding: 20px 20px 34px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".tOKgq",
          "cssText": ".tOKgq { font-size: 0.875rem; font-weight: 700; line-height: 1.42857; font-family: var(--font-family); color: rgba(var(--black),.65); margin-top: 25px; padding-bottom: 0px; display: block; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".tOKgq .x23xO",
          "cssText": ".tOKgq .x23xO { min-width: 150px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".tOKgq .m5KTc",
          "cssText": ".tOKgq .m5KTc { margin: 0 var(--post-padding); justify-content: space-between; align-items: center; padding: 3px 0px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".tOKgq .m5KTc.VNASy",
          "cssText": ".tOKgq .m5KTc.VNASy { justify-content: flex-end; height: 36px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".tOKgq .m5KTc.y49Zv",
          "cssText": ".tOKgq .m5KTc.y49Zv { padding-bottom: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (min-width: 990px) {\n  .tOKgq .m5KTc { padding: 12px 0px; }\n  .tOKgq .m5KTc.y49Zv { padding-bottom: 8px; }\n}",
          "urls": [],
          "group": "(min-width: 990px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 990px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "990px",
                "990",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".tOKgq .m5KTc",
          "cssText": ".tOKgq .m5KTc { padding: 12px 0px; }",
          "urls": [],
          "group": "(min-width: 990px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 990px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "990px",
                "990",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".tOKgq .m5KTc.y49Zv",
          "cssText": ".tOKgq .m5KTc.y49Zv { padding-bottom: 8px; }",
          "urls": [],
          "group": "(min-width: 990px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 990px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "990px",
                "990",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media not (min-width: 990px) {\n  .tOKgq .m5KTc { min-height: 45px; }\n}",
          "urls": [],
          "group": "not (min-width: 990px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "not (min-width: 990px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "990px",
                "990",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".tOKgq .m5KTc",
          "cssText": ".tOKgq .m5KTc { min-height: 45px; }",
          "urls": [],
          "group": "not (min-width: 990px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "not (min-width: 990px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "990px",
                "990",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 540px) {\n  .tOKgq .m5KTc { min-height: 45px; }\n  .tOKgq .m5KTc.VNASy { height: 30px; }\n}",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".tOKgq .m5KTc",
          "cssText": ".tOKgq .m5KTc { min-height: 45px; }",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".tOKgq .m5KTc.VNASy",
          "cssText": ".tOKgq .m5KTc.VNASy { height: 30px; }",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".tOKgq .m5KTc:not(:first-of-type)",
          "cssText": ".tOKgq .m5KTc:not(:first-of-type) { border-top: 1px solid rgba(var(--black),.13); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".tOKgq .m5KTc:not(:first-of-type).y49Zv",
          "cssText": ".tOKgq .m5KTc:not(:first-of-type).y49Zv { border-top: none; padding-top: 0px; padding-bottom: 3px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (min-width: 990px) {\n  .tOKgq .m5KTc:not(:first-of-type).y49Zv { padding-top: 8px; padding-bottom: 12px; }\n}",
          "urls": [],
          "group": "(min-width: 990px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 990px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "990px",
                "990",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".tOKgq .m5KTc:not(:first-of-type).y49Zv",
          "cssText": ".tOKgq .m5KTc:not(:first-of-type).y49Zv { padding-top: 8px; padding-bottom: 12px; }",
          "urls": [],
          "group": "(min-width: 990px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 990px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "990px",
                "990",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".tOKgq .gstmW",
          "cssText": ".tOKgq .gstmW { padding: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".tOKgq .MCavR",
          "cssText": ".tOKgq .MCavR { border-top: 0px; justify-content: flex-end; align-items: center; margin: 0px; padding: 0px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".tOKgq .MCavR .sfGru.HhLx2",
          "cssText": ".tOKgq .MCavR .sfGru.HhLx2 { background-color: var(--brand-purple-tint); border-radius: 9999px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".tOKgq .MCavR .sfGru.HhLx2:not(:first-of-type)",
          "cssText": ".tOKgq .MCavR .sfGru.HhLx2:not(:first-of-type) { margin-left: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (min-width: 990px) {\n  .tOKgq .MCavR .sfGru.HhLx2 { padding: 8px; }\n}",
          "urls": [],
          "group": "(min-width: 990px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 990px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "990px",
                "990",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".tOKgq .MCavR .sfGru.HhLx2",
          "cssText": ".tOKgq .MCavR .sfGru.HhLx2 { padding: 8px; }",
          "urls": [],
          "group": "(min-width: 990px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 990px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "990px",
                "990",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".tOKgq .MCavR .sfGru.rv6SS",
          "cssText": ".tOKgq .MCavR .sfGru.rv6SS { background-color: var(--brand-blue-tint); border-radius: 9999px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".tOKgq .MCavR .sfGru.rv6SS:not(:first-of-type)",
          "cssText": ".tOKgq .MCavR .sfGru.rv6SS:not(:first-of-type) { margin-left: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (min-width: 990px) {\n  .tOKgq .MCavR .sfGru.rv6SS { padding: 8px; }\n}",
          "urls": [],
          "group": "(min-width: 990px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 990px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "990px",
                "990",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".tOKgq .MCavR .sfGru.rv6SS",
          "cssText": ".tOKgq .MCavR .sfGru.rv6SS { padding: 8px; }",
          "urls": [],
          "group": "(min-width: 990px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 990px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "990px",
                "990",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".tOKgq .MCavR .sfGru.Cuwye",
          "cssText": ".tOKgq .MCavR .sfGru.Cuwye { background-color: var(--brand-green-tint); border-radius: 9999px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".tOKgq .MCavR .sfGru.Cuwye:not(:first-of-type)",
          "cssText": ".tOKgq .MCavR .sfGru.Cuwye:not(:first-of-type) { margin-left: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (min-width: 990px) {\n  .tOKgq .MCavR .sfGru.Cuwye { padding: 8px; }\n}",
          "urls": [],
          "group": "(min-width: 990px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 990px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "990px",
                "990",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".tOKgq .MCavR .sfGru.Cuwye",
          "cssText": ".tOKgq .MCavR .sfGru.Cuwye { padding: 8px; }",
          "urls": [],
          "group": "(min-width: 990px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 990px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "990px",
                "990",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".tOKgq .MCavR .sfGru.z6CkC",
          "cssText": ".tOKgq .MCavR .sfGru.z6CkC { background-color: var(--brand-red-tint); border-radius: 9999px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".tOKgq .MCavR .sfGru.z6CkC:not(:first-of-type)",
          "cssText": ".tOKgq .MCavR .sfGru.z6CkC:not(:first-of-type) { margin-left: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (min-width: 990px) {\n  .tOKgq .MCavR .sfGru.z6CkC { padding: 8px; }\n  .tOKgq .MCavR .sfGru:not(:first-of-type) { margin-left: 20px; }\n}",
          "urls": [],
          "group": "(min-width: 990px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 990px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "990px",
                "990",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".tOKgq .MCavR .sfGru.z6CkC",
          "cssText": ".tOKgq .MCavR .sfGru.z6CkC { padding: 8px; }",
          "urls": [],
          "group": "(min-width: 990px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 990px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "990px",
                "990",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".tOKgq .MCavR .sfGru:not(:first-of-type)",
          "cssText": ".tOKgq .MCavR .sfGru:not(:first-of-type) { margin-left: 20px; }",
          "urls": [],
          "group": "(min-width: 990px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 990px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "990px",
                "990",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".tOKgq .MCavR .Ed7CO",
          "cssText": ".tOKgq .MCavR .Ed7CO { width: auto; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 540px) {\n  .tOKgq .MCavR .t21M4 { margin-left: 10px; }\n}",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".tOKgq .MCavR .t21M4",
          "cssText": ".tOKgq .MCavR .t21M4 { margin-left: 10px; }",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".gstmW",
          "cssText": ".gstmW { min-width: 0px; height: 36px; padding-right: var(--post-padding); padding-left: var(--post-padding); justify-content: space-between; margin-right: 5px; display: flex; position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 540px) {\n  .gstmW { height: 30px; }\n}",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".gstmW",
          "cssText": ".gstmW { height: 30px; }",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".rlv6m",
          "cssText": ".rlv6m { font-size: 1rem; font-weight: 700; line-height: 1.5; font-family: var(--font-family); text-align: left; cursor: pointer; max-width: 100%; display: inline-block; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".rlv6m:focus, .rlv6m:focus > .RHkx9",
          "cssText": ".rlv6m:focus, .rlv6m:focus > .RHkx9 { outline: none; text-decoration: underline; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".rlv6m .zrO3e",
          "cssText": ".rlv6m .zrO3e { align-items: center; height: 36px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 540px) {\n  .rlv6m .zrO3e { height: 30px; }\n}",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".rlv6m .zrO3e",
          "cssText": ".rlv6m .zrO3e { height: 30px; }",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".rlv6m .ePsyd",
          "cssText": ".rlv6m .ePsyd { font-size: 1rem; font-weight: 700; line-height: 1.5; font-family: var(--font-family); background-color: rgba(var(--black),.15); height: 36px; color: rgba(var(--black),.65); border-radius: 18px; align-items: center; padding: 0px 10px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".rlv6m .ePsyd > svg",
          "cssText": ".rlv6m .ePsyd > svg { margin-right: 8px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 540px) {\n  .rlv6m .ePsyd { border-radius: 15px; height: 30px; }\n  .rlv6m .ePsyd > span { display: none; }\n  .rlv6m .ePsyd > svg { width: 10px; height: 10px; margin-right: 0px; }\n}",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".rlv6m .ePsyd",
          "cssText": ".rlv6m .ePsyd { border-radius: 15px; height: 30px; }",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".rlv6m .ePsyd > span",
          "cssText": ".rlv6m .ePsyd > span { display: none; }",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".rlv6m .ePsyd > svg",
          "cssText": ".rlv6m .ePsyd > svg { width: 10px; height: 10px; margin-right: 0px; }",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".MCavR",
          "cssText": ".MCavR { margin: 12px var(--post-padding)0 var(--post-padding); border-top: 1px solid rgba(var(--black),.13); justify-content: space-between; align-items: center; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (min-width: 990px) {\n  .MCavR { padding: 12px; }\n}",
          "urls": [],
          "group": "(min-width: 990px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 990px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "990px",
                "990",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".MCavR",
          "cssText": ".MCavR { padding: 12px; }",
          "urls": [],
          "group": "(min-width: 990px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 990px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "990px",
                "990",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".sfGru",
          "cssText": ".sfGru { font-size: 1rem; font-weight: 700; font-family: var(--font-family); margin: 0px; line-height: 1; position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".sfGru svg",
          "cssText": ".sfGru svg { transition: fill 0.25s; transform: translateZ(0px); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".sfGru button, .sfGru button > span",
          "cssText": ".sfGru button, .sfGru button > span { display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 540px) {\n  .sfGru { justify-content: center; align-items: center; width: 48px; height: 48px; display: flex; }\n  .sfGru button, .sfGru a { justify-content: center; align-items: center; width: 100%; height: 100%; display: flex; }\n}",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".sfGru",
          "cssText": ".sfGru { justify-content: center; align-items: center; width: 48px; height: 48px; display: flex; }",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".sfGru button, .sfGru a",
          "cssText": ".sfGru button, .sfGru a { justify-content: center; align-items: center; width: 100%; height: 100%; display: flex; }",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media not (min-width: 990px) {\n  .sfGru { justify-content: center; align-items: center; width: 48px; height: 48px; display: flex; }\n  .sfGru button, .sfGru a { justify-content: center; align-items: center; width: 100%; height: 100%; display: flex; }\n}",
          "urls": [],
          "group": "not (min-width: 990px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "not (min-width: 990px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "990px",
                "990",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".sfGru",
          "cssText": ".sfGru { justify-content: center; align-items: center; width: 48px; height: 48px; display: flex; }",
          "urls": [],
          "group": "not (min-width: 990px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "not (min-width: 990px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "990px",
                "990",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".sfGru button, .sfGru a",
          "cssText": ".sfGru button, .sfGru a { justify-content: center; align-items: center; width: 100%; height: 100%; display: flex; }",
          "urls": [],
          "group": "not (min-width: 990px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "not (min-width: 990px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "990px",
                "990",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".r3vIz > :-webkit-any(div, span):nth-child(2)",
          "cssText": ".r3vIz > :-webkit-any(div, span):nth-child(2) { align-items: center; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".r3vIz > :is(div, span):nth-child(2)",
          "cssText": ".r3vIz > :is(div, span):nth-child(2) { align-items: center; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".r3vIz > :-webkit-any(div, span):nth-child(2)::before",
          "cssText": ".r3vIz > :-webkit-any(div, span):nth-child(2)::before { background-color: rgba(var(--black),.65); content: \"\"; border-radius: 50%; width: 7px; height: 7px; margin: 0px 10px; display: inline-block; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".r3vIz > :is(div, span):nth-child(2)::before",
          "cssText": ".r3vIz > :is(div, span):nth-child(2)::before { background-color: rgba(var(--black),.65); content: \"\"; border-radius: 50%; width: 7px; height: 7px; margin: 0px 10px; display: inline-block; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".yTb5J",
          "cssText": ".yTb5J { opacity: 0; border-top: 1px solid transparent; width: 100%; max-height: 0px; margin-top: 0px; transition: opacity 0.3s ease-in-out; overflow: hidden; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".yTb5J.DUvqr",
          "cssText": ".yTb5J.DUvqr { border-top-color: rgba(var(--black),.13); opacity: 1; max-height: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".SAyo6",
          "cssText": ".SAyo6 { padding: 0 var(--post-padding)15px var(--post-padding); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 540px) {\n  .rW8sh { display: none; }\n}",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".rW8sh",
          "cssText": ".rW8sh { display: none; }",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ditK9",
          "cssText": ".ditK9 { box-sizing: border-box; grid-template-rows: repeat(2, 1fr); grid-template-columns: repeat(4, 1fr); gap: 20px 8px; width: 100%; padding: 12px 16px; display: grid; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 540px) {\n  .ditK9 { column-gap: 16px; padding-top: 20px; padding-bottom: 20px; display: flex; overflow-x: auto; }\n}",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ditK9",
          "cssText": ".ditK9 { column-gap: 16px; padding-top: 20px; padding-bottom: 20px; display: flex; overflow-x: auto; }",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".EAa3l",
          "cssText": ".EAa3l { font-size: 0.75rem; font-weight: 500; line-height: 1.125rem; font-family: var(--font-family-modern); max-width: 76px; color: var(--content-fg-secondary); flex-direction: column; align-items: center; gap: 4px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 540px) {\n  .EAa3l { flex-shrink: 0; max-width: 60px; }\n}",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".EAa3l",
          "cssText": ".EAa3l { flex-shrink: 0; max-width: 60px; }",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".viO4l",
          "cssText": ".viO4l { text-overflow: ellipsis; text-align: center; overflow: hidden; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSSupportsRule",
          "selector": "",
          "cssText": "@supports (display:-webkit-box) and (-webkit-line-clamp:2) {\n  .viO4l { -webkit-line-clamp: 2; -webkit-box-orient: vertical; display: -webkit-box; }\n}",
          "urls": [],
          "group": "(display:-webkit-box) and (-webkit-line-clamp:2)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "(display:-webkit-box) and (-webkit-line-clamp:2)",
              "requiresEcho": true,
              "echoTokens": [
                "display",
                "-webkit-box",
                "-webkit-line-clamp",
                "2"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".viO4l",
          "cssText": ".viO4l { -webkit-line-clamp: 2; -webkit-box-orient: vertical; display: -webkit-box; }",
          "urls": [],
          "group": "(display:-webkit-box) and (-webkit-line-clamp:2)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "(display:-webkit-box) and (-webkit-line-clamp:2)",
              "requiresEcho": true,
              "echoTokens": [
                "display",
                "-webkit-box",
                "-webkit-line-clamp",
                "2"
              ]
            }
          ]
        },
        {
          "type": "CSSSupportsRule",
          "selector": "",
          "cssText": "@supports not ((display:-webkit-box) and (-webkit-line-clamp:2)) {\n  .viO4l { white-space: nowrap; }\n}",
          "urls": [],
          "group": "not ((display:-webkit-box) and (-webkit-line-clamp:2))",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "not ((display:-webkit-box) and (-webkit-line-clamp:2))",
              "requiresEcho": true,
              "echoTokens": [
                "not",
                "display",
                "-webkit-box",
                "-webkit-line-clamp",
                "2"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".viO4l",
          "cssText": ".viO4l { white-space: nowrap; }",
          "urls": [],
          "group": "not ((display:-webkit-box) and (-webkit-line-clamp:2))",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "not ((display:-webkit-box) and (-webkit-line-clamp:2))",
              "requiresEcho": true,
              "echoTokens": [
                "not",
                "display",
                "-webkit-box",
                "-webkit-line-clamp",
                "2"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".q0rLr",
          "cssText": ".q0rLr { color: var(--content-success); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".palette--darkMode .zJXDw, .palette--lowContrastClassic .zJXDw, .palette--cybernetic .zJXDw, .palette--vampire .zJXDw, .palette--pumpkin .zJXDw, .palette--gothRave .zJXDw",
          "cssText": ".palette--darkMode .zJXDw, .palette--lowContrastClassic .zJXDw, .palette--cybernetic .zJXDw, .palette--vampire .zJXDw, .palette--pumpkin .zJXDw, .palette--gothRave .zJXDw { color: rgb(255, 255, 255); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".palette--trueBlue .zJXDw, .palette--cement .zJXDw, .palette--canary .zJXDw, .palette--ghost .zJXDw, .palette--snowBright .zJXDw, .palette--pride .zJXDw",
          "cssText": ".palette--trueBlue .zJXDw, .palette--cement .zJXDw, .palette--canary .zJXDw, .palette--ghost .zJXDw, .palette--snowBright .zJXDw, .palette--pride .zJXDw { color: rgb(0, 0, 0); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".yYVJI",
          "cssText": ".yYVJI { text-decoration: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ctBr6",
          "cssText": ".ctBr6 { font-size: 1rem; font-weight: 350; line-height: 1.5rem; font-family: var(--font-family-modern); border: 1px solid var(--modal-border); background-color: var(--modal); border-radius: 8px; outline: none; padding: 8px; box-shadow: rgba(0, 0, 0, 0.05) 0px 4px 16px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ctBr6.miQwI",
          "cssText": ".ctBr6.miQwI { z-index: 102; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".sl53I",
          "cssText": ".sl53I { color: var(--content-fg); cursor: pointer; border-radius: 8px; outline: none; flex-direction: row; justify-content: space-between; align-items: center; column-gap: 4px; padding: 8px; text-decoration: none; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".sl53I .JQjRf",
          "cssText": ".sl53I .JQjRf { flex-direction: row; flex-grow: 1; justify-content: flex-start; align-items: center; gap: 6px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".sl53I .JQjRf.tmNHg",
          "cssText": ".sl53I .JQjRf.tmNHg { flex-grow: 0; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".sl53I svg",
          "cssText": ".sl53I svg { display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".sl53I .LMFIJ",
          "cssText": ".sl53I .LMFIJ { color: var(--content-fg-secondary); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".sl53I .yjIrY",
          "cssText": ".sl53I .yjIrY { padding-inline-start: 4px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".sl53I .yjIrY:not(:-webkit-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)))",
          "cssText": ".sl53I .yjIrY:not(:-webkit-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi))) { padding-left: 4px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".sl53I .yjIrY:not(:is(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)))",
          "cssText": ".sl53I .yjIrY:not(:is(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi))) { padding-left: 4px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".sl53I .yjIrY:-webkit-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi))",
          "cssText": ".sl53I .yjIrY:-webkit-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)) { padding-right: 4px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".sl53I .yjIrY:is(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi))",
          "cssText": ".sl53I .yjIrY:is(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)) { padding-right: 4px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".sl53I .OkOxl",
          "cssText": ".sl53I .OkOxl { color: var(--accent); flex-grow: 0; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".sl53I .SVi7e",
          "cssText": ".sl53I .SVi7e { box-sizing: border-box; border: 1px solid var(--content-tint-strong); min-width: 20px; height: 20px; font-size: 0.75rem; font-weight: 500; line-height: 1.125rem; font-family: var(--font-family-modern); color: var(--content-fg-secondary); text-align: center; border-radius: 4px; padding-left: 4px; padding-right: 4px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".sl53I:hover",
          "cssText": ".sl53I:hover { background-color: var(--content-tint); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".sl53I:hover .LMFIJ",
          "cssText": ".sl53I:hover .LMFIJ { color: var(--content-fg); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".sl53I:active, .sl53I[data-active-item]",
          "cssText": ".sl53I:active, .sl53I[data-active-item] { background-color: var(--content-tint-strong); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".sl53I:active .LMFIJ, .sl53I[data-active-item] .LMFIJ",
          "cssText": ".sl53I:active .LMFIJ, .sl53I[data-active-item] .LMFIJ { color: var(--content-fg); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".sl53I[data-focus-visible]",
          "cssText": ".sl53I[data-focus-visible] { outline-color: var(--accent); outline-offset: -2px; outline-width: 2px; outline-style: solid; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".sl53I:focus-visible",
          "cssText": ".sl53I:focus-visible { outline-color: var(--accent); outline-offset: -2px; outline-width: 2px; outline-style: solid; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".sl53I.J5P7p, .sl53I.J5P7p .LMFIJ",
          "cssText": ".sl53I.J5P7p, .sl53I.J5P7p .LMFIJ { color: var(--danger); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".sl53I.J5P7p:hover",
          "cssText": ".sl53I.J5P7p:hover { background-color: var(--danger-tint); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".sl53I.J5P7p:active",
          "cssText": ".sl53I.J5P7p:active { background-color: var(--danger-tint-strong); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".sl53I.J5P7p[data-focus-visible]",
          "cssText": ".sl53I.J5P7p[data-focus-visible] { outline-color: var(--danger); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".sl53I.J5P7p:focus-visible",
          "cssText": ".sl53I.J5P7p:focus-visible { outline-color: var(--danger); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".zm6Y3",
          "cssText": ".zm6Y3 { background-color: var(--content-tint); border: none; height: 1px; margin: 8px -8px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[role=\"dialog\"] .sl53I",
          "cssText": "[role=\"dialog\"] .sl53I { padding-inline: 12px 16px; gap: 20px; padding-top: 12px; padding-bottom: 12px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[role=\"dialog\"] .sl53I:not(:-webkit-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)))",
          "cssText": "[role=\"dialog\"] .sl53I:not(:-webkit-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi))) { padding-left: 12px; padding-right: 16px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[role=\"dialog\"] .sl53I:not(:is(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)))",
          "cssText": "[role=\"dialog\"] .sl53I:not(:is(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi))) { padding-left: 12px; padding-right: 16px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[role=\"dialog\"] .sl53I:-webkit-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi))",
          "cssText": "[role=\"dialog\"] .sl53I:-webkit-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)) { padding-left: 16px; padding-right: 12px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[role=\"dialog\"] .sl53I:is(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi))",
          "cssText": "[role=\"dialog\"] .sl53I:is(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)) { padding-left: 16px; padding-right: 12px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[role=\"dialog\"] .sl53I .JQjRf",
          "cssText": "[role=\"dialog\"] .sl53I .JQjRf { gap: 20px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[role=\"dialog\"] .sl53I .yjIrY",
          "cssText": "[role=\"dialog\"] .sl53I .yjIrY { padding-left: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "[role=\"dialog\"] .zm6Y3",
          "cssText": "[role=\"dialog\"] .zm6Y3 { display: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".fLccs",
          "cssText": ".fLccs { flex-flow: wrap; flex-shrink: 100000; justify-content: space-between; align-items: center; min-width: 24px; text-decoration: none; display: flex; position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".fLccs:focus",
          "cssText": ".fLccs:focus { outline: rgb(0, 184, 255) auto; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media not (min-width: 990px) {\n  .fLccs.b76BB { visibility: hidden; }\n}",
          "urls": [],
          "group": "not (min-width: 990px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "not (min-width: 990px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "990px",
                "990",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".fLccs.b76BB",
          "cssText": ".fLccs.b76BB { visibility: hidden; }",
          "urls": [],
          "group": "not (min-width: 990px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "not (min-width: 990px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "990px",
                "990",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 540px) {\n  .fLccs.b76BB { visibility: hidden; }\n}",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".fLccs.b76BB",
          "cssText": ".fLccs.b76BB { visibility: hidden; }",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".zU1s3",
          "cssText": ".zU1s3 { flex-shrink: 0; width: 24px; height: 100%; margin-right: 10px; position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 350px) {\n  .zU1s3 { visibility: hidden; }\n}",
          "urls": [],
          "group": "(max-width: 350px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 350px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "350px",
                "350",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".zU1s3",
          "cssText": ".zU1s3 { visibility: hidden; }",
          "urls": [],
          "group": "(max-width: 350px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 350px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "350px",
                "350",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".zU1s3 svg",
          "cssText": ".zU1s3 svg { margin: auto; display: block; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".LVy2A, .m544j, .XuRmK",
          "cssText": ".LVy2A, .m544j, .XuRmK { will-change: transform; justify-content: center; align-items: center; display: flex; position: absolute; inset: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".XuRmK",
          "cssText": ".XuRmK { right: unset; left: 8px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".UGqjE",
          "cssText": ".UGqjE { font-size: 0.78125rem; font-weight: 400; line-height: 1.52; font-family: var(--font-family); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".UGqjE:focus",
          "cssText": ".UGqjE:focus { outline: rgb(0, 184, 255) auto; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".lEZQk",
          "cssText": ".lEZQk { border: 1px solid; border-radius: 16px; align-self: center; margin-left: auto; margin-right: 16px; padding: 4px 16px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".IBqNg",
          "cssText": ".IBqNg { font-size: 0.78125rem; font-weight: 400; line-height: 1.52; font-family: var(--font-family); text-overflow: ellipsis; overflow: hidden; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSSupportsRule",
          "selector": "",
          "cssText": "@supports (display:-webkit-box) and (-webkit-line-clamp:1) {\n  .IBqNg { -webkit-line-clamp: 1; -webkit-box-orient: vertical; display: -webkit-box; }\n}",
          "urls": [],
          "group": "(display:-webkit-box) and (-webkit-line-clamp:1)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "(display:-webkit-box) and (-webkit-line-clamp:1)",
              "requiresEcho": true,
              "echoTokens": [
                "display",
                "-webkit-box",
                "-webkit-line-clamp",
                "1"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".IBqNg",
          "cssText": ".IBqNg { -webkit-line-clamp: 1; -webkit-box-orient: vertical; display: -webkit-box; }",
          "urls": [],
          "group": "(display:-webkit-box) and (-webkit-line-clamp:1)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "(display:-webkit-box) and (-webkit-line-clamp:1)",
              "requiresEcho": true,
              "echoTokens": [
                "display",
                "-webkit-box",
                "-webkit-line-clamp",
                "1"
              ]
            }
          ]
        },
        {
          "type": "CSSSupportsRule",
          "selector": "",
          "cssText": "@supports not ((display:-webkit-box) and (-webkit-line-clamp:1)) {\n  .IBqNg { white-space: nowrap; }\n}",
          "urls": [],
          "group": "not ((display:-webkit-box) and (-webkit-line-clamp:1))",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "not ((display:-webkit-box) and (-webkit-line-clamp:1))",
              "requiresEcho": true,
              "echoTokens": [
                "not",
                "display",
                "-webkit-box",
                "-webkit-line-clamp",
                "1"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".IBqNg",
          "cssText": ".IBqNg { white-space: nowrap; }",
          "urls": [],
          "group": "not ((display:-webkit-box) and (-webkit-line-clamp:1))",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "not ((display:-webkit-box) and (-webkit-line-clamp:1))",
              "requiresEcho": true,
              "echoTokens": [
                "not",
                "display",
                "-webkit-box",
                "-webkit-line-clamp",
                "1"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".uapk7",
          "cssText": ".uapk7 { z-index: 103; max-height: min(var(--popover-available-height,50vh),50vh); overscroll-behavior: contain; scrollbar-gutter: stable; overflow: auto; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".WhKI3",
          "cssText": ".WhKI3 { text-overflow: ellipsis; max-width: 30ch; display: inline-block; overflow: hidden; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".WZwzL",
          "cssText": ".WZwzL { flex-direction: column; height: 100%; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".nLR3K",
          "cssText": ".nLR3K { box-sizing: border-box; padding: 16px 16px 8px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ae2UE",
          "cssText": ".ae2UE { flex-grow: 1; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".nmv7n",
          "cssText": ".nmv7n { box-sizing: border-box; flex-direction: row; justify-content: center; align-items: center; height: 100%; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ljzjs",
          "cssText": ".ljzjs { overflow: auto; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".BwN7_",
          "cssText": ".BwN7_ { cursor: pointer; outline: none; padding: 8px 16px; position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".BwN7_[data-focus-visible]::after",
          "cssText": ".BwN7_[data-focus-visible]::after { border: solid 2px var(--accent); content: \"\"; pointer-events: none; border-radius: 8px; position: absolute; inset: 0px 8px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".VpymI",
          "cssText": ".VpymI { box-sizing: border-box; border-top: 1px solid var(--content-tint); flex-direction: column; gap: 16px; width: 100%; min-height: 152px; padding: 12px 16px; display: flex; box-shadow: rgba(0, 0, 0, 0.2) 0px 12px 32px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ZZVdr",
          "cssText": ".ZZVdr { font-size: 0.875rem; font-weight: 350; line-height: 1.25rem; font-family: var(--font-family-modern); color: var(--content-fg-secondary); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".riFIX",
          "cssText": ".riFIX { flex-flow: row; flex: 1 1 0%; gap: 16px; margin: 0px; padding: 0px; display: flex; overflow-y: auto; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".pqaan",
          "cssText": ".pqaan { font-size: 0.875rem; font-weight: 500; line-height: 1.25rem; font-family: var(--font-family-modern); box-sizing: border-box; color: var(--content-fg); flex-direction: row; align-items: center; margin: 0px; padding: 0px; list-style: none; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".iTy7z",
          "cssText": ".iTy7z { flex-direction: row; align-items: center; gap: 12px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".p_ORk",
          "cssText": ".p_ORk { flex-direction: row; flex: 0 1 0%; gap: 8px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".rhjxY",
          "cssText": ".rhjxY { flex: 1 1 0%; position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".rhjxY input",
          "cssText": ".rhjxY input { padding-right: 40px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".rhjxY > :last-child",
          "cssText": ".rhjxY > :last-child { position: absolute; bottom: 4px; right: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".VVNrk",
          "cssText": ".VVNrk { width: 350px; height: 504px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".VVNrk .HK_Vz",
          "cssText": ".VVNrk .HK_Vz { height: 100%; position: relative; overflow: hidden; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".VVNrk .XxJ_2",
          "cssText": ".VVNrk .XxJ_2 { transition: transform 0.3s; transform: translateY(0px); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".VVNrk .XxJ_2.QlFlg",
          "cssText": ".VVNrk .XxJ_2.QlFlg { transform: translateY(-100%); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".VVNrk .uhxnt",
          "cssText": ".VVNrk .uhxnt { width: 100%; height: 252px; transition: top 0.3s; position: absolute; top: 185px; left: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".VVNrk .uhxnt.NLkfy",
          "cssText": ".VVNrk .uhxnt.NLkfy { height: 437px; top: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".xm2yI",
          "cssText": ".xm2yI { box-sizing: border-box; height: 408px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".xm2yI.NLkfy",
          "cssText": ".xm2yI.NLkfy { height: 85%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".xm2yI .HK_Vz",
          "cssText": ".xm2yI .HK_Vz { flex-direction: column; height: 100%; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".xm2yI .XxJ_2",
          "cssText": ".xm2yI .XxJ_2 { flex-grow: 1; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".xm2yI .uhxnt",
          "cssText": ".xm2yI .uhxnt { background-color: var(--content-panel); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".nn2L0",
          "cssText": ".nn2L0 { border-top: 1px solid var(--content-tint); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".kZfp1",
          "cssText": ".kZfp1 { font-size: 1rem; font-weight: 400; line-height: 1.5; font-family: var(--font-family); color: RGB(var(--white)); justify-content: space-between; align-items: center; padding: 5px 20px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".kZfp1.H2hul",
          "cssText": ".kZfp1.H2hul { background-color: RGB(var(--black)); padding: 1rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".kZfp1.H2hul.gPEd0",
          "cssText": ".kZfp1.H2hul.gPEd0 { background-color: rgba(var(--black),.4); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".kZfp1.H2hul.zwjUv",
          "cssText": ".kZfp1.H2hul.zwjUv { background-color: RGB(var(--black)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".kZfp1.H2hul.WfICw",
          "cssText": ".kZfp1.H2hul.WfICw { background-color: RGB(var(--red)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".kZfp1.H2hul .zQ8dN",
          "cssText": ".kZfp1.H2hul .zQ8dN { border: 1px solid RGB(var(--white)); text-transform: capitalize; border-radius: 15px; min-width: 200px; padding: 0.25rem 0.5rem; font-size: 14px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".kZfp1.H2hul .TBfTV",
          "cssText": ".kZfp1.H2hul .TBfTV { border: 2px solid RGB(var(--white)); color: RGB(var(--white)); white-space: nowrap; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".kZfp1.H2hul .TBfTV:hover",
          "cssText": ".kZfp1.H2hul .TBfTV:hover { border-color: RGB(var(--white)); color: RGB(var(--white)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 540px) {\n  .kZfp1.H2hul { display: block; }\n}",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".kZfp1.H2hul",
          "cssText": ".kZfp1.H2hul { display: block; }",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".EkBU0",
          "cssText": ".EkBU0 { background-color: RGB(var(--deprecated-accent)); color: RGB(var(--white)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dJtjN",
          "cssText": ".dJtjN { display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dJtjN .ACc3i",
          "cssText": ".dJtjN .ACc3i { margin: 0px 0.5rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dJtjN a",
          "cssText": ".dJtjN a { align-self: center; line-height: 0; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dJtjN svg",
          "cssText": ".dJtjN svg { --icon-color-primary: RGB(var(--white)); width: 22px; height: 22px; margin-left: 0.75rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dJtjN svg.Nvxc5",
          "cssText": ".dJtjN svg.Nvxc5 { width: 14px; height: 14px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dJtjN .Z8aXP",
          "cssText": ".dJtjN .Z8aXP { line-height: 24px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (min-width: 990px) {\n  .dJtjN { margin-left: 0.5rem; }\n  .dJtjN:hover { border-color: RGB(var(--white)); color: RGB(var(--white)); }\n}",
          "urls": [],
          "group": "(min-width: 990px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 990px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "990px",
                "990",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dJtjN",
          "cssText": ".dJtjN { margin-left: 0.5rem; }",
          "urls": [],
          "group": "(min-width: 990px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 990px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "990px",
                "990",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dJtjN:hover",
          "cssText": ".dJtjN:hover { border-color: RGB(var(--white)); color: RGB(var(--white)); }",
          "urls": [],
          "group": "(min-width: 990px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 990px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "990px",
                "990",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 540px) {\n  .dJtjN { justify-content: right; margin-top: 1rem; }\n}",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dJtjN",
          "cssText": ".dJtjN { justify-content: right; margin-top: 1rem; }",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".BF3AU",
          "cssText": ".BF3AU { font-size: 1rem; font-weight: 400; line-height: 1.5; font-family: var(--font-family); white-space: pre-line; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".BF3AU .U9tmV",
          "cssText": ".BF3AU .U9tmV { box-sizing: border-box; border: 1px solid RGB(var(--black)); width: 100%; padding: 0.5rem; font-size: 0.9rem; line-height: 1.5rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".X5e5s a",
          "cssText": ".X5e5s a { color: rgba(var(--black),.65); text-decoration: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".X5e5s a:hover",
          "cssText": ".X5e5s a:hover { color: RGB(var(--black)); text-decoration: underline; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".X5e5s .EkBU0",
          "cssText": ".X5e5s .EkBU0 { box-sizing: border-box; line-height: 40px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".X5e5s .EkBU0.F7dEp",
          "cssText": ".X5e5s .EkBU0.F7dEp { border: 2px solid RGB(var(--deprecated-accent)); color: RGB(var(--white)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".X5e5s .EkBU0.UHvHp",
          "cssText": ".X5e5s .EkBU0.UHvHp { border: 2px solid RGB(var(--black)); color: RGB(var(--black)); background: 0px 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".X5e5s .EkBU0.UHvHp:hover",
          "cssText": ".X5e5s .EkBU0.UHvHp:hover { background: RGB(var(--black)); color: RGB(var(--white)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".X5e5s button:disabled",
          "cssText": ".X5e5s button:disabled { opacity: 0.5; pointer-events: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (min-width: 990px) {\n  .X5e5s { justify-content: space-between; align-items: center; margin: 1rem 0px 0px; display: flex; }\n  .X5e5s .EkBU0.F7dEp { margin-left: 0.75rem; }\n}",
          "urls": [],
          "group": "(min-width: 990px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 990px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "990px",
                "990",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".X5e5s",
          "cssText": ".X5e5s { justify-content: space-between; align-items: center; margin: 1rem 0px 0px; display: flex; }",
          "urls": [],
          "group": "(min-width: 990px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 990px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "990px",
                "990",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".X5e5s .EkBU0.F7dEp",
          "cssText": ".X5e5s .EkBU0.F7dEp { margin-left: 0.75rem; }",
          "urls": [],
          "group": "(min-width: 990px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 990px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "990px",
                "990",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 540px) {\n  .X5e5s .YYlrz { margin: 1rem 0px 0px; display: flex; }\n  .X5e5s .YYlrz button { width: 100%; }\n  .X5e5s .YYlrz button:last-of-type { margin-left: 0.5rem; }\n  .X5e5s .EkBU0 { width: 100%; display: block; }\n}",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".X5e5s .YYlrz",
          "cssText": ".X5e5s .YYlrz { margin: 1rem 0px 0px; display: flex; }",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".X5e5s .YYlrz button",
          "cssText": ".X5e5s .YYlrz button { width: 100%; }",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".X5e5s .YYlrz button:last-of-type",
          "cssText": ".X5e5s .YYlrz button:last-of-type { margin-left: 0.5rem; }",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".X5e5s .EkBU0",
          "cssText": ".X5e5s .EkBU0 { width: 100%; display: block; }",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".lQ0w7",
          "cssText": ".lQ0w7 { line-height: 1.5em; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 540px) {\n  .MQO0V { display: block; }\n}",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".MQO0V",
          "cssText": ".MQO0V { display: block; }",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".gQmlg",
          "cssText": ".gQmlg { font-size: 1rem; font-weight: 400; line-height: 1.5; font-family: var(--font-family); background-color: RGB(var(--red)); color: RGB(var(--white)); justify-content: space-between; align-items: center; padding: 5px 20px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".gQmlg.wB6qM",
          "cssText": ".gQmlg.wB6qM { background-color: RGB(var(--orange)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".gQmlg._qMFx",
          "cssText": ".gQmlg._qMFx { background-color: RGB(var(--green)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".SEj9V",
          "cssText": ".SEj9V { font-size: 1rem; font-weight: 700; line-height: 1.5; font-family: var(--font-family); border: 2px solid RGB(var(--white)); text-transform: uppercase; border-radius: 2px; padding: 4px 10px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".SEj9V:focus",
          "cssText": ".SEj9V:focus { background-color: RGB(var(--white)); color: RGB(var(--black)); outline: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".D7qy6",
          "cssText": ".D7qy6 { font-size: 1rem; font-weight: 400; line-height: 1.5; font-family: var(--font-family); border: 2px solid RGB(var(--white)); resize: none; width: 100%; height: 200px; margin-top: 10px; padding: 10px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".D7qy6:focus",
          "cssText": ".D7qy6:focus { outline: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Gtcb7",
          "cssText": ".Gtcb7 { cursor: pointer; align-items: center; gap: 12px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Gtcb7.tCD0e",
          "cssText": ".Gtcb7.tCD0e { flex-direction: row-reverse; justify-content: space-between; padding: 12px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".mSBP0",
          "cssText": ".mSBP0 { box-sizing: border-box; border: 1px solid; border-radius: 4px; flex-shrink: 0; justify-content: center; align-self: flex-start; align-items: center; width: 24px; height: 24px; display: flex; position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".mSBP0 .U1bgp",
          "cssText": ".mSBP0 .U1bgp { display: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".mSBP0.DzrPF .U1bgp",
          "cssText": ".mSBP0.DzrPF .U1bgp { display: inherit; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".mSBP0.hXjtP",
          "cssText": ".mSBP0.hXjtP { outline-offset: 2px; outline-width: 2px; outline-style: solid; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".mSBP0::before",
          "cssText": ".mSBP0::before { content: \"\"; border-radius: 4px; position: absolute; top: 4px; left: 0px; transform: translate(4px); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".OtHsX .h7IR_",
          "cssText": ".OtHsX .h7IR_ { color: var(--content-fg); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".OtHsX .mSBP0",
          "cssText": ".OtHsX .mSBP0 { border-color: var(--content-tint-heavy); outline-color: var(--accent); color: var(--content-ui-toggle); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".OtHsX .mSBP0::before",
          "cssText": ".OtHsX .mSBP0::before { background-color: var(--content-ui-toggle); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".OtHsX .mSBP0.DzrPF",
          "cssText": ".OtHsX .mSBP0.DzrPF { border-color: var(--accent); background-color: var(--accent); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".OtHsX .mSBP0.WJeWN",
          "cssText": ".OtHsX .mSBP0.WJeWN { background-color: var(--content-tint-strong); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".OtHsX .mSBP0.WJeWN::before",
          "cssText": ".OtHsX .mSBP0.WJeWN::before { opacity: 0.5; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".KZn1Q .mSBP0",
          "cssText": ".KZn1Q .mSBP0 { outline-color: var(--danger); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".KZn1Q .mSBP0.DzrPF",
          "cssText": ".KZn1Q .mSBP0.DzrPF { border-color: var(--danger); background-color: var(--danger); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".nSOB0",
          "cssText": ".nSOB0 { font-size: 1rem; font-weight: 350; line-height: 1.5rem; font-family: var(--font-family-modern); flex-direction: column; align-items: flex-start; gap: 4px; margin: 0px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".h7IR_, .ZEmev",
          "cssText": ".h7IR_, .ZEmev { color: var(--content-fg-secondary); text-align: start; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".fBQsy",
          "cssText": ".fBQsy { box-sizing: border-box; cursor: pointer; width: fit-content; font-size: 0.875rem; font-weight: 350; line-height: 1.25rem; font-family: var(--font-family-modern); background-color: var(--content-panel); box-shadow: 0px 0px 0px 1px var(--content-tint-strong)inset; color: var(--content-fg); border: none; border-radius: 8px; outline: none; justify-content: center; align-items: center; padding: 10px 16px; display: inline-flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".fBQsy:hover",
          "cssText": ".fBQsy:hover { background-color: var(--content-tint); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".fBQsy:active",
          "cssText": ".fBQsy:active { background-color: var(--content-tint-strong); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".fBQsy[data-checked=\"true\"]",
          "cssText": ".fBQsy[data-checked=\"true\"] { background-color: var(--accent-tint); box-shadow: 0px 0px 0px 1px var(--accent)inset; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".fBQsy[data-checked=\"true\"]:hover",
          "cssText": ".fBQsy[data-checked=\"true\"]:hover { background-color: var(--accent-tint-strong); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".fBQsy[data-checked=\"true\"]:active",
          "cssText": ".fBQsy[data-checked=\"true\"]:active { background-color: var(--accent-tint-heavy); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".fBQsy[data-focus-visible=\"true\"]",
          "cssText": ".fBQsy[data-focus-visible=\"true\"] { box-shadow: 0px 0px 0px 2px var(--accent)inset; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".fBQsy[data-disabled=\"true\"], .fBQsy[data-disabled=\"true\"][data-checked=\"true\"]",
          "cssText": ".fBQsy[data-disabled=\"true\"], .fBQsy[data-disabled=\"true\"][data-checked=\"true\"] { background-color: var(--content-panel); box-shadow: 0px 0px 0px 1px var(--content-tint-strong)inset; cursor: default; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".fBQsy[data-disabled=\"true\"] .tHYTK, .fBQsy[data-disabled=\"true\"][data-checked=\"true\"] .tHYTK",
          "cssText": ".fBQsy[data-disabled=\"true\"] .tHYTK, .fBQsy[data-disabled=\"true\"][data-checked=\"true\"] .tHYTK { opacity: 0.5; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".pxvHL",
          "cssText": ".pxvHL { cursor: pointer; align-items: center; gap: 12px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".pxvHL.b4th4",
          "cssText": ".pxvHL.b4th4 { flex-direction: row-reverse; justify-content: space-between; padding: 12px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".h6QpP",
          "cssText": ".h6QpP { font-size: 1rem; font-weight: 350; line-height: 1.5rem; font-family: var(--font-family-modern); margin: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".qg5oo",
          "cssText": ".qg5oo { box-sizing: border-box; border: 1px solid; border-radius: 9999px; flex-shrink: 0; justify-content: center; align-items: center; width: 24px; height: 24px; display: flex; position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".qg5oo .OB8Da",
          "cssText": ".qg5oo .OB8Da { display: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".qg5oo.g0bQ8 .OB8Da",
          "cssText": ".qg5oo.g0bQ8 .OB8Da { display: inherit; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".qg5oo.Og4oP",
          "cssText": ".qg5oo.Og4oP { outline-offset: 2px; outline-width: 2px; outline-style: solid; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".C_xeO .h6QpP",
          "cssText": ".C_xeO .h6QpP { color: var(--content-fg); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".C_xeO .h6QpP.w5rqU",
          "cssText": ".C_xeO .h6QpP.w5rqU { color: var(--content-fg-secondary); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".C_xeO .qg5oo",
          "cssText": ".C_xeO .qg5oo { border-color: var(--content-tint-heavy); outline-color: var(--accent); color: var(--content-ui-toggle); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".C_xeO .qg5oo:hover",
          "cssText": ".C_xeO .qg5oo:hover { border-color: var(--content-tint-heavy); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".C_xeO .qg5oo.g0bQ8",
          "cssText": ".C_xeO .qg5oo.g0bQ8 { border-color: var(--accent); background-color: var(--accent); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".C_xeO .qg5oo.g0bQ8:hover",
          "cssText": ".C_xeO .qg5oo.g0bQ8:hover { background-color: var(--accent-hover); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".C_xeO .qg5oo.w5rqU",
          "cssText": ".C_xeO .qg5oo.w5rqU { border-color: var(--content-tint); background-color: var(--content-tint); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".C_xeO .qg5oo.w5rqU:hover",
          "cssText": ".C_xeO .qg5oo.w5rqU:hover { background-color: var(--content-tint); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".mak2V",
          "cssText": ".mak2V { flex-direction: column; gap: 8px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".EiBE2",
          "cssText": ".EiBE2 { flex-wrap: wrap; gap: 8px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".UyBS5",
          "cssText": ".UyBS5 { flex-grow: 1; justify-content: flex-end; align-items: center; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".z8X4n",
          "cssText": ".z8X4n { text-align: left; min-width: 340px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".DLFvz",
          "cssText": ".DLFvz { padding: 20px; overflow-y: scroll; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".DLFvz.rONE2",
          "cssText": ".DLFvz.rONE2 { padding-bottom: 50vh; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".S9vSY",
          "cssText": ".S9vSY { justify-content: flex-end; gap: 8px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".zFlRa",
          "cssText": ".zFlRa { font-size: 1rem; font-weight: 350; line-height: 1.5rem; font-family: var(--font-family-modern); color: var(--content-fg); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".R4hFV",
          "cssText": ".R4hFV { font-size: 0.875rem; font-weight: 350; line-height: 1.25rem; font-family: var(--font-family-modern); color: var(--content-fg-secondary); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ogv2c",
          "cssText": ".ogv2c { font-size: 0.875rem; font-weight: 500; line-height: 1.25rem; font-family: var(--font-family-modern); color: var(--content-fg); display: block; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".sG03a",
          "cssText": ".sG03a { font-size: 0.875rem; font-weight: 350; line-height: 1.25rem; font-family: var(--font-family-modern); color: var(--danger); gap: 8px; margin: 8px 0px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".sG03a .Dz8Ma",
          "cssText": ".sG03a .Dz8Ma { margin-top: 1px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".fwv7E",
          "cssText": ".fwv7E { border: 1px solid var(--content-tint-heavy); border-radius: 8px; padding: 16px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".KWFLb",
          "cssText": ".KWFLb { color: rgba(var(--black),.65); font-size: 0.78125rem; font-weight: 400; line-height: 1.52; font-family: var(--font-family); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".KWFLb > svg",
          "cssText": ".KWFLb > svg { --icon-color-background: transparent; flex-shrink: 0; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".a3_ie",
          "cssText": ".a3_ie { margin-right: 6px; display: inline; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Y7QU6",
          "cssText": ".Y7QU6 { color: var(--color-primary-link); font-weight: 700; display: inline; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Y7QU6:hover",
          "cssText": ".Y7QU6:hover { text-decoration: underline; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".EAugG",
          "cssText": ".EAugG { box-sizing: border-box; background-color: var(--content-panel); width: 100%; min-height: 300px; color: var(--content-fg-secondary); text-align: center; flex-direction: column; justify-content: center; align-items: center; gap: 12px; padding: 8px 32px 0px; display: flex; position: absolute; inset: 0px; overflow: hidden; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".EAugG::before",
          "cssText": ".EAugG::before { background-color: var(--content-tint); content: \"\"; pointer-events: none; border-radius: 8px; position: absolute; inset: 8px 8px 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Qb2zX.vS0xc",
          "cssText": ".Qb2zX.vS0xc { height: 300px; overflow: hidden; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".UF4Vo",
          "cssText": ".UF4Vo { font-size: 1.125rem; font-weight: 500; line-height: 1.75rem; font-family: var(--font-family-modern); align-items: center; gap: 6px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".UF4Vo > svg",
          "cssText": ".UF4Vo > svg { --icon-color-background: transparent; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".MIDUS",
          "cssText": ".MIDUS { font-size: 1rem; font-weight: 350; line-height: 1.5rem; font-family: var(--font-family-modern); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".UypGJ",
          "cssText": ".UypGJ { min-height: 250px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dR2LL",
          "cssText": ".dR2LL { cursor: auto; line-height: 21px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dR2LL .ynaAM",
          "cssText": ".dR2LL .ynaAM { justify-content: center; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dR2LL .osMQ1",
          "cssText": ".dR2LL .osMQ1 { cursor: pointer; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dR2LL .H71ba",
          "cssText": ".dR2LL .H71ba { text-align: center; cursor: default; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dR2LL .H71ba button",
          "cssText": ".dR2LL .H71ba button { width: auto; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dR2LL .H71ba button > span",
          "cssText": ".dR2LL .H71ba button > span { align-items: center; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dR2LL .H71ba button svg",
          "cssText": ".dR2LL .H71ba button svg { --icon-color-accent: var(--color-primary-link); --icon-color-primary: transparent; width: 29px; height: 29px; font-weight: 700; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (min-width: 990px) {\n  .dR2LL .H71ba button { vertical-align: bottom; height: 23px; overflow: hidden; }\n}",
          "urls": [],
          "group": "(min-width: 990px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 990px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "990px",
                "990",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dR2LL .H71ba button",
          "cssText": ".dR2LL .H71ba button { vertical-align: bottom; height: 23px; overflow: hidden; }",
          "urls": [],
          "group": "(min-width: 990px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 990px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "990px",
                "990",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 540px) {\n  .dR2LL .H71ba { display: block; }\n}",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dR2LL .H71ba",
          "cssText": ".dR2LL .H71ba { display: block; }",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dR2LL .Cc6H4",
          "cssText": ".dR2LL .Cc6H4 { color: rgba(var(--black),.65); font-size: 0.85rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".KkT0i",
          "cssText": ".KkT0i { width: 100%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".AoEeU",
          "cssText": ".AoEeU { flex-direction: column; gap: 16px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".sLd13",
          "cssText": ".sLd13 { border: 1px solid var(--content-tint-heavy); user-select: none; border-radius: 8px; outline: none; flex-direction: row; align-items: flex-start; gap: 12px; padding: 16px; transition: border-color 0.1s linear, background-color 0.1s linear; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".sLd13[data-focus-visible]",
          "cssText": ".sLd13[data-focus-visible] { outline-color: var(--accent); outline-offset: 2px; outline-width: 2px; outline-style: solid; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".sLd13.MCHyM",
          "cssText": ".sLd13.MCHyM { cursor: default; opacity: 0.5; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".sLd13[data-checked=\"true\"]",
          "cssText": ".sLd13[data-checked=\"true\"] { border-color: var(--accent); background-color: var(--accent-tint); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".sLd13[data-checked=\"true\"] .NjLa2",
          "cssText": ".sLd13[data-checked=\"true\"] .NjLa2 { color: var(--content-fg); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".qoKkm",
          "cssText": ".qoKkm { box-sizing: border-box; border: 1px solid var(--content-tint-heavy); border-radius: 9999px; flex: 0 0 auto; justify-content: center; align-items: center; width: 24px; height: 24px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".qoKkm[data-checked=\"true\"]",
          "cssText": ".qoKkm[data-checked=\"true\"] { border-color: var(--accent); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".qoKkm[data-checked=\"true\"]::after",
          "cssText": ".qoKkm[data-checked=\"true\"]::after { background-color: var(--accent); content: \"\"; border-radius: 9999px; width: 14px; height: 14px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".fiFAB",
          "cssText": ".fiFAB { font-size: 1rem; font-weight: 500; line-height: 1.5rem; font-family: var(--font-family-modern); color: var(--content-fg); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".NjLa2",
          "cssText": ".NjLa2 { font-size: 1rem; font-weight: 350; line-height: 1.5rem; font-family: var(--font-family-modern); color: var(--content-fg-secondary); transition: color 0.1s linear; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".o8bvw",
          "cssText": ".o8bvw { padding: 20px; overflow-y: scroll; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".I9C9h",
          "cssText": ".I9C9h { justify-content: flex-end; gap: 8px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".EKpJR",
          "cssText": ".EKpJR { font-size: 1rem; font-weight: 350; line-height: 1.5rem; font-family: var(--font-family-modern); margin-bottom: 12px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".TSP_V",
          "cssText": ".TSP_V { font-size: 1rem; font-weight: 500; line-height: 1.5rem; font-family: var(--font-family-modern); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".y0RtB",
          "cssText": ".y0RtB { font-size: 0.875rem; font-weight: 350; line-height: 1.25rem; font-family: var(--font-family-modern); color: var(--danger); gap: 8px; margin: 8px 0px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".y0RtB .RPez8",
          "cssText": ".y0RtB .RPez8 { margin-top: 1px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Pvpdc",
          "cssText": ".Pvpdc { text-align: center; align-items: center; padding: 20px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".xA5Ll",
          "cssText": ".xA5Ll { text-align: center; flex-direction: column; align-items: center; gap: 6px; margin-top: 16px; margin-bottom: 20px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Q7QOg",
          "cssText": ".Q7QOg { color: var(--content-fg); font-size: 1.5rem; font-weight: 700; line-height: 2rem; font-family: var(--font-family-modern); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Sz17T",
          "cssText": ".Sz17T { width: 75%; color: var(--content-fg-secondary); font-size: 1rem; font-weight: 350; line-height: 1.5rem; font-family: var(--font-family-modern); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".WqS4f",
          "cssText": ".WqS4f { font-size: 1rem; font-weight: 350; line-height: 1.5rem; font-family: var(--font-family-modern); color: var(--content-fg); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".suQrH",
          "cssText": ".suQrH { font-size: 1rem; font-weight: 500; line-height: 1.5rem; font-family: var(--font-family-modern); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".wb2jv",
          "cssText": ".wb2jv { border: 1px solid var(--content-tint-heavy); border-radius: 8px; padding: 16px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".w3ESf",
          "cssText": ".w3ESf { margin: auto; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".aKxym",
          "cssText": ".aKxym { width: 100%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".RIBoR button",
          "cssText": ".RIBoR button { font-weight: 700; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".gIEq5, .BsLEG",
          "cssText": ".gIEq5, .BsLEG { justify-content: center; align-items: center; margin: 0.5rem 1rem; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".gIEq5",
          "cssText": ".gIEq5 { color: rgba(var(--black),.65); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".vr9kN",
          "cssText": ".vr9kN { border-top: 1px solid rgba(var(--black),.13); margin: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".oA9Km",
          "cssText": ".oA9Km { padding: 1rem 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dLuzh, .Cd56W",
          "cssText": ".dLuzh, .Cd56W { display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".VPQeD",
          "cssText": ".VPQeD { line-height: 1rem; text-decoration: none; display: inline; position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".VPQeD.ESJX7",
          "cssText": ".VPQeD.ESJX7 { padding-left: 18px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".VPQeD svg",
          "cssText": ".VPQeD svg { position: absolute; top: 50%; left: 0px; transform: translateY(-50%); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "span.n0euW",
          "cssText": "span.n0euW { display: inline; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "span.n0euW .gfb1_",
          "cssText": "span.n0euW .gfb1_ { transform: translateY(2px); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".BjErQ",
          "cssText": ".BjErQ { background-color: RGB(var(--white)); width: 100%; max-width: 540px; font-family: var(--font-family); box-sizing: border-box; padding-right: var(--post-padding); padding-left: var(--post-padding); padding-top: var(--post-header-vertical-padding); padding-bottom: var(--post-header-vertical-padding); border-radius: 8px 8px 0px 0px; justify-content: center; align-items: center; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".BjErQ.Aj66f",
          "cssText": ".BjErQ.Aj66f { border-radius: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".BjErQ.PpzOx:hover",
          "cssText": ".BjErQ.PpzOx:hover { cursor: pointer; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".BjErQ.PpzOx:hover .i5aqv::before",
          "cssText": ".BjErQ.PpzOx:hover .i5aqv::before { content: \"\"; position: absolute; inset: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".zDKqP",
          "cssText": ".zDKqP { padding-inline: 14px 12px; background-color: var(--content-panel); color: var(--content-fg); border-top-left-radius: 8px; border-top-right-radius: 8px; padding-top: 14px; padding-bottom: 14px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".zDKqP:not(:-webkit-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)))",
          "cssText": ".zDKqP:not(:-webkit-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi))) { padding-left: 14px; padding-right: 12px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".zDKqP:not(:is(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)))",
          "cssText": ".zDKqP:not(:is(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi))) { padding-left: 14px; padding-right: 12px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".zDKqP:-webkit-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi))",
          "cssText": ".zDKqP:-webkit-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)) { padding-left: 12px; padding-right: 14px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".zDKqP:is(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi))",
          "cssText": ".zDKqP:is(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)) { padding-left: 12px; padding-right: 14px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".zDKqP a",
          "cssText": ".zDKqP a { text-decoration: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".palette--trueBlue .BjErQ.PpzOx:hover, .palette--trueBlue .BjErQ.PpzOx:hover .i5aqv::before, .palette--cement .BjErQ.PpzOx:hover, .palette--cement .BjErQ.PpzOx:hover .i5aqv::before, .palette--canary .BjErQ.PpzOx:hover, .palette--canary .BjErQ.PpzOx:hover .i5aqv::before, .palette--ghost .BjErQ.PpzOx:hover, .palette--ghost .BjErQ.PpzOx:hover .i5aqv::before, .palette--snowBright .BjErQ.PpzOx:hover, .palette--snowBright .BjErQ.PpzOx:hover .i5aqv::before, .palette--pride .BjErQ.PpzOx:hover, .palette--pride .BjErQ.PpzOx:hover .i5aqv::before",
          "cssText": ".palette--trueBlue .BjErQ.PpzOx:hover, .palette--trueBlue .BjErQ.PpzOx:hover .i5aqv::before, .palette--cement .BjErQ.PpzOx:hover, .palette--cement .BjErQ.PpzOx:hover .i5aqv::before, .palette--canary .BjErQ.PpzOx:hover, .palette--canary .BjErQ.PpzOx:hover .i5aqv::before, .palette--ghost .BjErQ.PpzOx:hover, .palette--ghost .BjErQ.PpzOx:hover .i5aqv::before, .palette--snowBright .BjErQ.PpzOx:hover, .palette--snowBright .BjErQ.PpzOx:hover .i5aqv::before, .palette--pride .BjErQ.PpzOx:hover, .palette--pride .BjErQ.PpzOx:hover .i5aqv::before { background-color: rgba(var(--black),.04); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".palette--darkMode .BjErQ.PpzOx:hover, .palette--darkMode .BjErQ.PpzOx:hover .i5aqv::before, .palette--lowContrastClassic .BjErQ.PpzOx:hover, .palette--lowContrastClassic .BjErQ.PpzOx:hover .i5aqv::before, .palette--cybernetic .BjErQ.PpzOx:hover, .palette--cybernetic .BjErQ.PpzOx:hover .i5aqv::before, .palette--vampire .BjErQ.PpzOx:hover, .palette--vampire .BjErQ.PpzOx:hover .i5aqv::before, .palette--pumpkin .BjErQ.PpzOx:hover, .palette--pumpkin .BjErQ.PpzOx:hover .i5aqv::before, .palette--gothRave .BjErQ.PpzOx:hover, .palette--gothRave .BjErQ.PpzOx:hover .i5aqv::before",
          "cssText": ".palette--darkMode .BjErQ.PpzOx:hover, .palette--darkMode .BjErQ.PpzOx:hover .i5aqv::before, .palette--lowContrastClassic .BjErQ.PpzOx:hover, .palette--lowContrastClassic .BjErQ.PpzOx:hover .i5aqv::before, .palette--cybernetic .BjErQ.PpzOx:hover, .palette--cybernetic .BjErQ.PpzOx:hover .i5aqv::before, .palette--vampire .BjErQ.PpzOx:hover, .palette--vampire .BjErQ.PpzOx:hover .i5aqv::before, .palette--pumpkin .BjErQ.PpzOx:hover, .palette--pumpkin .BjErQ.PpzOx:hover .i5aqv::before, .palette--gothRave .BjErQ.PpzOx:hover, .palette--gothRave .BjErQ.PpzOx:hover .i5aqv::before { background-color: rgba(var(--white-on-dark),.04); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".RYkKH",
          "cssText": ".RYkKH { align-self: flex-start; padding-right: 10px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".rGP1C, .Euban",
          "cssText": ".rGP1C, .Euban { font-size: 0.875rem; font-weight: 400; line-height: 1.42857; font-family: var(--font-family); color: rgba(var(--black),.65); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".MHZ5s + .rGP1C::before, .MHZ5s + .Euban::before",
          "cssText": ".MHZ5s + .rGP1C::before, .MHZ5s + .Euban::before { content: \" •\"; margin: 0px 8px; display: inline; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".zYMVR",
          "cssText": ".zYMVR { font-size: 0.78125rem; font-weight: 400; line-height: 1.52; font-family: var(--font-family); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".zYMVR.lLxmv",
          "cssText": ".zYMVR.lLxmv { color: rgba(var(--black),.65); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".G0rF_",
          "cssText": ".G0rF_ { flex-direction: column; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".G0rF_ .WJ6ij",
          "cssText": ".G0rF_ .WJ6ij { color: RGB(var(--black)); font-weight: 700; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".v3Gu6",
          "cssText": ".v3Gu6 { font-size: 0.78125rem; font-weight: 400; line-height: 1.52; font-family: var(--font-family); color: rgba(var(--black),.65); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".q4Pce",
          "cssText": ".q4Pce { height: 100%; font-size: 0.875rem; font-weight: 700; line-height: 1.42857; font-family: var(--font-family); max-width: calc(100vw - 2*var(--post-padding)); flex-direction: row; flex-grow: 1; justify-content: space-between; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 540px) {\n  .q4Pce { font-size: 1rem; font-weight: 700; line-height: 1.5; font-family: var(--font-family); }\n}",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".q4Pce",
          "cssText": ".q4Pce { font-size: 1rem; font-weight: 700; line-height: 1.5; font-family: var(--font-family); }",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".q4Pce.CsjTP",
          "cssText": ".q4Pce.CsjTP { max-width: calc(100vw - 2*var(--post-padding)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".q4Pce.CsjTP.J_Wh8",
          "cssText": ".q4Pce.CsjTP.J_Wh8 { max-width: calc(100vw - 10px - 38px - 2*var(--post-padding)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".q4Pce.xjVqt",
          "cssText": ".q4Pce.xjVqt { padding-left: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ZJdm4",
          "cssText": ".ZJdm4 { flex-direction: column; flex-grow: 1; justify-content: center; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ffqNn",
          "cssText": ".ffqNn { font-size: 0.875rem; font-weight: 400; line-height: 1.42857; font-family: var(--font-family); flex-flow: wrap; justify-content: flex-start; align-items: center; column-gap: 4px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ffqNn:not(:last-child)",
          "cssText": ".ffqNn:not(:last-child) { margin-right: 10px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ffqNn span",
          "cssText": ".ffqNn span { vertical-align: unset; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".EVcsJ",
          "cssText": ".EVcsJ { flex-wrap: nowrap; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".pVS0A",
          "cssText": ".pVS0A { flex-wrap: wrap; align-items: baseline; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 540px) {\n  .j8f9p { font-size: 0.78125rem; font-weight: 400; line-height: 1.52; font-family: var(--font-family); }\n}",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".j8f9p",
          "cssText": ".j8f9p { font-size: 0.78125rem; font-weight: 400; line-height: 1.52; font-family: var(--font-family); }",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".T28Qk",
          "cssText": ".T28Qk { margin-bottom: -0.25rem; overflow-x: hidden; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ZlHiL",
          "cssText": ".ZlHiL { font-size: 0.78125rem; font-weight: 400; line-height: 1.52; font-family: var(--font-family); color: rgba(var(--black),.65); padding-right: 1rem; position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ZlHiL .MHZ5s, .ZlHiL + .ZlHiL::before",
          "cssText": ".ZlHiL .MHZ5s, .ZlHiL + .ZlHiL::before { content: \"·\"; width: 1rem; color: rgba(var(--black),.65); text-align: center; cursor: default; position: absolute; left: -1rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ZlHiL:not(.MHZ5s) + .QQAmL",
          "cssText": ".ZlHiL:not(.MHZ5s) + .QQAmL { width: 100%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".rJe2J",
          "cssText": ".rJe2J { color: rgba(var(--black),.65); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".zHhsx",
          "cssText": ".zHhsx { color: RGB(var(--black)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".WJ6ij",
          "cssText": ".WJ6ij { color: rgba(var(--black),.65); font-size: 0.875rem; font-weight: 400; font-family: var(--font-family); line-height: 1.125rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".WJ6ij a",
          "cssText": ".WJ6ij a { overflow-wrap: break-word; hyphens: auto; font-weight: 700; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".vGkyT, .eLzSX",
          "cssText": ".vGkyT, .eLzSX { display: inline; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".vGkyT",
          "cssText": ".vGkyT { color: RGB(var(--black)); word-break: break-all; margin-right: 5px; display: inline-block; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".vGkyT:focus",
          "cssText": ".vGkyT:focus { outline: none; text-decoration: underline; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".eLzSX",
          "cssText": ".eLzSX { overflow-wrap: break-word; hyphens: auto; color: rgba(var(--black),.65); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".rmjNp",
          "cssText": ".rmjNp { text-align: left; vertical-align: top; line-height: 1rem; display: inline; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 540px) {\n  .rmjNp { font-size: 0.875rem; font-weight: 700; font-family: var(--font-family); line-height: 1rem; }\n}",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".rmjNp",
          "cssText": ".rmjNp { font-size: 0.875rem; font-weight: 700; font-family: var(--font-family); line-height: 1rem; }",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ps_dU",
          "cssText": ".ps_dU { color: rgba(var(--black),.65); margin-right: 4px; line-height: 1.125rem; display: inline-block; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ps_dU .rFnRs",
          "cssText": ".ps_dU .rFnRs { float: left; margin-right: 4px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ps_dU .rFnRs svg",
          "cssText": ".ps_dU .rFnRs svg { transform: translateY(1px); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".KFWnx",
          "cssText": ".KFWnx { justify-content: flex-end; align-self: flex-start; line-height: 20px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".KFWnx > *",
          "cssText": ".KFWnx > * { margin: 0px 10px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".KFWnx > :last-child",
          "cssText": ".KFWnx > :last-child { margin-right: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".KFWnx .a_qtV",
          "cssText": ".KFWnx .a_qtV { align-items: center; gap: 12px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".a_qtV button",
          "cssText": ".a_qtV button { border-radius: 50%; width: 2rem; height: 2rem; transition: background-color 0.1s ease-in-out; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Tfl19 button",
          "cssText": ".Tfl19 button { border-radius: 50%; width: 44px; height: 44px; transition: background-color 0.1s ease-in-out; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".palette--trueBlue .a_qtV button:hover, .palette--cement .a_qtV button:hover, .palette--canary .a_qtV button:hover, .palette--ghost .a_qtV button:hover, .palette--snowBright .a_qtV button:hover, .palette--pride .a_qtV button:hover",
          "cssText": ".palette--trueBlue .a_qtV button:hover, .palette--cement .a_qtV button:hover, .palette--canary .a_qtV button:hover, .palette--ghost .a_qtV button:hover, .palette--snowBright .a_qtV button:hover, .palette--pride .a_qtV button:hover { background-color: rgba(var(--black),.04); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".palette--darkMode .a_qtV button:hover, .palette--lowContrastClassic .a_qtV button:hover, .palette--cybernetic .a_qtV button:hover, .palette--vampire .a_qtV button:hover, .palette--pumpkin .a_qtV button:hover, .palette--gothRave .a_qtV button:hover",
          "cssText": ".palette--darkMode .a_qtV button:hover, .palette--lowContrastClassic .a_qtV button:hover, .palette--cybernetic .a_qtV button:hover, .palette--vampire .a_qtV button:hover, .palette--pumpkin .a_qtV button:hover, .palette--gothRave .a_qtV button:hover { background-color: rgba(var(--white-on-dark),.04); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".a_qtV button.WFTy4",
          "cssText": ".a_qtV button.WFTy4 { background-color: var(--chrome-ui); border-radius: 9999px; width: auto; height: auto; padding: 8px 12px; text-decoration: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".a_qtV button.WFTy4:hover",
          "cssText": ".a_qtV button.WFTy4:hover { background-color: var(--chrome-ui-hover); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".a_qtV .qU8uP",
          "cssText": ".a_qtV .qU8uP { color: var(--chrome-ui-fg); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".a_qtV .qU8uP:focus, .a_qtV .qU8uP:hover",
          "cssText": ".a_qtV .qU8uP:focus, .a_qtV .qU8uP:hover { text-decoration: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 540px) {\n  .a_qtV .qU8uP { font-size: 0.875rem; font-weight: 700; line-height: 1.42857; font-family: var(--font-family); }\n}",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".a_qtV .qU8uP",
          "cssText": ".a_qtV .qU8uP { font-size: 0.875rem; font-weight: 700; line-height: 1.42857; font-family: var(--font-family); }",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".yWEqH",
          "cssText": ".yWEqH { padding-top: 15px; padding-bottom: 6px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Dx0Mo",
          "cssText": ".Dx0Mo { background-color: RGB(var(--white)); width: 100%; max-width: 540px; font-family: var(--font-family); box-sizing: border-box; padding-right: var(--post-padding); padding-left: var(--post-padding); margin-bottom: var(--post-header-vertical-padding); padding-top: var(--post-header-vertical-padding); box-shadow: 0px -1px 0px rgba(var(--black),.13); justify-content: center; align-items: center; line-height: 1rem; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Dx0Mo .ffqNn",
          "cssText": ".Dx0Mo .ffqNn { font-size: 0.875rem; line-height: 1.42857; font-family: var(--font-family); flex-direction: row; justify-content: flex-start; align-items: center; font-weight: 700; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Dx0Mo .WJ6ij.MrqyD .NStl8",
          "cssText": ".Dx0Mo .WJ6ij.MrqyD .NStl8 { flex: 1 0 content; margin-right: 5px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Dx0Mo .KyXoU",
          "cssText": ".Dx0Mo .KyXoU { align-self: flex-start; margin-top: 6px; line-height: 0.4rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Dx0Mo .j8f9p",
          "cssText": ".Dx0Mo .j8f9p { margin-top: 6px; line-height: 0.6rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".cTtCk",
          "cssText": ".cTtCk { height: 1rem; margin-right: 4px; display: inline-block; transform: translateY(2px); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Gnc1N",
          "cssText": ".Gnc1N { color: rgba(var(--black),.65); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".y_F2V",
          "cssText": ".y_F2V { font-size: 0.78125rem; font-weight: 400; line-height: 1.52; font-family: var(--font-family); color: rgba(var(--black),.65); margin-right: 8px; position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".yqPiy",
          "cssText": ".yqPiy { box-sizing: border-box; padding-right: var(--post-padding); padding-left: var(--post-padding); justify-content: center; align-items: center; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".sz5_C",
          "cssText": ".sz5_C { background-color: rgba(var(--black),.04); border-radius: 4px; flex-direction: row; justify-content: space-between; align-items: center; gap: 12px; width: 100%; padding: 8px 16px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".kMRQn",
          "cssText": ".kMRQn { flex-direction: row; flex: 3 1 0%; align-items: center; display: flex; overflow: hidden; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".kMRQn .KsoXf",
          "cssText": ".kMRQn .KsoXf { justify-content: flex-start; align-items: center; gap: 12px; text-decoration: none; display: flex; overflow: hidden; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".kMRQn .f00jg",
          "cssText": ".kMRQn .f00jg { background-color: var(--content-tint); border-radius: 50%; justify-content: center; align-items: center; width: 28px; height: 28px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".kMRQn .mbqn3",
          "cssText": ".kMRQn .mbqn3 { font-size: 0.78125rem; font-weight: 700; line-height: 1.52; font-family: var(--font-family); color: var(--content-fg-secondary); text-overflow: ellipsis; white-space: nowrap; overflow: hidden; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".FVrvv",
          "cssText": ".FVrvv { font-size: 0.875rem; font-weight: 500; line-height: 1.25rem; font-family: var(--font-family-modern); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".FVrvv:disabled",
          "cssText": ".FVrvv:disabled { cursor: not-allowed; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".FVrvv:focus",
          "cssText": ".FVrvv:focus { outline: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".FVrvv:focus-visible",
          "cssText": ".FVrvv:focus-visible { outline: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".sMoH1",
          "cssText": ".sMoH1 { outline: 1px solid var(--content-tint-strong); outline-offset: -1px; color: var(--content-fg); background-clip: border-box; border-radius: 9999px; justify-content: center; align-items: center; gap: 6px; padding: 8px 12px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "button:hover > .sMoH1, button:active > .sMoH1",
          "cssText": "button:hover > .sMoH1, button:active > .sMoH1 { outline: 1px solid var(--content-tint-heavy); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "button:disabled > .sMoH1",
          "cssText": "button:disabled > .sMoH1 { outline: 1px solid var(--content-tint); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "button:disabled > .sMoH1 svg",
          "cssText": "button:disabled > .sMoH1 svg { color: var(--content-fg-tertiary); opacity: 0.5; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "button.YPrty > .sMoH1",
          "cssText": "button.YPrty > .sMoH1 { outline: 1px solid var(--accent); background-color: var(--accent-tint); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "button:focus > .sMoH1, button.YPrty:focus > .sMoH1",
          "cssText": "button:focus > .sMoH1, button.YPrty:focus > .sMoH1 { outline: 2px solid var(--accent); outline-offset: -2px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".sMoH1.b8p7x",
          "cssText": ".sMoH1.b8p7x { padding: 10px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".sMoH1 svg",
          "cssText": ".sMoH1 svg { color: var(--content-fg-secondary); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".e_jbk",
          "cssText": ".e_jbk { flex-direction: row; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".tURbW",
          "cssText": ".tURbW { border: 2px solid transparent; border-radius: 9999px; margin: -2px; overflow: hidden; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".tURbW:not(:first-child)",
          "cssText": ".tURbW:not(:first-child) { margin-left: -10px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".tURbW.zhZFR",
          "cssText": ".tURbW.zhZFR { background-color: var(--chrome-panel); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".tURbW.uc6Yo",
          "cssText": ".tURbW.uc6Yo { background-color: var(--content-panel); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSSupportsRule",
          "selector": "",
          "cssText": "@supports ((-webkit-mask-image:none) or (mask-image:none)) {\n  .tURbW { border: none; margin: 0px; }\n  .tURbW:not(:first-child) { margin-left: 0px; }\n  .tURbW.zhZFR, .tURbW.uc6Yo { background-color: transparent; }\n  .tURbW:not(:last-child) { margin-right: -8px; mask-image: radial-gradient(14px at right -4px bottom 10px, transparent 99%, rgb(255, 255, 255) 100%); }\n}",
          "urls": [],
          "group": "((-webkit-mask-image:none) or (mask-image:none))",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "((-webkit-mask-image:none) or (mask-image:none))",
              "requiresEcho": true,
              "echoTokens": [
                "-webkit-mask-image",
                "none",
                "mask-image"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".tURbW",
          "cssText": ".tURbW { border: none; margin: 0px; }",
          "urls": [],
          "group": "((-webkit-mask-image:none) or (mask-image:none))",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "((-webkit-mask-image:none) or (mask-image:none))",
              "requiresEcho": true,
              "echoTokens": [
                "-webkit-mask-image",
                "none",
                "mask-image"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".tURbW:not(:first-child)",
          "cssText": ".tURbW:not(:first-child) { margin-left: 0px; }",
          "urls": [],
          "group": "((-webkit-mask-image:none) or (mask-image:none))",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "((-webkit-mask-image:none) or (mask-image:none))",
              "requiresEcho": true,
              "echoTokens": [
                "-webkit-mask-image",
                "none",
                "mask-image"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".tURbW.zhZFR, .tURbW.uc6Yo",
          "cssText": ".tURbW.zhZFR, .tURbW.uc6Yo { background-color: transparent; }",
          "urls": [],
          "group": "((-webkit-mask-image:none) or (mask-image:none))",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "((-webkit-mask-image:none) or (mask-image:none))",
              "requiresEcho": true,
              "echoTokens": [
                "-webkit-mask-image",
                "none",
                "mask-image"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".tURbW:not(:last-child)",
          "cssText": ".tURbW:not(:last-child) { margin-right: -8px; mask-image: radial-gradient(14px at right -4px bottom 10px, transparent 99%, rgb(255, 255, 255) 100%); }",
          "urls": [],
          "group": "((-webkit-mask-image:none) or (mask-image:none))",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "((-webkit-mask-image:none) or (mask-image:none))",
              "requiresEcho": true,
              "echoTokens": [
                "-webkit-mask-image",
                "none",
                "mask-image"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".aslpL",
          "cssText": ".aslpL { align-items: center; gap: 6px; text-decoration: none; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".aslpL .atSxv",
          "cssText": ".aslpL .atSxv { font-size: 1rem; font-weight: 500; line-height: 1.5rem; font-family: var(--font-family-modern); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".OTs2M",
          "cssText": ".OTs2M { position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".OTs2M .lMOLb",
          "cssText": ".OTs2M .lMOLb { position: absolute; top: 0px; left: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".EBUp3",
          "cssText": ".EBUp3 { color: var(--content-fg-secondary); flex-wrap: wrap; align-items: center; font-size: 14px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".EBUp3.E3NOC",
          "cssText": ".EBUp3.E3NOC { z-index: 1; background-color: var(--modal); border-radius: 8px; width: 280px; height: auto; padding: 12px; box-shadow: rgba(0, 0, 0, 0.1) 0px 8px 20px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".EBUp3 strong, .EBUp3 .VFeFU",
          "cssText": ".EBUp3 strong, .EBUp3 .VFeFU { color: var(--content-fg); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".EBUp3 .ytHZW",
          "cssText": ".EBUp3 .ytHZW { align-items: center; line-height: 20px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".EBUp3 .ytHZW:not(:last-of-type)",
          "cssText": ".EBUp3 .ytHZW:not(:last-of-type) { margin-bottom: 8px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".EBUp3 .VFeFU",
          "cssText": ".EBUp3 .VFeFU { border: 2px solid var(--content-tint-heavy); border-radius: 8px; width: 24px; margin-right: 10px; padding: 8px; font-size: 24px; display: inline-block; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".xXTjk",
          "cssText": ".xXTjk { box-sizing: border-box; background: RGB(var(--white)); width: 100%; height: auto; color: RGB(var(--black)); font-size: inherit; resize: none; border: none; outline: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".xXTjk:focus",
          "cssText": ".xXTjk:focus { outline: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".xXTjk[disabled]",
          "cssText": ".xXTjk[disabled] { background: 0px 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".JWdar",
          "cssText": ".JWdar { background-color: rgba(var(--black),.07); border-radius: 8px; align-items: flex-start; gap: 8px; padding: 8px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".JWdar .xXTjk",
          "cssText": ".JWdar .xXTjk { font-size: 1rem; font-weight: 400; line-height: 1.5; font-family: var(--font-family); background: 0px 0px; max-height: 120px; padding: 0px 12px 0px 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".oea_J:last-child",
          "cssText": ".oea_J:last-child { display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".oea_J:last-child::after",
          "cssText": ".oea_J:last-child::after { margin-right: inherit; content: \"\"; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".oea_J .baUXc",
          "cssText": ".oea_J .baUXc { font-size: 0.78125rem; font-weight: 400; line-height: 1.52; font-family: var(--font-family); flex-direction: column; justify-content: center; align-items: center; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".oea_J .iOPva",
          "cssText": ".oea_J .iOPva { color: rgba(var(--black),.4); margin-top: 3px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".oea_J .Z8bqG",
          "cssText": ".oea_J .Z8bqG { background-color: rgb(255, 255, 255); border-radius: 100%; justify-content: center; align-items: center; margin: 0px 16px; padding: 16px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".HX0fM",
          "cssText": ".HX0fM { z-index: -100; opacity: 0; position: absolute; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".nTtVZ",
          "cssText": ".nTtVZ { flex-direction: column; width: 100%; height: 100%; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media not (min-width: 990px) {\n  .nTtVZ { background: RGB(var(--white)); height: auto; color: RGB(var(--black)); position: absolute; bottom: 0px; }\n}",
          "urls": [],
          "group": "not (min-width: 990px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "not (min-width: 990px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "990px",
                "990",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".nTtVZ",
          "cssText": ".nTtVZ { background: RGB(var(--white)); height: auto; color: RGB(var(--black)); position: absolute; bottom: 0px; }",
          "urls": [],
          "group": "not (min-width: 990px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "not (min-width: 990px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "990px",
                "990",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".nTtVZ .rnFEP",
          "cssText": ".nTtVZ .rnFEP { align-items: center; padding-left: 15px; display: flex; position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".nTtVZ .Yexkw",
          "cssText": ".nTtVZ .Yexkw { margin-right: 20px; overflow: visible; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".nTtVZ .Yexkw::after",
          "cssText": ".nTtVZ .Yexkw::after { z-index: 1; background: linear-gradient(to right,RGB(var(--white))0%,rgba(var(--white),0)100%); content: \" \"; width: 20px; height: 100%; position: absolute; top: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".nTtVZ .GISqs",
          "cssText": ".nTtVZ .GISqs { font-size: 1rem; font-weight: 400; line-height: 1.5; font-family: var(--font-family); background-color: RGB(var(--white)); width: auto; color: RGB(var(--black)); border: none; flex: 1 1 0%; padding: 15px 15px 15px 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".nTtVZ .GISqs:focus",
          "cssText": ".nTtVZ .GISqs:focus { outline: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".nTtVZ .gaUpz",
          "cssText": ".nTtVZ .gaUpz { flex-grow: 1; display: flex; position: relative; overflow-x: auto; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".nTtVZ .hsO5V",
          "cssText": ".nTtVZ .hsO5V { align-items: center; margin: 0px; padding: 0px; display: flex; position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".nTtVZ .c3A_k",
          "cssText": ".nTtVZ .c3A_k { height: 21px; color: RGB(var(--white)); white-space: nowrap; background: rgb(0, 0, 0); border-radius: 10px; margin-right: 8px; padding: 0px 9px; font-weight: 400; line-height: 21px; display: inline-block; position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".nTtVZ .c3A_k:hover .IznjY",
          "cssText": ".nTtVZ .c3A_k:hover .IznjY { display: block; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".nTtVZ .IznjY",
          "cssText": ".nTtVZ .IznjY { border: 1px solid RGB(var(--white)); background: inherit; cursor: pointer; fill: RGB(var(--white)); border-radius: 14px; padding: 2px; display: none; position: absolute; top: -7px; right: -9px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 540px) {\n  .nTtVZ .IznjY { display: block; }\n}",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".nTtVZ .IznjY",
          "cssText": ".nTtVZ .IznjY { display: block; }",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".nTtVZ .KAE3V",
          "cssText": ".nTtVZ .KAE3V { flex: 1 1 0%; align-items: center; min-height: 130px; display: flex; position: relative; overflow-x: auto; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".nTtVZ .uiB5u",
          "cssText": ".nTtVZ .uiB5u { font-size: 0.78125rem; font-weight: 400; line-height: 1.52; font-family: var(--font-family); color: rgba(var(--black),.65); margin: auto; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".nTtVZ .T1G8P",
          "cssText": ".nTtVZ .T1G8P { align-items: flex-start; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".nTtVZ .T1G8P .wAOAc",
          "cssText": ".nTtVZ .T1G8P .wAOAc { width: 60px; margin: 3px 5px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".nTtVZ .T1G8P .wAOAc .IrKkW",
          "cssText": ".nTtVZ .T1G8P .wAOAc .IrKkW { margin: 2px auto 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".nTtVZ .T1G8P .wAOAc.PsNK0 .coBOo, .nTtVZ .T1G8P .wAOAc.PsNK0 .H6xf6",
          "cssText": ".nTtVZ .T1G8P .wAOAc.PsNK0 .coBOo, .nTtVZ .T1G8P .wAOAc.PsNK0 .H6xf6 { color: currentcolor; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".nTtVZ .T1G8P .H6xf6, .nTtVZ .T1G8P .coBOo",
          "cssText": ".nTtVZ .T1G8P .H6xf6, .nTtVZ .T1G8P .coBOo { text-align: center; text-overflow: ellipsis; white-space: nowrap; width: 100%; overflow: hidden; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".nTtVZ .T1G8P .coBOo",
          "cssText": ".nTtVZ .T1G8P .coBOo { font-size: 0.78125rem; font-weight: 700; line-height: 1.52; font-family: var(--font-family); color: RGB(var(--black)); margin: 10px 0px 2px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".nTtVZ .T1G8P .H6xf6",
          "cssText": ".nTtVZ .T1G8P .H6xf6 { font-size: 0.78125rem; font-weight: 400; line-height: 1.52; font-family: var(--font-family); color: rgba(var(--black),.65); margin: 0px 0px 5px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".nTtVZ .A__g4",
          "cssText": ".nTtVZ .A__g4 { justify-content: space-between; gap: 8px; padding: 10px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".nTtVZ .Rw5fx",
          "cssText": ".nTtVZ .Rw5fx { flex-grow: 1; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".nTtVZ .cFsuL",
          "cssText": ".nTtVZ .cFsuL { padding: 0px 8px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".nTtVZ .cFsuL button[disabled] svg",
          "cssText": ".nTtVZ .cFsuL button[disabled] svg { cursor: default; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".nTtVZ .cFsuL button[disabled] svg use",
          "cssText": ".nTtVZ .cFsuL button[disabled] svg use { --icon-color-primary: rgba(var(--black),.4); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".nTtVZ .cFsuL svg",
          "cssText": ".nTtVZ .cFsuL svg { fill: inherit; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".nTtVZ .Up_nj, .nTtVZ .cFsuL",
          "cssText": ".nTtVZ .Up_nj, .nTtVZ .cFsuL { align-items: center; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".nTtVZ .Up_nj",
          "cssText": ".nTtVZ .Up_nj { padding: 0px 15px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".nTtVZ .cY7ni",
          "cssText": ".nTtVZ .cY7ni { flex: 1 1 0%; padding: 12px 5px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".nTtVZ .yL6v8",
          "cssText": ".nTtVZ .yL6v8 { font-size: 1rem; font-weight: 400; line-height: 1.5; font-family: var(--font-family); width: 100%; padding: 12px 5px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".nTtVZ .yL6v8 textarea",
          "cssText": ".nTtVZ .yL6v8 textarea { max-height: 100px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".nTtVZ .QJkxF",
          "cssText": ".nTtVZ .QJkxF { font-size: 1rem; font-weight: 400; line-height: 1.5; font-family: var(--font-family); color: RGB(var(--black)); padding: 20px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".nTtVZ .A0l7h",
          "cssText": ".nTtVZ .A0l7h { border-right: rgba(var(--black),.25)1px solid; margin-right: 9px; padding: 0px 9px 0px 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".nTtVZ .CTDfP",
          "cssText": ".nTtVZ .CTDfP { background-color: rgba(var(--black),.07); flex-direction: column; padding: 8px 0px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".nTtVZ .CTDfP .gdfgp",
          "cssText": ".nTtVZ .CTDfP .gdfgp { align-items: baseline; padding: 8px 0px; display: flex; overflow: auto hidden; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".nTtVZ .CTDfP .gdfgp > :first-child",
          "cssText": ".nTtVZ .CTDfP .gdfgp > :first-child { margin-left: auto; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".nTtVZ .CTDfP .gdfgp > :last-child",
          "cssText": ".nTtVZ .CTDfP .gdfgp > :last-child { margin-right: auto; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hyiL2",
          "cssText": ".hyiL2 { --post-padding: 10px; --post-header-vertical-padding: 10px; flex-direction: row; justify-content: center; width: 100%; display: flex; position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".USr9U",
          "cssText": ".USr9U { flex-direction: column; flex-grow: 1; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".V3aM5",
          "cssText": ".V3aM5 { box-sizing: border-box; vertical-align: middle; cursor: pointer; justify-content: space-evenly; align-items: center; padding: 5px 10px; display: flex; position: absolute; bottom: 0px; left: 0px; right: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".V3aM5.NUgGE",
          "cssText": ".V3aM5.NUgGE { justify-content: flex-end; width: fit-content; left: auto; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".V3aM5 svg",
          "cssText": ".V3aM5 svg { filter: drop-shadow(rgb(0, 0, 0) 0px 0px 3px); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".V3aM5 .ES7KG",
          "cssText": ".V3aM5 .ES7KG { box-sizing: border-box; filter: drop-shadow(rgb(0, 0, 0) 0px 0px 3px); flex-grow: 1; justify-self: center; align-items: center; height: 24px; margin: 0px 10px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".V3aM5 .NqMAD",
          "cssText": ".V3aM5 .NqMAD { background-color: rgba(255, 255, 255, 0.2); width: 100%; height: 2px; position: relative; top: -1px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".V3aM5 .NqMAD .kmLdA, .V3aM5 .NqMAD .qW8gI",
          "cssText": ".V3aM5 .NqMAD .kmLdA, .V3aM5 .NqMAD .qW8gI { height: 2px; position: absolute; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".V3aM5 .NqMAD .qW8gI",
          "cssText": ".V3aM5 .NqMAD .qW8gI { background-color: rgba(255, 255, 255, 0.4); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".V3aM5 .NqMAD .kmLdA",
          "cssText": ".V3aM5 .NqMAD .kmLdA { background-color: rgb(255, 255, 255); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".V3aM5 .NqMAD .g82Fd, .V3aM5 .NqMAD .oaGjt",
          "cssText": ".V3aM5 .NqMAD .g82Fd, .V3aM5 .NqMAD .oaGjt { background-color: rgb(255, 255, 255); border-radius: 50%; width: 10px; height: 10px; margin-left: -5px; position: absolute; top: -4px; transform: scale(1); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".V3aM5 .NqMAD .g82Fd.YBpn6, .V3aM5 .NqMAD .oaGjt.YBpn6",
          "cssText": ".V3aM5 .NqMAD .g82Fd.YBpn6, .V3aM5 .NqMAD .oaGjt.YBpn6 { transition: transform 0.2s ease-in-out; transform: scale(1.5); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".V3aM5 .NqMAD .oaGjt",
          "cssText": ".V3aM5 .NqMAD .oaGjt { visibility: hidden; background-color: rgba(255, 255, 255, 0.4); position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".V3aM5 .NqMAD .m4j3o",
          "cssText": ".V3aM5 .NqMAD .m4j3o { border: 2px solid rgba(0, 0, 0, 0.75); border-radius: 3px; justify-content: center; align-items: flex-end; display: flex; position: absolute; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".V3aM5 .NqMAD .m4j3o .FdHaH",
          "cssText": ".V3aM5 .NqMAD .m4j3o .FdHaH { font-size: 0.78125rem; font-weight: 700; line-height: 1.52; font-family: var(--font-family); color: rgb(255, 255, 255); filter: drop-shadow(rgb(0, 0, 0) 0px 0px 3px); margin-bottom: 5px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".V3aM5 .IUn0z",
          "cssText": ".V3aM5 .IUn0z { font-size: 0.875rem; font-weight: 700; line-height: 1.42857; font-family: var(--font-family); color: rgb(255, 255, 255); filter: drop-shadow(rgb(0, 0, 0) 0px 0px 3px); min-width: 31px; margin-right: 5px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".V3aM5 .cP4TA",
          "cssText": ".V3aM5 .cP4TA { padding: 10px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".wFg7L",
          "cssText": ".wFg7L { flex-wrap: wrap; gap: 4px; padding: 16px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".wFg7L a",
          "cssText": ".wFg7L a { text-decoration: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".naRXw",
          "cssText": ".naRXw { font-size: 0.875rem; font-weight: 500; line-height: 1.25rem; font-family: var(--font-family-modern); background-color: rgba(var(--black),.1); color: RGB(var(--black)); border-radius: 9999px; padding: 8px 12px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".naRXw .hU3f3",
          "cssText": ".naRXw .hU3f3 { align-items: center; gap: 6px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".PuLtZ",
          "cssText": ".PuLtZ { scroll-snap-type: x mandatory; scrollbar-width: none; align-items: center; width: 100vw; display: flex; position: relative; overflow-x: scroll; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".PuLtZ::-webkit-scrollbar",
          "cssText": ".PuLtZ::-webkit-scrollbar { width: 0px; height: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".PuLtZ::-webkit-scrollbar",
          "cssText": ".PuLtZ::-webkit-scrollbar { display: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".PuLtZ .eFULQ",
          "cssText": ".PuLtZ .eFULQ { box-sizing: border-box; scroll-snap-align: start; scroll-snap-stop: always; flex-shrink: 0; justify-content: center; width: 100vw; min-height: 1px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".kEaLk, .C4lo4, .EfjkQ",
          "cssText": ".kEaLk, .C4lo4, .EfjkQ { cursor: pointer; pointer-events: none; justify-content: center; align-items: center; width: 100%; height: 100%; display: flex; position: absolute; top: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".kEaLk",
          "cssText": ".kEaLk { background-color: rgba(0, 0, 0, 0.25); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".kEaLk.eB3NB",
          "cssText": ".kEaLk.eB3NB { background-color: transparent; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".kEaLk .EfjkQ svg",
          "cssText": ".kEaLk .EfjkQ svg { animation: 1s ease 0s 1 normal none running CuYh8; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframesRule",
          "selector": "",
          "cssText": "@keyframes CuYh8 { \n  0% { opacity: 1; transform: scale(1); }\n  100% { opacity: 0; transform: scale(3); }\n}",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "0% { opacity: 1; transform: scale(1); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "100% { opacity: 0; transform: scale(3); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".gDuxW",
          "cssText": ".gDuxW { cursor: pointer; width: 100%; height: 100%; line-height: 0; position: relative; overflow: hidden; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".gDuxW .yz4vl",
          "cssText": ".gDuxW .yz4vl { width: 100%; height: 100%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".gDuxW video",
          "cssText": ".gDuxW video { background-color: rgb(0, 0, 0); width: 100%; height: 100%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".gDuxW:not(:-webkit-any(.oce3Y, .RYYxJ)) video",
          "cssText": ".gDuxW:not(:-webkit-any(.oce3Y, .RYYxJ)) video { max-height: 80vh; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".gDuxW:not(:is(.oce3Y, .RYYxJ)) video",
          "cssText": ".gDuxW:not(:is(.oce3Y, .RYYxJ)) video { max-height: 80vh; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".gDuxW.iTJ8p:not(.RYYxJ) video",
          "cssText": ".gDuxW.iTJ8p:not(.RYYxJ) video { max-height: 50vh; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ykHbW",
          "cssText": ".ykHbW { opacity: 1; background-color: rgba(0, 0, 0, 0.25); position: absolute; inset: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ykHbW.sm7Xn",
          "cssText": ".ykHbW.sm7Xn { opacity: 0; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".qILrx",
          "cssText": ".qILrx { height: 65px; margin: auto; position: absolute; top: 50%; left: 0px; right: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".qILrx > span",
          "cssText": ".qILrx > span { justify-content: center; align-items: center; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".A8GnA",
          "cssText": ".A8GnA { z-index: 100; border: 1px solid var(--modal-border); background-color: var(--modal); border-radius: 8px; margin: 16px; box-shadow: rgba(0, 0, 0, 0.05) 0px 4px 16px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".k4_Vq",
          "cssText": ".k4_Vq { color-scheme: unset; forced-color-adjust: unset; mask: unset; math-depth: unset; position: unset; position-anchor: unset; text-size-adjust: unset; appearance: unset; color: unset; font: unset; font-palette: unset; font-synthesis: unset; position-area: unset; text-orientation: unset; text-rendering: unset; text-spacing-trim: unset; -webkit-font-smoothing: unset; -webkit-locale: unset; -webkit-text-orientation: unset; -webkit-writing-mode: unset; writing-mode: unset; zoom: unset; accent-color: unset; place-content: unset; place-items: unset; place-self: unset; alignment-baseline: unset; anchor-name: unset; anchor-scope: unset; animation-composition: unset; animation: unset; app-region: unset; aspect-ratio: unset; backdrop-filter: unset; backface-visibility: unset; background: unset; background-blend-mode: unset; baseline-shift: unset; baseline-source: unset; block-size: unset; border-block: unset; border: unset; border-radius: unset; border-collapse: unset; border-end-end-radius: unset; border-end-start-radius: unset; border-inline: unset; border-start-end-radius: unset; border-start-start-radius: unset; inset: unset; box-decoration-break: unset; box-shadow: unset; box-sizing: unset; break-after: unset; break-before: unset; break-inside: unset; buffered-rendering: unset; caption-side: unset; caret-animation: unset; caret-color: unset; clear: unset; clip: unset; clip-path: unset; clip-rule: unset; color-interpolation: unset; color-interpolation-filters: unset; color-rendering: unset; columns: unset; column-fill: unset; gap: unset; column-rule: unset; column-span: unse...",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".k4_Vq + .k4_Vq",
          "cssText": ".k4_Vq + .k4_Vq { margin-top: 4px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".If3QZ",
          "cssText": ".If3QZ { box-sizing: border-box; padding-right: var(--post-padding); padding-left: var(--post-padding); justify-content: flex-end; margin-top: 8px; margin-bottom: 16px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".If3QZ a",
          "cssText": ".If3QZ a { font-size: 1rem; font-weight: 400; line-height: 1.5; font-family: var(--font-family); color: rgba(var(--black),.65); word-break: break-all; text-decoration: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".DdFPj",
          "cssText": ".DdFPj { cursor: pointer; width: 100%; line-height: 0; position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".jWulj",
          "cssText": ".jWulj { box-sizing: content-box; padding-right: var(--post-padding); padding-left: var(--post-padding); cursor: default; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".DdFPj:hover .Dt_Mi",
          "cssText": ".DdFPj:hover .Dt_Mi { opacity: 1; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".seYEy:focus-within .Dt_Mi",
          "cssText": ".seYEy:focus-within .Dt_Mi { opacity: 1; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".DdFPj:focus-within .Dt_Mi",
          "cssText": ".DdFPj:focus-within .Dt_Mi { opacity: 1; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Dt_Mi",
          "cssText": ".Dt_Mi { color: rgb(255, 255, 255); font-weight: 900; line-height: initial; opacity: 0.1; background-color: rgba(17, 17, 17, 0.7); border-radius: 4px; padding: 1px 4px; text-decoration: none; position: absolute; bottom: 20px; left: 15px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".od3k_[data-popper-reference-hidden=\"true\"]",
          "cssText": ".od3k_[data-popper-reference-hidden=\"true\"] { visibility: initial; pointer-events: initial; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".CdvbL",
          "cssText": ".CdvbL { min-width: 200px; max-width: 298px; max-height: 370px; font-size: 0.875rem; font-family: var(--font-family); background-color: RGB(var(--black)); color: RGB(var(--white)); border-radius: 6px; padding: 11px 12px; font-weight: 500; line-height: 20px; position: relative; overflow-y: scroll; box-shadow: rgba(0, 0, 0, 0.25) 0px 0px 4px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".CdvbL h2",
          "cssText": ".CdvbL h2 { font-size: 20px; font-weight: 600; line-height: 35px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".POhPp[data-placement*=\"bottom-start\"]",
          "cssText": ".POhPp[data-placement*=\"bottom-start\"] { top: -16px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".POhPp[data-placement*=\"bottom-start\"]::after",
          "cssText": ".POhPp[data-placement*=\"bottom-start\"]::after { border-bottom-color: RGB(var(--black)); left: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".NDQyX",
          "cssText": ".NDQyX { width: 100%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Pr7R3",
          "cssText": ".Pr7R3 { width: 100%; margin-bottom: 4px; line-height: 0; display: block; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Pr7R3 .DdFPj",
          "cssText": ".Pr7R3 .DdFPj { margin-bottom: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Pr7R3 .eqBap",
          "cssText": ".Pr7R3 .eqBap { box-sizing: border-box; padding-right: var(--post-padding); padding-left: var(--post-padding); background-color: rgba(var(--black),.07); width: 100%; height: 30px; color: rgba(var(--black),.4); grid-template-columns: auto 15px; text-decoration: none; display: grid; overflow: hidden; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Pr7R3 .eqBap:hover",
          "cssText": ".Pr7R3 .eqBap:hover { background-color: RGB(var(--follow)); color: RGB(var(--deprecated-accent)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Pr7R3 .eqBap:hover use",
          "cssText": ".Pr7R3 .eqBap:hover use { --icon-color-primary: RGB(var(--deprecated-accent)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Pr7R3 .eqBap .tGxQL",
          "cssText": ".Pr7R3 .eqBap .tGxQL { font-size: 0.875rem; font-weight: 400; line-height: 1.42857; font-family: var(--font-family); text-overflow: ellipsis; align-self: center; overflow: hidden; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 540px) {\n  .Pr7R3 .eqBap .tGxQL { font-size: 1rem; font-weight: 400; line-height: 1.5; font-family: var(--font-family); }\n}",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Pr7R3 .eqBap .tGxQL",
          "cssText": ".Pr7R3 .eqBap .tGxQL { font-size: 1rem; font-weight: 400; line-height: 1.5; font-family: var(--font-family); }",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSSupportsRule",
          "selector": "",
          "cssText": "@supports (display:-webkit-box) and (-webkit-line-clamp:1) {\n  .Pr7R3 .eqBap .tGxQL { -webkit-line-clamp: 1; -webkit-box-orient: vertical; display: -webkit-box; }\n}",
          "urls": [],
          "group": "(display:-webkit-box) and (-webkit-line-clamp:1)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "(display:-webkit-box) and (-webkit-line-clamp:1)",
              "requiresEcho": true,
              "echoTokens": [
                "display",
                "-webkit-box",
                "-webkit-line-clamp",
                "1"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Pr7R3 .eqBap .tGxQL",
          "cssText": ".Pr7R3 .eqBap .tGxQL { -webkit-line-clamp: 1; -webkit-box-orient: vertical; display: -webkit-box; }",
          "urls": [],
          "group": "(display:-webkit-box) and (-webkit-line-clamp:1)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "(display:-webkit-box) and (-webkit-line-clamp:1)",
              "requiresEcho": true,
              "echoTokens": [
                "display",
                "-webkit-box",
                "-webkit-line-clamp",
                "1"
              ]
            }
          ]
        },
        {
          "type": "CSSSupportsRule",
          "selector": "",
          "cssText": "@supports not ((display:-webkit-box) and (-webkit-line-clamp:1)) {\n  .Pr7R3 .eqBap .tGxQL { white-space: nowrap; }\n}",
          "urls": [],
          "group": "not ((display:-webkit-box) and (-webkit-line-clamp:1))",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "not ((display:-webkit-box) and (-webkit-line-clamp:1))",
              "requiresEcho": true,
              "echoTokens": [
                "not",
                "display",
                "-webkit-box",
                "-webkit-line-clamp",
                "1"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Pr7R3 .eqBap .tGxQL",
          "cssText": ".Pr7R3 .eqBap .tGxQL { white-space: nowrap; }",
          "urls": [],
          "group": "not ((display:-webkit-box) and (-webkit-line-clamp:1))",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "not ((display:-webkit-box) and (-webkit-line-clamp:1))",
              "requiresEcho": true,
              "echoTokens": [
                "not",
                "display",
                "-webkit-box",
                "-webkit-line-clamp",
                "1"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Pr7R3 .eqBap .x3zpc",
          "cssText": ".Pr7R3 .eqBap .x3zpc { align-items: center; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Pr7R3 .k8FXT",
          "cssText": ".Pr7R3 .k8FXT { margin-left: var(--post-padding); padding-left: 8px; padding-right: 4px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".gXnIr",
          "cssText": ".gXnIr { box-sizing: border-box; padding-right: var(--post-padding); padding-left: var(--post-padding); width: 100%; margin-bottom: 15px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".gaUuO",
          "cssText": ".gaUuO { cursor: pointer; text-decoration: none; display: block; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Nu6LP",
          "cssText": ".Nu6LP { width: 100%; color: RGB(var(--black)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Sv170",
          "cssText": ".Sv170 { border-top-color: ; border-top-style: ; border-top-width: ; border-right-color: ; border-right-style: ; border-right-width: ; border-bottom-color: ; border-bottom-style: ; border-left-color: ; border-left-style: ; border-left-width: ; border-image-source: ; border-image-slice: ; border-image-width: ; border-image-outset: ; border-image-repeat: ; background-color: var(--content-panel); border-bottom-width: 0px; border-top-left-radius: 6px; border-top-right-radius: 6px; margin: 0px; display: flex; overflow: hidden; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Sv170 .prqGC",
          "cssText": ".Sv170 .prqGC { padding: 16px 12px 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Sv170 .AO6cP",
          "cssText": ".Sv170 .AO6cP { font-size: 1.625rem; font-weight: 400; line-height: 1.30769; font-family: var(--font-family); color: RGB(var(--black)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Sv170.POcHT",
          "cssText": ".Sv170.POcHT { border-bottom: 1px solid rgba(var(--black),.25); text-align: center; justify-content: center; align-items: center; height: 250px; position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 540px) {\n  .Sv170.POcHT { height: 200px; }\n}",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Sv170.POcHT",
          "cssText": ".Sv170.POcHT { height: 200px; }",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Sv170.POcHT .pqMQN",
          "cssText": ".Sv170.POcHT .pqMQN { object-fit: cover; width: 100%; height: 100%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Sv170.POcHT .prqGC",
          "cssText": ".Sv170.POcHT .prqGC { content: \"\"; background-color: rgba(0, 0, 0, 0.4); justify-content: center; align-items: center; padding: 16px 12px; display: flex; position: absolute; inset: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Sv170.POcHT .AO6cP",
          "cssText": ".Sv170.POcHT .AO6cP { text-overflow: ellipsis; color: rgb(255, 255, 255); overflow: hidden; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSSupportsRule",
          "selector": "",
          "cssText": "@supports (display:-webkit-box) and (-webkit-line-clamp:4) {\n  .Sv170.POcHT .AO6cP { -webkit-line-clamp: 4; -webkit-box-orient: vertical; display: -webkit-box; }\n}",
          "urls": [],
          "group": "(display:-webkit-box) and (-webkit-line-clamp:4)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "(display:-webkit-box) and (-webkit-line-clamp:4)",
              "requiresEcho": true,
              "echoTokens": [
                "display",
                "-webkit-box",
                "-webkit-line-clamp",
                "4"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Sv170.POcHT .AO6cP",
          "cssText": ".Sv170.POcHT .AO6cP { -webkit-line-clamp: 4; -webkit-box-orient: vertical; display: -webkit-box; }",
          "urls": [],
          "group": "(display:-webkit-box) and (-webkit-line-clamp:4)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "(display:-webkit-box) and (-webkit-line-clamp:4)",
              "requiresEcho": true,
              "echoTokens": [
                "display",
                "-webkit-box",
                "-webkit-line-clamp",
                "4"
              ]
            }
          ]
        },
        {
          "type": "CSSSupportsRule",
          "selector": "",
          "cssText": "@supports not ((display:-webkit-box) and (-webkit-line-clamp:4)) {\n  .Sv170.POcHT .AO6cP { white-space: nowrap; }\n}",
          "urls": [],
          "group": "not ((display:-webkit-box) and (-webkit-line-clamp:4))",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "not ((display:-webkit-box) and (-webkit-line-clamp:4))",
              "requiresEcho": true,
              "echoTokens": [
                "not",
                "display",
                "-webkit-box",
                "-webkit-line-clamp",
                "4"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Sv170.POcHT .AO6cP",
          "cssText": ".Sv170.POcHT .AO6cP { white-space: nowrap; }",
          "urls": [],
          "group": "not ((display:-webkit-box) and (-webkit-line-clamp:4))",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "not ((display:-webkit-box) and (-webkit-line-clamp:4))",
              "requiresEcho": true,
              "echoTokens": [
                "not",
                "display",
                "-webkit-box",
                "-webkit-line-clamp",
                "4"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Sv170.NMiaP",
          "cssText": ".Sv170.NMiaP { border-bottom-width: 1px; border-bottom-right-radius: 6px; border-bottom-left-radius: 6px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Sv170.NMiaP .prqGC",
          "cssText": ".Sv170.NMiaP .prqGC { padding: 16px 12px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".PUcxv",
          "cssText": ".PUcxv { box-sizing: border-box; border-right-color: ; border-right-style: ; border-right-width: ; border-bottom-color: ; border-bottom-style: ; border-bottom-width: ; border-left-color: ; border-left-style: ; border-left-width: ; border-image-source: ; border-image-slice: ; border-image-width: ; border-image-outset: ; border-image-repeat: ; background-color: var(--content-panel); border-top: none; border-bottom-right-radius: 6px; border-bottom-left-radius: 6px; padding: 8px 12px 16px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".PUcxv.o9hq8",
          "cssText": ".PUcxv.o9hq8 { border-top: 1px solid rgba(var(--black),.25); border-top-left-radius: 6px; border-top-right-radius: 6px; padding-top: 16px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".PUcxv.rKhPR",
          "cssText": ".PUcxv.rKhPR { padding-top: 16px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".nsUJI",
          "cssText": ".nsUJI { text-overflow: ellipsis; font-size: 1rem; font-weight: 400; line-height: 1.5; font-family: var(--font-family); color: RGB(var(--black)); margin-bottom: 8px; overflow: hidden; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSSupportsRule",
          "selector": "",
          "cssText": "@supports (display:-webkit-box) and (-webkit-line-clamp:2) {\n  .nsUJI { -webkit-line-clamp: 2; -webkit-box-orient: vertical; display: -webkit-box; }\n}",
          "urls": [],
          "group": "(display:-webkit-box) and (-webkit-line-clamp:2)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "(display:-webkit-box) and (-webkit-line-clamp:2)",
              "requiresEcho": true,
              "echoTokens": [
                "display",
                "-webkit-box",
                "-webkit-line-clamp",
                "2"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".nsUJI",
          "cssText": ".nsUJI { -webkit-line-clamp: 2; -webkit-box-orient: vertical; display: -webkit-box; }",
          "urls": [],
          "group": "(display:-webkit-box) and (-webkit-line-clamp:2)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "(display:-webkit-box) and (-webkit-line-clamp:2)",
              "requiresEcho": true,
              "echoTokens": [
                "display",
                "-webkit-box",
                "-webkit-line-clamp",
                "2"
              ]
            }
          ]
        },
        {
          "type": "CSSSupportsRule",
          "selector": "",
          "cssText": "@supports not ((display:-webkit-box) and (-webkit-line-clamp:2)) {\n  .nsUJI { white-space: nowrap; }\n}",
          "urls": [],
          "group": "not ((display:-webkit-box) and (-webkit-line-clamp:2))",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "not ((display:-webkit-box) and (-webkit-line-clamp:2))",
              "requiresEcho": true,
              "echoTokens": [
                "not",
                "display",
                "-webkit-box",
                "-webkit-line-clamp",
                "2"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".nsUJI",
          "cssText": ".nsUJI { white-space: nowrap; }",
          "urls": [],
          "group": "not ((display:-webkit-box) and (-webkit-line-clamp:2))",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "not ((display:-webkit-box) and (-webkit-line-clamp:2))",
              "requiresEcho": true,
              "echoTokens": [
                "not",
                "display",
                "-webkit-box",
                "-webkit-line-clamp",
                "2"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".nsUJI:last-child",
          "cssText": ".nsUJI:last-child { margin-bottom: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".OCxEI",
          "cssText": ".OCxEI { text-overflow: ellipsis; font-size: 0.78125rem; font-weight: 400; line-height: 1.52; font-family: var(--font-family); color: rgba(var(--black),.65); text-transform: uppercase; flex-wrap: nowrap; overflow: hidden; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSSupportsRule",
          "selector": "",
          "cssText": "@supports (display:-webkit-box) and (-webkit-line-clamp:1) {\n  .OCxEI { -webkit-line-clamp: 1; -webkit-box-orient: vertical; display: -webkit-box; }\n}",
          "urls": [],
          "group": "(display:-webkit-box) and (-webkit-line-clamp:1)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "(display:-webkit-box) and (-webkit-line-clamp:1)",
              "requiresEcho": true,
              "echoTokens": [
                "display",
                "-webkit-box",
                "-webkit-line-clamp",
                "1"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".OCxEI",
          "cssText": ".OCxEI { -webkit-line-clamp: 1; -webkit-box-orient: vertical; display: -webkit-box; }",
          "urls": [],
          "group": "(display:-webkit-box) and (-webkit-line-clamp:1)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "(display:-webkit-box) and (-webkit-line-clamp:1)",
              "requiresEcho": true,
              "echoTokens": [
                "display",
                "-webkit-box",
                "-webkit-line-clamp",
                "1"
              ]
            }
          ]
        },
        {
          "type": "CSSSupportsRule",
          "selector": "",
          "cssText": "@supports not ((display:-webkit-box) and (-webkit-line-clamp:1)) {\n  .OCxEI { white-space: nowrap; }\n}",
          "urls": [],
          "group": "not ((display:-webkit-box) and (-webkit-line-clamp:1))",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "not ((display:-webkit-box) and (-webkit-line-clamp:1))",
              "requiresEcho": true,
              "echoTokens": [
                "not",
                "display",
                "-webkit-box",
                "-webkit-line-clamp",
                "1"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".OCxEI",
          "cssText": ".OCxEI { white-space: nowrap; }",
          "urls": [],
          "group": "not ((display:-webkit-box) and (-webkit-line-clamp:1))",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "not ((display:-webkit-box) and (-webkit-line-clamp:1))",
              "requiresEcho": true,
              "echoTokens": [
                "not",
                "display",
                "-webkit-box",
                "-webkit-line-clamp",
                "1"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".OVGbY",
          "cssText": ".OVGbY { margin: 0px 8px; font-weight: 400; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".zR66v",
          "cssText": ".zR66v { width: 100%; max-width: 540px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".qrzdF",
          "cssText": ".qrzdF { background: RGB(var(--white)); width: 100%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".oXROo",
          "cssText": ".oXROo { margin-bottom: var(--post-padding); padding-right: var(--post-padding); padding-left: var(--post-padding); flex-direction: column; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".oXROo.Hz5tF",
          "cssText": ".oXROo.Hz5tF { padding-bottom: var(--post-padding); margin-bottom: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".BCfLs",
          "cssText": ".BCfLs { height: 150px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".iLvsm",
          "cssText": ".iLvsm { min-height: 0px; margin-bottom: 20px; font-size: 27px; font-weight: 500; line-height: 34px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".GhhyY",
          "cssText": ".GhhyY { box-sizing: border-box; text-align: center; align-items: center; min-height: 36px; margin-bottom: 10px; padding: 0px 15px; font-size: 16px; font-weight: 500; line-height: 20px; display: flex; position: relative; overflow-x: hidden; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".GhhyY:last-of-type",
          "cssText": ".GhhyY:last-of-type { margin-bottom: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "button.GhhyY",
          "cssText": "button.GhhyY { cursor: pointer; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".GhhyY.SHz7w",
          "cssText": ".GhhyY.SHz7w { border: 2px solid RGB(var(--deprecated-accent)); border-radius: 18px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".GhhyY.SHz7w:hover",
          "cssText": ".GhhyY.SHz7w:hover { background-color: RGB(var(--deprecated-accent)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".GhhyY.SHz7w:hover .VVJno",
          "cssText": ".GhhyY.SHz7w:hover .VVJno { color: RGB(var(--black)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".GhhyY.EMkTm",
          "cssText": ".GhhyY.EMkTm { background-color: rgba(var(--black),.13); pointer-events: none; border-radius: 18px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".GhhyY.EMkTm .VVJno",
          "cssText": ".GhhyY.EMkTm .VVJno { color: rgba(var(--black),.4); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".GhhyY.Lu7CU",
          "cssText": ".GhhyY.Lu7CU { background-color: rgba(var(--black),.07); text-align: left; border: 0px; border-radius: 8px; flex-direction: row; font-weight: 400; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".GhhyY.Lu7CU .VVJno",
          "cssText": ".GhhyY.Lu7CU .VVJno { color: RGB(var(--black)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".VVJno",
          "cssText": ".VVJno { max-width: 100%; color: RGB(var(--deprecated-accent)); overflow-wrap: anywhere; flex: 1 1 0%; padding: 7px 0px; font-weight: 700; display: inline; transform: translate(0px); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".D63Wc",
          "cssText": ".D63Wc { background-color: rgba(var(--black),.1); content: \"\"; height: 100%; display: block; position: absolute; top: 0px; left: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (prefers-reduced-motion: no-preference) {\n  .D63Wc { animation: 1s cubic-bezier(0.8, 0, 0.3, 1) 0s 1 normal none running a9eBs; }\n}",
          "urls": [],
          "group": "(prefers-reduced-motion: no-preference)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "prefers-reduced-motion",
              "semanticGroup": "user preference",
              "claim": "reduced motion preference",
              "excerpt": "(prefers-reduced-motion: no-preference)",
              "requiresEcho": true,
              "echoTokens": [
                "prefers-reduced-motion",
                "no-preference"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".D63Wc",
          "cssText": ".D63Wc { animation: 1s cubic-bezier(0.8, 0, 0.3, 1) 0s 1 normal none running a9eBs; }",
          "urls": [],
          "group": "(prefers-reduced-motion: no-preference)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "prefers-reduced-motion",
              "semanticGroup": "user preference",
              "claim": "reduced motion preference",
              "excerpt": "(prefers-reduced-motion: no-preference)",
              "requiresEcho": true,
              "echoTokens": [
                "prefers-reduced-motion",
                "no-preference"
              ]
            }
          ]
        },
        {
          "type": "CSSKeyframesRule",
          "selector": "",
          "cssText": "@keyframes a9eBs { \n  0% { width: 0px; }\n}",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "0% { width: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Fs5NP .D63Wc",
          "cssText": ".Fs5NP .D63Wc { background-color: rgba(var(--deprecated-accent),.4); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".MROL0",
          "cssText": ".MROL0 { margin-left: 15px; display: inline-flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ACLdV",
          "cssText": ".ACLdV { color: RGB(var(--black)); margin-left: 15px; display: inline-flex; transform: translate(0px); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".SqYOv",
          "cssText": ".SqYOv { color: rgba(var(--black),.65); text-align: center; margin-top: 18px; font-size: 12.5px; line-height: normal; display: block; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".palette--snowBright .Fs5NP .D63Wc",
          "cssText": ".palette--snowBright .Fs5NP .D63Wc { background-color: rgb(0, 207, 53); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".palette--cybernetic .Lu7CU .VVJno, .palette--cybernetic .Lu7CU .ACLdV, .palette--ghost .Lu7CU .VVJno, .palette--ghost .Lu7CU .ACLdV, .palette--pride .SHz7w:hover .VVJno",
          "cssText": ".palette--cybernetic .Lu7CU .VVJno, .palette--cybernetic .Lu7CU .ACLdV, .palette--ghost .Lu7CU .VVJno, .palette--ghost .Lu7CU .ACLdV, .palette--pride .SHz7w:hover .VVJno { color: RGB(var(--white-on-dark)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".palette--cybernetic .SHz7w:hover .VVJno",
          "cssText": ".palette--cybernetic .SHz7w:hover .VVJno { color: rgb(60, 142, 34); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".palette--gothRave .SHz7w:hover .VVJno",
          "cssText": ".palette--gothRave .SHz7w:hover .VVJno { color: rgb(108, 78, 164); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".palette--ghost .SHz7w:hover .VVJno",
          "cssText": ".palette--ghost .SHz7w:hover .VVJno { color: RGB(var(--white-on-dark)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".palette--canary .SHz7w:hover .VVJno, .palette--cement .SHz7w:hover .VVJno",
          "cssText": ".palette--canary .SHz7w:hover .VVJno, .palette--cement .SHz7w:hover .VVJno { color: RGB(var(--white)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ibcjV .Lu7CU .VVJno, .ibcjV .Lu7CU .ACLdV",
          "cssText": ".ibcjV .Lu7CU .VVJno, .ibcjV .Lu7CU .ACLdV { color: RGB(var(--black)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ibcjV .Fs5NP .D63Wc",
          "cssText": ".ibcjV .Fs5NP .D63Wc { background-color: rgba(var(--deprecated-accent),.4); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".WoipV",
          "cssText": ".WoipV { pointer-events: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".VpTnv",
          "cssText": ".VpTnv { box-sizing: border-box; background: RGB(var(--purple)); min-height: 85px; color: RGB(var(--white)); cursor: pointer; display: flex; position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".VpTnv .iFok_",
          "cssText": ".VpTnv .iFok_ { background-color: transparent; width: 100%; height: 100%; position: absolute; top: 0px; left: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".VpTnv .iFok_.GR0kA",
          "cssText": ".VpTnv .iFok_.GR0kA { width: calc(100% - 85px); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".VpTnv .iFok_ .bgpDC",
          "cssText": ".VpTnv .iFok_ .bgpDC { height: inherit; background-color: rgba(0, 0, 0, 0.25); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".VpTnv .vP7cO",
          "cssText": ".VpTnv .vP7cO { pointer-events: none; width: 100%; height: 100%; display: flex; position: absolute; top: 0px; left: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".VpTnv .zwgHD",
          "cssText": ".VpTnv .zwgHD { pointer-events: initial; justify-content: center; align-self: center; align-items: center; margin: 0px 25px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".VpTnv .ZVJh0",
          "cssText": ".VpTnv .ZVJh0 { pointer-events: none; user-select: none; flex-direction: column; flex: 1 1 0%; justify-content: center; align-items: flex-start; min-width: 0px; padding-right: 20px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".VpTnv .ZVJh0 .Lshd2, .VpTnv .ZVJh0 .LKThX, .VpTnv .ZVJh0 .OKWej",
          "cssText": ".VpTnv .ZVJh0 .Lshd2, .VpTnv .ZVJh0 .LKThX, .VpTnv .ZVJh0 .OKWej { text-overflow: ellipsis; max-width: 100%; overflow: hidden; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSSupportsRule",
          "selector": "",
          "cssText": "@supports (display:-webkit-box) and (-webkit-line-clamp:1) {\n  .VpTnv .ZVJh0 .Lshd2, .VpTnv .ZVJh0 .LKThX, .VpTnv .ZVJh0 .OKWej { -webkit-line-clamp: 1; -webkit-box-orient: vertical; display: -webkit-box; }\n}",
          "urls": [],
          "group": "(display:-webkit-box) and (-webkit-line-clamp:1)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "(display:-webkit-box) and (-webkit-line-clamp:1)",
              "requiresEcho": true,
              "echoTokens": [
                "display",
                "-webkit-box",
                "-webkit-line-clamp",
                "1"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".VpTnv .ZVJh0 .Lshd2, .VpTnv .ZVJh0 .LKThX, .VpTnv .ZVJh0 .OKWej",
          "cssText": ".VpTnv .ZVJh0 .Lshd2, .VpTnv .ZVJh0 .LKThX, .VpTnv .ZVJh0 .OKWej { -webkit-line-clamp: 1; -webkit-box-orient: vertical; display: -webkit-box; }",
          "urls": [],
          "group": "(display:-webkit-box) and (-webkit-line-clamp:1)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "(display:-webkit-box) and (-webkit-line-clamp:1)",
              "requiresEcho": true,
              "echoTokens": [
                "display",
                "-webkit-box",
                "-webkit-line-clamp",
                "1"
              ]
            }
          ]
        },
        {
          "type": "CSSSupportsRule",
          "selector": "",
          "cssText": "@supports not ((display:-webkit-box) and (-webkit-line-clamp:1)) {\n  .VpTnv .ZVJh0 .Lshd2, .VpTnv .ZVJh0 .LKThX, .VpTnv .ZVJh0 .OKWej { white-space: nowrap; }\n}",
          "urls": [],
          "group": "not ((display:-webkit-box) and (-webkit-line-clamp:1))",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "not ((display:-webkit-box) and (-webkit-line-clamp:1))",
              "requiresEcho": true,
              "echoTokens": [
                "not",
                "display",
                "-webkit-box",
                "-webkit-line-clamp",
                "1"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".VpTnv .ZVJh0 .Lshd2, .VpTnv .ZVJh0 .LKThX, .VpTnv .ZVJh0 .OKWej",
          "cssText": ".VpTnv .ZVJh0 .Lshd2, .VpTnv .ZVJh0 .LKThX, .VpTnv .ZVJh0 .OKWej { white-space: nowrap; }",
          "urls": [],
          "group": "not ((display:-webkit-box) and (-webkit-line-clamp:1))",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@supports",
              "keyword": "supports(generic)",
              "semanticGroup": "engine feature",
              "claim": "generic supports probe",
              "excerpt": "not ((display:-webkit-box) and (-webkit-line-clamp:1))",
              "requiresEcho": true,
              "echoTokens": [
                "not",
                "display",
                "-webkit-box",
                "-webkit-line-clamp",
                "1"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".VpTnv .ZVJh0 .Lshd2",
          "cssText": ".VpTnv .ZVJh0 .Lshd2 { font-size: 1rem; font-weight: 700; line-height: 1.5; font-family: var(--font-family); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".VpTnv .ZVJh0 .LKThX, .VpTnv .ZVJh0 .OKWej",
          "cssText": ".VpTnv .ZVJh0 .LKThX, .VpTnv .ZVJh0 .OKWej { font-size: 0.875rem; font-weight: 400; line-height: 1.42857; font-family: var(--font-family); color: rgba(var(--white),.65); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".VpTnv .Zz9Fz",
          "cssText": ".VpTnv .Zz9Fz { width: 85px; height: 85px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".VpTnv .Zz9Fz img",
          "cssText": ".VpTnv .Zz9Fz img { object-fit: cover; width: 100%; height: 100%; display: block; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".VpTnv audio",
          "cssText": ".VpTnv audio { display: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".palette--snowBright .VpTnv",
          "cssText": ".palette--snowBright .VpTnv { background-color: rgba(var(--black),.65); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".palette--snowBright .VpTnv .iFok_ .bgpDC",
          "cssText": ".palette--snowBright .VpTnv .iFok_ .bgpDC { background-color: RGB(var(--purple)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".LbyNj",
          "cssText": ".LbyNj { margin-bottom: 10px; position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".LbyNj.acvR9",
          "cssText": ".LbyNj.acvR9 { margin-bottom: 0px; padding-bottom: 10px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".LbyNj:hover .WwHLs, .LbyNj:focus .WwHLs",
          "cssText": ".LbyNj:hover .WwHLs, .LbyNj:focus .WwHLs { opacity: 1; animation: 0.5s ease-in-out 4s 1 normal none running w94c1; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframesRule",
          "selector": "",
          "cssText": "@keyframes w94c1 { \n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(360deg); }\n}",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "0% { transform: rotate(0deg); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "100% { transform: rotate(360deg); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".LbyNj .WwHLs",
          "cssText": ".LbyNj .WwHLs { background: RGB(var(--deprecated-accent)); opacity: 0; border-radius: 1em; justify-content: center; align-items: center; width: 25px; height: 25px; transition: transform 0.2s ease-in, opacity 0.2s ease-in; display: flex; position: absolute; top: 10px; right: 10px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".LbyNj .WwHLs:hover, .LbyNj .WwHLs:focus",
          "cssText": ".LbyNj .WwHLs:hover, .LbyNj .WwHLs:focus { opacity: 1; transform: scale(1.1); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".bklUO",
          "cssText": ".bklUO { font-size: 1rem; font-weight: 400; line-height: 1.5; font-family: var(--font-family); border: 2px dashed rgba(var(--black),.65); justify-content: center; align-items: center; width: 100%; display: flex; position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".bklUO .WPVvO",
          "cssText": ".bklUO .WPVvO { width: 100%; height: 100%; color: RGB(var(--black)); opacity: 0.65; flex-direction: column; justify-content: center; align-items: center; transition: transform 0.2s ease-in, opacity 0.2s ease-in; display: flex; position: absolute; bottom: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".bklUO .WPVvO:hover",
          "cssText": ".bklUO .WPVvO:hover { opacity: 1; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".BIsI3.OHDdK",
          "cssText": ".BIsI3.OHDdK { height: 0px; padding-bottom: 65.1852%; position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".BIsI3.OHDdK.KilfT",
          "cssText": ".BIsI3.OHDdK.KilfT { padding-bottom: 80px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".BIsI3.OHDdK.SDYOz",
          "cssText": ".BIsI3.OHDdK.SDYOz { padding-bottom: 232px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".BIsI3.zZeJN",
          "cssText": ".BIsI3.zZeJN { height: 0px; padding-bottom: 100%; position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".BIsI3.zZeJN.KilfT",
          "cssText": ".BIsI3.zZeJN.KilfT { padding-bottom: 61%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".BIsI3.t69by",
          "cssText": ".BIsI3.t69by { width: 100%; height: 120px; position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Z6JVM",
          "cssText": ".Z6JVM { width: 100%; max-width: 540px; margin-top: 4px; margin-bottom: 4px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Z6JVM:first-child",
          "cssText": ".Z6JVM:first-child { margin-top: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Z6JVM:last-child",
          "cssText": ".Z6JVM:last-child { margin-bottom: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media not (min-width: 990px) {\n  .Z6JVM { overflow: hidden; }\n}",
          "urls": [],
          "group": "not (min-width: 990px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "not (min-width: 990px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "990px",
                "990",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Z6JVM",
          "cssText": ".Z6JVM { overflow: hidden; }",
          "urls": [],
          "group": "not (min-width: 990px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "not (min-width: 990px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "990px",
                "990",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Z6JVM.OHDdK",
          "cssText": ".Z6JVM.OHDdK { height: 0px; padding-bottom: 65.1852%; position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Z6JVM.OHDdK.KilfT",
          "cssText": ".Z6JVM.OHDdK.KilfT { padding-bottom: 80px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Z6JVM.OHDdK.SDYOz",
          "cssText": ".Z6JVM.OHDdK.SDYOz { padding-bottom: 232px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Z6JVM.zZeJN",
          "cssText": ".Z6JVM.zZeJN { height: 0px; padding-bottom: 100%; position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Z6JVM.zZeJN.KilfT",
          "cssText": ".Z6JVM.zZeJN.KilfT { padding-bottom: 61%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Z6JVM.t69by",
          "cssText": ".Z6JVM.t69by { width: 100%; height: 120px; position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Z6JVM iframe",
          "cssText": ".Z6JVM iframe { width: 100%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Z6JVM .no7Dd",
          "cssText": ".Z6JVM .no7Dd { width: 100%; height: 100%; position: absolute; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".sl8DM",
          "cssText": ".sl8DM { box-sizing: border-box; padding-right: var(--post-padding); padding-left: var(--post-padding); font-size: 0.875rem; font-weight: 700; line-height: 1.42857; font-family: var(--font-family); display: block; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".RihjV",
          "cssText": ".RihjV { margin-top: 0.75em; margin-bottom: 0.75em; padding-right: 20px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ypwxx",
          "cssText": ".ypwxx { width: 100%; max-width: 540px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media not (min-width: 990px) {\n  .ypwxx { overflow: hidden; }\n}",
          "urls": [],
          "group": "not (min-width: 990px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "not (min-width: 990px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "990px",
                "990",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ypwxx",
          "cssText": ".ypwxx { overflow: hidden; }",
          "urls": [],
          "group": "not (min-width: 990px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "not (min-width: 990px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "990px",
                "990",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ypwxx .Cf37_",
          "cssText": ".ypwxx .Cf37_ { width: 100%; height: 100%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ypwxx .ONC_J",
          "cssText": ".ypwxx .ONC_J { height: 100%; position: absolute; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ypwxx.X93pX",
          "cssText": ".ypwxx.X93pX { height: 0px; position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".l7zyP",
          "cssText": ".l7zyP { width: 100%; max-width: 540px; min-height: 100px; font-size: 1.125rem; font-weight: 700; line-height: 1.33333; font-family: var(--font-family); position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".l7zyP .gGIs6",
          "cssText": ".l7zyP .gGIs6 { justify-content: center; align-items: center; width: 100%; height: 100%; margin-bottom: 5px; display: flex; position: absolute; top: 0px; left: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".l7zyP .gGIs6 a",
          "cssText": ".l7zyP .gGIs6 a { background-color: rgba(var(--black),.4); width: 100%; height: 100%; color: RGB(var(--white)); flex-direction: column; justify-content: center; align-items: center; text-decoration: none; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".l7zyP .gGIs6 a:hover",
          "cssText": ".l7zyP .gGIs6 a:hover { opacity: 0.7; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "._Krz6",
          "cssText": "._Krz6 { flex-direction: column; display: flex; container-type: inline-size; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".IBIxS",
          "cssText": ".IBIxS { flex-flow: row; justify-content: space-between; align-items: center; gap: 40px; padding: 12px 8px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 540px) {\n  .IBIxS { gap: 8px; padding: 16px 8px; }\n}",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".IBIxS",
          "cssText": ".IBIxS { gap: 8px; padding: 16px 8px; }",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".IBIxS.IatRg",
          "cssText": ".IBIxS.IatRg { gap: 4px; padding: 16px 2px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSContainerRule",
          "selector": "",
          "cssText": "@container (width: 260px) {\n  .IBIxS.IatRg { gap: 0px; padding: 16px 2px; }\n}",
          "urls": [],
          "group": "(width: 260px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".IBIxS.IatRg",
          "cssText": ".IBIxS.IatRg { gap: 0px; padding: 16px 2px; }",
          "urls": [],
          "group": "(width: 260px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".fPlC8",
          "cssText": ".fPlC8 { grid-template-columns: 1fr 1fr 1fr; justify-items: start; gap: 40px; width: 100%; display: grid; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 540px) {\n  .fPlC8 { gap: 8px; }\n}",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".fPlC8",
          "cssText": ".fPlC8 { gap: 8px; }",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".fPlC8.nLlV2",
          "cssText": ".fPlC8.nLlV2 { gap: 4px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSContainerRule",
          "selector": "",
          "cssText": "@container (width: 260px) {\n  .fPlC8.nLlV2 { gap: 0px; }\n}",
          "urls": [],
          "group": "(width: 260px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".fPlC8.nLlV2",
          "cssText": ".fPlC8.nLlV2 { gap: 0px; }",
          "urls": [],
          "group": "(width: 260px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Ba7oJ",
          "cssText": ".Ba7oJ { position: absolute; right: 52px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 540px) {\n  .Ba7oJ { right: 48px; }\n}",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Ba7oJ",
          "cssText": ".Ba7oJ { right: 48px; }",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 430px) {\n  .Ba7oJ { right: 44px; }\n}",
          "urls": [],
          "group": "(max-width: 430px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 430px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "430px",
                "430",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Ba7oJ",
          "cssText": ".Ba7oJ { right: 44px; }",
          "urls": [],
          "group": "(max-width: 430px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 430px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "430px",
                "430",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 540px) {\n  .yuW2r.BzaXP { width: calc(100% - 24px); }\n}",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".yuW2r.BzaXP",
          "cssText": ".yuW2r.BzaXP { width: calc(100% - 24px); }",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 430px) {\n  .yuW2r.BzaXP { width: calc(100% - 16px); }\n}",
          "urls": [],
          "group": "(max-width: 430px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 430px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "430px",
                "430",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".yuW2r.BzaXP",
          "cssText": ".yuW2r.BzaXP { width: calc(100% - 16px); }",
          "urls": [],
          "group": "(max-width: 430px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 430px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "430px",
                "430",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".eh8he",
          "cssText": ".eh8he { border-top-style: none; border-top-width: 1px; border-top-color: var(--content-tint-strong); opacity: 0; transition-property: opacity; transition-duration: 0.3s; transition-timing-function: ease-in-out; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".eh8he.ltcIE",
          "cssText": ".eh8he.ltcIE { opacity: 1; border-top-style: solid; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".WOhUa",
          "cssText": ".WOhUa { width: 390px; height: 510px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".bQrgi",
          "cssText": ".bQrgi { position: absolute; top: -62px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".bQrgi.OcoYW",
          "cssText": ".bQrgi.OcoYW { animation: 0.8s ease-out 0s 1 normal none running PbiJY; left: -24px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".bQrgi.OcoYW > svg use",
          "cssText": ".bQrgi.OcoYW > svg use { --icon-color-primary: var(--brand-red); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".bQrgi.S1W0q",
          "cssText": ".bQrgi.S1W0q { left: 8px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".bQrgi.S1W0q .lznHj, .bQrgi.S1W0q .n9OiO",
          "cssText": ".bQrgi.S1W0q .lznHj, .bQrgi.S1W0q .n9OiO { height: 100%; display: block; position: absolute; top: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".bQrgi.S1W0q .lznHj use, .bQrgi.S1W0q .n9OiO use",
          "cssText": ".bQrgi.S1W0q .lznHj use, .bQrgi.S1W0q .n9OiO use { --icon-color-primary: #748089; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".bQrgi.S1W0q .n9OiO",
          "cssText": ".bQrgi.S1W0q .n9OiO { transform-origin: 26px 54px; margin-left: -29px; animation: 0.8s ease-out 0s 1 normal none running OrFcV; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".bQrgi.S1W0q .lznHj",
          "cssText": ".bQrgi.S1W0q .lznHj { transform-origin: 0px 54px; margin-left: 3px; animation: 0.8s ease-out 0s 1 normal none running llHYx; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframesRule",
          "selector": "",
          "cssText": "@keyframes PbiJY { \n  0% { opacity: 0; transform: rotate(0deg); }\n  25% { opacity: 1; transform: rotate(-20deg); }\n  75% { transform: rotate(20deg); }\n  100% { opacity: 0; margin-top: -80px; transform: rotate(0deg); }\n}",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "0% { opacity: 0; transform: rotate(0deg); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "25% { opacity: 1; transform: rotate(-20deg); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "75% { transform: rotate(20deg); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "100% { opacity: 0; margin-top: -80px; transform: rotate(0deg); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframesRule",
          "selector": "",
          "cssText": "@keyframes OrFcV { \n  0% { opacity: 1; margin-top: -80px; transform: rotate(0deg); }\n  30% { opacity: 1; margin-top: -80px; }\n  80% { opacity: 0; margin-top: 0px; transform: rotate(-10deg); }\n  100% { opacity: 0; margin-top: 0px; transform: rotate(-10deg); }\n}",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "0% { opacity: 1; margin-top: -80px; transform: rotate(0deg); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "30% { opacity: 1; margin-top: -80px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "80% { opacity: 0; margin-top: 0px; transform: rotate(-10deg); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "100% { opacity: 0; margin-top: 0px; transform: rotate(-10deg); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframesRule",
          "selector": "",
          "cssText": "@keyframes llHYx { \n  0% { opacity: 1; margin-top: -80px; transform: rotate(0deg); }\n  30% { opacity: 1; margin-top: -80px; }\n  80% { opacity: 0; margin-top: 0px; transform: rotate(10deg); }\n  100% { opacity: 0; margin-top: 0px; transform: rotate(10deg); }\n}",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "0% { opacity: 1; margin-top: -80px; transform: rotate(0deg); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "30% { opacity: 1; margin-top: -80px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "80% { opacity: 0; margin-top: 0px; transform: rotate(10deg); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSKeyframeRule",
          "selector": "",
          "cssText": "100% { opacity: 0; margin-top: 0px; transform: rotate(10deg); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".pG5KN",
          "cssText": ".pG5KN { position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Vut9R",
          "cssText": ".Vut9R { color: var(--brand-red); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".LU8pm",
          "cssText": ".LU8pm { color: var(--brand-green); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".boF_H",
          "cssText": ".boF_H { font-size: 1rem; font-weight: 350; line-height: 1.5rem; font-family: var(--font-family-modern); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".tPhtl",
          "cssText": ".tPhtl { max-width: 240px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 540px) {\n  .tPhtl { max-width: 75vw; }\n}",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".tPhtl",
          "cssText": ".tPhtl { max-width: 75vw; }",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".pnhlO",
          "cssText": ".pnhlO { justify-content: center; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".n2mOy",
          "cssText": ".n2mOy { flex-direction: column; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 540px) {\n  .n2mOy { flex-direction: column-reverse; }\n}",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".n2mOy",
          "cssText": ".n2mOy { flex-direction: column-reverse; }",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".jtYrF",
          "cssText": ".jtYrF { max-height: 266px; margin-top: -8px; margin-bottom: -8px; overflow-y: scroll; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".jtYrF > :first-child",
          "cssText": ".jtYrF > :first-child { margin-top: 8px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".jtYrF > :last-child",
          "cssText": ".jtYrF > :last-child { margin-bottom: 8px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".jtYrF.JHZwu",
          "cssText": ".jtYrF.JHZwu { max-height: 209px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".F2NPn[data-active-item]:not(:hover)",
          "cssText": ".F2NPn[data-active-item]:not(:hover) { background-color: transparent; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".KuHJn",
          "cssText": ".KuHJn { font-size: 1rem; font-weight: 350; line-height: 1.5rem; font-family: var(--font-family-modern); background-color: var(--content-tint); max-width: 240px; color: var(--content-fg-secondary); border-radius: 8px; padding: 8px 12px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 540px) {\n  .KuHJn { max-width: 100%; margin-bottom: 8px; padding: 12px 16px; }\n}",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".KuHJn",
          "cssText": ".KuHJn { max-width: 100%; margin-bottom: 8px; padding: 12px 16px; }",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ESQx2",
          "cssText": ".ESQx2 { flex-direction: column; display: flex; container-type: inline-size; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".QF8_K",
          "cssText": ".QF8_K { flex-flow: row; justify-content: space-between; align-items: center; gap: 40px; padding: 12px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 540px) {\n  .QF8_K { gap: 8px; padding: 16px 12px; }\n}",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".QF8_K",
          "cssText": ".QF8_K { gap: 8px; padding: 16px 12px; }",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 350px) {\n  .QF8_K { gap: 8px; padding: 16px 8px; }\n}",
          "urls": [],
          "group": "(max-width: 350px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 350px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "350px",
                "350",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".QF8_K",
          "cssText": ".QF8_K { gap: 8px; padding: 16px 8px; }",
          "urls": [],
          "group": "(max-width: 350px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 350px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "350px",
                "350",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".QF8_K.Pv1Fw",
          "cssText": ".QF8_K.Pv1Fw { gap: 4px; padding: 16px 2px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSContainerRule",
          "selector": "",
          "cssText": "@container (width: 260px) {\n  .QF8_K.Pv1Fw { gap: 0px; padding: 16px 2px; }\n}",
          "urls": [],
          "group": "(width: 260px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".QF8_K.Pv1Fw",
          "cssText": ".QF8_K.Pv1Fw { gap: 0px; padding: 16px 2px; }",
          "urls": [],
          "group": "(width: 260px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".IivJ4",
          "cssText": ".IivJ4 { grid-template-columns: 1fr 1fr 1fr; justify-items: start; gap: 40px; width: 100%; display: grid; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 540px) {\n  .IivJ4 { gap: 8px; }\n}",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".IivJ4",
          "cssText": ".IivJ4 { gap: 8px; }",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".IivJ4.xc54X",
          "cssText": ".IivJ4.xc54X { gap: 4px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSContainerRule",
          "selector": "",
          "cssText": "@container (width: 260px) {\n  .IivJ4.xc54X { gap: 0px; }\n}",
          "urls": [],
          "group": "(width: 260px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".IivJ4.xc54X",
          "cssText": ".IivJ4.xc54X { gap: 0px; }",
          "urls": [],
          "group": "(width: 260px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".RTLvY",
          "cssText": ".RTLvY { text-align: left; font-size: 0.875rem; font-weight: 500; line-height: 1.25rem; font-family: var(--font-family-modern); color: var(--content-fg-secondary); border-radius: 9999px; flex-direction: row; justify-content: flex-start; align-items: center; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (hover: hover) and (pointer: fine) {\n  .RTLvY { transition: color 0.3s ease-out; }\n  .RTLvY:not(:has(.pIKFz:hover)) { transition: background-color 0.13333s ease-out; }\n  .RTLvY svg use { transition: --icon-color-primary 0.3s ease-out; }\n  .RTLvY .WLI6w { transition: background-color 0.13333s ease-out; }\n}",
          "urls": [],
          "group": "(hover: hover) and (pointer: fine)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "pointer",
              "semanticGroup": "input capability",
              "claim": "pointer accuracy",
              "excerpt": "(hover: hover) and (pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "hover",
                "pointer",
                "fine"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "hover",
              "semanticGroup": "input capability",
              "claim": "hover capability",
              "excerpt": "(hover: hover) and (pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "hover",
                "pointer",
                "fine"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".RTLvY",
          "cssText": ".RTLvY { transition: color 0.3s ease-out; }",
          "urls": [],
          "group": "(hover: hover) and (pointer: fine)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "pointer",
              "semanticGroup": "input capability",
              "claim": "pointer accuracy",
              "excerpt": "(hover: hover) and (pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "hover",
                "pointer",
                "fine"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "hover",
              "semanticGroup": "input capability",
              "claim": "hover capability",
              "excerpt": "(hover: hover) and (pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "hover",
                "pointer",
                "fine"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".RTLvY:not(:has(.pIKFz:hover))",
          "cssText": ".RTLvY:not(:has(.pIKFz:hover)) { transition: background-color 0.13333s ease-out; }",
          "urls": [],
          "group": "(hover: hover) and (pointer: fine)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "pointer",
              "semanticGroup": "input capability",
              "claim": "pointer accuracy",
              "excerpt": "(hover: hover) and (pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "hover",
                "pointer",
                "fine"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "hover",
              "semanticGroup": "input capability",
              "claim": "hover capability",
              "excerpt": "(hover: hover) and (pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "hover",
                "pointer",
                "fine"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".RTLvY svg use",
          "cssText": ".RTLvY svg use { transition: --icon-color-primary 0.3s ease-out; }",
          "urls": [],
          "group": "(hover: hover) and (pointer: fine)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "pointer",
              "semanticGroup": "input capability",
              "claim": "pointer accuracy",
              "excerpt": "(hover: hover) and (pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "hover",
                "pointer",
                "fine"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "hover",
              "semanticGroup": "input capability",
              "claim": "hover capability",
              "excerpt": "(hover: hover) and (pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "hover",
                "pointer",
                "fine"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".RTLvY .WLI6w",
          "cssText": ".RTLvY .WLI6w { transition: background-color 0.13333s ease-out; }",
          "urls": [],
          "group": "(hover: hover) and (pointer: fine)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "pointer",
              "semanticGroup": "input capability",
              "claim": "pointer accuracy",
              "excerpt": "(hover: hover) and (pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "hover",
                "pointer",
                "fine"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "hover",
              "semanticGroup": "input capability",
              "claim": "hover capability",
              "excerpt": "(hover: hover) and (pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "hover",
                "pointer",
                "fine"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".qU7rx",
          "cssText": ".qU7rx { position: absolute; right: 52px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 540px) {\n  .qU7rx { right: 48px; }\n}",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".qU7rx",
          "cssText": ".qU7rx { right: 48px; }",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 430px) {\n  .qU7rx { right: 44px; }\n}",
          "urls": [],
          "group": "(max-width: 430px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 430px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "430px",
                "430",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".qU7rx",
          "cssText": ".qU7rx { right: 44px; }",
          "urls": [],
          "group": "(max-width: 430px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 430px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "430px",
                "430",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".gondf",
          "cssText": ".gondf { width: 100%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (hover: hover) and (pointer: fine) {\n  .gondf { transition: background-color 0.13333s ease-out, color 0.3s ease-out; }\n  .gondf:hover:not(:has(.pIKFz:hover)).lAUpb { background: var(--brand-blue-tint); color: var(--brand-blue); cursor: pointer; }\n  .gondf:hover:not(:has(.pIKFz:hover)).lAUpb svg use { --icon-color-primary: var(--brand-blue); }\n  .gondf .pIKFz { border-radius: 9999px; transition: background-color 0.13333s ease-out; }\n  .gondf .pIKFz:hover { background: var(--brand-blue-tint); }\n}",
          "urls": [],
          "group": "(hover: hover) and (pointer: fine)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "pointer",
              "semanticGroup": "input capability",
              "claim": "pointer accuracy",
              "excerpt": "(hover: hover) and (pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "hover",
                "pointer",
                "fine"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "hover",
              "semanticGroup": "input capability",
              "claim": "hover capability",
              "excerpt": "(hover: hover) and (pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "hover",
                "pointer",
                "fine"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".gondf",
          "cssText": ".gondf { transition: background-color 0.13333s ease-out, color 0.3s ease-out; }",
          "urls": [],
          "group": "(hover: hover) and (pointer: fine)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "pointer",
              "semanticGroup": "input capability",
              "claim": "pointer accuracy",
              "excerpt": "(hover: hover) and (pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "hover",
                "pointer",
                "fine"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "hover",
              "semanticGroup": "input capability",
              "claim": "hover capability",
              "excerpt": "(hover: hover) and (pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "hover",
                "pointer",
                "fine"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".gondf:hover:not(:has(.pIKFz:hover)).lAUpb",
          "cssText": ".gondf:hover:not(:has(.pIKFz:hover)).lAUpb { background: var(--brand-blue-tint); color: var(--brand-blue); cursor: pointer; }",
          "urls": [],
          "group": "(hover: hover) and (pointer: fine)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "pointer",
              "semanticGroup": "input capability",
              "claim": "pointer accuracy",
              "excerpt": "(hover: hover) and (pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "hover",
                "pointer",
                "fine"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "hover",
              "semanticGroup": "input capability",
              "claim": "hover capability",
              "excerpt": "(hover: hover) and (pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "hover",
                "pointer",
                "fine"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".gondf:hover:not(:has(.pIKFz:hover)).lAUpb svg use",
          "cssText": ".gondf:hover:not(:has(.pIKFz:hover)).lAUpb svg use { --icon-color-primary: var(--brand-blue); }",
          "urls": [],
          "group": "(hover: hover) and (pointer: fine)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "pointer",
              "semanticGroup": "input capability",
              "claim": "pointer accuracy",
              "excerpt": "(hover: hover) and (pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "hover",
                "pointer",
                "fine"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "hover",
              "semanticGroup": "input capability",
              "claim": "hover capability",
              "excerpt": "(hover: hover) and (pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "hover",
                "pointer",
                "fine"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".gondf .pIKFz",
          "cssText": ".gondf .pIKFz { border-radius: 9999px; transition: background-color 0.13333s ease-out; }",
          "urls": [],
          "group": "(hover: hover) and (pointer: fine)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "pointer",
              "semanticGroup": "input capability",
              "claim": "pointer accuracy",
              "excerpt": "(hover: hover) and (pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "hover",
                "pointer",
                "fine"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "hover",
              "semanticGroup": "input capability",
              "claim": "hover capability",
              "excerpt": "(hover: hover) and (pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "hover",
                "pointer",
                "fine"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".gondf .pIKFz:hover",
          "cssText": ".gondf .pIKFz:hover { background: var(--brand-blue-tint); }",
          "urls": [],
          "group": "(hover: hover) and (pointer: fine)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "pointer",
              "semanticGroup": "input capability",
              "claim": "pointer accuracy",
              "excerpt": "(hover: hover) and (pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "hover",
                "pointer",
                "fine"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "hover",
              "semanticGroup": "input capability",
              "claim": "hover capability",
              "excerpt": "(hover: hover) and (pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "hover",
                "pointer",
                "fine"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".gondf:active:not(:has(.pIKFz:active)).lAUpb",
          "cssText": ".gondf:active:not(:has(.pIKFz:active)).lAUpb { background: var(--brand-blue-tint); color: var(--content-blue); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".gondf:active:not(:has(.pIKFz:active)).lAUpb svg use",
          "cssText": ".gondf:active:not(:has(.pIKFz:active)).lAUpb svg use { --icon-color-primary: var(--content-blue); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".xqG8L",
          "cssText": ".xqG8L { background: var(--brand-blue-tint); color: var(--content-blue); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".xqG8L svg use",
          "cssText": ".xqG8L svg use { --icon-color-primary: var(--content-blue); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (hover: hover) and (pointer: fine) {\n  .xqG8L .pIKFz:hover svg use { --icon-color-primary: var(--brand-blue); }\n}",
          "urls": [],
          "group": "(hover: hover) and (pointer: fine)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "pointer",
              "semanticGroup": "input capability",
              "claim": "pointer accuracy",
              "excerpt": "(hover: hover) and (pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "hover",
                "pointer",
                "fine"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "hover",
              "semanticGroup": "input capability",
              "claim": "hover capability",
              "excerpt": "(hover: hover) and (pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "hover",
                "pointer",
                "fine"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".xqG8L .pIKFz:hover svg use",
          "cssText": ".xqG8L .pIKFz:hover svg use { --icon-color-primary: var(--brand-blue); }",
          "urls": [],
          "group": "(hover: hover) and (pointer: fine)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "pointer",
              "semanticGroup": "input capability",
              "claim": "pointer accuracy",
              "excerpt": "(hover: hover) and (pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "hover",
                "pointer",
                "fine"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "hover",
              "semanticGroup": "input capability",
              "claim": "hover capability",
              "excerpt": "(hover: hover) and (pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "hover",
                "pointer",
                "fine"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".BXwrP",
          "cssText": ".BXwrP { width: 100%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (hover: hover) and (pointer: fine) {\n  .BXwrP { transition: background-color 0.13333s ease-out, color 0.3s ease-out; }\n  .BXwrP:hover:not(:has(.pIKFz:hover)).lAUpb { background: var(--brand-green-tint); color: var(--brand-green); cursor: pointer; }\n  .BXwrP:hover:not(:has(.pIKFz:hover)).lAUpb svg use { --icon-color-primary: var(--brand-green); }\n  .BXwrP .pIKFz { border-radius: 9999px; transition: background-color 0.13333s ease-out; }\n  .BXwrP .pIKFz:hover { background: var(--brand-green-tint); }\n}",
          "urls": [],
          "group": "(hover: hover) and (pointer: fine)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "pointer",
              "semanticGroup": "input capability",
              "claim": "pointer accuracy",
              "excerpt": "(hover: hover) and (pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "hover",
                "pointer",
                "fine"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "hover",
              "semanticGroup": "input capability",
              "claim": "hover capability",
              "excerpt": "(hover: hover) and (pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "hover",
                "pointer",
                "fine"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".BXwrP",
          "cssText": ".BXwrP { transition: background-color 0.13333s ease-out, color 0.3s ease-out; }",
          "urls": [],
          "group": "(hover: hover) and (pointer: fine)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "pointer",
              "semanticGroup": "input capability",
              "claim": "pointer accuracy",
              "excerpt": "(hover: hover) and (pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "hover",
                "pointer",
                "fine"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "hover",
              "semanticGroup": "input capability",
              "claim": "hover capability",
              "excerpt": "(hover: hover) and (pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "hover",
                "pointer",
                "fine"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".BXwrP:hover:not(:has(.pIKFz:hover)).lAUpb",
          "cssText": ".BXwrP:hover:not(:has(.pIKFz:hover)).lAUpb { background: var(--brand-green-tint); color: var(--brand-green); cursor: pointer; }",
          "urls": [],
          "group": "(hover: hover) and (pointer: fine)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "pointer",
              "semanticGroup": "input capability",
              "claim": "pointer accuracy",
              "excerpt": "(hover: hover) and (pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "hover",
                "pointer",
                "fine"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "hover",
              "semanticGroup": "input capability",
              "claim": "hover capability",
              "excerpt": "(hover: hover) and (pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "hover",
                "pointer",
                "fine"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".BXwrP:hover:not(:has(.pIKFz:hover)).lAUpb svg use",
          "cssText": ".BXwrP:hover:not(:has(.pIKFz:hover)).lAUpb svg use { --icon-color-primary: var(--brand-green); }",
          "urls": [],
          "group": "(hover: hover) and (pointer: fine)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "pointer",
              "semanticGroup": "input capability",
              "claim": "pointer accuracy",
              "excerpt": "(hover: hover) and (pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "hover",
                "pointer",
                "fine"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "hover",
              "semanticGroup": "input capability",
              "claim": "hover capability",
              "excerpt": "(hover: hover) and (pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "hover",
                "pointer",
                "fine"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".BXwrP .pIKFz",
          "cssText": ".BXwrP .pIKFz { border-radius: 9999px; transition: background-color 0.13333s ease-out; }",
          "urls": [],
          "group": "(hover: hover) and (pointer: fine)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "pointer",
              "semanticGroup": "input capability",
              "claim": "pointer accuracy",
              "excerpt": "(hover: hover) and (pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "hover",
                "pointer",
                "fine"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "hover",
              "semanticGroup": "input capability",
              "claim": "hover capability",
              "excerpt": "(hover: hover) and (pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "hover",
                "pointer",
                "fine"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".BXwrP .pIKFz:hover",
          "cssText": ".BXwrP .pIKFz:hover { background: var(--brand-green-tint); }",
          "urls": [],
          "group": "(hover: hover) and (pointer: fine)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "pointer",
              "semanticGroup": "input capability",
              "claim": "pointer accuracy",
              "excerpt": "(hover: hover) and (pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "hover",
                "pointer",
                "fine"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "hover",
              "semanticGroup": "input capability",
              "claim": "hover capability",
              "excerpt": "(hover: hover) and (pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "hover",
                "pointer",
                "fine"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".BXwrP:active:not(:has(.pIKFz:active)).lAUpb",
          "cssText": ".BXwrP:active:not(:has(.pIKFz:active)).lAUpb { background: var(--brand-green-tint); color: var(--content-green); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".BXwrP:active:not(:has(.pIKFz:active)).lAUpb svg use",
          "cssText": ".BXwrP:active:not(:has(.pIKFz:active)).lAUpb svg use { --icon-color-primary: var(--content-green); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".kt0rG",
          "cssText": ".kt0rG { background: var(--brand-green-tint); color: var(--content-green); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".kt0rG svg use",
          "cssText": ".kt0rG svg use { --icon-color-primary: var(--content-green); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (hover: hover) and (pointer: fine) {\n  .kt0rG .pIKFz:hover svg use { --icon-color-primary: var(--brand-green); }\n}",
          "urls": [],
          "group": "(hover: hover) and (pointer: fine)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "pointer",
              "semanticGroup": "input capability",
              "claim": "pointer accuracy",
              "excerpt": "(hover: hover) and (pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "hover",
                "pointer",
                "fine"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "hover",
              "semanticGroup": "input capability",
              "claim": "hover capability",
              "excerpt": "(hover: hover) and (pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "hover",
                "pointer",
                "fine"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".kt0rG .pIKFz:hover svg use",
          "cssText": ".kt0rG .pIKFz:hover svg use { --icon-color-primary: var(--brand-green); }",
          "urls": [],
          "group": "(hover: hover) and (pointer: fine)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "pointer",
              "semanticGroup": "input capability",
              "claim": "pointer accuracy",
              "excerpt": "(hover: hover) and (pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "hover",
                "pointer",
                "fine"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "hover",
              "semanticGroup": "input capability",
              "claim": "hover capability",
              "excerpt": "(hover: hover) and (pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "hover",
                "pointer",
                "fine"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".cuB_V",
          "cssText": ".cuB_V { color: var(--brand-green); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (hover: hover) and (pointer: fine) {\n  .cuB_V { transition: color 0.3s ease-out; }\n  .cuB_V:not(:has(.pIKFz:hover)) { transition: background-color 0.13333s ease-out; }\n  .cuB_V svg use { --icon-color-primary: var(--brand-green); transition: --icon-color-primary 0.3s ease-out; }\n  .cuB_V .WLI6w { transition: background-color 0.13333s ease-out; }\n}",
          "urls": [],
          "group": "(hover: hover) and (pointer: fine)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "pointer",
              "semanticGroup": "input capability",
              "claim": "pointer accuracy",
              "excerpt": "(hover: hover) and (pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "hover",
                "pointer",
                "fine"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "hover",
              "semanticGroup": "input capability",
              "claim": "hover capability",
              "excerpt": "(hover: hover) and (pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "hover",
                "pointer",
                "fine"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".cuB_V",
          "cssText": ".cuB_V { transition: color 0.3s ease-out; }",
          "urls": [],
          "group": "(hover: hover) and (pointer: fine)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "pointer",
              "semanticGroup": "input capability",
              "claim": "pointer accuracy",
              "excerpt": "(hover: hover) and (pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "hover",
                "pointer",
                "fine"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "hover",
              "semanticGroup": "input capability",
              "claim": "hover capability",
              "excerpt": "(hover: hover) and (pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "hover",
                "pointer",
                "fine"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".cuB_V:not(:has(.pIKFz:hover))",
          "cssText": ".cuB_V:not(:has(.pIKFz:hover)) { transition: background-color 0.13333s ease-out; }",
          "urls": [],
          "group": "(hover: hover) and (pointer: fine)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "pointer",
              "semanticGroup": "input capability",
              "claim": "pointer accuracy",
              "excerpt": "(hover: hover) and (pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "hover",
                "pointer",
                "fine"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "hover",
              "semanticGroup": "input capability",
              "claim": "hover capability",
              "excerpt": "(hover: hover) and (pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "hover",
                "pointer",
                "fine"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".cuB_V svg use",
          "cssText": ".cuB_V svg use { --icon-color-primary: var(--brand-green); transition: --icon-color-primary 0.3s ease-out; }",
          "urls": [],
          "group": "(hover: hover) and (pointer: fine)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "pointer",
              "semanticGroup": "input capability",
              "claim": "pointer accuracy",
              "excerpt": "(hover: hover) and (pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "hover",
                "pointer",
                "fine"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "hover",
              "semanticGroup": "input capability",
              "claim": "hover capability",
              "excerpt": "(hover: hover) and (pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "hover",
                "pointer",
                "fine"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".cuB_V .WLI6w",
          "cssText": ".cuB_V .WLI6w { transition: background-color 0.13333s ease-out; }",
          "urls": [],
          "group": "(hover: hover) and (pointer: fine)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "pointer",
              "semanticGroup": "input capability",
              "claim": "pointer accuracy",
              "excerpt": "(hover: hover) and (pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "hover",
                "pointer",
                "fine"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "hover",
              "semanticGroup": "input capability",
              "claim": "hover capability",
              "excerpt": "(hover: hover) and (pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "hover",
                "pointer",
                "fine"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Htr5e",
          "cssText": ".Htr5e { width: 100%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 540px) {\n  .Htr5e.O3Djh { width: calc(100% - 24px); }\n}",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Htr5e.O3Djh",
          "cssText": ".Htr5e.O3Djh { width: calc(100% - 24px); }",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 430px) {\n  .Htr5e.O3Djh { width: calc(100% - 16px); }\n}",
          "urls": [],
          "group": "(max-width: 430px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 430px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "430px",
                "430",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Htr5e.O3Djh",
          "cssText": ".Htr5e.O3Djh { width: calc(100% - 16px); }",
          "urls": [],
          "group": "(max-width: 430px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 430px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "430px",
                "430",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (hover: hover) and (pointer: fine) {\n  .Htr5e { transition: background-color 0.13333s ease-out, color 0.3s ease-out; }\n  .Htr5e:hover:not(:has(.pIKFz:hover)).lAUpb { background: var(--brand-red-tint); color: var(--brand-red); cursor: pointer; }\n  .Htr5e:hover:not(:has(.pIKFz:hover)).lAUpb svg use { --icon-color-primary: var(--brand-red); }\n  .Htr5e .pIKFz { border-radius: 9999px; transition: background-color 0.13333s ease-out; }\n  .Htr5e .pIKFz:hover { background: var(--brand-red-tint); }\n}",
          "urls": [],
          "group": "(hover: hover) and (pointer: fine)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "pointer",
              "semanticGroup": "input capability",
              "claim": "pointer accuracy",
              "excerpt": "(hover: hover) and (pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "hover",
                "pointer",
                "fine"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "hover",
              "semanticGroup": "input capability",
              "claim": "hover capability",
              "excerpt": "(hover: hover) and (pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "hover",
                "pointer",
                "fine"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Htr5e",
          "cssText": ".Htr5e { transition: background-color 0.13333s ease-out, color 0.3s ease-out; }",
          "urls": [],
          "group": "(hover: hover) and (pointer: fine)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "pointer",
              "semanticGroup": "input capability",
              "claim": "pointer accuracy",
              "excerpt": "(hover: hover) and (pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "hover",
                "pointer",
                "fine"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "hover",
              "semanticGroup": "input capability",
              "claim": "hover capability",
              "excerpt": "(hover: hover) and (pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "hover",
                "pointer",
                "fine"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Htr5e:hover:not(:has(.pIKFz:hover)).lAUpb",
          "cssText": ".Htr5e:hover:not(:has(.pIKFz:hover)).lAUpb { background: var(--brand-red-tint); color: var(--brand-red); cursor: pointer; }",
          "urls": [],
          "group": "(hover: hover) and (pointer: fine)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "pointer",
              "semanticGroup": "input capability",
              "claim": "pointer accuracy",
              "excerpt": "(hover: hover) and (pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "hover",
                "pointer",
                "fine"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "hover",
              "semanticGroup": "input capability",
              "claim": "hover capability",
              "excerpt": "(hover: hover) and (pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "hover",
                "pointer",
                "fine"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Htr5e:hover:not(:has(.pIKFz:hover)).lAUpb svg use",
          "cssText": ".Htr5e:hover:not(:has(.pIKFz:hover)).lAUpb svg use { --icon-color-primary: var(--brand-red); }",
          "urls": [],
          "group": "(hover: hover) and (pointer: fine)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "pointer",
              "semanticGroup": "input capability",
              "claim": "pointer accuracy",
              "excerpt": "(hover: hover) and (pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "hover",
                "pointer",
                "fine"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "hover",
              "semanticGroup": "input capability",
              "claim": "hover capability",
              "excerpt": "(hover: hover) and (pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "hover",
                "pointer",
                "fine"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Htr5e .pIKFz",
          "cssText": ".Htr5e .pIKFz { border-radius: 9999px; transition: background-color 0.13333s ease-out; }",
          "urls": [],
          "group": "(hover: hover) and (pointer: fine)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "pointer",
              "semanticGroup": "input capability",
              "claim": "pointer accuracy",
              "excerpt": "(hover: hover) and (pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "hover",
                "pointer",
                "fine"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "hover",
              "semanticGroup": "input capability",
              "claim": "hover capability",
              "excerpt": "(hover: hover) and (pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "hover",
                "pointer",
                "fine"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Htr5e .pIKFz:hover",
          "cssText": ".Htr5e .pIKFz:hover { background: var(--brand-red-tint); }",
          "urls": [],
          "group": "(hover: hover) and (pointer: fine)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "pointer",
              "semanticGroup": "input capability",
              "claim": "pointer accuracy",
              "excerpt": "(hover: hover) and (pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "hover",
                "pointer",
                "fine"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "hover",
              "semanticGroup": "input capability",
              "claim": "hover capability",
              "excerpt": "(hover: hover) and (pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "hover",
                "pointer",
                "fine"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Htr5e:active:not(:has(.pIKFz:active)).lAUpb",
          "cssText": ".Htr5e:active:not(:has(.pIKFz:active)).lAUpb { background: var(--brand-red-tint); color: var(--content-red); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Htr5e:active:not(:has(.pIKFz:active)).lAUpb svg use",
          "cssText": ".Htr5e:active:not(:has(.pIKFz:active)).lAUpb svg use { --icon-color-primary: var(--content-red); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".rJYoI",
          "cssText": ".rJYoI { background: var(--brand-red-tint); color: var(--content-red); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".rJYoI svg use",
          "cssText": ".rJYoI svg use { --icon-color-primary: var(--content-red); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (hover: hover) and (pointer: fine) {\n  .rJYoI .pIKFz:hover svg use { --icon-color-primary: var(--brand-red); }\n}",
          "urls": [],
          "group": "(hover: hover) and (pointer: fine)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "pointer",
              "semanticGroup": "input capability",
              "claim": "pointer accuracy",
              "excerpt": "(hover: hover) and (pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "hover",
                "pointer",
                "fine"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "hover",
              "semanticGroup": "input capability",
              "claim": "hover capability",
              "excerpt": "(hover: hover) and (pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "hover",
                "pointer",
                "fine"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".rJYoI .pIKFz:hover svg use",
          "cssText": ".rJYoI .pIKFz:hover svg use { --icon-color-primary: var(--brand-red); }",
          "urls": [],
          "group": "(hover: hover) and (pointer: fine)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "pointer",
              "semanticGroup": "input capability",
              "claim": "pointer accuracy",
              "excerpt": "(hover: hover) and (pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "hover",
                "pointer",
                "fine"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "hover",
              "semanticGroup": "input capability",
              "claim": "hover capability",
              "excerpt": "(hover: hover) and (pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "hover",
                "pointer",
                "fine"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".FOi16",
          "cssText": ".FOi16 { color: var(--brand-red); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (hover: hover) and (pointer: fine) {\n  .FOi16 { transition: color 0.3s ease-out; }\n  .FOi16:not(:has(.pIKFz:hover)) { transition: background-color 0.13333s ease-out; }\n  .FOi16 svg use { --icon-color-primary: var(--brand-red); transition: --icon-color-primary 0.3s ease-out; }\n  .FOi16 .WLI6w { transition: background-color 0.13333s ease-out; }\n}",
          "urls": [],
          "group": "(hover: hover) and (pointer: fine)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "pointer",
              "semanticGroup": "input capability",
              "claim": "pointer accuracy",
              "excerpt": "(hover: hover) and (pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "hover",
                "pointer",
                "fine"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "hover",
              "semanticGroup": "input capability",
              "claim": "hover capability",
              "excerpt": "(hover: hover) and (pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "hover",
                "pointer",
                "fine"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".FOi16",
          "cssText": ".FOi16 { transition: color 0.3s ease-out; }",
          "urls": [],
          "group": "(hover: hover) and (pointer: fine)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "pointer",
              "semanticGroup": "input capability",
              "claim": "pointer accuracy",
              "excerpt": "(hover: hover) and (pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "hover",
                "pointer",
                "fine"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "hover",
              "semanticGroup": "input capability",
              "claim": "hover capability",
              "excerpt": "(hover: hover) and (pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "hover",
                "pointer",
                "fine"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".FOi16:not(:has(.pIKFz:hover))",
          "cssText": ".FOi16:not(:has(.pIKFz:hover)) { transition: background-color 0.13333s ease-out; }",
          "urls": [],
          "group": "(hover: hover) and (pointer: fine)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "pointer",
              "semanticGroup": "input capability",
              "claim": "pointer accuracy",
              "excerpt": "(hover: hover) and (pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "hover",
                "pointer",
                "fine"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "hover",
              "semanticGroup": "input capability",
              "claim": "hover capability",
              "excerpt": "(hover: hover) and (pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "hover",
                "pointer",
                "fine"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".FOi16 svg use",
          "cssText": ".FOi16 svg use { --icon-color-primary: var(--brand-red); transition: --icon-color-primary 0.3s ease-out; }",
          "urls": [],
          "group": "(hover: hover) and (pointer: fine)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "pointer",
              "semanticGroup": "input capability",
              "claim": "pointer accuracy",
              "excerpt": "(hover: hover) and (pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "hover",
                "pointer",
                "fine"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "hover",
              "semanticGroup": "input capability",
              "claim": "hover capability",
              "excerpt": "(hover: hover) and (pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "hover",
                "pointer",
                "fine"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".FOi16 .WLI6w",
          "cssText": ".FOi16 .WLI6w { transition: background-color 0.13333s ease-out; }",
          "urls": [],
          "group": "(hover: hover) and (pointer: fine)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "pointer",
              "semanticGroup": "input capability",
              "claim": "pointer accuracy",
              "excerpt": "(hover: hover) and (pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "hover",
                "pointer",
                "fine"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "hover",
              "semanticGroup": "input capability",
              "claim": "hover capability",
              "excerpt": "(hover: hover) and (pointer: fine)",
              "requiresEcho": true,
              "echoTokens": [
                "hover",
                "pointer",
                "fine"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".WLI6w",
          "cssText": ".WLI6w { padding-inline: 2px 12px; -webkit-tap-highlight-color: transparent; user-select: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".WLI6w:not(:-webkit-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)))",
          "cssText": ".WLI6w:not(:-webkit-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi))) { padding-left: 2px; padding-right: 12px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".WLI6w:not(:is(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)))",
          "cssText": ".WLI6w:not(:is(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi))) { padding-left: 2px; padding-right: 12px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".WLI6w:-webkit-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi))",
          "cssText": ".WLI6w:-webkit-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)) { padding-left: 12px; padding-right: 2px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".WLI6w:is(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi))",
          "cssText": ".WLI6w:is(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)) { padding-left: 12px; padding-right: 2px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 540px) {\n  .WLI6w { padding-inline-end: 8px; }\n  .WLI6w:not(:-webkit-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi))) { padding-right: 8px; }\n  .WLI6w:not(:is(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi))) { padding-right: 8px; }\n  .WLI6w:-webkit-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)) { padding-left: 8px; }\n  .WLI6w:is(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)) { padding-left: 8px; }\n}",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".WLI6w",
          "cssText": ".WLI6w { padding-inline-end: 8px; }",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".WLI6w:not(:-webkit-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)))",
          "cssText": ".WLI6w:not(:-webkit-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi))) { padding-right: 8px; }",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".WLI6w:not(:is(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)))",
          "cssText": ".WLI6w:not(:is(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi))) { padding-right: 8px; }",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".WLI6w:-webkit-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi))",
          "cssText": ".WLI6w:-webkit-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)) { padding-left: 8px; }",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".WLI6w:is(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi))",
          "cssText": ".WLI6w:is(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)) { padding-left: 8px; }",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".WLI6w:focus-visible",
          "cssText": ".WLI6w:focus-visible { outline-color: var(--brand-blue); outline-width: 2px; outline-style: solid; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".WLI6w.M9zY2:focus-visible",
          "cssText": ".WLI6w.M9zY2:focus-visible { outline-color: var(--brand-blue); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".WLI6w.HqbFo:focus-visible",
          "cssText": ".WLI6w.HqbFo:focus-visible { outline-color: var(--brand-green); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".WLI6w.a64OT:focus-visible",
          "cssText": ".WLI6w.a64OT:focus-visible { outline-color: var(--brand-red); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".YeSqs",
          "cssText": ".YeSqs { width: 100%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "._gegF",
          "cssText": "._gegF { padding-inline-end: 8px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "._gegF:not(:-webkit-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)))",
          "cssText": "._gegF:not(:-webkit-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi))) { padding-right: 8px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "._gegF:not(:is(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)))",
          "cssText": "._gegF:not(:is(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi))) { padding-right: 8px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "._gegF:-webkit-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi))",
          "cssText": "._gegF:-webkit-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)) { padding-left: 8px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "._gegF:is(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi))",
          "cssText": "._gegF:is(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)) { padding-left: 8px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".XSoPc",
          "cssText": ".XSoPc { border-top-style: none; border-top-width: 1px; border-top-color: var(--content-tint-strong); opacity: 0; transition-property: opacity; transition-duration: 0.3s; transition-timing-function: ease-in-out; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".XSoPc.v1_ht",
          "cssText": ".XSoPc.v1_ht { opacity: 1; border-top-style: solid; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".I8O9A",
          "cssText": ".I8O9A { width: 390px; height: 510px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Pl0ah",
          "cssText": ".Pl0ah { font-size: 0.875rem; font-weight: 350; line-height: 1.25rem; font-family: var(--font-family-modern); color: var(--content-fg-secondary); flex-direction: row; align-items: center; column-gap: 6px; padding: 2px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Pl0ah button, .Pl0ah strong",
          "cssText": ".Pl0ah button, .Pl0ah strong { font-size: 0.875rem; font-weight: 500; line-height: 1.25rem; font-family: var(--font-family-modern); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".F2bKK",
          "cssText": ".F2bKK { flex-direction: row; flex: 1 1 0%; justify-content: flex-start; align-items: center; column-gap: 8px; min-width: 0px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".F2bKK a, .F2bKK a > span",
          "cssText": ".F2bKK a, .F2bKK a > span { text-decoration: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".F2bKK button",
          "cssText": ".F2bKK button { color: var(--accent); flex-shrink: 0; margin: -8px; padding: 8px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".F2bKK button:hover",
          "cssText": ".F2bKK button:hover { text-decoration: underline 1px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        }
      ]
    },
    {
      "href": "https://assets.tumblr.com/pop/landing-page-081007f9.css",
      "rules": 372,
      "rulesList": [
        {
          "type": "CSSStyleRule",
          "selector": ".P7XUh",
          "cssText": ".P7XUh { scroll-snap-type: y mandatory; width: 100vw; height: 100vh; position: relative; overflow-y: hidden; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".FhRnI",
          "cssText": ".FhRnI { z-index: 1; position: fixed; top: 50%; left: 20px; transform: translateY(-50%); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".FhRnI li",
          "cssText": ".FhRnI li { list-style: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".FhRnI a",
          "cssText": ".FhRnI a { padding: 5px 0px; display: block; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".FhRnI a .jQSBY",
          "cssText": ".FhRnI a .jQSBY { opacity: 0.4; border-radius: 50%; width: 16px; height: 16px; transition: opacity 0.2s; box-shadow: rgb(255, 255, 255) 0px 0px 0px 3px inset; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".FhRnI a .jQSBY.BetvO",
          "cssText": ".FhRnI a .jQSBY.BetvO { box-shadow: none; opacity: 1; background: rgb(255, 255, 255); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".FhRnI a:hover .jQSBY",
          "cssText": ".FhRnI a:hover .jQSBY { opacity: 1; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".thwmc",
          "cssText": ".thwmc { width: 100%; height: 100%; overflow: hidden; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".YkJTX",
          "cssText": ".YkJTX { opacity: 1; width: 100%; height: 100%; transition: opacity 0.4s; position: absolute; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".YkJTX .nFMBL",
          "cssText": ".YkJTX .nFMBL { object-fit: cover; width: 100%; height: 100%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".YkJTX::after",
          "cssText": ".YkJTX::after { background-size: cover; background-color: var(--image-tint-heavy); content: \"\"; inset: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (min-width: 990px) {\n  .YkJTX::after { position: absolute; }\n}",
          "urls": [],
          "group": "(min-width: 990px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 990px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "990px",
                "990",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".YkJTX::after",
          "cssText": ".YkJTX::after { position: absolute; }",
          "urls": [],
          "group": "(min-width: 990px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 990px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "990px",
                "990",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".YkJTX.HvnFz",
          "cssText": ".YkJTX.HvnFz { opacity: 0; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".wA_I7",
          "cssText": ".wA_I7 { width: 100%; height: 100%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".KQFN5",
          "cssText": ".KQFN5 { flex-direction: column; width: 100%; height: 100%; display: flex; position: relative; top: -100%; overflow-y: auto; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".OW98Y",
          "cssText": ".OW98Y { font-size: 1rem; font-weight: 400; line-height: 1.5; font-family: var(--font-family); text-align: right; flex-direction: row; justify-content: center; align-items: center; margin: 0px; padding: 0px 8px 0px 0px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".jkvAS",
          "cssText": ".jkvAS { color: rgb(255, 255, 255); text-decoration: none; display: inline-block; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".peaPK",
          "cssText": ".peaPK { margin-left: 8px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".pjd4J",
          "cssText": ".pjd4J { justify-content: space-between; align-items: flex-end; width: 100%; display: flex; position: relative; bottom: 12px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".c94kc",
          "cssText": ".c94kc { grid-template-columns: repeat(auto-fill, minmax(30%, 1fr)); width: 100%; height: 100%; display: grid; position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".c94kc .Tf7JU",
          "cssText": ".c94kc .Tf7JU { opacity: 1; background-size: cover; max-height: 125px; padding-bottom: 100%; position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".c94kc::after",
          "cssText": ".c94kc::after { content: \"\"; opacity: 0.5; background: rgb(0, 0, 0); height: 100%; padding-top: 100%; position: absolute; inset: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media not (min-width: 990px) {\n  .c94kc { overflow: hidden; }\n}",
          "urls": [],
          "group": "not (min-width: 990px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "not (min-width: 990px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "990px",
                "990",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".c94kc",
          "cssText": ".c94kc { overflow: hidden; }",
          "urls": [],
          "group": "not (min-width: 990px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "not (min-width: 990px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "990px",
                "990",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 959px) and (max-height: 600px) and (orientation: landscape) {\n  .c94kc { height: 800px; }\n}",
          "urls": [],
          "group": "(max-width: 959px) and (max-height: 600px) and (orientation: landscape)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 959px) and (max-height: 600px) and (orientation: landscape)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "959px",
                "max-height",
                "600px",
                "orientation",
                "landscape",
                "959",
                "600",
                "width",
                "height"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "height",
              "semanticGroup": "geometry",
              "claim": "viewport height",
              "excerpt": "(max-width: 959px) and (max-height: 600px) and (orientation: landscape)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "959px",
                "max-height",
                "600px",
                "orientation",
                "landscape",
                "959",
                "600",
                "width",
                "height"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "orientation",
              "semanticGroup": "geometry",
              "claim": "screen orientation",
              "excerpt": "(max-width: 959px) and (max-height: 600px) and (orientation: landscape)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "959px",
                "max-height",
                "600px",
                "orientation",
                "landscape",
                "959",
                "600",
                "width",
                "height"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".c94kc",
          "cssText": ".c94kc { height: 800px; }",
          "urls": [],
          "group": "(max-width: 959px) and (max-height: 600px) and (orientation: landscape)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 959px) and (max-height: 600px) and (orientation: landscape)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "959px",
                "max-height",
                "600px",
                "orientation",
                "landscape",
                "959",
                "600",
                "width",
                "height"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "height",
              "semanticGroup": "geometry",
              "claim": "viewport height",
              "excerpt": "(max-width: 959px) and (max-height: 600px) and (orientation: landscape)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "959px",
                "max-height",
                "600px",
                "orientation",
                "landscape",
                "959",
                "600",
                "width",
                "height"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "orientation",
              "semanticGroup": "geometry",
              "claim": "screen orientation",
              "excerpt": "(max-width: 959px) and (max-height: 600px) and (orientation: landscape)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "959px",
                "max-height",
                "600px",
                "orientation",
                "landscape",
                "959",
                "600",
                "width",
                "height"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".PSkJW",
          "cssText": ".PSkJW { flex-direction: column; height: 100%; display: flex; position: relative; top: -100vh; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 413px) {\n  .PSkJW { top: calc(-60px - 100vh); }\n}",
          "urls": [],
          "group": "(max-width: 413px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 413px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "413px",
                "413",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".PSkJW",
          "cssText": ".PSkJW { top: calc(-60px - 100vh); }",
          "urls": [],
          "group": "(max-width: 413px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 413px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "413px",
                "413",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 350px) {\n  .PSkJW { top: calc(-150px - 100vh); }\n}",
          "urls": [],
          "group": "(max-width: 350px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 350px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "350px",
                "350",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".PSkJW",
          "cssText": ".PSkJW { top: calc(-150px - 100vh); }",
          "urls": [],
          "group": "(max-width: 350px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 350px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "350px",
                "350",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 959px) and (max-height: 600px) and (orientation: landscape) {\n  .PSkJW { top: calc(-320px - 100vh); }\n}",
          "urls": [],
          "group": "(max-width: 959px) and (max-height: 600px) and (orientation: landscape)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 959px) and (max-height: 600px) and (orientation: landscape)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "959px",
                "max-height",
                "600px",
                "orientation",
                "landscape",
                "959",
                "600",
                "width",
                "height"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "height",
              "semanticGroup": "geometry",
              "claim": "viewport height",
              "excerpt": "(max-width: 959px) and (max-height: 600px) and (orientation: landscape)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "959px",
                "max-height",
                "600px",
                "orientation",
                "landscape",
                "959",
                "600",
                "width",
                "height"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "orientation",
              "semanticGroup": "geometry",
              "claim": "screen orientation",
              "excerpt": "(max-width: 959px) and (max-height: 600px) and (orientation: landscape)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "959px",
                "max-height",
                "600px",
                "orientation",
                "landscape",
                "959",
                "600",
                "width",
                "height"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".PSkJW",
          "cssText": ".PSkJW { top: calc(-320px - 100vh); }",
          "urls": [],
          "group": "(max-width: 959px) and (max-height: 600px) and (orientation: landscape)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 959px) and (max-height: 600px) and (orientation: landscape)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "959px",
                "max-height",
                "600px",
                "orientation",
                "landscape",
                "959",
                "600",
                "width",
                "height"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "height",
              "semanticGroup": "geometry",
              "claim": "viewport height",
              "excerpt": "(max-width: 959px) and (max-height: 600px) and (orientation: landscape)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "959px",
                "max-height",
                "600px",
                "orientation",
                "landscape",
                "959",
                "600",
                "width",
                "height"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "orientation",
              "semanticGroup": "geometry",
              "claim": "screen orientation",
              "excerpt": "(max-width: 959px) and (max-height: 600px) and (orientation: landscape)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "959px",
                "max-height",
                "600px",
                "orientation",
                "landscape",
                "959",
                "600",
                "width",
                "height"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".QwKsh",
          "cssText": ".QwKsh { justify-content: center; align-items: baseline; width: 100%; display: flex; position: absolute; bottom: 10px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 413px) {\n  .cgKRU { bottom: -100px; }\n}",
          "urls": [],
          "group": "(max-width: 413px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 413px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "413px",
                "413",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".cgKRU",
          "cssText": ".cgKRU { bottom: -100px; }",
          "urls": [],
          "group": "(max-width: 413px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 413px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "413px",
                "413",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 540px) {\n  .cgKRU { bottom: -150px; }\n}",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".cgKRU",
          "cssText": ".cgKRU { bottom: -150px; }",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".IxjTL",
          "cssText": ".IxjTL { background-position: 50% center; background-repeat: no-repeat; background-size: cover; width: 100%; height: 100%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".WkCgc",
          "cssText": ".WkCgc { flex-direction: column; align-items: flex-end; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (min-width: 990px) {\n  .WkCgc { font-size: 1.125rem; font-weight: 400; line-height: 1.33333; font-family: var(--font-family); }\n}",
          "urls": [],
          "group": "(min-width: 990px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 990px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "990px",
                "990",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".WkCgc",
          "cssText": ".WkCgc { font-size: 1.125rem; font-weight: 400; line-height: 1.33333; font-family: var(--font-family); }",
          "urls": [],
          "group": "(min-width: 990px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 990px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "990px",
                "990",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".WkCgc > li",
          "cssText": ".WkCgc > li { color: rgb(255, 255, 255); list-style-type: none; display: inline-block; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".WkCgc > li > a",
          "cssText": ".WkCgc > li > a { text-decoration: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 540px) {\n  .WkCgc > li > a { color: rgb(255, 255, 255); }\n}",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".WkCgc > li > a",
          "cssText": ".WkCgc > li > a { color: rgb(255, 255, 255); }",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".IzrMQ",
          "cssText": ".IzrMQ { vertical-align: middle; margin-left: 4px; display: inline-block; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dcVg0",
          "cssText": ".dcVg0 { font-size: 1rem; font-weight: 400; line-height: 1.5; font-family: var(--font-family); margin: 0px; padding: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dcVg0 > li",
          "cssText": ".dcVg0 > li { margin-left: 8px; list-style-type: none; display: inline-block; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dcVg0 > li > a",
          "cssText": ".dcVg0 > li > a { color: rgb(255, 255, 255); text-decoration: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media not (min-width: 990px) {\n  .dcVg0 { font-size: 1rem; font-weight: 700; line-height: 1.5; font-family: var(--font-family); }\n}",
          "urls": [],
          "group": "not (min-width: 990px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "not (min-width: 990px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "990px",
                "990",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".dcVg0",
          "cssText": ".dcVg0 { font-size: 1rem; font-weight: 700; line-height: 1.5; font-family: var(--font-family); }",
          "urls": [],
          "group": "not (min-width: 990px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "not (min-width: 990px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "990px",
                "990",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".h1rLz",
          "cssText": ".h1rLz { opacity: 1; transition: opacity 0.2s, max-height 0.2s; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".le6nD",
          "cssText": ".le6nD { opacity: 0; pointer-events: none; max-height: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".oFCPF",
          "cssText": ".oFCPF { font-size: 0.875rem; font-weight: 400; line-height: 1.42857; font-family: var(--font-family); background-color: RGB(var(--red)); border-radius: 6px; margin-top: 32px; margin-bottom: 20px; padding: 16px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".oFCPF.q_0lL",
          "cssText": ".oFCPF.q_0lL { background-color: rgb(89, 89, 89); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".oFCPF h3",
          "cssText": ".oFCPF h3 { font-size: 1rem; font-weight: 700; line-height: 1.5; font-family: var(--font-family); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".yC5pj",
          "cssText": ".yC5pj { margin-top: 6px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".gj_Aq",
          "cssText": ".gj_Aq { box-sizing: border-box; border: none; width: 100%; margin: 0px; padding: 11px 13px; font-size: 16px; line-height: 1.4; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".gj_Aq:first-of-type",
          "cssText": ".gj_Aq:first-of-type { border-radius: 10px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".gj_Aq:last-of-type",
          "cssText": ".gj_Aq:last-of-type { border-bottom: none; border-radius: 10px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".gj_Aq[type=\"checkbox\"]",
          "cssText": ".gj_Aq[type=\"checkbox\"] { width: 20px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media not (min-width: 990px) {\n  .gj_Aq[type=\"checkbox\"] { position: absolute; left: 10px; }\n}",
          "urls": [],
          "group": "not (min-width: 990px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "not (min-width: 990px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "990px",
                "990",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".gj_Aq[type=\"checkbox\"]",
          "cssText": ".gj_Aq[type=\"checkbox\"] { position: absolute; left: 10px; }",
          "urls": [],
          "group": "not (min-width: 990px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "not (min-width: 990px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "990px",
                "990",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".gj_Aq:focus",
          "cssText": ".gj_Aq:focus { outline: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".szP6f",
          "cssText": ".szP6f { opacity: 0; height: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".wTMi1",
          "cssText": ".wTMi1 { padding-top: 10px; padding-bottom: 10px; font-size: 12px; line-height: 20px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".QXFvZ",
          "cssText": ".QXFvZ { margin-top: 12px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".L3onR",
          "cssText": ".L3onR { padding-left: 12px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".FOMdK, .SiQEE",
          "cssText": ".FOMdK, .SiQEE { padding-left: 5px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".QnWzN",
          "cssText": ".QnWzN { flex-direction: row; margin-top: 10px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".gqith",
          "cssText": ".gqith { background-color: RGB(var(--white)); width: 100%; height: 1px; position: relative; top: 8px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".pWa_V",
          "cssText": ".pWa_V { margin-right: 10px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".YJ2v4",
          "cssText": ".YJ2v4 { margin-left: 10px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".PEfF9",
          "cssText": ".PEfF9 { color: rgb(255, 255, 255); text-align: center; max-width: 330px; margin: 12px auto 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".palette--cybernetic .PEfF9, .palette--pumpkin .PEfF9",
          "cssText": ".palette--cybernetic .PEfF9, .palette--pumpkin .PEfF9 { color: rgb(0, 0, 0); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".i9WPo",
          "cssText": ".i9WPo { margin-top: 12px; text-decoration: none; display: block; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Lbj5E",
          "cssText": ".Lbj5E { margin: 2px 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".NqEjV",
          "cssText": ".NqEjV { width: 100%; margin-bottom: 6px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Y1DAu",
          "cssText": ".Y1DAu { padding-top: 10px; padding-bottom: 10px; font-size: 12px; line-height: 20px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".BayF6",
          "cssText": ".BayF6 { margin-top: 12px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "._GdUi",
          "cssText": "._GdUi { justify-content: space-between; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "._GdUi .V2Ajw",
          "cssText": "._GdUi .V2Ajw { flex: 1 1 0%; align-items: center; margin: 0px 4px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "._GdUi .V2Ajw.WS7yG",
          "cssText": "._GdUi .V2Ajw.WS7yG { flex: 4 1 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "._GdUi .V2Ajw.XrTgJ",
          "cssText": "._GdUi .V2Ajw.XrTgJ { flex: 2 1 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "._GdUi .V2Ajw.sc7o0",
          "cssText": "._GdUi .V2Ajw.sc7o0 { flex: 3 1 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "._GdUi .V2Ajw select.zYs8S",
          "cssText": "._GdUi .V2Ajw select.zYs8S { box-sizing: border-box; appearance: none; cursor: pointer; flex: 1 1 0%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media not (max-width: 540px) {\n  ._GdUi .V2Ajw select.zYs8S { padding: 12px 16px; }\n}",
          "urls": [],
          "group": "not (max-width: 540px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "not (max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": "._GdUi .V2Ajw select.zYs8S",
          "cssText": "._GdUi .V2Ajw select.zYs8S { padding: 12px 16px; }",
          "urls": [],
          "group": "not (max-width: 540px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "not (max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": "._GdUi .V2Ajw .gBTEM",
          "cssText": "._GdUi .V2Ajw .gBTEM { pointer-events: none; margin-top: -5px; margin-left: -30px; padding: 0px 10px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".QKbNv",
          "cssText": ".QKbNv { color: rgb(255, 255, 255); text-align: center; margin: 24px auto 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".palette--cybernetic .QKbNv, .palette--pumpkin .QKbNv",
          "cssText": ".palette--cybernetic .QKbNv, .palette--pumpkin .QKbNv { color: rgb(0, 0, 0); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".fnTDk",
          "cssText": ".fnTDk { font-size: 1.3125rem; line-height: 1.52381; font-family: var(--font-family); color: rgb(255, 255, 255); text-align: center; font-weight: 400; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".gUQyy",
          "cssText": ".gUQyy { font-size: 1rem; font-weight: 400; line-height: 1.5; font-family: var(--font-family); color: rgb(255, 255, 255); text-align: center; margin-bottom: 32px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".uQX8i",
          "cssText": ".uQX8i { font-size: 1.125rem; font-weight: 400; line-height: 1.33333; font-family: var(--font-family); box-sizing: border-box; color: rgb(255, 255, 255); background-color: rgba(255, 255, 255, 0.2); border: 2px solid transparent; border-radius: 10px; outline: none; width: 100%; margin-bottom: 8px; padding: 10px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".uQX8i:focus",
          "cssText": ".uQX8i:focus { border: 2px solid rgba(255, 255, 255, 0.65); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".uQX8i > option",
          "cssText": ".uQX8i > option { color: initial; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".gLHzL",
          "cssText": ".gLHzL { color: rgba(255, 255, 255, 0.65); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".gLHzL.dHFug",
          "cssText": ".gLHzL.dHFug { color: rgb(255, 255, 255); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".genXr",
          "cssText": ".genXr { margin-top: 24px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".genXr .vx4aO",
          "cssText": ".genXr .vx4aO { font-size: 0.875rem; font-weight: 400; line-height: 1.42857; font-family: var(--font-family); color: rgba(255, 255, 255, 0.65); text-align: center; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".genXr a",
          "cssText": ".genXr a { color: rgb(255, 255, 255); text-decoration: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".genXr .obEIJ",
          "cssText": ".genXr .obEIJ { font-size: 0.875rem; font-weight: 400; line-height: 1.42857; font-family: var(--font-family); margin: 12px auto 0px; padding-left: 0px; list-style: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".genXr .obEIJ .UqkGI",
          "cssText": ".genXr .obEIJ .UqkGI { min-height: 24px; font-size: 0.78125rem; font-weight: 400; line-height: 1.52; font-family: var(--font-family); color: rgba(255, 255, 255, 0.65); text-align: left; align-items: flex-start; margin-bottom: 12px; margin-left: -30px; padding-left: 30px; list-style-type: none; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".genXr .xOIMC",
          "cssText": ".genXr .xOIMC { box-sizing: border-box; background: 0px 0px; width: 62px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".genXr .xOIMC:disabled",
          "cssText": ".genXr .xOIMC:disabled { border: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".genXr .xOIMC .LOx6Q",
          "cssText": ".genXr .xOIMC .LOx6Q { font-size: 0.875rem; font-weight: 700; line-height: 1.42857; font-family: var(--font-family); justify-content: flex-start; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".genXr .xOIMC .LOx6Q .pzcXp, .genXr .xOIMC .LOx6Q svg",
          "cssText": ".genXr .xOIMC .LOx6Q .pzcXp, .genXr .xOIMC .LOx6Q svg { margin-right: 8px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".genXr .xOIMC .pzcXp",
          "cssText": ".genXr .xOIMC .pzcXp { background: rgba(var(--white-on-dark),.4); border-radius: 24px; width: 24px; height: 24px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".genXr .XLjpd",
          "cssText": ".genXr .XLjpd { margin-top: 6px; margin-left: -12px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".palette--cybernetic .uQX8i, .palette--cybernetic .Fqcgx .aXxAa, .palette--cybernetic .XLjpd",
          "cssText": ".palette--cybernetic .uQX8i, .palette--cybernetic .Fqcgx .aXxAa, .palette--cybernetic .XLjpd { color: rgb(0, 0, 0); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".palette--cybernetic .genXr a",
          "cssText": ".palette--cybernetic .genXr a { color: rgb(0, 0, 0); font-weight: 700; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".palette--pumpkin .uQX8i, .palette--pumpkin .Fqcgx .aXxAa, .palette--pumpkin .XLjpd",
          "cssText": ".palette--pumpkin .uQX8i, .palette--pumpkin .Fqcgx .aXxAa, .palette--pumpkin .XLjpd { color: rgb(0, 0, 0); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".palette--pumpkin .genXr a",
          "cssText": ".palette--pumpkin .genXr a { color: rgb(0, 0, 0); font-weight: 700; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".kYGTI .bPhsi",
          "cssText": ".kYGTI .bPhsi { box-sizing: border-box; width: 100%; font-size: 1rem; font-weight: 400; line-height: 1.5; font-family: var(--font-family); background-color: rgb(255, 255, 255); border-top: none; border-right: none; border-left: none; border-image: initial; border-bottom: 1px solid rgb(231, 231, 231); border-radius: 0px; margin-bottom: 6px; display: flex; position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".kYGTI .bPhsi:first-of-type",
          "cssText": ".kYGTI .bPhsi:first-of-type { border-radius: 10px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".kYGTI .bPhsi:last-of-type",
          "cssText": ".kYGTI .bPhsi:last-of-type { border-bottom: none; border-radius: 10px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (min-width: 990px) {\n  .TuZgn { font-size: 0.875rem; font-weight: 400; line-height: 1.42857; font-family: var(--font-family); background: RGB(var(--white)); min-width: 225px; color: RGB(var(--black)); text-align: left; }\n  .TuZgn p { text-align: center; padding: 8px; }\n  .TuZgn ul { padding-top: 8px; padding-left: 0px; list-style-type: none; }\n  .TuZgn li { cursor: pointer; list-style-type: none; }\n  .TuZgn li:hover { background: rgba(var(--black),.13); }\n  .TuZgn button { text-align: left; width: 100%; padding: 8px; }\n  .TuZgn .DYpuj { border-top: 1px solid rgba(var(--black),.13); border-bottom: 1px solid rgba(var(--black),.13); background: rgba(var(--black),.07); font-size: 0.875rem; font-weight: 700; line-height: 1.42857; font-family: var(--font-family); padding-left: 8px; }\n}",
          "urls": [],
          "group": "(min-width: 990px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 990px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "990px",
                "990",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".TuZgn",
          "cssText": ".TuZgn { font-size: 0.875rem; font-weight: 400; line-height: 1.42857; font-family: var(--font-family); background: RGB(var(--white)); min-width: 225px; color: RGB(var(--black)); text-align: left; }",
          "urls": [],
          "group": "(min-width: 990px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 990px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "990px",
                "990",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".TuZgn p",
          "cssText": ".TuZgn p { text-align: center; padding: 8px; }",
          "urls": [],
          "group": "(min-width: 990px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 990px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "990px",
                "990",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".TuZgn ul",
          "cssText": ".TuZgn ul { padding-top: 8px; padding-left: 0px; list-style-type: none; }",
          "urls": [],
          "group": "(min-width: 990px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 990px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "990px",
                "990",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".TuZgn li",
          "cssText": ".TuZgn li { cursor: pointer; list-style-type: none; }",
          "urls": [],
          "group": "(min-width: 990px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 990px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "990px",
                "990",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".TuZgn li:hover",
          "cssText": ".TuZgn li:hover { background: rgba(var(--black),.13); }",
          "urls": [],
          "group": "(min-width: 990px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 990px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "990px",
                "990",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".TuZgn button",
          "cssText": ".TuZgn button { text-align: left; width: 100%; padding: 8px; }",
          "urls": [],
          "group": "(min-width: 990px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 990px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "990px",
                "990",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".TuZgn .DYpuj",
          "cssText": ".TuZgn .DYpuj { border-top: 1px solid rgba(var(--black),.13); border-bottom: 1px solid rgba(var(--black),.13); background: rgba(var(--black),.07); font-size: 0.875rem; font-weight: 700; line-height: 1.42857; font-family: var(--font-family); padding-left: 8px; }",
          "urls": [],
          "group": "(min-width: 990px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 990px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "990px",
                "990",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media not (min-width: 990px) {\n  .TuZgn h3 { text-align: center; width: 100%; margin-bottom: 15px; }\n  .TuZgn .YPBoN { scrollbar-width: none; max-width: 85vw; display: flex; overflow-x: scroll; }\n  .TuZgn .YPBoN::-webkit-scrollbar { display: none; }\n  .TuZgn .mnk6f { border: 2px solid rgba(var(--white-on-dark),.25); border-radius: 18px; width: max-content; margin-bottom: 5px; margin-right: 5px; padding: 6px 10px; }\n}",
          "urls": [],
          "group": "not (min-width: 990px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "not (min-width: 990px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "990px",
                "990",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".TuZgn h3",
          "cssText": ".TuZgn h3 { text-align: center; width: 100%; margin-bottom: 15px; }",
          "urls": [],
          "group": "not (min-width: 990px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "not (min-width: 990px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "990px",
                "990",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".TuZgn .YPBoN",
          "cssText": ".TuZgn .YPBoN { scrollbar-width: none; max-width: 85vw; display: flex; overflow-x: scroll; }",
          "urls": [],
          "group": "not (min-width: 990px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "not (min-width: 990px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "990px",
                "990",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".TuZgn .YPBoN::-webkit-scrollbar",
          "cssText": ".TuZgn .YPBoN::-webkit-scrollbar { display: none; }",
          "urls": [],
          "group": "not (min-width: 990px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "not (min-width: 990px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "990px",
                "990",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".TuZgn .mnk6f",
          "cssText": ".TuZgn .mnk6f { border: 2px solid rgba(var(--white-on-dark),.25); border-radius: 18px; width: max-content; margin-bottom: 5px; margin-right: 5px; padding: 6px 10px; }",
          "urls": [],
          "group": "not (min-width: 990px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "not (min-width: 990px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "990px",
                "990",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".D8AYW",
          "cssText": ".D8AYW { padding-top: 10px; padding-bottom: 10px; font-size: 12px; line-height: 20px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".E_Qq0",
          "cssText": ".E_Qq0 { margin-top: 6px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".zDi0Y",
          "cssText": ".zDi0Y { margin-bottom: 10px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".N6gYh",
          "cssText": ".N6gYh { background-color: RGB(var(--navy)); border-radius: 6px; margin-top: 32px; margin-bottom: 20px; padding: 16px; line-height: 1.5; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".YtMIt",
          "cssText": ".YtMIt { padding-top: 24px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".OQEgy",
          "cssText": ".OQEgy { margin-top: 50px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".OQEgy .E_Qq0",
          "cssText": ".OQEgy .E_Qq0 { border-radius: 25px; max-width: 234px; margin: 0px auto; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".OQEgy .E_Qq0:disabled",
          "cssText": ".OQEgy .E_Qq0:disabled { background: rgba(var(--deprecated-accent),.4); color: RGB(var(--black)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".OQEgy .kYGTI",
          "cssText": ".OQEgy .kYGTI { margin-bottom: 100px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".OQEgy .kYGTI .bPhsi",
          "cssText": ".OQEgy .kYGTI .bPhsi { border-radius: 10px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".OQEgy .UZgWY",
          "cssText": ".OQEgy .UZgWY { font-size: 2rem; font-weight: 400; line-height: 1.25; font-family: var(--font-family); text-align: center; margin-bottom: 26px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".OQEgy .K2g_8",
          "cssText": ".OQEgy .K2g_8 { font-size: 1.125rem; font-weight: 400; line-height: 1.33333; font-family: var(--font-family); margin-bottom: 40px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".uXxJN",
          "cssText": ".uXxJN { margin-top: 32px; margin-bottom: 32px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".WZr2G",
          "cssText": ".WZr2G { margin-bottom: 32px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".rVNHW",
          "cssText": ".rVNHW { width: 100%; margin: 0px auto; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".rVNHW .tkyTK",
          "cssText": ".rVNHW .tkyTK { font-size: 1.125rem; line-height: 1.33333; font-family: var(--font-family); color: rgb(255, 255, 255); text-align: center; font-weight: 400; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".rVNHW .d7HLh",
          "cssText": ".rVNHW .d7HLh { font-size: 1rem; font-weight: 400; line-height: 1.5; font-family: var(--font-family); color: rgb(255, 255, 255); text-align: center; margin-bottom: 24px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".rVNHW .xi0Ws",
          "cssText": ".rVNHW .xi0Ws { max-width: 330px; margin: auto auto 40px; position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".rVNHW .xi0Ws .f1zZG",
          "cssText": ".rVNHW .xi0Ws .f1zZG { font-size: 1.125rem; font-weight: 400; line-height: 1.33333; font-family: var(--font-family); color: rgb(255, 255, 255); background-color: rgba(255, 255, 255, 0.2); border: 2px solid transparent; border-radius: 10px; outline: none; width: calc(100% - 46px); margin-bottom: 8px; padding: 10px 10px 10px 36px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".rVNHW .xi0Ws .f1zZG:focus",
          "cssText": ".rVNHW .xi0Ws .f1zZG:focus { border: 2px solid rgba(255, 255, 255, 0.65); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".rVNHW .xi0Ws .Nrgtx",
          "cssText": ".rVNHW .xi0Ws .Nrgtx { font-size: 1.125rem; font-weight: 700; line-height: 1.33333; font-family: var(--font-family); color: rgba(255, 255, 255, 0.65); position: absolute; top: 10px; left: 10px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".rVNHW .xi0Ws.mtI9Y .f1zZG",
          "cssText": ".rVNHW .xi0Ws.mtI9Y .f1zZG { color: rgb(0, 0, 0); background-color: rgb(255, 255, 255); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".rVNHW .xi0Ws.mtI9Y .Nrgtx, .palette--cybernetic .rVNHW, .palette--cybernetic .tkyTK, .palette--cybernetic .d7HLh, .palette--cybernetic .rVNHW .xi0Ws .Nrgtx, .palette--cybernetic .rVNHW .xi0Ws .f1zZG, .palette--cybernetic .rVNHW .xi0Ws, .palette--pumpkin .rVNHW, .palette--pumpkin .tkyTK, .palette--pumpkin .d7HLh, .palette--pumpkin .rVNHW .xi0Ws .Nrgtx, .palette--pumpkin .rVNHW .xi0Ws .f1zZG, .palette--pumpkin .rVNHW .xi0Ws",
          "cssText": ".rVNHW .xi0Ws.mtI9Y .Nrgtx, .palette--cybernetic .rVNHW, .palette--cybernetic .tkyTK, .palette--cybernetic .d7HLh, .palette--cybernetic .rVNHW .xi0Ws .Nrgtx, .palette--cybernetic .rVNHW .xi0Ws .f1zZG, .palette--cybernetic .rVNHW .xi0Ws, .palette--pumpkin .rVNHW, .palette--pumpkin .tkyTK, .palette--pumpkin .d7HLh, .palette--pumpkin .rVNHW .xi0Ws .Nrgtx, .palette--pumpkin .rVNHW .xi0Ws .f1zZG, .palette--pumpkin .rVNHW .xi0Ws { color: rgb(0, 0, 0); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".loginFlowRegisterBird .tkyTK",
          "cssText": ".loginFlowRegisterBird .tkyTK { margin-bottom: 32px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".kdCBg",
          "cssText": ".kdCBg { flex-direction: column-reverse; justify-content: center; align-items: center; width: 12px; margin-right: 12px; padding: 2px 2px 0px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".kdCBg .ygCDb",
          "cssText": ".kdCBg .ygCDb { background-color: rgba(0, 0, 0, 0.15); width: 100%; height: 2px; margin-bottom: 2px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".kdCBg.BtnTy .ygCDb:first-child, .kdCBg.BtnTy .ygCDb:nth-child(0), .kdCBg.TZ37z .ygCDb:first-child",
          "cssText": ".kdCBg.BtnTy .ygCDb:first-child, .kdCBg.BtnTy .ygCDb:nth-child(0), .kdCBg.TZ37z .ygCDb:first-child { background-color: rgb(255, 73, 48); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".kdCBg.CwZaB .ygCDb:first-child, .kdCBg.CwZaB .ygCDb:nth-child(2)",
          "cssText": ".kdCBg.CwZaB .ygCDb:first-child, .kdCBg.CwZaB .ygCDb:nth-child(2) { background-color: rgb(255, 138, 0); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".kdCBg.hTKX9 .ygCDb:first-child, .kdCBg.hTKX9 .ygCDb:nth-child(2), .kdCBg.hTKX9 .ygCDb:nth-child(3), .kdCBg.W3gv4 .ygCDb:first-child, .kdCBg.W3gv4 .ygCDb:nth-child(2), .kdCBg.W3gv4 .ygCDb:nth-child(3), .kdCBg.W3gv4 .ygCDb:nth-child(4), .kdCBg.hXGzk .ygCDb:first-child, .kdCBg.hXGzk .ygCDb:nth-child(2), .kdCBg.hXGzk .ygCDb:nth-child(3), .kdCBg.hXGzk .ygCDb:nth-child(4), .kdCBg.hXGzk .ygCDb:nth-child(5)",
          "cssText": ".kdCBg.hTKX9 .ygCDb:first-child, .kdCBg.hTKX9 .ygCDb:nth-child(2), .kdCBg.hTKX9 .ygCDb:nth-child(3), .kdCBg.W3gv4 .ygCDb:first-child, .kdCBg.W3gv4 .ygCDb:nth-child(2), .kdCBg.W3gv4 .ygCDb:nth-child(3), .kdCBg.W3gv4 .ygCDb:nth-child(4), .kdCBg.hXGzk .ygCDb:first-child, .kdCBg.hXGzk .ygCDb:nth-child(2), .kdCBg.hXGzk .ygCDb:nth-child(3), .kdCBg.hXGzk .ygCDb:nth-child(4), .kdCBg.hXGzk .ygCDb:nth-child(5) { background-color: rgb(0, 207, 53); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".kdCBg.BtnTy .ygCDb",
          "cssText": ".kdCBg.BtnTy .ygCDb { box-shadow: rgb(255, 73, 48) 0px 0px 6px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".kdCBg.hXGzk .ygCDb",
          "cssText": ".kdCBg.hXGzk .ygCDb { box-shadow: rgb(0, 207, 53) 0px 0px 6px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".kdCBg .NQOwh .ygCDb",
          "cssText": ".kdCBg .NQOwh .ygCDb { background-color: rgba(0, 0, 0, 0.15); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".I6Lwl",
          "cssText": ".I6Lwl { z-index: 100; color: rgb(255, 255, 255); background-color: rgb(124, 92, 255); width: 100%; max-height: 100%; position: fixed; bottom: 0px; left: 0px; overflow: scroll; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".I6Lwl .JAYfv",
          "cssText": ".I6Lwl .JAYfv { max-width: 880px; margin: 0px auto; padding: 16px 50px; position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".I6Lwl .NoQSe",
          "cssText": ".I6Lwl .NoQSe { font-size: 1rem; font-weight: 700; line-height: 1.5; font-family: var(--font-family); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".I6Lwl .ye7wo",
          "cssText": ".I6Lwl .ye7wo { background-color: rgba(0, 0, 0, 0.5); border-radius: 20px; justify-content: center; align-items: center; width: 30px; height: 30px; display: flex; position: absolute; top: 16px; right: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media not (min-width: 990px) {\n  .I6Lwl .ye7wo { right: 10px; }\n}",
          "urls": [],
          "group": "not (min-width: 990px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "not (min-width: 990px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "990px",
                "990",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".I6Lwl .ye7wo",
          "cssText": ".I6Lwl .ye7wo { right: 10px; }",
          "urls": [],
          "group": "not (min-width: 990px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "not (min-width: 990px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "990px",
                "990",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".R2BSv",
          "cssText": ".R2BSv { z-index: 1; background: rgb(0, 25, 53); width: 100%; height: 100%; position: fixed; top: 0px; left: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".R2BSv h1",
          "cssText": ".R2BSv h1 { font-size: 1.3125rem; font-weight: 700; line-height: 1.52381; font-family: var(--font-family); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".R2BSv h2",
          "cssText": ".R2BSv h2 { font-size: 1.125rem; font-weight: 400; line-height: 1.33333; font-family: var(--font-family); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".R2BSv .VHr2m",
          "cssText": ".R2BSv .VHr2m { flex-direction: column; justify-content: center; align-items: center; height: 90%; margin: 0px 20px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".s0qqG",
          "cssText": ".s0qqG { font-size: 1rem; font-weight: 400; line-height: 1.5; font-family: var(--font-family); box-sizing: border-box; z-index: 100; color: rgb(0, 0, 0); background: rgb(232, 215, 56); border-radius: 6px; flex-direction: column; max-width: 520px; margin: 10px; padding: 15px; display: flex; position: fixed; bottom: 0px; left: 0px; box-shadow: rgba(0, 0, 0, 0.5) 0px 0px 15px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 540px) {\n  .s0qqG { min-width: auto; max-width: none; right: 0px; }\n}",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".s0qqG",
          "cssText": ".s0qqG { min-width: auto; max-width: none; right: 0px; }",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".s0qqG a",
          "cssText": ".s0qqG a { text-decoration: underline; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".s0qqG .WGFYZ",
          "cssText": ".s0qqG .WGFYZ { position: absolute; top: 15px; right: 15px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".s0qqG ._h_yT",
          "cssText": ".s0qqG ._h_yT { margin-bottom: 8px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".s0qqG ._h_yT:first-child",
          "cssText": ".s0qqG ._h_yT:first-child { padding-right: 30px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".s0qqG ._h_yT:last-child",
          "cssText": ".s0qqG ._h_yT:last-child { margin-bottom: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".MGngl",
          "cssText": ".MGngl { text-align: center; border-radius: 10px; flex-direction: column; justify-content: center; align-items: center; padding: 40px 60px; display: flex; position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 540px) {\n  .MGngl { padding: 26px; }\n}",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".MGngl",
          "cssText": ".MGngl { padding: 26px; }",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Fygd5",
          "cssText": ".Fygd5 { width: 380px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 540px) {\n  .Fygd5 { width: 100%; }\n}",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Fygd5",
          "cssText": ".Fygd5 { width: 100%; }",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Z_jN4",
          "cssText": ".Z_jN4 { color: rgb(255, 255, 255); justify-content: center; align-items: center; margin-top: 17px; font-weight: 700; text-decoration: none; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Z_jN4 > svg",
          "cssText": ".Z_jN4 > svg { padding-right: 8px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Qo15M",
          "cssText": ".Qo15M { margin-top: 20px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".bS3ge",
          "cssText": ".bS3ge { margin-top: 12px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".RUPPJ",
          "cssText": ".RUPPJ { width: 274px; height: 56px; margin: 0px auto 60px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".RUPPJ > a",
          "cssText": ".RUPPJ > a { width: 100%; height: 100%; display: block; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".D5eCV",
          "cssText": ".D5eCV { background: RGB(var(--navy)); width: 100%; min-height: 100vh; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".D5eCV.Mpbf7",
          "cssText": ".D5eCV.Mpbf7 { margin-bottom: 150px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ZYef7",
          "cssText": ".ZYef7 { width: inherit; min-height: inherit; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".c9lq9",
          "cssText": ".c9lq9 { min-height: inherit; flex-direction: row; justify-content: center; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".c9lq9 .h_Erh, .c9lq9 ._3xgk",
          "cssText": ".c9lq9 .h_Erh, .c9lq9 ._3xgk { display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".c9lq9 .h_Erh",
          "cssText": ".c9lq9 .h_Erh { flex-shrink: 0; flex-basis: 64px; justify-content: flex-end; margin-right: 20px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (min-width: 1018px) {\n  .c9lq9 .h_Erh { flex-basis: 96px; }\n}",
          "urls": [],
          "group": "(min-width: 1018px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 1018px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1018px",
                "1018",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".c9lq9 .h_Erh",
          "cssText": ".c9lq9 .h_Erh { flex-basis: 96px; }",
          "urls": [],
          "group": "(min-width: 1018px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 1018px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1018px",
                "1018",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (min-width: 1162px) {\n  .c9lq9 .h_Erh { flex-basis: 240px; }\n}",
          "urls": [],
          "group": "(min-width: 1162px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 1162px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1162px",
                "1162",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".c9lq9 .h_Erh",
          "cssText": ".c9lq9 .h_Erh { flex-basis: 240px; }",
          "urls": [],
          "group": "(min-width: 1162px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 1162px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1162px",
                "1162",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".c9lq9 ._3xgk",
          "cssText": ".c9lq9 ._3xgk { flex-basis: 966px; justify-content: flex-start; min-width: 902px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".c9lq9 ._3xgk.Ril26",
          "cssText": ".c9lq9 ._3xgk.Ril26 { flex-basis: 881px; min-width: 817px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".c9lq9 ._3xgk.jB5sp",
          "cssText": ".c9lq9 ._3xgk.jB5sp { flex-grow: 1; justify-content: center; margin-left: -20px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".c9lq9 ._3xgk.VsR8V",
          "cssText": ".c9lq9 ._3xgk.VsR8V { flex-grow: 1; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (min-width: 1221px) {\n  .c9lq9 ._3xgk.VsR8V.QDysN, .c9lq9 ._3xgk.VsR8V.au16g { max-width: 961px; }\n}",
          "urls": [],
          "group": "(min-width: 1221px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 1221px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1221px",
                "1221",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".c9lq9 ._3xgk.VsR8V.QDysN, .c9lq9 ._3xgk.VsR8V.au16g",
          "cssText": ".c9lq9 ._3xgk.VsR8V.QDysN, .c9lq9 ._3xgk.VsR8V.au16g { max-width: 961px; }",
          "urls": [],
          "group": "(min-width: 1221px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 1221px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1221px",
                "1221",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (min-width: 1541px) {\n  .c9lq9 ._3xgk.VsR8V.au16g { max-width: 1281px; }\n}",
          "urls": [],
          "group": "(min-width: 1541px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 1541px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1541px",
                "1541",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".c9lq9 ._3xgk.VsR8V.au16g",
          "cssText": ".c9lq9 ._3xgk.VsR8V.au16g { max-width: 1281px; }",
          "urls": [],
          "group": "(min-width: 1541px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 1541px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1541px",
                "1541",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (min-width: 1221px) {\n  .c9lq9 ._3xgk.VsR8V.f_ziq { max-width: 961px; }\n}",
          "urls": [],
          "group": "(min-width: 1221px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 1221px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1221px",
                "1221",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".c9lq9 ._3xgk.VsR8V.f_ziq",
          "cssText": ".c9lq9 ._3xgk.VsR8V.f_ziq { max-width: 961px; }",
          "urls": [],
          "group": "(min-width: 1221px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 1221px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1221px",
                "1221",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (min-width: 1541px) {\n  .c9lq9 ._3xgk.VsR8V.f_ziq { max-width: 1281px; }\n}",
          "urls": [],
          "group": "(min-width: 1541px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 1541px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1541px",
                "1541",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".c9lq9 ._3xgk.VsR8V.f_ziq",
          "cssText": ".c9lq9 ._3xgk.VsR8V.f_ziq { max-width: 1281px; }",
          "urls": [],
          "group": "(min-width: 1541px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 1541px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1541px",
                "1541",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (min-width: 1861px) {\n  .c9lq9 ._3xgk.VsR8V.f_ziq { max-width: 1601px; }\n}",
          "urls": [],
          "group": "(min-width: 1861px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 1861px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1861px",
                "1861",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".c9lq9 ._3xgk.VsR8V.f_ziq",
          "cssText": ".c9lq9 ._3xgk.VsR8V.f_ziq { max-width: 1601px; }",
          "urls": [],
          "group": "(min-width: 1861px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(min-width: 1861px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "1861px",
                "1861",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ZdQlM",
          "cssText": ".ZdQlM { padding: 4px 0px; overflow-x: hidden; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ZdQlM.bRI1d",
          "cssText": ".ZdQlM.bRI1d { scrollbar-width: none; align-items: flex-start; width: 100%; padding: 0px; display: flex; overflow-x: auto; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ZdQlM.bRI1d::-webkit-scrollbar",
          "cssText": ".ZdQlM.bRI1d::-webkit-scrollbar { width: 0px; height: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".s7YOu",
          "cssText": ".s7YOu { word-break: break-word; flex-wrap: wrap; align-items: center; max-width: 100%; display: flex; position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".s7YOu .aqWWB",
          "cssText": ".s7YOu .aqWWB { display: grid; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".s7YOu .aqWWB::after",
          "cssText": ".s7YOu .aqWWB::after { visibility: hidden; content: attr(data-value)\" \"; white-space: pre-wrap; font-size: 1rem; font-weight: 400; font-family: var(--font-family); border: none; grid-area: 1 / 1 / 2 / 2; width: auto; padding: 8px 16px; line-height: 1.25; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".s7YOu .mbROR",
          "cssText": ".s7YOu .mbROR { font-size: 1rem; font-weight: 400; font-family: var(--font-family); width: auto; color: RGB(var(--black)); resize: none; background: rgba(255, 255, 255, 0); border: none; grid-area: 1 / 1 / 2 / 2; padding: 8px 16px; line-height: 1.25; overflow: hidden; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".s7YOu .mbROR:hover:not(:focus)",
          "cssText": ".s7YOu .mbROR:hover:not(:focus) { cursor: pointer; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".s7YOu .mbROR::placeholder",
          "cssText": ".s7YOu .mbROR::placeholder { text-overflow: ellipsis; white-space: nowrap; opacity: 0.6; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".s7YOu .mbROR:hover::placeholder",
          "cssText": ".s7YOu .mbROR:hover::placeholder { opacity: 1; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".s7YOu .mbROR.zqrdz",
          "cssText": ".s7YOu .mbROR.zqrdz { min-width: 1em; margin-left: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".s7YOu .mbROR:focus",
          "cssText": ".s7YOu .mbROR:focus { outline: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".s7YOu .mbROR.Z0_uD",
          "cssText": ".s7YOu .mbROR.Z0_uD { box-sizing: border-box; text-align: center; width: 36px; height: 36px; padding: 9px; font-size: 18px; line-height: 1rem; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".s7YOu .LxegZ",
          "cssText": ".s7YOu .LxegZ { position: absolute; top: 10px; left: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".s7YOu .fdQ5Z",
          "cssText": ".s7YOu .fdQ5Z { background-color: rgba(var(--black),.05); overflow-wrap: break-word; border-radius: 18px; max-width: 100%; margin-top: 4px; margin-bottom: 4px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".s7YOu .RD9M8",
          "cssText": ".s7YOu .RD9M8 { background-color: rgba(var(--black),.13); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".s7YOu .GkIaO",
          "cssText": ".s7YOu .GkIaO { align-items: flex-end; height: 36px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".uN8qr",
          "cssText": ".uN8qr { background-color: rgba(var(--black),.07); color: rgba(var(--black),.25); font-size: 0.625rem; font-weight: 400; line-height: 1.6; font-family: var(--font-family); width: 100%; text-align: initial; text-transform: uppercase; padding: 8px 12px; display: block; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".aIJXD",
          "cssText": ".aIJXD { color: rgba(var(--black),.65); font-size: 0.875rem; font-weight: 400; line-height: 1.42857; font-family: var(--font-family); width: 100%; text-align: initial; padding: 8px 12px; display: block; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".aIJXD.fLsNs, .aIJXD:hover",
          "cssText": ".aIJXD.fLsNs, .aIJXD:hover { background-color: rgba(var(--black),.13); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".aIJXD:focus .TBq8Z",
          "cssText": ".aIJXD:focus .TBq8Z { outline: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".aIJXD .TBq8Z",
          "cssText": ".aIJXD .TBq8Z { text-overflow: ellipsis; white-space: nowrap; overflow: hidden; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".aIJXD.A4Rv_",
          "cssText": ".aIJXD.A4Rv_ { background-color: rgba(var(--black),.25); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".aIJXD .l2NHX",
          "cssText": ".aIJXD .l2NHX { text-decoration: underline; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".sHSSD",
          "cssText": ".sHSSD { position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".sHSSD .akmAa:focus",
          "cssText": ".sHSSD .akmAa:focus { outline: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".sHSSD .aLlJL",
          "cssText": ".sHSSD .aLlJL { background-color: rgba(var(--black),.13); cursor: grab; font-size: 1rem; font-weight: 400; font-family: var(--font-family); border-radius: 18px; align-items: flex-end; margin: 4px 8px 4px 0px; padding: 8px 12px 8px 16px; line-height: 1.25; display: inline-flex; position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".sHSSD .aLlJL:active",
          "cssText": ".sHSSD .aLlJL:active { cursor: grabbing; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".sHSSD:focus",
          "cssText": ".sHSSD:focus { outline: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".sHSSD .unn5w",
          "cssText": ".sHSSD .unn5w { white-space: pre-wrap; cursor: text; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".sHSSD .unn5w::before",
          "cssText": ".sHSSD .unn5w::before { content: \"#\"; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".sHSSD .unn5w:hover",
          "cssText": ".sHSSD .unn5w:hover { outline-width: 0.5px; outline-style: dotted; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".sHSSD .unn5w:focus",
          "cssText": ".sHSSD .unn5w:focus { outline-width: 2px; outline-style: dotted; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".sHSSD .Zo7Ev::before",
          "cssText": ".sHSSD .Zo7Ev::before { content: \"#\"; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".sHSSD .nsLCV",
          "cssText": ".sHSSD .nsLCV { opacity: 0.4; align-self: center; margin-left: 5px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".sHSSD .nsLCV:hover",
          "cssText": ".sHSSD .nsLCV:hover { opacity: 1; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".yCyjX",
          "cssText": ".yCyjX { opacity: 0.1; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hx2Dc button, .hx2Dc path",
          "cssText": ".hx2Dc button, .hx2Dc path { visibility: hidden; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".swg26",
          "cssText": ".swg26 { height: calc(100% - 45px); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".i7U68",
          "cssText": ".i7U68 { height: 100%; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ppIFU",
          "cssText": ".ppIFU { flex-direction: column; height: 100%; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".CKhNM",
          "cssText": ".CKhNM { color: rgb(255, 255, 255); width: 100%; height: 45px; font-size: 1rem; font-weight: 700; line-height: 1.5; font-family: var(--font-family); background: rgb(0, 207, 53); justify-content: center; align-items: center; text-decoration: none; display: flex; position: absolute; bottom: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".oNZY7",
          "cssText": ".oNZY7 { width: 100%; max-width: 300px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".r6yN6",
          "cssText": ".r6yN6 { background-color: rgb(0, 207, 53); flex-direction: column; justify-content: center; align-items: center; width: 100%; height: 100%; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".r6yN6 .Xyilb",
          "cssText": ".r6yN6 .Xyilb { color: rgb(255, 255, 255); flex-direction: column; justify-content: center; align-items: center; max-width: 540px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".r6yN6 .Xyilb h1",
          "cssText": ".r6yN6 .Xyilb h1 { font-size: 3rem; font-weight: 400; line-height: 1.25; font-family: var(--font-family); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".r6yN6 .Xyilb p",
          "cssText": ".r6yN6 .Xyilb p { font-size: 1rem; font-weight: 400; line-height: 1.5; font-family: var(--font-family); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".IM_Lo",
          "cssText": ".IM_Lo { height: 440px; overflow: initial; opacity: 0; flex-shrink: 1; transform: scale(0.8); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media not (min-width: 990px) {\n  .IM_Lo { height: 330px; }\n}",
          "urls": [],
          "group": "not (min-width: 990px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "not (min-width: 990px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "990px",
                "990",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".IM_Lo",
          "cssText": ".IM_Lo { height: 330px; }",
          "urls": [],
          "group": "not (min-width: 990px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "not (min-width: 990px)",
              "requiresEcho": true,
              "echoTokens": [
                "min-width",
                "990px",
                "990",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 540px) {\n  .IM_Lo { height: 220px; }\n}",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".IM_Lo",
          "cssText": ".IM_Lo { height: 220px; }",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".IM_Lo.djsel",
          "cssText": ".IM_Lo.djsel { opacity: 1; transition: opacity 0.5s cubic-bezier(0.165, 0.84, 0.44, 1), transform 0.5s cubic-bezier(0.165, 0.84, 0.44, 1); transform: scale(1); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".IM_Lo .Q_zEe",
          "cssText": ".IM_Lo .Q_zEe { opacity: 0; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".IM_Lo .Q_zEe.JKUi3",
          "cssText": ".IM_Lo .Q_zEe.JKUi3 { transform: translate(100%) translateY(90%); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".IM_Lo .Q_zEe.o8g5V",
          "cssText": ".IM_Lo .Q_zEe.o8g5V { transform: translate(-30%) translateY(-70%); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".IM_Lo .Q_zEe.Qd1P7",
          "cssText": ".IM_Lo .Q_zEe.Qd1P7 { transform: translate(80%) translateY(-10%); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".IM_Lo .Q_zEe.i8Efp",
          "cssText": ".IM_Lo .Q_zEe.i8Efp { transform: translate(0px) translateY(-70%); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".IM_Lo .Q_zEe.scqUT",
          "cssText": ".IM_Lo .Q_zEe.scqUT { transform: translate(-110%) translateY(90%); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".IM_Lo .Q_zEe.Qmt3L",
          "cssText": ".IM_Lo .Q_zEe.Qmt3L { transform: translate(140%) translateY(-50%); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".IM_Lo .Q_zEe.o7cOo",
          "cssText": ".IM_Lo .Q_zEe.o7cOo { transform: translate(130%) translateY(0px); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".IM_Lo .Q_zEe.khmWi",
          "cssText": ".IM_Lo .Q_zEe.khmWi { transform: translate(-60%) translateY(40%); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".IM_Lo .Q_zEe.r_Hec",
          "cssText": ".IM_Lo .Q_zEe.r_Hec { transform: translate(10%) translateY(-70%); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".IM_Lo .Q_zEe.okT92",
          "cssText": ".IM_Lo .Q_zEe.okT92 { transform: translate(-80%) translateY(10%); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".IM_Lo .Q_zEe.mI4C6",
          "cssText": ".IM_Lo .Q_zEe.mI4C6 { transform: translate(-50%) translateY(90%); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".IM_Lo .Q_zEe.OSgBS",
          "cssText": ".IM_Lo .Q_zEe.OSgBS { transform: translate(60%) translateY(-100%); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".IM_Lo .Q_zEe.zT8lw",
          "cssText": ".IM_Lo .Q_zEe.zT8lw { transform: translate(-60%) translateY(0px); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".IM_Lo .Q_zEe.srD2Z",
          "cssText": ".IM_Lo .Q_zEe.srD2Z { transform: translate(40%) translateY(140%); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".IM_Lo .Q_zEe.Ns2mr",
          "cssText": ".IM_Lo .Q_zEe.Ns2mr { transform: translate(-150%) translateY(-30%); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".IM_Lo .Q_zEe.e4W50",
          "cssText": ".IM_Lo .Q_zEe.e4W50 { transform: translate(140%) translateY(10%); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".IM_Lo .Q_zEe.aVzVF",
          "cssText": ".IM_Lo .Q_zEe.aVzVF { transform: translate(-125%) translateY(20%); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".IM_Lo .Q_zEe.rhA3B",
          "cssText": ".IM_Lo .Q_zEe.rhA3B { transform: translate(-60%) translateY(-100%); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".IM_Lo .Q_zEe.armu8",
          "cssText": ".IM_Lo .Q_zEe.armu8 { transform: translate(25%) translateY(100%); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".IM_Lo .Q_zEe.atxdd",
          "cssText": ".IM_Lo .Q_zEe.atxdd { transform: translate(120%) translateY(-15%); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".IM_Lo .Q_zEe.pu7Nd",
          "cssText": ".IM_Lo .Q_zEe.pu7Nd { transform: translate(70%) translateY(-110%); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".IM_Lo .Q_zEe.ptBlf",
          "cssText": ".IM_Lo .Q_zEe.ptBlf { transform: translate(-80%) translateY(-90%); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".IM_Lo .Q_zEe.djsel",
          "cssText": ".IM_Lo .Q_zEe.djsel { opacity: 1; transition: 1.5s cubic-bezier(0.165, 0.84, 0.44, 1); transform: translate(0%) translateY(0%); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Qihwb",
          "cssText": ".Qihwb { display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".oMSQy",
          "cssText": ".oMSQy { box-shadow: 0 0 0 1px rgba(var(--black),.1); color: rgba(var(--white-on-dark),.8); background: linear-gradient(rgba(255, 255, 255, 0.03) 0px, rgba(255, 255, 255, 0.1) 100%); border-radius: 6px; flex-direction: row; flex: 1 1 0%; align-items: center; gap: 4px; padding: 6px 16px 6px 6px; transition: 50ms ease-in-out; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".iOVfz",
          "cssText": ".iOVfz { align-items: center; padding: 12px 10px; transition: transform 0.15s ease-in-out; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".vuJQj",
          "cssText": ".vuJQj { background: rgb(124, 92, 255); border-radius: 999px; flex: 0 0 32px; place-content: center; align-items: center; height: 32px; margin-left: 4px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".vuJQj > svg",
          "cssText": ".vuJQj > svg { --icon-color-primary: RGB(var(--white)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".OMRO7",
          "cssText": ".OMRO7 { font-size: 0.78125rem; font-weight: 400; line-height: 1.52; font-family: var(--font-family); text-align: left; flex-direction: column; flex-grow: 1; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".oMSQy:hover",
          "cssText": ".oMSQy:hover { box-shadow: 0 0 0 1px rgba(var(--black),.4); color: RGB(var(--white-on-dark)); background: linear-gradient(rgba(255, 255, 255, 0.075) 0px, rgba(255, 255, 255, 0.1) 100%); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".oMSQy:hover .iOVfz",
          "cssText": ".oMSQy:hover .iOVfz { transform: scale(1.35) rotate(-7deg); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".oMSQy:active",
          "cssText": ".oMSQy:active { border-top-color: rgba(var(--black),.5); background: linear-gradient(rgba(0, 0, 0, 0.15) 0px, rgba(0, 0, 0, 0.15) 100%); box-shadow: rgba(255, 255, 255, 0.1) 0px 1px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".cybcx",
          "cssText": ".cybcx { background: RGB(var(--deprecated-accent)); border-radius: 1em; justify-content: center; align-items: center; width: 25px; height: 25px; transition: transform 0.2s ease-in; display: flex; position: absolute; top: -10px; right: -10px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".cybcx:hover, .cybcx:focus",
          "cssText": ".cybcx:hover, .cybcx:focus { transform: scale(1.1); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".h1D5S",
          "cssText": ".h1D5S { box-sizing: border-box; flex-direction: column; justify-content: flex-end; width: 100%; height: 100vh; display: flex; position: sticky; top: 0px; bottom: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".GDWdm",
          "cssText": ".GDWdm { background-color: var(--blog-background-color,RGB(var(--navy))); width: 100%; height: 100%; position: absolute; top: 0px; left: 0px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".GDWdm:focus",
          "cssText": ".GDWdm:focus { outline: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".GIwnm",
          "cssText": ".GIwnm { justify-content: center; margin: 8px; display: flex; position: sticky; bottom: 16px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hGi3d",
          "cssText": ".hGi3d { background-color: rgb(124, 92, 255); width: 100%; height: 100%; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hGi3d .EqUIc",
          "cssText": ".hGi3d .EqUIc { color: rgb(255, 255, 255); flex-direction: column; margin-top: 120px; margin-left: 140px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hGi3d .EqUIc .NGk3q",
          "cssText": ".hGi3d .EqUIc .NGk3q { text-align: left; max-width: 540px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hGi3d .EqUIc .NGk3q h1",
          "cssText": ".hGi3d .EqUIc .NGk3q h1 { font-size: 3rem; font-weight: 400; line-height: 1.25; font-family: var(--font-family); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hGi3d .EqUIc .NGk3q p",
          "cssText": ".hGi3d .EqUIc .NGk3q p { font-size: 1rem; font-weight: 400; line-height: 1.5; font-family: var(--font-family); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".hGi3d .EqUIc .AiNLD",
          "cssText": ".hGi3d .EqUIc .AiNLD { pointer-events: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".cqnv1",
          "cssText": ".cqnv1 { background-color: rgb(0, 25, 53); justify-content: center; align-items: center; width: 100%; height: 100%; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".cqnv1 .DdC8v",
          "cssText": ".cqnv1 .DdC8v { color: rgb(255, 255, 255); flex-direction: column; justify-content: center; align-items: center; max-width: 380px; margin-left: 40px; margin-right: 55px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".cqnv1 .DdC8v h1",
          "cssText": ".cqnv1 .DdC8v h1 { font-size: 3rem; font-weight: 400; line-height: 1.25; font-family: var(--font-family); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".cqnv1 .DdC8v p",
          "cssText": ".cqnv1 .DdC8v p { font-size: 1rem; font-weight: 400; line-height: 1.5; font-family: var(--font-family); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".uqa5O",
          "cssText": ".uqa5O { opacity: 0; transform: translateY(400px); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".uqa5O.JjLg4",
          "cssText": ".uqa5O.JjLg4 { opacity: 1; transition: transform 0.7s cubic-bezier(0.165, 0.84, 0.44, 1), opacity 0.7s cubic-bezier(0.165, 0.84, 0.44, 1); transform: translateY(0px); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".a1iTO",
          "cssText": ".a1iTO { align-self: flex-start; width: 100%; max-width: 540px; margin-top: 110px; margin-left: 140px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".yRy5h",
          "cssText": ".yRy5h { height: 100%; color: RGB(var(--white-on-dark)); position: absolute; top: 0px; left: -85px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".juSYs",
          "cssText": ".juSYs { box-sizing: border-box; background: RGB(var(--white)); border-radius: 3px; justify-content: space-between; align-items: center; width: 540px; min-height: 100px; margin-bottom: 20px; padding: 15px 5px; display: flex; position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".juSYs ul",
          "cssText": ".juSYs ul { width: 100%; height: 100%; margin: 0px; padding: 0px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".juSYs ul li",
          "cssText": ".juSYs ul li { width: 100%; list-style-type: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".juSYs ul svg",
          "cssText": ".juSYs ul svg { margin-bottom: 5px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".juSYs .PS3aj",
          "cssText": ".juSYs .PS3aj { font-size: 1rem; font-weight: 400; line-height: 1.5; font-family: var(--font-family); box-sizing: border-box; width: 100%; height: 100%; color: RGB(var(--black)); text-align: center; flex-direction: column; justify-content: space-between; align-items: center; padding: 5px 0px; text-decoration: none; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".juSYs .PS3aj ._lXYt",
          "cssText": ".juSYs .PS3aj ._lXYt { flex-direction: column; transition: transform 80ms linear; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".juSYs .PS3aj:hover ._lXYt, .juSYs .PS3aj:focus ._lXYt",
          "cssText": ".juSYs .PS3aj:hover ._lXYt, .juSYs .PS3aj:focus ._lXYt { transform: translateY(-3px); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".BmCJh",
          "cssText": ".BmCJh { background: RGB(var(--white)); width: 100%; max-width: 540px; color: RGB(var(--black)); border-radius: 3px; margin-bottom: 20px; line-height: 0; position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 540px) {\n  .BmCJh { border-radius: 0px; }\n}",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".BmCJh",
          "cssText": ".BmCJh { border-radius: 0px; }",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".BmCJh .jOoB7",
          "cssText": ".BmCJh .jOoB7 { background-color: RGB(var(--white)); width: 100%; max-width: 540px; font-family: var(--font-family); box-sizing: border-box; padding-right: var(--post-padding); padding-left: var(--post-padding); margin-bottom: var(--post-header-vertical-padding); padding-top: var(--post-header-vertical-padding); border-radius: 3px 3px 0px 0px; justify-content: center; align-items: center; display: flex; position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".BmCJh .QDKBp",
          "cssText": ".BmCJh .QDKBp { max-width: calc(100vw - 2*var(--post-padding)); height: 100%; font-size: 0.875rem; font-weight: 700; line-height: 1.42857; font-family: var(--font-family); flex-direction: row; flex-grow: 1; justify-content: space-between; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 540px) {\n  .BmCJh .QDKBp { font-size: 1rem; font-weight: 700; line-height: 1.5; font-family: var(--font-family); }\n}",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".BmCJh .QDKBp",
          "cssText": ".BmCJh .QDKBp { font-size: 1rem; font-weight: 700; line-height: 1.5; font-family: var(--font-family); }",
          "urls": [],
          "group": "(max-width: 540px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 540px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "540px",
                "540",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".BmCJh .KukD0",
          "cssText": ".BmCJh .KukD0 { justify-content: center; align-items: center; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".BmCJh .U_VJj",
          "cssText": ".BmCJh .U_VJj { box-sizing: border-box; padding-right: var(--post-padding); padding-left: var(--post-padding); font-size: 0.875rem; font-weight: 700; line-height: 1.42857; font-family: var(--font-family); color: rgba(var(--black),.65); justify-content: space-between; align-items: center; margin-top: 12px; padding-bottom: 12px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".BmCJh .rmo3r",
          "cssText": ".BmCJh .rmo3r { font-size: 1rem; font-weight: 700; line-height: 1.5; font-family: var(--font-family); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".BmCJh .bv6v0",
          "cssText": ".BmCJh .bv6v0 { justify-content: flex-end; align-items: center; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".BmCJh .uVwAW",
          "cssText": ".BmCJh .uVwAW { font-size: 1rem; font-weight: 700; font-family: var(--font-family); margin-left: 20px; line-height: 1; position: relative; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".BmCJh .uVwAW svg",
          "cssText": ".BmCJh .uVwAW svg { transform: translateZ(0px); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".CyK0C",
          "cssText": ".CyK0C { background-color: rgb(255, 138, 0); justify-content: center; align-items: center; width: 100%; height: 100%; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".CyK0C .vdOsp",
          "cssText": ".CyK0C .vdOsp { color: rgb(255, 255, 255); text-align: center; flex-direction: column; justify-content: center; align-items: center; max-width: 540px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".CyK0C .vdOsp h1",
          "cssText": ".CyK0C .vdOsp h1 { font-size: 3rem; font-weight: 400; line-height: 1.25; font-family: var(--font-family); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".CyK0C .vdOsp p",
          "cssText": ".CyK0C .vdOsp p { font-size: 1rem; font-weight: 400; line-height: 1.5; font-family: var(--font-family); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".CyK0C .mes8O",
          "cssText": ".CyK0C .mes8O { grid-template-rows: repeat(2, 145px [row-start]); grid-template-columns: repeat(8, 67.5px [col-start]); margin-bottom: 30px; display: grid; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".CyK0C .xYvZb",
          "cssText": ".CyK0C .xYvZb { flex-direction: column; grid-column-end: span 2; justify-content: center; align-items: center; display: flex; transform: scale(0); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".CyK0C .xYvZb.f2qpO",
          "cssText": ".CyK0C .xYvZb.f2qpO { opacity: 1; transition: transform 1s cubic-bezier(0.165, 0.84, 0.44, 1); transform: scale(1); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".CyK0C .xYvZb:first-child",
          "cssText": ".CyK0C .xYvZb:first-child { transition-delay: 0s; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".CyK0C .xYvZb:nth-child(2)",
          "cssText": ".CyK0C .xYvZb:nth-child(2) { transition-delay: 0.1s; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".CyK0C .xYvZb:nth-child(3)",
          "cssText": ".CyK0C .xYvZb:nth-child(3) { transition-delay: 0.2s; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".CyK0C .xYvZb:nth-child(4)",
          "cssText": ".CyK0C .xYvZb:nth-child(4) { transition-delay: 0.3s; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".CyK0C .xYvZb:nth-child(5)",
          "cssText": ".CyK0C .xYvZb:nth-child(5) { transition-delay: 0.4s; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".CyK0C .xYvZb:nth-child(6)",
          "cssText": ".CyK0C .xYvZb:nth-child(6) { transition-delay: 0.5s; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".CyK0C .xYvZb:nth-child(7)",
          "cssText": ".CyK0C .xYvZb:nth-child(7) { transition-delay: 0.6s; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".CyK0C .IbRaV",
          "cssText": ".CyK0C .IbRaV { background: rgb(255, 255, 255); border-radius: 50%; justify-content: center; align-items: center; width: 110px; height: 110px; margin-bottom: 10px; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".CyK0C .y3M2U",
          "cssText": ".CyK0C .y3M2U { grid-column-start: 2; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".nYbR2",
          "cssText": ".nYbR2 { width: 100%; height: 100%; color: RGB(var(--white)); text-align: center; flex-direction: column; justify-content: center; align-items: center; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".nYbR2 h1",
          "cssText": ".nYbR2 h1 { font-size: 3rem; font-weight: 400; line-height: 1.25; font-family: var(--font-family); width: 740px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".nYbR2 p",
          "cssText": ".nYbR2 p { font-size: 1rem; font-weight: 400; line-height: 1.5; font-family: var(--font-family); width: 740px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".EmpUU",
          "cssText": ".EmpUU { background: RGB(var(--navy)); color: RGB(var(--white)); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".fDMRI",
          "cssText": ".fDMRI { height: 100vh; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 413px) {\n  .fDMRI { height: calc(50px + 100vh); }\n}",
          "urls": [],
          "group": "(max-width: 413px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 413px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "413px",
                "413",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".fDMRI",
          "cssText": ".fDMRI { height: calc(50px + 100vh); }",
          "urls": [],
          "group": "(max-width: 413px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 413px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "413px",
                "413",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 350px) {\n  .fDMRI { height: calc(140px + 100vh); }\n}",
          "urls": [],
          "group": "(max-width: 350px)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 350px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "350px",
                "350",
                "width"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".fDMRI",
          "cssText": ".fDMRI { height: calc(140px + 100vh); }",
          "urls": [],
          "group": "(max-width: 350px)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 350px)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "350px",
                "350",
                "width"
              ]
            }
          ]
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (max-width: 959px) and (max-height: 600px) and (orientation: landscape) {\n  .fDMRI { height: 500px; }\n}",
          "urls": [],
          "group": "(max-width: 959px) and (max-height: 600px) and (orientation: landscape)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 959px) and (max-height: 600px) and (orientation: landscape)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "959px",
                "max-height",
                "600px",
                "orientation",
                "landscape",
                "959",
                "600",
                "width",
                "height"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "height",
              "semanticGroup": "geometry",
              "claim": "viewport height",
              "excerpt": "(max-width: 959px) and (max-height: 600px) and (orientation: landscape)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "959px",
                "max-height",
                "600px",
                "orientation",
                "landscape",
                "959",
                "600",
                "width",
                "height"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "orientation",
              "semanticGroup": "geometry",
              "claim": "screen orientation",
              "excerpt": "(max-width: 959px) and (max-height: 600px) and (orientation: landscape)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "959px",
                "max-height",
                "600px",
                "orientation",
                "landscape",
                "959",
                "600",
                "width",
                "height"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".fDMRI",
          "cssText": ".fDMRI { height: 500px; }",
          "urls": [],
          "group": "(max-width: 959px) and (max-height: 600px) and (orientation: landscape)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "width",
              "semanticGroup": "geometry",
              "claim": "viewport width",
              "excerpt": "(max-width: 959px) and (max-height: 600px) and (orientation: landscape)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "959px",
                "max-height",
                "600px",
                "orientation",
                "landscape",
                "959",
                "600",
                "width",
                "height"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "height",
              "semanticGroup": "geometry",
              "claim": "viewport height",
              "excerpt": "(max-width: 959px) and (max-height: 600px) and (orientation: landscape)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "959px",
                "max-height",
                "600px",
                "orientation",
                "landscape",
                "959",
                "600",
                "width",
                "height"
              ]
            },
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "orientation",
              "semanticGroup": "geometry",
              "claim": "screen orientation",
              "excerpt": "(max-width: 959px) and (max-height: 600px) and (orientation: landscape)",
              "requiresEcho": true,
              "echoTokens": [
                "max-width",
                "959px",
                "max-height",
                "600px",
                "orientation",
                "landscape",
                "959",
                "600",
                "width",
                "height"
              ]
            }
          ]
        },
        {
          "type": "CSSStyleRule",
          "selector": ".JdsBc",
          "cssText": ".JdsBc { flex-direction: column; justify-content: center; align-items: center; margin: auto; display: flex; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Yyr2r",
          "cssText": ".Yyr2r { width: 300px; font-size: 1.3125rem; font-weight: 700; line-height: 1.52381; font-family: var(--font-family); margin: 0px auto 10px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        }
      ]
    },
    {
      "href": "https://assets.tumblr.com/pop/sidebar-item-mrec-container-95bf6cd9.css",
      "rules": 11,
      "rulesList": [
        {
          "type": "CSSStyleRule",
          "selector": ".Yc2Sp",
          "cssText": ".Yc2Sp { top: var(--sticky-top,69px); color: var(--color-text); position: sticky; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Yc2Sp.KLXOg .uOpMe, .Yc2Sp.KLXOg .sPIOx",
          "cssText": ".Yc2Sp.KLXOg .uOpMe, .Yc2Sp.KLXOg .sPIOx { margin-bottom: 8px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".Yc2Sp.KLXOg .ilSRe",
          "cssText": ".Yc2Sp.KLXOg .ilSRe { margin: 8px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".pNJPX",
          "cssText": ".pNJPX { height: 0px; overflow: hidden; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".sPIOx",
          "cssText": ".sPIOx { margin-bottom: 10px; text-decoration: none; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".ilSRe",
          "cssText": ".ilSRe { margin: 10px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".uOpMe",
          "cssText": ".uOpMe { width: fit-content; max-width: 100%; margin-bottom: 10px; overflow: hidden; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".u4K7k",
          "cssText": ".u4K7k { background: rgba(var(--black),.07); color: rgba(var(--black),.8); border-radius: 8px; padding: 1em; line-height: 1.3; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".WIwsU",
          "cssText": ".WIwsU { font-size: 1.125rem; font-weight: 700; line-height: 1.33333; font-family: var(--font-family); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".bneI9",
          "cssText": ".bneI9 { font-size: 0.78125rem; font-weight: 400; line-height: 1.52; font-family: var(--font-family); color: rgba(var(--black),.4); }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ".sCA8b",
          "cssText": ".sCA8b { --icon-color-primary: #fff; vertical-align: middle; padding-right: 18px; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        }
      ]
    },
    {
      "href": "(inline <style>)",
      "rules": 1,
      "rulesList": [
        {
          "type": "CSSStyleRule",
          "selector": ".aplvideo1, .aplvideo",
          "cssText": ".aplvideo1, .aplvideo { position: absolute !important; height: 0px !important; bottom: 0px !important; }",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        }
      ]
    },
    {
      "href": "(inline <style>)",
      "rules": 3,
      "rulesList": [
        {
          "type": "CSSStyleRule",
          "selector": ":root",
          "cssText": ":root { --black: 0, 0, 0; --white: 255, 255, 255; --white-on-dark: 255, 255, 255; --navy: 0, 25, 53; --red: 255, 73, 48; --orange: 255, 138, 0; --yellow: 232, 215, 56; --green: 0, 207, 53; --blue: 0, 184, 255; --purple: 124, 92, 255; --pink: 255, 98, 206; --deprecated-accent: 0, 184, 255; --secondary-accent: 229, 231, 234; --follow: 243, 248, 251; --color-title: rgb(var(--white-on-dark)); --color-text: rgb(var(--white-on-dark)); --color-subtext: rgb(var(--white-on-dark)); --color-primary-link: rgb(var(--deprecated-accent)); --color-bluespace-background: rgb(var(--navy)); --color-bluespace-card-background: rgba(var(--white-on-dark), 0.07); --color-modal-close-button: rgb(var(--navy)); --color-modal-close-button-background: rgb(var(--white-on-dark)); --font-family: \"Favorit\",\n    \"Helvetica Neue\",\n    \"HelveticaNeue\",\n    Helvetica,\n    Arial,\n    sans-serif; --font-family-modern: \"Favorit Modern\",\n    \"Helvetica Neue\",\n    \"HelveticaNeue\",\n    Helvetica,\n    Arial,\n    sans-serif; --border-radius-small: 3px; --accent: rgba(0, 184, 255, 1); --accent-fg: rgba(0, 0, 0, 1); --accent-fg-light: rgba(255, 255, 255, 1); --accent-hover: rgba(51, 198, 255, 1); --accent-pressed: rgba(102, 212, 255, 1); --accent-tint: rgba(0, 184, 255, 0.1); --accent-tint-strong: rgba(0, 184, 255, 0.2); --accent-tint-heavy: rgba(0, 184, 255, 0.3); --chrome: rgba(0, 25, 53, 1); --chrome-panel: rgba(13, 36, 63, 1); --chrome-panel-border: rgba(255, 255, 255, 0.05); --chrome-tint: rgba(255, 255, 255, 0.05); --chrome-tint-strong: rgba(255, 255, 255, 0.1); --chrome-tint-heavy: rgba(255, 255, 255, 0.15); --chr...",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (prefers-color-scheme: dark) {\n  :root { --black: 255, 255, 255; --white: 34, 34, 34; --white-on-dark: 255, 255, 255; --navy: 0, 0, 0; --red: 255, 73, 48; --orange: 255, 138, 0; --yellow: 232, 215, 56; --green: 0, 207, 53; --blue: 0, 184, 255; --purple: 124, 92, 255; --pink: 255, 98, 206; --deprecated-accent: 0, 184, 255; --secondary-accent: 57, 57, 57; --follow: 36, 54, 62; --color-title: rgb(var(--white-on-dark)); --color-text: rgb(var(--white-on-dark)); --color-subtext: rgb(var(--white-on-dark)); --color-primary-link: rgb(var(--deprecated-accent)); --color-bluespace-background: rgb(var(--navy)); --color-bluespace-card-background: rgba(var(--white-on-dark), 0.07); --color-modal-close-button: rgb(var(--navy)); --color-modal-close-button-background: rgb(var(--white-on-dark)); --font-family: \"Favorit\",\n    \"Helvetica Neue\",\n    \"HelveticaNeue\",\n    Helvetica,\n    Arial,\n    sans-serif; --font-family-modern: \"Favorit Modern\",\n    \"Helvetica Neue\",\n    \"HelveticaNeue\",\n    Helvetica,\n    Arial,\n    sans-serif; --border-radius-small: 3px; --accent: rgba(0, 184, 255, 1); --accent-fg: rgba(0, 0, 0, 1); --accent-fg-light: rgba(255, 255, 255, 1); --accent-hover: rgba(51, 198, 255, 1); --accent-pressed: rgba(102, 212, 255, 1); --accent-tint: rgba(0, 184, 255, 0.1); --accent-tint-strong: rgba(0, 184, 255, 0.2); --accent-tint-heavy: rgba(0, 184, 255, 0.3); --chrome: rgba(13, 13, 13, 1); --chrome-panel: rgba(26, 26, 26, 1); --chrome-panel-border: rgba(255, 255, 255, 0.05); --chrome-tint: rgba(255, 255, 255, 0.05); --chrome-tint-strong: rgba(255, 255, 255, 0.1); --chrome-tint-hea...",
          "urls": [],
          "group": "(prefers-color-scheme: dark)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "prefers-color-scheme",
              "semanticGroup": "user preference",
              "claim": "color scheme (light/dark)",
              "excerpt": "(prefers-color-scheme: dark)",
              "requiresEcho": true,
              "echoTokens": [
                "prefers-color-scheme",
                "dark"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ":root",
          "cssText": ":root { --black: 255, 255, 255; --white: 34, 34, 34; --white-on-dark: 255, 255, 255; --navy: 0, 0, 0; --red: 255, 73, 48; --orange: 255, 138, 0; --yellow: 232, 215, 56; --green: 0, 207, 53; --blue: 0, 184, 255; --purple: 124, 92, 255; --pink: 255, 98, 206; --deprecated-accent: 0, 184, 255; --secondary-accent: 57, 57, 57; --follow: 36, 54, 62; --color-title: rgb(var(--white-on-dark)); --color-text: rgb(var(--white-on-dark)); --color-subtext: rgb(var(--white-on-dark)); --color-primary-link: rgb(var(--deprecated-accent)); --color-bluespace-background: rgb(var(--navy)); --color-bluespace-card-background: rgba(var(--white-on-dark), 0.07); --color-modal-close-button: rgb(var(--navy)); --color-modal-close-button-background: rgb(var(--white-on-dark)); --font-family: \"Favorit\",\n    \"Helvetica Neue\",\n    \"HelveticaNeue\",\n    Helvetica,\n    Arial,\n    sans-serif; --font-family-modern: \"Favorit Modern\",\n    \"Helvetica Neue\",\n    \"HelveticaNeue\",\n    Helvetica,\n    Arial,\n    sans-serif; --border-radius-small: 3px; --accent: rgba(0, 184, 255, 1); --accent-fg: rgba(0, 0, 0, 1); --accent-fg-light: rgba(255, 255, 255, 1); --accent-hover: rgba(51, 198, 255, 1); --accent-pressed: rgba(102, 212, 255, 1); --accent-tint: rgba(0, 184, 255, 0.1); --accent-tint-strong: rgba(0, 184, 255, 0.2); --accent-tint-heavy: rgba(0, 184, 255, 0.3); --chrome: rgba(13, 13, 13, 1); --chrome-panel: rgba(26, 26, 26, 1); --chrome-panel-border: rgba(255, 255, 255, 0.05); --chrome-tint: rgba(255, 255, 255, 0.05); --chrome-tint-strong: rgba(255, 255, 255, 0.1); --chrome-tint-heavy: rgba(255, 255, 255, 0.15); --chrome-...",
          "urls": [],
          "group": "(prefers-color-scheme: dark)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "prefers-color-scheme",
              "semanticGroup": "user preference",
              "claim": "color scheme (light/dark)",
              "excerpt": "(prefers-color-scheme: dark)",
              "requiresEcho": true,
              "echoTokens": [
                "prefers-color-scheme",
                "dark"
              ]
            }
          ]
        }
      ]
    },
    {
      "href": "(inline <style>)",
      "rules": 3,
      "rulesList": [
        {
          "type": "CSSStyleRule",
          "selector": ":root",
          "cssText": ":root { --black: 0, 0, 0; --white: 255, 255, 255; --white-on-dark: 255, 255, 255; --navy: 0, 25, 53; --red: 255, 73, 48; --orange: 255, 138, 0; --yellow: 232, 215, 56; --green: 0, 207, 53; --blue: 0, 184, 255; --purple: 124, 92, 255; --pink: 255, 98, 206; --deprecated-accent: 0, 184, 255; --secondary-accent: 229, 231, 234; --follow: 243, 248, 251; --color-title: rgb(var(--white-on-dark)); --color-text: rgb(var(--white-on-dark)); --color-subtext: rgb(var(--white-on-dark)); --color-primary-link: rgb(var(--deprecated-accent)); --color-bluespace-background: rgb(var(--navy)); --color-bluespace-card-background: rgba(var(--white-on-dark), 0.07); --color-modal-close-button: rgb(var(--navy)); --color-modal-close-button-background: rgb(var(--white-on-dark)); --font-family: \"Favorit\",\n    \"Helvetica Neue\",\n    \"HelveticaNeue\",\n    Helvetica,\n    Arial,\n    sans-serif; --font-family-modern: \"Favorit Modern\",\n    \"Helvetica Neue\",\n    \"HelveticaNeue\",\n    Helvetica,\n    Arial,\n    sans-serif; --border-radius-small: 3px; --accent: rgba(0, 184, 255, 1); --accent-fg: rgba(0, 0, 0, 1); --accent-fg-light: rgba(255, 255, 255, 1); --accent-hover: rgba(51, 198, 255, 1); --accent-pressed: rgba(102, 212, 255, 1); --accent-tint: rgba(0, 184, 255, 0.1); --accent-tint-strong: rgba(0, 184, 255, 0.2); --accent-tint-heavy: rgba(0, 184, 255, 0.3); --chrome: rgba(0, 25, 53, 1); --chrome-panel: rgba(13, 36, 63, 1); --chrome-panel-border: rgba(255, 255, 255, 0.05); --chrome-tint: rgba(255, 255, 255, 0.05); --chrome-tint-strong: rgba(255, 255, 255, 0.1); --chrome-tint-heavy: rgba(255, 255, 255, 0.15); --chr...",
          "urls": [],
          "group": "",
          "sources": [],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSMediaRule",
          "selector": "",
          "cssText": "@media (prefers-color-scheme: dark) {\n  :root { --black: 255, 255, 255; --white: 34, 34, 34; --white-on-dark: 255, 255, 255; --navy: 0, 0, 0; --red: 255, 73, 48; --orange: 255, 138, 0; --yellow: 232, 215, 56; --green: 0, 207, 53; --blue: 0, 184, 255; --purple: 124, 92, 255; --pink: 255, 98, 206; --deprecated-accent: 0, 184, 255; --secondary-accent: 57, 57, 57; --follow: 36, 54, 62; --color-title: rgb(var(--white-on-dark)); --color-text: rgb(var(--white-on-dark)); --color-subtext: rgb(var(--white-on-dark)); --color-primary-link: rgb(var(--deprecated-accent)); --color-bluespace-background: rgb(var(--navy)); --color-bluespace-card-background: rgba(var(--white-on-dark), 0.07); --color-modal-close-button: rgb(var(--navy)); --color-modal-close-button-background: rgb(var(--white-on-dark)); --font-family: \"Favorit\",\n    \"Helvetica Neue\",\n    \"HelveticaNeue\",\n    Helvetica,\n    Arial,\n    sans-serif; --font-family-modern: \"Favorit Modern\",\n    \"Helvetica Neue\",\n    \"HelveticaNeue\",\n    Helvetica,\n    Arial,\n    sans-serif; --border-radius-small: 3px; --accent: rgba(0, 184, 255, 1); --accent-fg: rgba(0, 0, 0, 1); --accent-fg-light: rgba(255, 255, 255, 1); --accent-hover: rgba(51, 198, 255, 1); --accent-pressed: rgba(102, 212, 255, 1); --accent-tint: rgba(0, 184, 255, 0.1); --accent-tint-strong: rgba(0, 184, 255, 0.2); --accent-tint-heavy: rgba(0, 184, 255, 0.3); --chrome: rgba(13, 13, 13, 1); --chrome-panel: rgba(26, 26, 26, 1); --chrome-panel-border: rgba(255, 255, 255, 0.05); --chrome-tint: rgba(255, 255, 255, 0.05); --chrome-tint-strong: rgba(255, 255, 255, 0.1); --chrome-tint-hea...",
          "urls": [],
          "group": "(prefers-color-scheme: dark)",
          "sources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "prefers-color-scheme",
              "semanticGroup": "user preference",
              "claim": "color scheme (light/dark)",
              "excerpt": "(prefers-color-scheme: dark)",
              "requiresEcho": true,
              "echoTokens": [
                "prefers-color-scheme",
                "dark"
              ]
            }
          ],
          "sinks": [],
          "inheritedSources": []
        },
        {
          "type": "CSSStyleRule",
          "selector": ":root",
          "cssText": ":root { --black: 255, 255, 255; --white: 34, 34, 34; --white-on-dark: 255, 255, 255; --navy: 0, 0, 0; --red: 255, 73, 48; --orange: 255, 138, 0; --yellow: 232, 215, 56; --green: 0, 207, 53; --blue: 0, 184, 255; --purple: 124, 92, 255; --pink: 255, 98, 206; --deprecated-accent: 0, 184, 255; --secondary-accent: 57, 57, 57; --follow: 36, 54, 62; --color-title: rgb(var(--white-on-dark)); --color-text: rgb(var(--white-on-dark)); --color-subtext: rgb(var(--white-on-dark)); --color-primary-link: rgb(var(--deprecated-accent)); --color-bluespace-background: rgb(var(--navy)); --color-bluespace-card-background: rgba(var(--white-on-dark), 0.07); --color-modal-close-button: rgb(var(--navy)); --color-modal-close-button-background: rgb(var(--white-on-dark)); --font-family: \"Favorit\",\n    \"Helvetica Neue\",\n    \"HelveticaNeue\",\n    Helvetica,\n    Arial,\n    sans-serif; --font-family-modern: \"Favorit Modern\",\n    \"Helvetica Neue\",\n    \"HelveticaNeue\",\n    Helvetica,\n    Arial,\n    sans-serif; --border-radius-small: 3px; --accent: rgba(0, 184, 255, 1); --accent-fg: rgba(0, 0, 0, 1); --accent-fg-light: rgba(255, 255, 255, 1); --accent-hover: rgba(51, 198, 255, 1); --accent-pressed: rgba(102, 212, 255, 1); --accent-tint: rgba(0, 184, 255, 0.1); --accent-tint-strong: rgba(0, 184, 255, 0.2); --accent-tint-heavy: rgba(0, 184, 255, 0.3); --chrome: rgba(13, 13, 13, 1); --chrome-panel: rgba(26, 26, 26, 1); --chrome-panel-border: rgba(255, 255, 255, 0.05); --chrome-tint: rgba(255, 255, 255, 0.05); --chrome-tint-strong: rgba(255, 255, 255, 0.1); --chrome-tint-heavy: rgba(255, 255, 255, 0.15); --chrome-...",
          "urls": [],
          "group": "(prefers-color-scheme: dark)",
          "sources": [],
          "sinks": [],
          "inheritedSources": [
            {
              "reason": "keyword_match",
              "category": "@media",
              "keyword": "prefers-color-scheme",
              "semanticGroup": "user preference",
              "claim": "color scheme (light/dark)",
              "excerpt": "(prefers-color-scheme: dark)",
              "requiresEcho": true,
              "echoTokens": [
                "prefers-color-scheme",
                "dark"
              ]
            }
          ]
        }
      ]
    }
  ],
  "inaccessible": [
    "https://assets.tumblr.com/pop/css/main-610d52cc.css",
    "https://assets.tumblr.com/pop/5196-7a75db85.css",
    "https://assets.tumblr.com/pop/2884-ebe42f6b.css",
    "https://assets.tumblr.com/pop/9850-9d08d10e.css",
    "https://assets.tumblr.com/pop/async-mobile-navigation-622ecf1e.css",
    "https://assets.tumblr.com/pop/3070-5dba3aea.css",
    "https://assets.tumblr.com/pop/700-aa402726.css",
    "https://assets.tumblr.com/pop/1840-081007f9.css",
    "https://assets.tumblr.com/pop/landing-page-or-dashboard-picker-4b5e70a3.css"
  ],
  "styleTags": 3,
  "inlineStyleCount": 185,
  "associations": [],
  "summary": {
    "sheetsAccessible": 7,
    "sheetsInaccessible": 9,
    "totalRulesScanned": 2818,
    "totalSinks": 18,
    "totalSources": 269,
    "totalAssociations": 0,
    "totalCapped": false
  },
  "likelyFingerprinting": false,
  "verdict": "likely not fingerprinting",
  "claims": [],
  "claimDetails": [],
  "riskScore": 0,
  "riskLevel": "none"
}